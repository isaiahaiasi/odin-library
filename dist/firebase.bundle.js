/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./env.js":
/*!****************!*\
  !*** ./env.js ***!
  \****************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const env = {
  API_KEY: "AIzaSyAwegV7xlbTZlIdLijPYk-cyMgezu0_Ozs",
  AUTH_DOMAIN: "odinlibrary-f5.firebaseapp.com",
  PROJECT_ID: "odinlibrary-f5",
  STORAGE_BUCKET: "odinlibrary-f5.appspot.com",
  MESSAGING_SENDER_ID: "1092737413441",
  APP_ID: "1:1092737413441:web:a879709c9e7f5c3db671c0",
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (env);


/***/ }),

/***/ "./node_modules/@firebase/app/dist/index.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/@firebase/app/dist/index.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "firebase": () => (/* binding */ firebase$1)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ "./node_modules/@firebase/util/dist/index.esm.js");
/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/component */ "./node_modules/@firebase/component/dist/index.esm.js");
/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/logger */ "./node_modules/@firebase/logger/dist/index.esm.js");





/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
var ERRORS = (_a = {},
    _a["no-app" /* NO_APP */] = "No Firebase App '{$appName}' has been created - " +
        'call Firebase App.initializeApp()',
    _a["bad-app-name" /* BAD_APP_NAME */] = "Illegal App name: '{$appName}",
    _a["duplicate-app" /* DUPLICATE_APP */] = "Firebase App named '{$appName}' already exists",
    _a["app-deleted" /* APP_DELETED */] = "Firebase App named '{$appName}' already deleted",
    _a["invalid-app-argument" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +
        'Firebase App instance.',
    _a["invalid-log-argument" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.',
    _a);
var ERROR_FACTORY = new _firebase_util__WEBPACK_IMPORTED_MODULE_0__.ErrorFactory('app', 'Firebase', ERRORS);

var name = "@firebase/app";
var version = "0.6.20";

var name$1 = "@firebase/analytics";

var name$2 = "@firebase/auth";

var name$3 = "@firebase/database";

var name$4 = "@firebase/functions";

var name$5 = "@firebase/installations";

var name$6 = "@firebase/messaging";

var name$7 = "@firebase/performance";

var name$8 = "@firebase/remote-config";

var name$9 = "@firebase/storage";

var name$a = "@firebase/firestore";

var name$b = "firebase-wrapper";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a$1;
var DEFAULT_ENTRY_NAME = '[DEFAULT]';
var PLATFORM_LOG_STRING = (_a$1 = {},
    _a$1[name] = 'fire-core',
    _a$1[name$1] = 'fire-analytics',
    _a$1[name$2] = 'fire-auth',
    _a$1[name$3] = 'fire-rtdb',
    _a$1[name$4] = 'fire-fn',
    _a$1[name$5] = 'fire-iid',
    _a$1[name$6] = 'fire-fcm',
    _a$1[name$7] = 'fire-perf',
    _a$1[name$8] = 'fire-rc',
    _a$1[name$9] = 'fire-gcs',
    _a$1[name$a] = 'fire-fst',
    _a$1['fire-js'] = 'fire-js',
    _a$1[name$b] = 'fire-js-all',
    _a$1);

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var logger = new _firebase_logger__WEBPACK_IMPORTED_MODULE_2__.Logger('@firebase/app');

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */
var FirebaseAppImpl = /** @class */ (function () {
    function FirebaseAppImpl(options, config, firebase_) {
        var _this = this;
        this.firebase_ = firebase_;
        this.isDeleted_ = false;
        this.name_ = config.name;
        this.automaticDataCollectionEnabled_ =
            config.automaticDataCollectionEnabled || false;
        this.options_ = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepCopy)(options);
        this.container = new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.ComponentContainer(config.name);
        // add itself to container
        this._addComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component('app', function () { return _this; }, "PUBLIC" /* PUBLIC */));
        // populate ComponentContainer with existing components
        this.firebase_.INTERNAL.components.forEach(function (component) {
            return _this._addComponent(component);
        });
    }
    Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
        get: function () {
            this.checkDestroyed_();
            return this.automaticDataCollectionEnabled_;
        },
        set: function (val) {
            this.checkDestroyed_();
            this.automaticDataCollectionEnabled_ = val;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
        get: function () {
            this.checkDestroyed_();
            return this.name_;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
        get: function () {
            this.checkDestroyed_();
            return this.options_;
        },
        enumerable: false,
        configurable: true
    });
    FirebaseAppImpl.prototype.delete = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.checkDestroyed_();
            resolve();
        })
            .then(function () {
            _this.firebase_.INTERNAL.removeApp(_this.name_);
            return Promise.all(_this.container.getProviders().map(function (provider) { return provider.delete(); }));
        })
            .then(function () {
            _this.isDeleted_ = true;
        });
    };
    /**
     * Return a service instance associated with this app (creating it
     * on demand), identified by the passed instanceIdentifier.
     *
     * NOTE: Currently storage and functions are the only ones that are leveraging this
     * functionality. They invoke it by calling:
     *
     * ```javascript
     * firebase.app().storage('STORAGE BUCKET ID')
     * ```
     *
     * The service name is passed to this already
     * @internal
     */
    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        this.checkDestroyed_();
        // getImmediate will always succeed because _getService is only called for registered components.
        return this.container.getProvider(name).getImmediate({
            identifier: instanceIdentifier
        });
    };
    /**
     * Remove a service instance from the cache, so we will create a new instance for this service
     * when people try to get this service again.
     *
     * NOTE: currently only firestore is using this functionality to support firestore shutdown.
     *
     * @param name The service name
     * @param instanceIdentifier instance identifier in case multiple instances are allowed
     * @internal
     */
    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.container.getProvider(name).clearInstance(instanceIdentifier);
    };
    /**
     * @param component the component being added to this app's container
     */
    FirebaseAppImpl.prototype._addComponent = function (component) {
        try {
            this.container.addComponent(component);
        }
        catch (e) {
            logger.debug("Component " + component.name + " failed to register with FirebaseApp " + this.name, e);
        }
    };
    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {
        this.container.addOrOverwriteComponent(component);
    };
    FirebaseAppImpl.prototype.toJSON = function () {
        return {
            name: this.name,
            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,
            options: this.options
        };
    };
    /**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */
    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
        if (this.isDeleted_) {
            throw ERROR_FACTORY.create("app-deleted" /* APP_DELETED */, { appName: this.name_ });
        }
    };
    return FirebaseAppImpl;
}());
// Prevent dead-code elimination of these methods w/o invalid property
// copying.
(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||
    FirebaseAppImpl.prototype.delete ||
    console.log('dc');

var version$1 = "8.4.0";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */
function createFirebaseNamespaceCore(firebaseAppImpl) {
    var apps = {};
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var components = new Map();
    // A namespace is a plain JavaScript Object.
    var namespace = {
        // Hack to prevent Babel from modifying the object returned
        // as the firebase namespace.
        // @ts-ignore
        __esModule: true,
        initializeApp: initializeApp,
        // @ts-ignore
        app: app,
        registerVersion: registerVersion,
        setLogLevel: _firebase_logger__WEBPACK_IMPORTED_MODULE_2__.setLogLevel,
        onLog: onLog,
        // @ts-ignore
        apps: null,
        SDK_VERSION: version$1,
        INTERNAL: {
            registerComponent: registerComponent,
            removeApp: removeApp,
            components: components,
            useAsService: useAsService
        }
    };
    // Inject a circular default export to allow Babel users who were previously
    // using:
    //
    //   import firebase from 'firebase';
    //   which becomes: var firebase = require('firebase').default;
    //
    // instead of
    //
    //   import * as firebase from 'firebase';
    //   which becomes: var firebase = require('firebase');
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    namespace['default'] = namespace;
    // firebase.apps is a read-only getter.
    Object.defineProperty(namespace, 'apps', {
        get: getApps
    });
    /**
     * Called by App.delete() - but before any services associated with the App
     * are deleted.
     */
    function removeApp(name) {
        delete apps[name];
    }
    /**
     * Get the App object for a given name (or DEFAULT).
     */
    function app(name) {
        name = name || DEFAULT_ENTRY_NAME;
        if (!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.contains)(apps, name)) {
            throw ERROR_FACTORY.create("no-app" /* NO_APP */, { appName: name });
        }
        return apps[name];
    }
    // @ts-ignore
    app['App'] = firebaseAppImpl;
    function initializeApp(options, rawConfig) {
        if (rawConfig === void 0) { rawConfig = {}; }
        if (typeof rawConfig !== 'object' || rawConfig === null) {
            var name_1 = rawConfig;
            rawConfig = { name: name_1 };
        }
        var config = rawConfig;
        if (config.name === undefined) {
            config.name = DEFAULT_ENTRY_NAME;
        }
        var name = config.name;
        if (typeof name !== 'string' || !name) {
            throw ERROR_FACTORY.create("bad-app-name" /* BAD_APP_NAME */, {
                appName: String(name)
            });
        }
        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.contains)(apps, name)) {
            throw ERROR_FACTORY.create("duplicate-app" /* DUPLICATE_APP */, { appName: name });
        }
        var app = new firebaseAppImpl(options, config, namespace);
        apps[name] = app;
        return app;
    }
    /*
     * Return an array of all the non-deleted FirebaseApps.
     */
    function getApps() {
        // Make a copy so caller cannot mutate the apps list.
        return Object.keys(apps).map(function (name) { return apps[name]; });
    }
    function registerComponent(component) {
        var componentName = component.name;
        if (components.has(componentName)) {
            logger.debug("There were multiple attempts to register component " + componentName + ".");
            return component.type === "PUBLIC" /* PUBLIC */
                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
                    namespace[componentName]
                : null;
        }
        components.set(componentName, component);
        // create service namespace for public components
        if (component.type === "PUBLIC" /* PUBLIC */) {
            // The Service namespace is an accessor function ...
            var serviceNamespace = function (appArg) {
                if (appArg === void 0) { appArg = app(); }
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                if (typeof appArg[componentName] !== 'function') {
                    // Invalid argument.
                    // This happens in the following case: firebase.storage('gs:/')
                    throw ERROR_FACTORY.create("invalid-app-argument" /* INVALID_APP_ARGUMENT */, {
                        appName: componentName
                    });
                }
                // Forward service instance lookup to the FirebaseApp.
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                return appArg[componentName]();
            };
            // ... and a container for service-level properties.
            if (component.serviceProps !== undefined) {
                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(serviceNamespace, component.serviceProps);
            }
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            namespace[componentName] = serviceNamespace;
            // Patch the FirebaseAppImpl prototype
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            firebaseAppImpl.prototype[componentName] =
                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
                // option added to the no-explicit-any rule when ESlint releases it.
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    var serviceFxn = this._getService.bind(this, componentName);
                    return serviceFxn.apply(this, component.multipleInstances ? args : []);
                };
        }
        // add the component to existing app instances
        for (var _i = 0, _a = Object.keys(apps); _i < _a.length; _i++) {
            var appName = _a[_i];
            apps[appName]._addComponent(component);
        }
        return component.type === "PUBLIC" /* PUBLIC */
            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
                namespace[componentName]
            : null;
    }
    function registerVersion(libraryKeyOrName, version, variant) {
        var _a;
        // TODO: We can use this check to whitelist strings when/if we set up
        // a good whitelist system.
        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;
        if (variant) {
            library += "-" + variant;
        }
        var libraryMismatch = library.match(/\s|\//);
        var versionMismatch = version.match(/\s|\//);
        if (libraryMismatch || versionMismatch) {
            var warning = [
                "Unable to register library \"" + library + "\" with version \"" + version + "\":"
            ];
            if (libraryMismatch) {
                warning.push("library name \"" + library + "\" contains illegal characters (whitespace or \"/\")");
            }
            if (libraryMismatch && versionMismatch) {
                warning.push('and');
            }
            if (versionMismatch) {
                warning.push("version name \"" + version + "\" contains illegal characters (whitespace or \"/\")");
            }
            logger.warn(warning.join(' '));
            return;
        }
        registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component(library + "-version", function () { return ({ library: library, version: version }); }, "VERSION" /* VERSION */));
    }
    function onLog(logCallback, options) {
        if (logCallback !== null && typeof logCallback !== 'function') {
            throw ERROR_FACTORY.create("invalid-log-argument" /* INVALID_LOG_ARGUMENT */);
        }
        (0,_firebase_logger__WEBPACK_IMPORTED_MODULE_2__.setUserLogHandler)(logCallback, options);
    }
    // Map the requested service to a registered service name
    // (used to map auth to serverAuth service when needed).
    function useAsService(app, name) {
        if (name === 'serverAuth') {
            return null;
        }
        var useService = name;
        return useService;
    }
    return namespace;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */
function createFirebaseNamespace() {
    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
    namespace.INTERNAL = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,
        extendNamespace: extendNamespace,
        createSubscribe: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.createSubscribe,
        ErrorFactory: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.ErrorFactory,
        deepExtend: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend });
    /**
     * Patch the top-level firebase namespace with additional properties.
     *
     * firebase.INTERNAL.extendNamespace()
     */
    function extendNamespace(props) {
        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(namespace, props);
    }
    return namespace;
}
var firebase = createFirebaseNamespace();

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var PlatformLoggerService = /** @class */ (function () {
    function PlatformLoggerService(container) {
        this.container = container;
    }
    // In initial implementation, this will be called by installations on
    // auth token refresh, and installations will send this string.
    PlatformLoggerService.prototype.getPlatformInfoString = function () {
        var providers = this.container.getProviders();
        // Loop through providers and get library/version pairs from any that are
        // version components.
        return providers
            .map(function (provider) {
            if (isVersionServiceProvider(provider)) {
                var service = provider.getImmediate();
                return service.library + "/" + service.version;
            }
            else {
                return null;
            }
        })
            .filter(function (logString) { return logString; })
            .join(' ');
    };
    return PlatformLoggerService;
}());
/**
 *
 * @param provider check if this provider provides a VersionService
 *
 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
 * provides VersionService. The provider is not necessarily a 'app-version'
 * provider.
 */
function isVersionServiceProvider(provider) {
    var component = provider.getComponent();
    return (component === null || component === void 0 ? void 0 : component.type) === "VERSION" /* VERSION */;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function registerCoreComponents(firebase, variant) {
    firebase.INTERNAL.registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component('platform-logger', function (container) { return new PlatformLoggerService(container); }, "PRIVATE" /* PRIVATE */));
    // Register `app` package.
    firebase.registerVersion(name, version, variant);
    // Register platform SDK identifier (no version).
    firebase.registerVersion('fire-js', '');
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Firebase Lite detection test
// eslint-disable-next-line @typescript-eslint/no-explicit-any
if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isBrowser)() && self.firebase !== undefined) {
    logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
    // eslint-disable-next-line
    var sdkVersion = self.firebase.SDK_VERSION;
    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
        logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
    }
}
var initializeApp = firebase.initializeApp;
// TODO: This disable can be removed and the 'ignoreRestArgs' option added to
// the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
firebase.initializeApp = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    // Environment check before initializing app
    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
    // in @firebase/logger
    if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isNode)()) {
        logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the @rollup/plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/@rollup/plugin-node-resolve\n      ");
    }
    return initializeApp.apply(undefined, args);
};
var firebase$1 = firebase;
registerCoreComponents(firebase$1);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (firebase$1);

//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/component/dist/index.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/@firebase/component/dist/index.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Component": () => (/* binding */ Component),
/* harmony export */   "ComponentContainer": () => (/* binding */ ComponentContainer),
/* harmony export */   "Provider": () => (/* binding */ Provider)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ "./node_modules/@firebase/util/dist/index.esm.js");



/**
 * Component for service name T, e.g. `auth`, `auth-internal`
 */
var Component = /** @class */ (function () {
    /**
     *
     * @param name The public service name, e.g. app, auth, firestore, database
     * @param instanceFactory Service factory responsible for creating the public interface
     * @param type whether the service provided by the component is public or private
     */
    function Component(name, instanceFactory, type) {
        this.name = name;
        this.instanceFactory = instanceFactory;
        this.type = type;
        this.multipleInstances = false;
        /**
         * Properties to be added to the service namespace
         */
        this.serviceProps = {};
        this.instantiationMode = "LAZY" /* LAZY */;
        this.onInstanceCreated = null;
    }
    Component.prototype.setInstantiationMode = function (mode) {
        this.instantiationMode = mode;
        return this;
    };
    Component.prototype.setMultipleInstances = function (multipleInstances) {
        this.multipleInstances = multipleInstances;
        return this;
    };
    Component.prototype.setServiceProps = function (props) {
        this.serviceProps = props;
        return this;
    };
    Component.prototype.setInstanceCreatedCallback = function (callback) {
        this.onInstanceCreated = callback;
        return this;
    };
    return Component;
}());

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DEFAULT_ENTRY_NAME = '[DEFAULT]';

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
 * NameServiceMapping[T] is an alias for the type of the instance
 */
var Provider = /** @class */ (function () {
    function Provider(name, container) {
        this.name = name;
        this.container = container;
        this.component = null;
        this.instances = new Map();
        this.instancesDeferred = new Map();
    }
    /**
     * @param identifier A provider can provide mulitple instances of a service
     * if this.component.multipleInstances is true.
     */
    Provider.prototype.get = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        // if multipleInstances is not supported, use the default name
        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        if (!this.instancesDeferred.has(normalizedIdentifier)) {
            var deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_0__.Deferred();
            this.instancesDeferred.set(normalizedIdentifier, deferred);
            if (this.isInitialized(normalizedIdentifier) ||
                this.shouldAutoInitialize()) {
                // initialize the service if it can be auto-initialized
                try {
                    var instance = this.getOrInitializeService({
                        instanceIdentifier: normalizedIdentifier
                    });
                    if (instance) {
                        deferred.resolve(instance);
                    }
                }
                catch (e) {
                    // when the instance factory throws an exception during get(), it should not cause
                    // a fatal error. We just return the unresolved promise in this case.
                }
            }
        }
        return this.instancesDeferred.get(normalizedIdentifier).promise;
    };
    Provider.prototype.getImmediate = function (options) {
        var _a = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__assign)({ identifier: DEFAULT_ENTRY_NAME, optional: false }, options), identifier = _a.identifier, optional = _a.optional;
        // if multipleInstances is not supported, use the default name
        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        if (this.isInitialized(normalizedIdentifier) ||
            this.shouldAutoInitialize()) {
            try {
                return this.getOrInitializeService({
                    instanceIdentifier: normalizedIdentifier
                });
            }
            catch (e) {
                if (optional) {
                    return null;
                }
                else {
                    throw e;
                }
            }
        }
        else {
            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw
            if (optional) {
                return null;
            }
            else {
                throw Error("Service " + this.name + " is not available");
            }
        }
    };
    Provider.prototype.getComponent = function () {
        return this.component;
    };
    Provider.prototype.setComponent = function (component) {
        var e_1, _a;
        if (component.name !== this.name) {
            throw Error("Mismatching Component " + component.name + " for Provider " + this.name + ".");
        }
        if (this.component) {
            throw Error("Component for " + this.name + " has already been provided");
        }
        this.component = component;
        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)
        if (!this.shouldAutoInitialize()) {
            return;
        }
        // if the service is eager, initialize the default instance
        if (isComponentEager(component)) {
            try {
                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });
            }
            catch (e) {
                // when the instance factory for an eager Component throws an exception during the eager
                // initialization, it should not cause a fatal error.
                // TODO: Investigate if we need to make it configurable, because some component may want to cause
                // a fatal error in this case?
            }
        }
        try {
            // Create service instances for the pending promises and resolve them
            // NOTE: if this.multipleInstances is false, only the default instance will be created
            // and all promises with resolve with it regardless of the identifier.
            for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];
                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
                try {
                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
                    var instance = this.getOrInitializeService({
                        instanceIdentifier: normalizedIdentifier
                    });
                    instanceDeferred.resolve(instance);
                }
                catch (e) {
                    // when the instance factory throws an exception, it should not cause
                    // a fatal error. We just leave the promise unresolved.
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    Provider.prototype.clearInstance = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        this.instancesDeferred.delete(identifier);
        this.instances.delete(identifier);
    };
    // app.delete() will call this method on every provider to delete the services
    // TODO: should we mark the provider as deleted?
    Provider.prototype.delete = function () {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {
            var services;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        services = Array.from(this.instances.values());
                        return [4 /*yield*/, Promise.all((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(services
                                .filter(function (service) { return 'INTERNAL' in service; }) // legacy services
                                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                                .map(function (service) { return service.INTERNAL.delete(); }))), (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(services
                                .filter(function (service) { return '_delete' in service; }) // modularized services
                                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                                .map(function (service) { return service._delete(); }))))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Provider.prototype.isComponentSet = function () {
        return this.component != null;
    };
    Provider.prototype.isInitialized = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        return this.instances.has(identifier);
    };
    Provider.prototype.initialize = function (opts) {
        var e_2, _a;
        if (opts === void 0) { opts = {}; }
        var _b = opts.instanceIdentifier, instanceIdentifier = _b === void 0 ? DEFAULT_ENTRY_NAME : _b, _c = opts.options, options = _c === void 0 ? {} : _c;
        var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
        if (this.isInitialized(normalizedIdentifier)) {
            throw Error(this.name + "(" + normalizedIdentifier + ") has already been initialized");
        }
        if (!this.isComponentSet()) {
            throw Error("Component " + this.name + " has not been registered yet");
        }
        var instance = this.getOrInitializeService({
            instanceIdentifier: normalizedIdentifier,
            options: options
        });
        try {
            // resolve any pending promise waiting for the service instance
            for (var _d = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(this.instancesDeferred.entries()), _e = _d.next(); !_e.done; _e = _d.next()) {
                var _f = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_e.value, 2), instanceIdentifier_1 = _f[0], instanceDeferred = _f[1];
                var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier_1);
                if (normalizedIdentifier === normalizedDeferredIdentifier) {
                    instanceDeferred.resolve(instance);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return instance;
    };
    Provider.prototype.getOrInitializeService = function (_a) {
        var instanceIdentifier = _a.instanceIdentifier, _b = _a.options, options = _b === void 0 ? {} : _b;
        var instance = this.instances.get(instanceIdentifier);
        if (!instance && this.component) {
            instance = this.component.instanceFactory(this.container, {
                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),
                options: options
            });
            this.instances.set(instanceIdentifier, instance);
            /**
             * Order is important
             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which
             * makes `isInitialized()` return true.
             */
            if (this.component.onInstanceCreated) {
                try {
                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);
                }
                catch (_c) {
                    // ignore errors in the onInstanceCreatedCallback
                }
            }
        }
        return instance || null;
    };
    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {
        if (this.component) {
            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
        }
        else {
            return identifier; // assume multiple instances are supported before the component is provided.
        }
    };
    Provider.prototype.shouldAutoInitialize = function () {
        return (!!this.component &&
            this.component.instantiationMode !== "EXPLICIT" /* EXPLICIT */);
    };
    return Provider;
}());
// undefined should be passed to the service factory for the default instance
function normalizeIdentifierForFactory(identifier) {
    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;
}
function isComponentEager(component) {
    return component.instantiationMode === "EAGER" /* EAGER */;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
 */
var ComponentContainer = /** @class */ (function () {
    function ComponentContainer(name) {
        this.name = name;
        this.providers = new Map();
    }
    /**
     *
     * @param component Component being added
     * @param overwrite When a component with the same name has already been registered,
     * if overwrite is true: overwrite the existing component with the new component and create a new
     * provider with the new component. It can be useful in tests where you want to use different mocks
     * for different tests.
     * if overwrite is false: throw an exception
     */
    ComponentContainer.prototype.addComponent = function (component) {
        var provider = this.getProvider(component.name);
        if (provider.isComponentSet()) {
            throw new Error("Component " + component.name + " has already been registered with " + this.name);
        }
        provider.setComponent(component);
    };
    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {
        var provider = this.getProvider(component.name);
        if (provider.isComponentSet()) {
            // delete the existing provider from the container, so we can register the new component
            this.providers.delete(component.name);
        }
        this.addComponent(component);
    };
    /**
     * getProvider provides a type safe interface where it can only be called with a field name
     * present in NameServiceMapping interface.
     *
     * Firebase SDKs providing services should extend NameServiceMapping interface to register
     * themselves.
     */
    ComponentContainer.prototype.getProvider = function (name) {
        if (this.providers.has(name)) {
            return this.providers.get(name);
        }
        // create a Provider for a service that hasn't registered with Firebase
        var provider = new Provider(name, this);
        this.providers.set(name, provider);
        return provider;
    };
    ComponentContainer.prototype.getProviders = function () {
        return Array.from(this.providers.values());
    };
    return ComponentContainer;
}());


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/logger/dist/index.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@firebase/logger/dist/index.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogLevel": () => (/* binding */ LogLevel),
/* harmony export */   "Logger": () => (/* binding */ Logger),
/* harmony export */   "setLogLevel": () => (/* binding */ setLogLevel),
/* harmony export */   "setUserLogHandler": () => (/* binding */ setUserLogHandler)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
/**
 * A container for all of the Logger instances
 */
var instances = [];
/**
 * The JS SDK supports 5 log levels and also allows a user the ability to
 * silence the logs altogether.
 *
 * The order is a follows:
 * DEBUG < VERBOSE < INFO < WARN < ERROR
 *
 * All of the log types above the current log level will be captured (i.e. if
 * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and
 * `VERBOSE` logs will not)
 */
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
    LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
    LogLevel[LogLevel["INFO"] = 2] = "INFO";
    LogLevel[LogLevel["WARN"] = 3] = "WARN";
    LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
    LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
})(LogLevel || (LogLevel = {}));
var levelStringToEnum = {
    'debug': LogLevel.DEBUG,
    'verbose': LogLevel.VERBOSE,
    'info': LogLevel.INFO,
    'warn': LogLevel.WARN,
    'error': LogLevel.ERROR,
    'silent': LogLevel.SILENT
};
/**
 * The default log level
 */
var defaultLogLevel = LogLevel.INFO;
/**
 * By default, `console.debug` is not displayed in the developer console (in
 * chrome). To avoid forcing users to have to opt-in to these logs twice
 * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
 * logs to the `console.log` function.
 */
var ConsoleMethod = (_a = {},
    _a[LogLevel.DEBUG] = 'log',
    _a[LogLevel.VERBOSE] = 'log',
    _a[LogLevel.INFO] = 'info',
    _a[LogLevel.WARN] = 'warn',
    _a[LogLevel.ERROR] = 'error',
    _a);
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */
var defaultLogHandler = function (instance, logType) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    if (logType < instance.logLevel) {
        return;
    }
    var now = new Date().toISOString();
    var method = ConsoleMethod[logType];
    if (method) {
        console[method].apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
    }
    else {
        throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
    }
};
var Logger = /** @class */ (function () {
    /**
     * Gives you an instance of a Logger to capture messages according to
     * Firebase's logging scheme.
     *
     * @param name The name that the logs will be associated with
     */
    function Logger(name) {
        this.name = name;
        /**
         * The log level of the given Logger instance.
         */
        this._logLevel = defaultLogLevel;
        /**
         * The main (internal) log handler for the Logger instance.
         * Can be set to a new function in internal package code but not by user.
         */
        this._logHandler = defaultLogHandler;
        /**
         * The optional, additional, user-defined log handler for the Logger instance.
         */
        this._userLogHandler = null;
        /**
         * Capture the current instance for later use
         */
        instances.push(this);
    }
    Object.defineProperty(Logger.prototype, "logLevel", {
        get: function () {
            return this._logLevel;
        },
        set: function (val) {
            if (!(val in LogLevel)) {
                throw new TypeError("Invalid value \"" + val + "\" assigned to `logLevel`");
            }
            this._logLevel = val;
        },
        enumerable: false,
        configurable: true
    });
    // Workaround for setter/getter having to be the same type.
    Logger.prototype.setLogLevel = function (val) {
        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;
    };
    Object.defineProperty(Logger.prototype, "logHandler", {
        get: function () {
            return this._logHandler;
        },
        set: function (val) {
            if (typeof val !== 'function') {
                throw new TypeError('Value assigned to `logHandler` must be a function');
            }
            this._logHandler = val;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Logger.prototype, "userLogHandler", {
        get: function () {
            return this._userLogHandler;
        },
        set: function (val) {
            this._userLogHandler = val;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * The functions below are all based on the `console` interface
     */
    Logger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));
    };
    Logger.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));
    };
    Logger.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));
    };
    Logger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));
    };
    Logger.prototype.error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));
    };
    return Logger;
}());
function setLogLevel(level) {
    instances.forEach(function (inst) {
        inst.setLogLevel(level);
    });
}
function setUserLogHandler(logCallback, options) {
    var _loop_1 = function (instance) {
        var customLogLevel = null;
        if (options && options.level) {
            customLogLevel = levelStringToEnum[options.level];
        }
        if (logCallback === null) {
            instance.userLogHandler = null;
        }
        else {
            instance.userLogHandler = function (instance, level) {
                var args = [];
                for (var _i = 2; _i < arguments.length; _i++) {
                    args[_i - 2] = arguments[_i];
                }
                var message = args
                    .map(function (arg) {
                    if (arg == null) {
                        return null;
                    }
                    else if (typeof arg === 'string') {
                        return arg;
                    }
                    else if (typeof arg === 'number' || typeof arg === 'boolean') {
                        return arg.toString();
                    }
                    else if (arg instanceof Error) {
                        return arg.message;
                    }
                    else {
                        try {
                            return JSON.stringify(arg);
                        }
                        catch (ignored) {
                            return null;
                        }
                    }
                })
                    .filter(function (arg) { return arg; })
                    .join(' ');
                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {
                    logCallback({
                        level: LogLevel[level].toLowerCase(),
                        message: message,
                        args: args,
                        type: instance.name
                    });
                }
            };
        }
    };
    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {
        var instance = instances_1[_i];
        _loop_1(instance);
    }
}


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/util/dist/index.esm.js":
/*!*******************************************************!*\
  !*** ./node_modules/@firebase/util/dist/index.esm.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CONSTANTS": () => (/* binding */ CONSTANTS),
/* harmony export */   "Deferred": () => (/* binding */ Deferred),
/* harmony export */   "ErrorFactory": () => (/* binding */ ErrorFactory),
/* harmony export */   "FirebaseError": () => (/* binding */ FirebaseError),
/* harmony export */   "MAX_VALUE_MILLIS": () => (/* binding */ MAX_VALUE_MILLIS),
/* harmony export */   "RANDOM_FACTOR": () => (/* binding */ RANDOM_FACTOR),
/* harmony export */   "Sha1": () => (/* binding */ Sha1),
/* harmony export */   "areCookiesEnabled": () => (/* binding */ areCookiesEnabled),
/* harmony export */   "assert": () => (/* binding */ assert),
/* harmony export */   "assertionError": () => (/* binding */ assertionError),
/* harmony export */   "async": () => (/* binding */ async),
/* harmony export */   "base64": () => (/* binding */ base64),
/* harmony export */   "base64Decode": () => (/* binding */ base64Decode),
/* harmony export */   "base64Encode": () => (/* binding */ base64Encode),
/* harmony export */   "calculateBackoffMillis": () => (/* binding */ calculateBackoffMillis),
/* harmony export */   "contains": () => (/* binding */ contains),
/* harmony export */   "createSubscribe": () => (/* binding */ createSubscribe),
/* harmony export */   "decode": () => (/* binding */ decode),
/* harmony export */   "deepCopy": () => (/* binding */ deepCopy),
/* harmony export */   "deepExtend": () => (/* binding */ deepExtend),
/* harmony export */   "errorPrefix": () => (/* binding */ errorPrefix),
/* harmony export */   "extractQuerystring": () => (/* binding */ extractQuerystring),
/* harmony export */   "getModularInstance": () => (/* binding */ getModularInstance),
/* harmony export */   "getUA": () => (/* binding */ getUA),
/* harmony export */   "isAdmin": () => (/* binding */ isAdmin),
/* harmony export */   "isBrowser": () => (/* binding */ isBrowser),
/* harmony export */   "isBrowserExtension": () => (/* binding */ isBrowserExtension),
/* harmony export */   "isElectron": () => (/* binding */ isElectron),
/* harmony export */   "isEmpty": () => (/* binding */ isEmpty),
/* harmony export */   "isIE": () => (/* binding */ isIE),
/* harmony export */   "isIndexedDBAvailable": () => (/* binding */ isIndexedDBAvailable),
/* harmony export */   "isMobileCordova": () => (/* binding */ isMobileCordova),
/* harmony export */   "isNode": () => (/* binding */ isNode),
/* harmony export */   "isNodeSdk": () => (/* binding */ isNodeSdk),
/* harmony export */   "isReactNative": () => (/* binding */ isReactNative),
/* harmony export */   "isSafari": () => (/* binding */ isSafari),
/* harmony export */   "isUWP": () => (/* binding */ isUWP),
/* harmony export */   "isValidFormat": () => (/* binding */ isValidFormat),
/* harmony export */   "isValidTimestamp": () => (/* binding */ isValidTimestamp),
/* harmony export */   "issuedAtTime": () => (/* binding */ issuedAtTime),
/* harmony export */   "jsonEval": () => (/* binding */ jsonEval),
/* harmony export */   "map": () => (/* binding */ map),
/* harmony export */   "ordinal": () => (/* binding */ ordinal),
/* harmony export */   "querystring": () => (/* binding */ querystring),
/* harmony export */   "querystringDecode": () => (/* binding */ querystringDecode),
/* harmony export */   "safeGet": () => (/* binding */ safeGet),
/* harmony export */   "stringLength": () => (/* binding */ stringLength),
/* harmony export */   "stringToByteArray": () => (/* binding */ stringToByteArray$1),
/* harmony export */   "stringify": () => (/* binding */ stringify),
/* harmony export */   "validateArgCount": () => (/* binding */ validateArgCount),
/* harmony export */   "validateCallback": () => (/* binding */ validateCallback),
/* harmony export */   "validateContextObject": () => (/* binding */ validateContextObject),
/* harmony export */   "validateIndexedDBOpenable": () => (/* binding */ validateIndexedDBOpenable),
/* harmony export */   "validateNamespace": () => (/* binding */ validateNamespace)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");


/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */
var CONSTANTS = {
    /**
     * @define {boolean} Whether this is the client Node.js SDK.
     */
    NODE_CLIENT: false,
    /**
     * @define {boolean} Whether this is the Admin Node.js SDK.
     */
    NODE_ADMIN: false,
    /**
     * Firebase SDK Version
     */
    SDK_VERSION: '${JSCORE_VERSION}'
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws an error if the provided assertion is falsy
 */
var assert = function (assertion, message) {
    if (!assertion) {
        throw assertionError(message);
    }
};
/**
 * Returns an Error object suitable for throwing.
 */
var assertionError = function (message) {
    return new Error('Firebase Database (' +
        CONSTANTS.SDK_VERSION +
        ') INTERNAL ASSERT FAILED: ' +
        message);
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var stringToByteArray = function (str) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if ((c & 0xfc00) === 0xd800 &&
            i + 1 < str.length &&
            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            // Surrogate Pair
            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */
var byteArrayToString = function (bytes) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var pos = 0, c = 0;
    while (pos < bytes.length) {
        var c1 = bytes[pos++];
        if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
        }
        else if (c1 > 191 && c1 < 224) {
            var c2 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
        }
        else if (c1 > 239 && c1 < 365) {
            // Surrogate Pair
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            var c4 = bytes[pos++];
            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -
                0x10000;
            out[c++] = String.fromCharCode(0xd800 + (u >> 10));
            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
        }
        else {
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
        }
    }
    return out.join('');
};
// We define it as an object literal instead of a class because a class compiled down to es5 can't
// be treeshaked. https://github.com/rollup/rollup/issues/1691
// Static lookup maps, lazily populated by init_()
var base64 = {
    /**
     * Maps bytes to characters.
     */
    byteToCharMap_: null,
    /**
     * Maps characters to bytes.
     */
    charToByteMap_: null,
    /**
     * Maps bytes to websafe characters.
     * @private
     */
    byteToCharMapWebSafe_: null,
    /**
     * Maps websafe characters to bytes.
     * @private
     */
    charToByteMapWebSafe_: null,
    /**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     */
    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
    /**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     */
    get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + '+/=';
    },
    /**
     * Our websafe alphabet.
     */
    get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + '-_.';
    },
    /**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     */
    HAS_NATIVE_SUPPORT: typeof atob === 'function',
    /**
     * Base64-encode an array of bytes.
     *
     * @param input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeByteArray: function (input, webSafe) {
        if (!Array.isArray(input)) {
            throw Error('encodeByteArray takes an array as a parameter');
        }
        this.init_();
        var byteToCharMap = webSafe
            ? this.byteToCharMapWebSafe_
            : this.byteToCharMap_;
        var output = [];
        for (var i = 0; i < input.length; i += 3) {
            var byte1 = input[i];
            var haveByte2 = i + 1 < input.length;
            var byte2 = haveByte2 ? input[i + 1] : 0;
            var haveByte3 = i + 2 < input.length;
            var byte3 = haveByte3 ? input[i + 2] : 0;
            var outByte1 = byte1 >> 2;
            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);
            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);
            var outByte4 = byte3 & 0x3f;
            if (!haveByte3) {
                outByte4 = 64;
                if (!haveByte2) {
                    outByte3 = 64;
                }
            }
            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
        }
        return output.join('');
    },
    /**
     * Base64-encode a string.
     *
     * @param input A string to encode.
     * @param webSafe If true, we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return btoa(input);
        }
        return this.encodeByteArray(stringToByteArray(input), webSafe);
    },
    /**
     * Base64-decode a string.
     *
     * @param input to decode.
     * @param webSafe True if we should use the
     *     alternative alphabet.
     * @return string representing the decoded value.
     */
    decodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return atob(input);
        }
        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
    },
    /**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param input Input to decode.
     * @param webSafe True if we should use the web-safe alphabet.
     * @return bytes representing the decoded value.
     */
    decodeStringToByteArray: function (input, webSafe) {
        this.init_();
        var charToByteMap = webSafe
            ? this.charToByteMapWebSafe_
            : this.charToByteMap_;
        var output = [];
        for (var i = 0; i < input.length;) {
            var byte1 = charToByteMap[input.charAt(i++)];
            var haveByte2 = i < input.length;
            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
            ++i;
            var haveByte3 = i < input.length;
            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            var haveByte4 = i < input.length;
            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
                throw Error();
            }
            var outByte1 = (byte1 << 2) | (byte2 >> 4);
            output.push(outByte1);
            if (byte3 !== 64) {
                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);
                output.push(outByte2);
                if (byte4 !== 64) {
                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;
                    output.push(outByte3);
                }
            }
        }
        return output;
    },
    /**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */
    init_: function () {
        if (!this.byteToCharMap_) {
            this.byteToCharMap_ = {};
            this.charToByteMap_ = {};
            this.byteToCharMapWebSafe_ = {};
            this.charToByteMapWebSafe_ = {};
            // We want quick mappings back and forth, so we precompute two maps.
            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
                this.charToByteMap_[this.byteToCharMap_[i]] = i;
                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
                // Be forgiving when decoding and correctly decode both encodings.
                if (i >= this.ENCODED_VALS_BASE.length) {
                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
                }
            }
        }
    }
};
/**
 * URL-safe base64 encoding
 */
var base64Encode = function (str) {
    var utf8Bytes = stringToByteArray(str);
    return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */
var base64Decode = function (str) {
    try {
        return base64.decodeString(str, true);
    }
    catch (e) {
        console.error('base64Decode failed: ', e);
    }
    return null;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */
function deepCopy(value) {
    return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 *
 * Note: we don't merge __proto__ to prevent prototype pollution
 */
function deepExtend(target, source) {
    if (!(source instanceof Object)) {
        return source;
    }
    switch (source.constructor) {
        case Date:
            // Treat Dates like scalars; if the target date object had any child
            // properties - they will be lost!
            var dateValue = source;
            return new Date(dateValue.getTime());
        case Object:
            if (target === undefined) {
                target = {};
            }
            break;
        case Array:
            // Always copy the array source and overwrite the target.
            target = [];
            break;
        default:
            // Not a plain Object - treat it as a scalar.
            return source;
    }
    for (var prop in source) {
        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202
        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {
            continue;
        }
        target[prop] = deepExtend(target[prop], source[prop]);
    }
    return target;
}
function isValidKey(key) {
    return key !== '__proto__';
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.reject = function () { };
        this.resolve = function () { };
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    /**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     */
    Deferred.prototype.wrapCallback = function (callback) {
        var _this = this;
        return function (error, value) {
            if (error) {
                _this.reject(error);
            }
            else {
                _this.resolve(value);
            }
            if (typeof callback === 'function') {
                // Attaching noop handler just in case developer wasn't expecting
                // promises
                _this.promise.catch(function () { });
                // Some of our callbacks don't expect a value and our own tests
                // assert that the parameter length is 1
                if (callback.length === 1) {
                    callback(error);
                }
                else {
                    callback(error, value);
                }
            }
        };
    };
    return Deferred;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */
function getUA() {
    if (typeof navigator !== 'undefined' &&
        typeof navigator['userAgent'] === 'string') {
        return navigator['userAgent'];
    }
    else {
        return '';
    }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */
function isMobileCordova() {
    return (typeof window !== 'undefined' &&
        // @ts-ignore Setting up an broadly applicable index signature for Window
        // just to deal with this case would probably be a bad idea.
        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&
        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/
function isNode() {
    try {
        return (Object.prototype.toString.call(__webpack_require__.g.process) === '[object process]');
    }
    catch (e) {
        return false;
    }
}
/**
 * Detect Browser Environment
 */
function isBrowser() {
    return typeof self === 'object' && self.self === self;
}
function isBrowserExtension() {
    var runtime = typeof chrome === 'object'
        ? chrome.runtime
        : typeof browser === 'object'
            ? browser.runtime
            : undefined;
    return typeof runtime === 'object' && runtime.id !== undefined;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */
function isReactNative() {
    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');
}
/** Detects Electron apps. */
function isElectron() {
    return getUA().indexOf('Electron/') >= 0;
}
/** Detects Internet Explorer. */
function isIE() {
    var ua = getUA();
    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;
}
/** Detects Universal Windows Platform apps. */
function isUWP() {
    return getUA().indexOf('MSAppHost/') >= 0;
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */
function isNodeSdk() {
    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}
/** Returns true if we are running in Safari. */
function isSafari() {
    return (!isNode() &&
        navigator.userAgent.includes('Safari') &&
        !navigator.userAgent.includes('Chrome'));
}
/**
 * This method checks if indexedDB is supported by current browser/service worker context
 * @return true if indexedDB is supported by current browser/service worker context
 */
function isIndexedDBAvailable() {
    return 'indexedDB' in self && indexedDB != null;
}
/**
 * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject
 * if errors occur during the database open operation.
 *
 * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox
 * private browsing)
 */
function validateIndexedDBOpenable() {
    return new Promise(function (resolve, reject) {
        try {
            var preExist_1 = true;
            var DB_CHECK_NAME_1 = 'validate-browser-context-for-indexeddb-analytics-module';
            var request_1 = self.indexedDB.open(DB_CHECK_NAME_1);
            request_1.onsuccess = function () {
                request_1.result.close();
                // delete database only when it doesn't pre-exist
                if (!preExist_1) {
                    self.indexedDB.deleteDatabase(DB_CHECK_NAME_1);
                }
                resolve(true);
            };
            request_1.onupgradeneeded = function () {
                preExist_1 = false;
            };
            request_1.onerror = function () {
                var _a;
                reject(((_a = request_1.error) === null || _a === void 0 ? void 0 : _a.message) || '');
            };
        }
        catch (error) {
            reject(error);
        }
    });
}
/**
 *
 * This method checks whether cookie is enabled within current browser
 * @return true if cookie is enabled within current browser
 */
function areCookiesEnabled() {
    if (!navigator || !navigator.cookieEnabled) {
        return false;
    }
    return true;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ERROR_NAME = 'FirebaseError';
// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
var FirebaseError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(FirebaseError, _super);
    function FirebaseError(code, message, customData) {
        var _this = _super.call(this, message) || this;
        _this.code = code;
        _this.customData = customData;
        _this.name = ERROR_NAME;
        // Fix For ES5
        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
        Object.setPrototypeOf(_this, FirebaseError.prototype);
        // Maintains proper stack trace for where our error was thrown.
        // Only available on V8.
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, ErrorFactory.prototype.create);
        }
        return _this;
    }
    return FirebaseError;
}(Error));
var ErrorFactory = /** @class */ (function () {
    function ErrorFactory(service, serviceName, errors) {
        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;
    }
    ErrorFactory.prototype.create = function (code) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            data[_i - 1] = arguments[_i];
        }
        var customData = data[0] || {};
        var fullCode = this.service + "/" + code;
        var template = this.errors[code];
        var message = template ? replaceTemplate(template, customData) : 'Error';
        // Service Name: Error message (service/code).
        var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
        var error = new FirebaseError(fullCode, fullMessage, customData);
        return error;
    };
    return ErrorFactory;
}());
function replaceTemplate(template, data) {
    return template.replace(PATTERN, function (_, key) {
        var value = data[key];
        return value != null ? String(value) : "<" + key + "?>";
    });
}
var PATTERN = /\{\$([^}]+)}/g;

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */
function jsonEval(str) {
    return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */
function stringify(data) {
    return JSON.stringify(data);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var decode = function (token) {
    var header = {}, claims = {}, data = {}, signature = '';
    try {
        var parts = token.split('.');
        header = jsonEval(base64Decode(parts[0]) || '');
        claims = jsonEval(base64Decode(parts[1]) || '');
        signature = parts[2];
        data = claims['d'] || {};
        delete claims['d'];
    }
    catch (e) { }
    return {
        header: header,
        claims: claims,
        data: data,
        signature: signature
    };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidTimestamp = function (token) {
    var claims = decode(token).claims;
    var now = Math.floor(new Date().getTime() / 1000);
    var validSince = 0, validUntil = 0;
    if (typeof claims === 'object') {
        if (claims.hasOwnProperty('nbf')) {
            validSince = claims['nbf'];
        }
        else if (claims.hasOwnProperty('iat')) {
            validSince = claims['iat'];
        }
        if (claims.hasOwnProperty('exp')) {
            validUntil = claims['exp'];
        }
        else {
            // token will expire after 24h by default
            validUntil = validSince + 86400;
        }
    }
    return (!!now &&
        !!validSince &&
        !!validUntil &&
        now >= validSince &&
        now <= validUntil);
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var issuedAtTime = function (token) {
    var claims = decode(token).claims;
    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
        return claims['iat'];
    }
    return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidFormat = function (token) {
    var decoded = decode(token), claims = decoded.claims;
    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isAdmin = function (token) {
    var claims = decode(token).claims;
    return typeof claims === 'object' && claims['admin'] === true;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function contains(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
function safeGet(obj, key) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
        return obj[key];
    }
    else {
        return undefined;
    }
}
function isEmpty(obj) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            return false;
        }
    }
    return true;
}
function map(obj, fn, contextObj) {
    var res = {};
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            res[key] = fn.call(contextObj, obj[key], key, obj);
        }
    }
    return res;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */
function querystring(querystringParams) {
    var params = [];
    var _loop_1 = function (key, value) {
        if (Array.isArray(value)) {
            value.forEach(function (arrayVal) {
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
            });
        }
        else {
            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
        }
    };
    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
        var _b = _a[_i], key = _b[0], value = _b[1];
        _loop_1(key, value);
    }
    return params.length ? '&' + params.join('&') : '';
}
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */
function querystringDecode(querystring) {
    var obj = {};
    var tokens = querystring.replace(/^\?/, '').split('&');
    tokens.forEach(function (token) {
        if (token) {
            var _a = token.split('='), key = _a[0], value = _a[1];
            obj[decodeURIComponent(key)] = decodeURIComponent(value);
        }
    });
    return obj;
}
/**
 * Extract the query string part of a URL, including the leading question mark (if present).
 */
function extractQuerystring(url) {
    var queryStart = url.indexOf('?');
    if (!queryStart) {
        return '';
    }
    var fragmentStart = url.indexOf('#', queryStart);
    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */
/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */
var Sha1 = /** @class */ (function () {
    function Sha1() {
        /**
         * Holds the previous values of accumulated variables a-e in the compress_
         * function.
         * @private
         */
        this.chain_ = [];
        /**
         * A buffer holding the partially computed hash result.
         * @private
         */
        this.buf_ = [];
        /**
         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
         * as the message schedule in the docs.
         * @private
         */
        this.W_ = [];
        /**
         * Contains data needed to pad messages less than 64 bytes.
         * @private
         */
        this.pad_ = [];
        /**
         * @private {number}
         */
        this.inbuf_ = 0;
        /**
         * @private {number}
         */
        this.total_ = 0;
        this.blockSize = 512 / 8;
        this.pad_[0] = 128;
        for (var i = 1; i < this.blockSize; ++i) {
            this.pad_[i] = 0;
        }
        this.reset();
    }
    Sha1.prototype.reset = function () {
        this.chain_[0] = 0x67452301;
        this.chain_[1] = 0xefcdab89;
        this.chain_[2] = 0x98badcfe;
        this.chain_[3] = 0x10325476;
        this.chain_[4] = 0xc3d2e1f0;
        this.inbuf_ = 0;
        this.total_ = 0;
    };
    /**
     * Internal compress helper function.
     * @param buf Block to compress.
     * @param offset Offset of the block in the buffer.
     * @private
     */
    Sha1.prototype.compress_ = function (buf, offset) {
        if (!offset) {
            offset = 0;
        }
        var W = this.W_;
        // get 16 big endian words
        if (typeof buf === 'string') {
            for (var i = 0; i < 16; i++) {
                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
                // have a bug that turns the post-increment ++ operator into pre-increment
                // during JIT compilation.  We have code that depends heavily on SHA-1 for
                // correctness and which is affected by this bug, so I've removed all uses
                // of post-increment ++ in which the result value is used.  We can revert
                // this change once the Safari bug
                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
                // most clients have been updated.
                W[i] =
                    (buf.charCodeAt(offset) << 24) |
                        (buf.charCodeAt(offset + 1) << 16) |
                        (buf.charCodeAt(offset + 2) << 8) |
                        buf.charCodeAt(offset + 3);
                offset += 4;
            }
        }
        else {
            for (var i = 0; i < 16; i++) {
                W[i] =
                    (buf[offset] << 24) |
                        (buf[offset + 1] << 16) |
                        (buf[offset + 2] << 8) |
                        buf[offset + 3];
                offset += 4;
            }
        }
        // expand to 80 words
        for (var i = 16; i < 80; i++) {
            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;
        }
        var a = this.chain_[0];
        var b = this.chain_[1];
        var c = this.chain_[2];
        var d = this.chain_[3];
        var e = this.chain_[4];
        var f, k;
        // TODO(user): Try to unroll this loop to speed up the computation.
        for (var i = 0; i < 80; i++) {
            if (i < 40) {
                if (i < 20) {
                    f = d ^ (b & (c ^ d));
                    k = 0x5a827999;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0x6ed9eba1;
                }
            }
            else {
                if (i < 60) {
                    f = (b & c) | (d & (b | c));
                    k = 0x8f1bbcdc;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0xca62c1d6;
                }
            }
            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;
            e = d;
            d = c;
            c = ((b << 30) | (b >>> 2)) & 0xffffffff;
            b = a;
            a = t;
        }
        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;
        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;
        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;
        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;
        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;
    };
    Sha1.prototype.update = function (bytes, length) {
        // TODO(johnlenz): tighten the function signature and remove this check
        if (bytes == null) {
            return;
        }
        if (length === undefined) {
            length = bytes.length;
        }
        var lengthMinusBlock = length - this.blockSize;
        var n = 0;
        // Using local instead of member variables gives ~5% speedup on Firefox 16.
        var buf = this.buf_;
        var inbuf = this.inbuf_;
        // The outer while loop should execute at most twice.
        while (n < length) {
            // When we have no data in the block to top up, we can directly process the
            // input buffer (assuming it contains sufficient data). This gives ~25%
            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
            // the data is provided in large chunks (or in multiples of 64 bytes).
            if (inbuf === 0) {
                while (n <= lengthMinusBlock) {
                    this.compress_(bytes, n);
                    n += this.blockSize;
                }
            }
            if (typeof bytes === 'string') {
                while (n < length) {
                    buf[inbuf] = bytes.charCodeAt(n);
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
            else {
                while (n < length) {
                    buf[inbuf] = bytes[n];
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
        }
        this.inbuf_ = inbuf;
        this.total_ += length;
    };
    /** @override */
    Sha1.prototype.digest = function () {
        var digest = [];
        var totalBits = this.total_ * 8;
        // Add pad 0x80 0x00*.
        if (this.inbuf_ < 56) {
            this.update(this.pad_, 56 - this.inbuf_);
        }
        else {
            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
        }
        // Add # bits.
        for (var i = this.blockSize - 1; i >= 56; i--) {
            this.buf_[i] = totalBits & 255;
            totalBits /= 256; // Don't use bit-shifting here!
        }
        this.compress_(this.buf_);
        var n = 0;
        for (var i = 0; i < 5; i++) {
            for (var j = 24; j >= 0; j -= 8) {
                digest[n] = (this.chain_[i] >> j) & 255;
                ++n;
            }
        }
        return digest;
    };
    return Sha1;
}());

/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */
function createSubscribe(executor, onNoObservers) {
    var proxy = new ObserverProxy(executor, onNoObservers);
    return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */
var ObserverProxy = /** @class */ (function () {
    /**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */
    function ObserverProxy(executor, onNoObservers) {
        var _this = this;
        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;
        // Micro-task scheduling by calling task.then().
        this.task = Promise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;
        // Call the executor asynchronously so subscribers that are called
        // synchronously after the creation of the subscribe function
        // can still receive the very first value generated in the executor.
        this.task
            .then(function () {
            executor(_this);
        })
            .catch(function (e) {
            _this.error(e);
        });
    }
    ObserverProxy.prototype.next = function (value) {
        this.forEachObserver(function (observer) {
            observer.next(value);
        });
    };
    ObserverProxy.prototype.error = function (error) {
        this.forEachObserver(function (observer) {
            observer.error(error);
        });
        this.close(error);
    };
    ObserverProxy.prototype.complete = function () {
        this.forEachObserver(function (observer) {
            observer.complete();
        });
        this.close();
    };
    /**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */
    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
        var _this = this;
        var observer;
        if (nextOrObserver === undefined &&
            error === undefined &&
            complete === undefined) {
            throw new Error('Missing Observer.');
        }
        // Assemble an Observer object when passed as callback functions.
        if (implementsAnyMethods(nextOrObserver, [
            'next',
            'error',
            'complete'
        ])) {
            observer = nextOrObserver;
        }
        else {
            observer = {
                next: nextOrObserver,
                error: error,
                complete: complete
            };
        }
        if (observer.next === undefined) {
            observer.next = noop;
        }
        if (observer.error === undefined) {
            observer.error = noop;
        }
        if (observer.complete === undefined) {
            observer.complete = noop;
        }
        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
        // Attempt to subscribe to a terminated Observable - we
        // just respond to the Observer with the final error or complete
        // event.
        if (this.finalized) {
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            this.task.then(function () {
                try {
                    if (_this.finalError) {
                        observer.error(_this.finalError);
                    }
                    else {
                        observer.complete();
                    }
                }
                catch (e) {
                    // nothing
                }
                return;
            });
        }
        this.observers.push(observer);
        return unsub;
    };
    // Unsubscribe is synchronous - we guarantee that no events are sent to
    // any unsubscribed Observer.
    ObserverProxy.prototype.unsubscribeOne = function (i) {
        if (this.observers === undefined || this.observers[i] === undefined) {
            return;
        }
        delete this.observers[i];
        this.observerCount -= 1;
        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
            this.onNoObservers(this);
        }
    };
    ObserverProxy.prototype.forEachObserver = function (fn) {
        if (this.finalized) {
            // Already closed by previous event....just eat the additional values.
            return;
        }
        // Since sendOne calls asynchronously - there is no chance that
        // this.observers will become undefined.
        for (var i = 0; i < this.observers.length; i++) {
            this.sendOne(i, fn);
        }
    };
    // Call the Observer via one of it's callback function. We are careful to
    // confirm that the observe has not been unsubscribed since this asynchronous
    // function had been queued.
    ObserverProxy.prototype.sendOne = function (i, fn) {
        var _this = this;
        // Execute the callback asynchronously
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
                try {
                    fn(_this.observers[i]);
                }
                catch (e) {
                    // Ignore exceptions raised in Observers or missing methods of an
                    // Observer.
                    // Log error to console. b/31404806
                    if (typeof console !== 'undefined' && console.error) {
                        console.error(e);
                    }
                }
            }
        });
    };
    ObserverProxy.prototype.close = function (err) {
        var _this = this;
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        if (err !== undefined) {
            this.finalError = err;
        }
        // Proxy is no longer needed - garbage collect references
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            _this.observers = undefined;
            _this.onNoObservers = undefined;
        });
    };
    return ObserverProxy;
}());
/** Turn synchronous function into one called asynchronously. */
// eslint-disable-next-line @typescript-eslint/ban-types
function async(fn, onError) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        Promise.resolve(true)
            .then(function () {
            fn.apply(void 0, args);
        })
            .catch(function (error) {
            if (onError) {
                onError(error);
            }
        });
    };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */
function implementsAnyMethods(obj, methods) {
    if (typeof obj !== 'object' || obj === null) {
        return false;
    }
    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
        var method = methods_1[_i];
        if (method in obj && typeof obj[method] === 'function') {
            return true;
        }
    }
    return false;
}
function noop() {
    // do nothing
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */
var validateArgCount = function (fnName, minCount, maxCount, argCount) {
    var argError;
    if (argCount < minCount) {
        argError = 'at least ' + minCount;
    }
    else if (argCount > maxCount) {
        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
    }
    if (argError) {
        var error = fnName +
            ' failed: Was called with ' +
            argCount +
            (argCount === 1 ? ' argument.' : ' arguments.') +
            ' Expects ' +
            argError +
            '.';
        throw new Error(error);
    }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argName The name of the argument
 * @return The prefix to add to the error thrown for validation.
 */
function errorPrefix(fnName, argName) {
    return fnName + " failed: " + argName + " argument ";
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */
function validateNamespace(fnName, namespace, optional) {
    if (optional && !namespace) {
        return;
    }
    if (typeof namespace !== 'string') {
        //TODO: I should do more validation here. We only allow certain chars in namespaces.
        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');
    }
}
function validateCallback(fnName, argumentName, 
// eslint-disable-next-line @typescript-eslint/ban-types
callback, optional) {
    if (optional && !callback) {
        return;
    }
    if (typeof callback !== 'function') {
        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');
    }
}
function validateContextObject(fnName, argumentName, context, optional) {
    if (optional && !context) {
        return;
    }
    if (typeof context !== 'object' || context === null) {
        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');
    }
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */
var stringToByteArray$1 = function (str) {
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        // Is this the lead surrogate in a surrogate pair?
        if (c >= 0xd800 && c <= 0xdbff) {
            var high = c - 0xd800; // the high 10 bits.
            i++;
            assert(i < str.length, 'Surrogate pair missing trail surrogate.');
            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
            c = 0x10000 + (high << 10) + low;
        }
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if (c < 65536) {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */
var stringLength = function (str) {
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            p++;
        }
        else if (c < 2048) {
            p += 2;
        }
        else if (c >= 0xd800 && c <= 0xdbff) {
            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
            p += 4;
            i++; // skip trail surrogate.
        }
        else {
            p += 3;
        }
    }
    return p;
};

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The amount of milliseconds to exponentially increase.
 */
var DEFAULT_INTERVAL_MILLIS = 1000;
/**
 * The factor to backoff by.
 * Should be a number greater than 1.
 */
var DEFAULT_BACKOFF_FACTOR = 2;
/**
 * The maximum milliseconds to increase to.
 *
 * <p>Visible for testing
 */
var MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.
/**
 * The percentage of backoff time to randomize by.
 * See
 * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic
 * for context.
 *
 * <p>Visible for testing
 */
var RANDOM_FACTOR = 0.5;
/**
 * Based on the backoff method from
 * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.
 * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.
 */
function calculateBackoffMillis(backoffCount, intervalMillis, backoffFactor) {
    if (intervalMillis === void 0) { intervalMillis = DEFAULT_INTERVAL_MILLIS; }
    if (backoffFactor === void 0) { backoffFactor = DEFAULT_BACKOFF_FACTOR; }
    // Calculates an exponentially increasing value.
    // Deviation: calculates value from count and a constant interval, so we only need to save value
    // and count to restore state.
    var currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);
    // A random "fuzz" to avoid waves of retries.
    // Deviation: randomFactor is required.
    var randomWait = Math.round(
    // A fraction of the backoff value to add/subtract.
    // Deviation: changes multiplication order to improve readability.
    RANDOM_FACTOR *
        currBaseValue *
        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines
        // if we add or subtract.
        (Math.random() - 0.5) *
        2);
    // Limits backoff to max to avoid effectively permanent backoff.
    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provide English ordinal letters after a number
 */
function ordinal(i) {
    if (!Number.isFinite(i)) {
        return "" + i;
    }
    return i + indicator(i);
}
function indicator(i) {
    i = Math.abs(i);
    var cent = i % 100;
    if (cent >= 10 && cent <= 20) {
        return 'th';
    }
    var dec = i % 10;
    if (dec === 1) {
        return 'st';
    }
    if (dec === 2) {
        return 'nd';
    }
    if (dec === 3) {
        return 'rd';
    }
    return 'th';
}

/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function getModularInstance(service) {
    if (service && service._delegate) {
        return service._delegate;
    }
    else {
        return service;
    }
}


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/styles/reset.css":
/*!********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/styles/reset.css ***!
  \********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}", "",{"version":3,"sources":["webpack://./src/styles/reset.css"],"names":[],"mappings":"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB","sourcesContent":["/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/styles/style.css":
/*!********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/styles/style.css ***!
  \********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/getUrl.js */ "./node_modules/css-loader/dist/runtime/getUrl.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _imgs_x_icon_svg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../imgs/x-icon.svg */ "./src/imgs/x-icon.svg");
// Imports




var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));
var ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_imgs_x_icon_svg__WEBPACK_IMPORTED_MODULE_3__);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ":root {\n  --col-base-light: #c5edff;\n  --col-base-mid: #93bfd3;\n  --col-base-mid2: #729db1;\n  --col-base-dark: #427597;\n  --col-darkest: #000;\n  --col-light: #ffffff;\n  --col-btn-light: rgb(46, 149, 209);\n  --col-btn-mid: rgb(30, 138, 201);\n  --col-btn-dark: rgb(23, 89, 175);\n\n  --card-scale: .3em;\n\n  --transition-speed: .3s;\n}\nhtml {\n  height:100%;\n}\nbody {\n  position:relative;\n  min-height:100%;\n  max-width:900px;\n  margin:auto;\n  background-color: var(--col-base-dark);\n  color:var(--col-light);\n  display:flex;\n  flex-direction:column;\n}\n\nh1 {\n  padding:10px;\n  font-weight: 700;\n  font-size: 2em;\n  text-shadow:2px 2px 4px  rgb(2, 44, 99);\n  transition:var(--transition-speed);\n}\n\nh1::after {\n  display:block;\n  content:'';\n  margin-top:.2em;\n  border-bottom:1px solid white;\n}\n\nh2 {\n  font-weight:bold;\n  margin-bottom:1em;\n}\n\nmain.card {\n  margin-bottom:2em;\n}\n\nfooter {\n  position: absolute;\n  bottom:0;\n  padding:.5em;\n}\n\nform {\n  margin:0 .5em 0 .5em;\n}\n\nbutton {\n  appearance:none;\n  display:block;\n  margin:.3em;\n  padding:.3em .6em;\n  border:none;\n  font-size:1.2em;\n  color:var(--col-light);\n  border-bottom: 4px solid var(--col-btn-dark);\n  border-radius: 5px;\n  background:var(--col-btn-mid);\n}\n\nbutton:hover {\n  background:var(--col-btn-light);\n}\n\nbutton:focus {\n  outline:none;\n  border:none;\n  border-top: 4px solid var(--col-btn-dark);\n  background:var(--col-btn-dark);\n}\n\nform>button {\n  margin-top:.7em;\n}\n\na:visited, a:link {\n  color:var(--col-light);\n}\n\nb {\n  font-weight:bold;\n}\n\n.center-children {\n  display:flex;\n  justify-content: center;\n}\n\n.hidden {\n  display:none;\n}\n\n.card {\n  position:relative;\n  color: var(--col-darkest);\n  margin: calc(var(--card-scale)*2) var(--card-scale);\n  padding: var(--card-scale);\n  background: var(--col-light);\n  border-radius: var(--card-scale);\n  box-shadow: 1.5px 1.5px calc(var(--card-scale) * .7) var(--col-base-dark);\n}\n\n.card.semi-transparent {\n  background:rgba(255,255,255,.5);\n}\n\n.card.library-header {\n  display:none; /* Only visible if screen width > mobile */\n}\n\n.book {\n  display:flex;\n  flex-direction:column;\n}\n\n.book-prop {\n  margin-right:2em;\n  padding:.3em 0;\n}\n\n.book-prop.book-title {\n  font-weight:bold;\n}\n.book-prop.book-title::after {\n  content:\"\";\n  display:block;\n  border-top: solid 1px var(--col-base-dark); \n}\n.book-prop.book-author::before {\n  content:'by ';\n}\n.book-prop.book-pageCount::after {\n  content:' pages';\n}\n\n.container-foot {\n  margin-left:.3em;\n}\n\n/* * MODAL */\n.modal-bg {\n  position:fixed;\n  z-index:10;\n  left:0;\n  top:0;\n  width:100%;\n  height:100%;\n  overflow:auto;\n  background-color:rgba(0,0,0,.2);\n}\n\n.modal {\n  /* center */\n  z-index: 11;\n  position:fixed;\n  top:50%;\n  left:50%;\n  transform:translate(-50%,-50%);\n\n  box-sizing:border-box;\n  width:fit-content;\n  max-width:95%;\n  padding: .7em;\n  padding-bottom:0;\n  margin: 0;\n\n  font-size: 150%;\n}\n\n.modal > p {\n  padding-right:2em;\n}\n\n.form-item {\n  display: flex;\n  justify-content: space-between;\n  margin: .5em .2em;\n  position:relative;\n}\n\n.form-item > label {\n  padding-right:.4em;\n}\n\n.close-btn {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 1.5em;\n  height: 1.5em;\n  margin:.3em;\n  background: red;\n  border-radius:50%;\n  content: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\n  user-select:none;\n}\n\n.close-btn:hover {\n  background:rgb(255, 93, 142);\n  transform:rotate(90deg);\n  transition:.3s;\n}\n\n.switch {\n  position:relative;\n  display:flex;\n  align-items:center;\n}\n\n.switch input {\n  display:none;\n}\n\n.switch-label {\n  padding-right: 1em;\n}\n.switch-span {\n  background:var(--col-base-dark);\n  width:1.7em;\n  height:1em;\n  border-radius:.5em;\n}\n\n.switch-span::before {\n  position:absolute;\n  box-sizing:border-box;\n  content:\"\";\n  height: 1em;\n  width: 1em;\n  border: .15em solid var(--col-base-dark);\n  border-radius:50%;\n  background:var(--col-base-light);\n  transition: .1s;\n}\n\ninput:checked + .switch-span::before {\n  transform:translateX(.7em);\n  background:lightgreen;\n  border-color: green;\n}\n\ninput:checked + .switch-span {\n  background: green;\n}\n\ninput[type='text'], input[type='number'] {\n  appearance:none;\n  border:1px solid var(--col-darkest);\n  border-radius: 4px;\n}\n\n.validation-failed {\n  background-color:red;\n  animation-name: anim-fade;\n  animation-duration: 3s;\n}\n\n.card.form-validation-error {\n  z-index:15;\n  box-sizing:border-box;\n  position:absolute;\n  top:1.6em;\n  right:0;\n  margin:0;\n  background:rgb(243, 174, 174);\n  font-size:.7em;\n}\n\n@keyframes anim-fade {\n  0% { background-color:red; }\n  100% { background-color: white; }\n}\n\n@media (min-width:35em) {\n  h1 {\n    font-size:3.6em;\n  }\n  .book {\n    display: grid;\n    grid-template-columns: 6fr 5fr 3fr 4fr;\n  }\n  .card.library-header {\n    display:grid;\n    font-weight: bold;\n  }\n  .close-btn {\n    top: 0;\n  }\n\n  .book-prop.book-author::before {\n    content:'';\n  }\n\n  .book-prop.book-pageCount::after {\n    content:'';\n  }\n\n  .book-prop.book-title {\n    font-weight:normal;\n  }\n\n  .book-prop.book-title::after {\n    display:none; \n  }\n}", "",{"version":3,"sources":["webpack://./src/styles/style.css"],"names":[],"mappings":"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","sourcesContent":[":root {\n  --col-base-light: #c5edff;\n  --col-base-mid: #93bfd3;\n  --col-base-mid2: #729db1;\n  --col-base-dark: #427597;\n  --col-darkest: #000;\n  --col-light: #ffffff;\n  --col-btn-light: rgb(46, 149, 209);\n  --col-btn-mid: rgb(30, 138, 201);\n  --col-btn-dark: rgb(23, 89, 175);\n\n  --card-scale: .3em;\n\n  --transition-speed: .3s;\n}\nhtml {\n  height:100%;\n}\nbody {\n  position:relative;\n  min-height:100%;\n  max-width:900px;\n  margin:auto;\n  background-color: var(--col-base-dark);\n  color:var(--col-light);\n  display:flex;\n  flex-direction:column;\n}\n\nh1 {\n  padding:10px;\n  font-weight: 700;\n  font-size: 2em;\n  text-shadow:2px 2px 4px  rgb(2, 44, 99);\n  transition:var(--transition-speed);\n}\n\nh1::after {\n  display:block;\n  content:'';\n  margin-top:.2em;\n  border-bottom:1px solid white;\n}\n\nh2 {\n  font-weight:bold;\n  margin-bottom:1em;\n}\n\nmain.card {\n  margin-bottom:2em;\n}\n\nfooter {\n  position: absolute;\n  bottom:0;\n  padding:.5em;\n}\n\nform {\n  margin:0 .5em 0 .5em;\n}\n\nbutton {\n  appearance:none;\n  display:block;\n  margin:.3em;\n  padding:.3em .6em;\n  border:none;\n  font-size:1.2em;\n  color:var(--col-light);\n  border-bottom: 4px solid var(--col-btn-dark);\n  border-radius: 5px;\n  background:var(--col-btn-mid);\n}\n\nbutton:hover {\n  background:var(--col-btn-light);\n}\n\nbutton:focus {\n  outline:none;\n  border:none;\n  border-top: 4px solid var(--col-btn-dark);\n  background:var(--col-btn-dark);\n}\n\nform>button {\n  margin-top:.7em;\n}\n\na:visited, a:link {\n  color:var(--col-light);\n}\n\nb {\n  font-weight:bold;\n}\n\n.center-children {\n  display:flex;\n  justify-content: center;\n}\n\n.hidden {\n  display:none;\n}\n\n.card {\n  position:relative;\n  color: var(--col-darkest);\n  margin: calc(var(--card-scale)*2) var(--card-scale);\n  padding: var(--card-scale);\n  background: var(--col-light);\n  border-radius: var(--card-scale);\n  box-shadow: 1.5px 1.5px calc(var(--card-scale) * .7) var(--col-base-dark);\n}\n\n.card.semi-transparent {\n  background:rgba(255,255,255,.5);\n}\n\n.card.library-header {\n  display:none; /* Only visible if screen width > mobile */\n}\n\n.book {\n  display:flex;\n  flex-direction:column;\n}\n\n.book-prop {\n  margin-right:2em;\n  padding:.3em 0;\n}\n\n.book-prop.book-title {\n  font-weight:bold;\n}\n.book-prop.book-title::after {\n  content:\"\";\n  display:block;\n  border-top: solid 1px var(--col-base-dark); \n}\n.book-prop.book-author::before {\n  content:'by ';\n}\n.book-prop.book-pageCount::after {\n  content:' pages';\n}\n\n.container-foot {\n  margin-left:.3em;\n}\n\n/* * MODAL */\n.modal-bg {\n  position:fixed;\n  z-index:10;\n  left:0;\n  top:0;\n  width:100%;\n  height:100%;\n  overflow:auto;\n  background-color:rgba(0,0,0,.2);\n}\n\n.modal {\n  /* center */\n  z-index: 11;\n  position:fixed;\n  top:50%;\n  left:50%;\n  transform:translate(-50%,-50%);\n\n  box-sizing:border-box;\n  width:fit-content;\n  max-width:95%;\n  padding: .7em;\n  padding-bottom:0;\n  margin: 0;\n\n  font-size: 150%;\n}\n\n.modal > p {\n  padding-right:2em;\n}\n\n.form-item {\n  display: flex;\n  justify-content: space-between;\n  margin: .5em .2em;\n  position:relative;\n}\n\n.form-item > label {\n  padding-right:.4em;\n}\n\n.close-btn {\n  position: absolute;\n  right: 0;\n  top: 0;\n  width: 1.5em;\n  height: 1.5em;\n  margin:.3em;\n  background: red;\n  border-radius:50%;\n  content: url(../imgs/x-icon.svg);\n  user-select:none;\n}\n\n.close-btn:hover {\n  background:rgb(255, 93, 142);\n  transform:rotate(90deg);\n  transition:.3s;\n}\n\n.switch {\n  position:relative;\n  display:flex;\n  align-items:center;\n}\n\n.switch input {\n  display:none;\n}\n\n.switch-label {\n  padding-right: 1em;\n}\n.switch-span {\n  background:var(--col-base-dark);\n  width:1.7em;\n  height:1em;\n  border-radius:.5em;\n}\n\n.switch-span::before {\n  position:absolute;\n  box-sizing:border-box;\n  content:\"\";\n  height: 1em;\n  width: 1em;\n  border: .15em solid var(--col-base-dark);\n  border-radius:50%;\n  background:var(--col-base-light);\n  transition: .1s;\n}\n\ninput:checked + .switch-span::before {\n  transform:translateX(.7em);\n  background:lightgreen;\n  border-color: green;\n}\n\ninput:checked + .switch-span {\n  background: green;\n}\n\ninput[type='text'], input[type='number'] {\n  appearance:none;\n  border:1px solid var(--col-darkest);\n  border-radius: 4px;\n}\n\n.validation-failed {\n  background-color:red;\n  animation-name: anim-fade;\n  animation-duration: 3s;\n}\n\n.card.form-validation-error {\n  z-index:15;\n  box-sizing:border-box;\n  position:absolute;\n  top:1.6em;\n  right:0;\n  margin:0;\n  background:rgb(243, 174, 174);\n  font-size:.7em;\n}\n\n@keyframes anim-fade {\n  0% { background-color:red; }\n  100% { background-color: white; }\n}\n\n@media (min-width:35em) {\n  h1 {\n    font-size:3.6em;\n  }\n  .book {\n    display: grid;\n    grid-template-columns: 6fr 5fr 3fr 4fr;\n  }\n  .card.library-header {\n    display:grid;\n    font-weight: bold;\n  }\n  .close-btn {\n    top: 0;\n  }\n\n  .book-prop.book-author::before {\n    content:'';\n  }\n\n  .book-prop.book-pageCount::after {\n    content:'';\n  }\n\n  .book-prop.book-title {\n    font-weight:normal;\n  }\n\n  .book-prop.book-title::after {\n    display:none; \n  }\n}"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
// eslint-disable-next-line func-names
module.exports = function (cssWithMappingToString) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item);

      if (item[2]) {
        return "@media ".concat(item[2], " {").concat(content, "}");
      }

      return content;
    }).join("");
  }; // import a list of modules into the list
  // eslint-disable-next-line func-names


  list.i = function (modules, mediaQuery, dedupe) {
    if (typeof modules === "string") {
      // eslint-disable-next-line no-param-reassign
      modules = [[null, modules, ""]];
    }

    var alreadyImportedModules = {};

    if (dedupe) {
      for (var i = 0; i < this.length; i++) {
        // eslint-disable-next-line prefer-destructuring
        var id = this[i][0];

        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }

    for (var _i = 0; _i < modules.length; _i++) {
      var item = [].concat(modules[_i]);

      if (dedupe && alreadyImportedModules[item[0]]) {
        // eslint-disable-next-line no-continue
        continue;
      }

      if (mediaQuery) {
        if (!item[2]) {
          item[2] = mediaQuery;
        } else {
          item[2] = "".concat(mediaQuery, " and ").concat(item[2]);
        }
      }

      list.push(item);
    }
  };

  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/cssWithMappingToString.js":
/*!************************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/cssWithMappingToString.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";


function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

module.exports = function cssWithMappingToString(item) {
  var _item = _slicedToArray(item, 4),
      content = _item[1],
      cssMapping = _item[3];

  if (typeof btoa === "function") {
    // eslint-disable-next-line no-undef
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    var sourceURLs = cssMapping.sources.map(function (source) {
      return "/*# sourceURL=".concat(cssMapping.sourceRoot || "").concat(source, " */");
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join("\n");
  }

  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";


module.exports = function (url, options) {
  if (!options) {
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== "string") {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
    url = url.slice(1, -1);
  }

  if (options.hash) {
    // eslint-disable-next-line no-param-reassign
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


  if (/["'() \t\n]/.test(url) || options.needQuotes) {
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};

/***/ }),

/***/ "./node_modules/firebase/app/dist/index.esm.js":
/*!*****************************************************!*\
  !*** ./node_modules/firebase/app/dist/index.esm.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.default)
/* harmony export */ });
/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ "./node_modules/@firebase/app/dist/index.esm.js");



var name = "firebase";
var version = "8.4.2";

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
_firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.registerVersion(name, version, 'app');
//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/firebase/firebase-auth.js":
/*!************************************************!*\
  !*** ./node_modules/firebase/firebase-auth.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

!function(t,e){ true?e(__webpack_require__(/*! @firebase/app */ "./node_modules/@firebase/app/dist/index.esm.js")):0}(this,function(e){"use strict";try{!function(){function t(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var zl=t(e);!function(){var t,o="function"==typeof Object.defineProperties?Object.defineProperty:function(t,e,n){t!=Array.prototype&&t!=Object.prototype&&(t[e]=n.value)};var u=function(t){t=["object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof __webpack_require__.g&&__webpack_require__.g,t];for(var e=0;e<t.length;++e){var n=t[e];if(n&&n.Math==Math)return n}return globalThis}(this);function c(t){var e,n,i="undefined"!=typeof Symbol&&Symbol.iterator&&t[Symbol.iterator];return i?i.call(t):{next:(e=t,n=0,function(){return n<e.length?{done:!1,value:e[n++]}:{done:!0}})}}!function(t,e){if(e){var n=u;t=t.split(".");for(var i=0;i<t.length-1;i++){var r=t[i];r in n||(n[r]={}),n=n[r]}(e=e(i=n[t=t[t.length-1]]))!=i&&null!=e&&o(n,t,{configurable:!0,writable:!0,value:e})}}("Promise",function(t){function a(t){this.b=0,this.c=void 0,this.a=[];var e=this.f();try{t(e.resolve,e.reject)}catch(t){e.reject(t)}}function e(){this.a=null}function s(e){return e instanceof a?e:new a(function(t){t(e)})}if(t)return t;e.prototype.b=function(t){var e;null==this.a&&(this.a=[],(e=this).c(function(){e.g()})),this.a.push(t)};var n=u.setTimeout;e.prototype.c=function(t){n(t,0)},e.prototype.g=function(){for(;this.a&&this.a.length;){var t=this.a;this.a=[];for(var e=0;e<t.length;++e){var n=t[e];t[e]=null;try{n()}catch(t){this.f(t)}}}this.a=null},e.prototype.f=function(t){this.c(function(){throw t})},a.prototype.f=function(){function t(e){return function(t){i||(i=!0,e.call(n,t))}}var n=this,i=!1;return{resolve:t(this.m),reject:t(this.g)}},a.prototype.m=function(t){if(t===this)this.g(new TypeError("A Promise cannot resolve to itself"));else if(t instanceof a)this.s(t);else{t:switch(typeof t){case"object":var e=null!=t;break t;case"function":e=!0;break t;default:e=!1}e?this.v(t):this.h(t)}},a.prototype.v=function(t){var e=void 0;try{e=t.then}catch(t){return void this.g(t)}"function"==typeof e?this.u(e,t):this.h(t)},a.prototype.g=function(t){this.i(2,t)},a.prototype.h=function(t){this.i(1,t)},a.prototype.i=function(t,e){if(0!=this.b)throw Error("Cannot settle("+t+", "+e+"): Promise already settled in state"+this.b);this.b=t,this.c=e,this.l()},a.prototype.l=function(){if(null!=this.a){for(var t=0;t<this.a.length;++t)r.b(this.a[t]);this.a=null}};var r=new e;return a.prototype.s=function(t){var e=this.f();t.Qa(e.resolve,e.reject)},a.prototype.u=function(t,e){var n=this.f();try{t.call(e,n.resolve,n.reject)}catch(t){n.reject(t)}},a.prototype.then=function(t,e){function n(e,t){return"function"==typeof e?function(t){try{i(e(t))}catch(t){r(t)}}:t}var i,r,o=new a(function(t,e){i=t,r=e});return this.Qa(n(t,i),n(e,r)),o},a.prototype.catch=function(t){return this.then(void 0,t)},a.prototype.Qa=function(t,e){function n(){switch(i.b){case 1:t(i.c);break;case 2:e(i.c);break;default:throw Error("Unexpected state: "+i.b)}}var i=this;null==this.a?r.b(n):this.a.push(n)},a.resolve=s,a.reject=function(n){return new a(function(t,e){e(n)})},a.race=function(r){return new a(function(t,e){for(var n=c(r),i=n.next();!i.done;i=n.next())s(i.value).Qa(t,e)})},a.all=function(t){var e=c(t),o=e.next();return o.done?s([]):new a(function(n,t){for(var i=[],r=0;i.push(void 0),r++,s(o.value).Qa(function(e){return function(t){i[e]=t,0==--r&&n(i)}}(i.length-1),t),o=e.next(),!o.done;);})},a});var h=h||{},l=this||self,e=/^[\w+/_-]+[=]{0,2}$/,s=null;function f(t){return(t=t.querySelector&&t.querySelector("script[nonce]"))&&(t=t.nonce||t.getAttribute("nonce"))&&e.test(t)?t:""}function a(){}function d(t){var e=typeof t;return"object"!=e?e:t?Array.isArray(t)?"array":e:"null"}function p(t){var e=d(t);return"array"==e||"object"==e&&"number"==typeof t.length}function v(t){return"function"==d(t)}function m(t){var e=typeof t;return"object"==e&&null!=t||"function"==e}var n="closure_uid_"+(1e9*Math.random()>>>0),i=0;function r(t,e,n){return t.call.apply(t.bind,arguments)}function g(e,n,t){if(!e)throw Error();if(2<arguments.length){var i=Array.prototype.slice.call(arguments,2);return function(){var t=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(t,i),e.apply(n,t)}}return function(){return e.apply(n,arguments)}}function b(t,e,n){return(b=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?r:g).apply(null,arguments)}function y(e){var n=Array.prototype.slice.call(arguments,1);return function(){var t=n.slice();return t.push.apply(t,arguments),e.apply(this,t)}}function w(t,e){function n(){}n.prototype=e.prototype,t.ab=e.prototype,t.prototype=new n,t.prototype.constructor=t}function I(t){return t}function T(t,e,n){this.code=k+t,this.message=e||S[t]||"",this.a=n||null}function E(t){var e=t&&t.code;return e?new T(e.substring(k.length),t.message,t.serverResponse):null}w(T,Error),T.prototype.w=function(){var t={code:this.code,message:this.message};return this.a&&(t.serverResponse=this.a),t},T.prototype.toJSON=function(){return this.w()};var A,k="auth/",S={"admin-restricted-operation":"This operation is restricted to administrators only.","argument-error":"","app-not-authorized":"This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.","app-not-installed":"The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.","captcha-check-failed":"The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.","code-expired":"The SMS code has expired. Please re-send the verification code to try again.","cordova-not-ready":"Cordova framework is not ready.","cors-unsupported":"This browser is not supported.","credential-already-in-use":"This credential is already associated with a different user account.","custom-token-mismatch":"The custom token corresponds to a different audience.","requires-recent-login":"This operation is sensitive and requires recent authentication. Log in again before retrying this request.","dynamic-link-not-activated":"Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.","email-change-needs-verification":"Multi-factor users must always have a verified email.","email-already-in-use":"The email address is already in use by another account.","expired-action-code":"The action code has expired. ","cancelled-popup-request":"This operation has been cancelled due to another conflicting popup being opened.","internal-error":"An internal error has occurred.","invalid-app-credential":"The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.","invalid-app-id":"The mobile app identifier is not registed for the current project.","invalid-user-token":"This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.","invalid-auth-event":"An internal error has occurred.","invalid-verification-code":"The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.","invalid-continue-uri":"The continue URL provided in the request is invalid.","invalid-cordova-configuration":"The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.","invalid-custom-token":"The custom token format is incorrect. Please check the documentation.","invalid-dynamic-link-domain":"The provided dynamic link domain is not configured or authorized for the current project.","invalid-email":"The email address is badly formatted.","invalid-api-key":"Your API key is invalid, please check you have copied it correctly.","invalid-cert-hash":"The SHA-1 certificate hash provided is invalid.","invalid-credential":"The supplied auth credential is malformed or has expired.","invalid-message-payload":"The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-multi-factor-session":"The request does not contain a valid proof of first factor successful sign-in.","invalid-oauth-provider":"EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.","invalid-oauth-client-id":"The OAuth client ID provided is either invalid or does not match the specified API key.","unauthorized-domain":"This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.","invalid-action-code":"The action code is invalid. This can happen if the code is malformed, expired, or has already been used.","wrong-password":"The password is invalid or the user does not have a password.","invalid-persistence-type":"The specified persistence type is invalid. It can only be local, session or none.","invalid-phone-number":"The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].","invalid-provider-id":"The specified provider ID is invalid.","invalid-recipient-email":"The email corresponding to this action failed to send as the provided recipient email address is invalid.","invalid-sender":"The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.","invalid-verification-id":"The verification ID used to create the phone auth credential is invalid.","invalid-tenant-id":"The Auth instance's tenant ID is invalid.","multi-factor-info-not-found":"The user does not have a second factor matching the identifier provided.","multi-factor-auth-required":"Proof of ownership of a second factor is required to complete sign-in.","missing-android-pkg-name":"An Android Package Name must be provided if the Android App is required to be installed.","auth-domain-config-required":"Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.","missing-app-credential":"The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.","missing-verification-code":"The phone auth credential was created with an empty SMS verification code.","missing-continue-uri":"A continue URL must be provided in the request.","missing-iframe-start":"An internal error has occurred.","missing-ios-bundle-id":"An iOS Bundle ID must be provided if an App Store ID is provided.","missing-multi-factor-info":"No second factor identifier is provided.","missing-multi-factor-session":"The request is missing proof of first factor successful sign-in.","missing-or-invalid-nonce":"The request does not contain a valid nonce. This can occur if the SHA-256 hash of the provided raw nonce does not match the hashed nonce in the ID token payload.","missing-phone-number":"To send verification codes, provide a phone number for the recipient.","missing-verification-id":"The phone auth credential was created with an empty verification ID.","app-deleted":"This instance of FirebaseApp has been deleted.","account-exists-with-different-credential":"An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.","network-request-failed":"A network error (such as timeout, interrupted connection or unreachable host) has occurred.","no-auth-event":"An internal error has occurred.","no-such-provider":"User was not linked to an account with the given provider.","null-user":"A null user object was provided as the argument for an operation which requires a non-null user object.","operation-not-allowed":"The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.","operation-not-supported-in-this-environment":'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',"popup-blocked":"Unable to establish a connection with the popup. It may have been blocked by the browser.","popup-closed-by-user":"The popup has been closed by the user before finalizing the operation.","provider-already-linked":"User can only be linked to one identity for the given provider.","quota-exceeded":"The project's quota for this operation has been exceeded.","redirect-cancelled-by-user":"The redirect operation has been cancelled by the user before finalizing.","redirect-operation-pending":"A redirect sign-in operation is already pending.","rejected-credential":"The request contains malformed or mismatching credentials.","second-factor-already-in-use":"The second factor is already enrolled on this account.","maximum-second-factor-count-exceeded":"The maximum allowed number of second factors on a user has been exceeded.","tenant-id-mismatch":"The provided tenant ID does not match the Auth instance's tenant ID",timeout:"The operation has timed out.","user-token-expired":"The user's credential is no longer valid. The user must sign in again.","too-many-requests":"We have blocked all requests from this device due to unusual activity. Try again later.","unauthorized-continue-uri":"The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.","unsupported-first-factor":"Enrolling a second factor or signing in with a multi-factor account requires sign-in with a supported first factor.","unsupported-persistence-type":"The current environment does not support the specified persistence type.","unsupported-tenant-operation":"This operation is not supported in a multi-tenant context.","unverified-email":"The operation requires a verified email.","user-cancelled":"The user did not grant your application the permissions it requested.","user-not-found":"There is no user record corresponding to this identifier. The user may have been deleted.","user-disabled":"The user account has been disabled by an administrator.","user-mismatch":"The supplied credentials do not correspond to the previously signed in user.","user-signed-out":"","weak-password":"The password must be 6 characters long or more.","web-storage-unsupported":"This browser is not supported or 3rd party cookies and data may be disabled."},N={ld:{Ta:"https://staging-identitytoolkit.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",Za:"https://staging-securetoken.sandbox.googleapis.com/v1/token",Wa:"https://staging-identitytoolkit.sandbox.googleapis.com/v2/",id:"b"},sd:{Ta:"https://www.googleapis.com/identitytoolkit/v3/relyingparty/",Za:"https://securetoken.googleapis.com/v1/token",Wa:"https://identitytoolkit.googleapis.com/v2/",id:"p"},ud:{Ta:"https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",Za:"https://staging-securetoken.sandbox.googleapis.com/v1/token",Wa:"https://staging-identitytoolkit.sandbox.googleapis.com/v2/",id:"s"},vd:{Ta:"https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/",Za:"https://test-securetoken.sandbox.googleapis.com/v1/token",Wa:"https://test-identitytoolkit.sandbox.googleapis.com/v2/",id:"t"}};function _(t){for(var e in N)if(N[e].id===t)return t=N[e],{firebaseEndpoint:t.Ta,secureTokenEndpoint:t.Za,identityPlatformEndpoint:t.Wa};return null}function O(t){if(t)try{return t.$goog_Thenable}catch(t){return}}function C(t){var e;Error.captureStackTrace?Error.captureStackTrace(this,C):(e=Error().stack)&&(this.stack=e),t&&(this.message=String(t))}function R(t,e){for(var n="",i=(t=t.split("%s")).length-1,r=0;r<i;r++)n+=t[r]+(r<e.length?e[r]:"%s");C.call(this,n+t[i])}function D(t){throw new R("Failure"+(t?": "+t:""),Array.prototype.slice.call(arguments,1))}function P(t,e){this.c=t,this.f=e,this.b=0,this.a=null}function L(t,e){t.f(e),t.b<100&&(t.b++,e.next=t.a,t.a=e)}function x(){this.b=this.a=null}A=_("__EID__")?"__EID__":void 0,w(C,Error),C.prototype.name="CustomError",w(R,C),R.prototype.name="AssertionError",P.prototype.get=function(){var t;return 0<this.b?(this.b--,t=this.a,this.a=t.next,t.next=null):t=this.c(),t};var M=new P(function(){return new j},function(t){t.reset()});function j(){this.next=this.b=this.a=null}x.prototype.add=function(t,e){var n=M.get();n.set(t,e),this.b?this.b.next=n:this.a=n,this.b=n},j.prototype.set=function(t,e){this.a=t,this.b=e,this.next=null},j.prototype.reset=function(){this.next=this.b=this.a=null};var U=Array.prototype.indexOf?function(t,e){return Array.prototype.indexOf.call(t,e,void 0)}:function(t,e){if("string"==typeof t)return"string"!=typeof e||1!=e.length?-1:t.indexOf(e,0);for(var n=0;n<t.length;n++)if(n in t&&t[n]===e)return n;return-1},V=Array.prototype.forEach?function(t,e,n){Array.prototype.forEach.call(t,e,n)}:function(t,e,n){for(var i=t.length,r="string"==typeof t?t.split(""):t,o=0;o<i;o++)o in r&&e.call(n,r[o],o,t)};var F=Array.prototype.filter?function(t,e){return Array.prototype.filter.call(t,e,void 0)}:function(t,e){for(var n,i=t.length,r=[],o=0,a="string"==typeof t?t.split(""):t,s=0;s<i;s++)s in a&&(n=a[s],e.call(void 0,n,s,t)&&(r[o++]=n));return r},q=Array.prototype.map?function(t,e){return Array.prototype.map.call(t,e,void 0)}:function(t,e){for(var n=t.length,i=Array(n),r="string"==typeof t?t.split(""):t,o=0;o<n;o++)o in r&&(i[o]=e.call(void 0,r[o],o,t));return i},H=Array.prototype.some?function(t,e){return Array.prototype.some.call(t,e,void 0)}:function(t,e){for(var n=t.length,i="string"==typeof t?t.split(""):t,r=0;r<n;r++)if(r in i&&e.call(void 0,i[r],r,t))return!0;return!1};function K(t,e){return 0<=U(t,e)}function G(t,e){var n;return(n=0<=(e=U(t,e)))&&Array.prototype.splice.call(t,e,1),n}function B(n,i){!function(t,e){for(var n="string"==typeof t?t.split(""):t,i=t.length-1;0<=i;--i)i in n&&e.call(void 0,n[i],i,t)}(n,function(t,e){i.call(void 0,t,e,n)&&1==Array.prototype.splice.call(n,e,1).length&&0})}function W(){return Array.prototype.concat.apply([],arguments)}function X(t){var e=t.length;if(0<e){for(var n=Array(e),i=0;i<e;i++)n[i]=t[i];return n}return[]}var J,Y=String.prototype.trim?function(t){return t.trim()}:function(t){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(t)[1]},z=/&/g,$=/</g,Z=/>/g,Q=/"/g,tt=/'/g,et=/\x00/g,nt=/[\x00&<>"']/;function it(t,e){return-1!=t.indexOf(e)}function rt(t,e){return t<e?-1:e<t?1:0}t:{var ot=l.navigator;if(ot){ot=ot.userAgent;if(ot){J=ot;break t}}J=""}function at(t){return it(J,t)}function st(t,e){for(var n in t)e.call(void 0,t[n],n,t)}function ut(t){for(var e in t)return;return 1}function ct(t){var e,n={};for(e in t)n[e]=t[e];return n}var ht="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function lt(t){for(var e,n,i=1;i<arguments.length;i++){for(e in n=arguments[i])t[e]=n[e];for(var r=0;r<ht.length;r++)e=ht[r],Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])}}function ft(t,e){t:{try{var n=t&&t.ownerDocument,n=n&&(n.defaultView||n.parentWindow);if((n=n||l).Element&&n.Location){var i=n;break t}}catch(t){}i=null}if(i&&void 0!==i[e]&&(!t||!(t instanceof i[e])&&(t instanceof i.Location||t instanceof i.Element))){if(m(t))try{var r=t.constructor.displayName||t.constructor.name||Object.prototype.toString.call(t)}catch(t){r="<object could not be stringified>"}else r=void 0===t?"undefined":null===t?"null":typeof t;D("Argument is not a %s (or a non-Element, non-Location mock); got: %s",e,r)}}function dt(t,e){this.a=t===gt&&e||"",this.b=mt}function pt(t){return t instanceof dt&&t.constructor===dt&&t.b===mt?t.a:(D("expected object of type Const, got '"+t+"'"),"type_error:Const")}dt.prototype.sa=!0,dt.prototype.ra=function(){return this.a},dt.prototype.toString=function(){return"Const{"+this.a+"}"};var vt,mt={},gt={};function bt(){if(void 0===vt){var t=null,e=l.trustedTypes;if(e&&e.createPolicy){try{t=e.createPolicy("goog#html",{createHTML:I,createScript:I,createScriptURL:I})}catch(t){l.console&&l.console.error(t.message)}vt=t}else vt=t}return vt}function yt(t,e){this.a=e===At?t:""}function wt(t){return t instanceof yt&&t.constructor===yt?t.a:(D("expected object of type TrustedResourceUrl, got '"+t+"' of type "+d(t)),"type_error:TrustedResourceUrl")}function It(t,n){var e,i=pt(t);if(!Et.test(i))throw Error("Invalid TrustedResourceUrl format: "+i);return t=i.replace(Tt,function(t,e){if(!Object.prototype.hasOwnProperty.call(n,e))throw Error('Found marker, "'+e+'", in format string, "'+i+'", but no valid label mapping found in args: '+JSON.stringify(n));return(t=n[e])instanceof dt?pt(t):encodeURIComponent(String(t))}),e=t,t=bt(),new yt(e=t?t.createScriptURL(e):e,At)}yt.prototype.sa=!0,yt.prototype.ra=function(){return this.a.toString()},yt.prototype.toString=function(){return"TrustedResourceUrl{"+this.a+"}"};var Tt=/%{(\w+)}/g,Et=/^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i,At={};function kt(t,e){this.a=e===Dt?t:""}function St(t){return t instanceof kt&&t.constructor===kt?t.a:(D("expected object of type SafeUrl, got '"+t+"' of type "+d(t)),"type_error:SafeUrl")}kt.prototype.sa=!0,kt.prototype.ra=function(){return this.a.toString()},kt.prototype.toString=function(){return"SafeUrl{"+this.a+"}"};var Nt=/^(?:audio\/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|font\/\w+|image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|text\/csv|video\/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))(?:;\w+=(?:\w+|"[\w;,= ]+"))*$/i,_t=/^data:(.*);base64,[a-z0-9+\/]+=*$/i,Ot=/^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;function Ct(t){return t instanceof kt?t:(t="object"==typeof t&&t.sa?t.ra():String(t),t=Ot.test(t)||(e=(t=(t=String(t)).replace(/(%0A|%0D)/g,"")).match(_t))&&Nt.test(e[1])?new kt(t,Dt):null);var e}function Rt(t){return t instanceof kt?t:(t="object"==typeof t&&t.sa?t.ra():String(t),new kt(t=!Ot.test(t)?"about:invalid#zClosurez":t,Dt))}var Dt={},Pt=new kt("about:invalid#zClosurez",Dt);function Lt(t,e,n){this.a=n===xt?t:""}Lt.prototype.sa=!0,Lt.prototype.ra=function(){return this.a.toString()},Lt.prototype.toString=function(){return"SafeHtml{"+this.a+"}"};var xt={};function Mt(t,e,n,i){return t=t instanceof kt?t:Rt(t),e=e||l,n=n instanceof dt?pt(n):n||"",e.open(St(t),n,i,void 0)}function jt(t){for(var e=t.split("%s"),n="",i=Array.prototype.slice.call(arguments,1);i.length&&1<e.length;)n+=e.shift()+i.shift();return n+e.join("%s")}function Ut(t){return nt.test(t)&&(-1!=(t=-1!=(t=-1!=(t=-1!=(t=-1!=(t=-1!=t.indexOf("&")?t.replace(z,"&amp;"):t).indexOf("<")?t.replace($,"&lt;"):t).indexOf(">")?t.replace(Z,"&gt;"):t).indexOf('"')?t.replace(Q,"&quot;"):t).indexOf("'")?t.replace(tt,"&#39;"):t).indexOf("\0")&&(t=t.replace(et,"&#0;"))),t}function Vt(t){return Vt[" "](t),t}Vt[" "]=a;var Ft,qt=at("Opera"),Ht=at("Trident")||at("MSIE"),Kt=at("Edge"),Gt=Kt||Ht,Bt=at("Gecko")&&!(it(J.toLowerCase(),"webkit")&&!at("Edge"))&&!(at("Trident")||at("MSIE"))&&!at("Edge"),Wt=it(J.toLowerCase(),"webkit")&&!at("Edge");function Xt(){var t=l.document;return t?t.documentMode:void 0}t:{var Jt="",Yt=(Yt=J,Bt?/rv:([^\);]+)(\)|;)/.exec(Yt):Kt?/Edge\/([\d\.]+)/.exec(Yt):Ht?/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(Yt):Wt?/WebKit\/(\S+)/.exec(Yt):qt?/(?:Version)[ \/]?(\S+)/.exec(Yt):void 0);if(Yt&&(Jt=Yt?Yt[1]:""),Ht){Yt=Xt();if(null!=Yt&&Yt>parseFloat(Jt)){Ft=String(Yt);break t}}Ft=Jt}var zt={};function $t(s){return t=s,e=function(){for(var t=0,e=Y(String(Ft)).split("."),n=Y(String(s)).split("."),i=Math.max(e.length,n.length),r=0;0==t&&r<i;r++)for(var o=e[r]||"",a=n[r]||"";o=/(\d*)(\D*)(.*)/.exec(o)||["","","",""],a=/(\d*)(\D*)(.*)/.exec(a)||["","","",""],(0!=o[0].length||0!=a[0].length)&&(t=rt(0==o[1].length?0:parseInt(o[1],10),0==a[1].length?0:parseInt(a[1],10))||rt(0==o[2].length,0==a[2].length)||rt(o[2],a[2]),o=o[3],a=a[3],0==t););return 0<=t},n=zt,Object.prototype.hasOwnProperty.call(n,t)?n[t]:n[t]=e(t);var t,e,n}var Zt=l.document&&Ht&&(Xt()||parseInt(Ft,10))||void 0;try{new self.OffscreenCanvas(0,0).getContext("2d")}catch(t){}var Qt=!Ht||9<=Number(Zt);function te(t){var e=document;return"string"==typeof t?e.getElementById(t):t}function ee(n,t){st(t,function(t,e){t&&"object"==typeof t&&t.sa&&(t=t.ra()),"style"==e?n.style.cssText=t:"class"==e?n.className=t:"for"==e?n.htmlFor=t:re.hasOwnProperty(e)?n.setAttribute(re[e],t):0==e.lastIndexOf("aria-",0)||0==e.lastIndexOf("data-",0)?n.setAttribute(e,t):n[e]=t})}var ne,ie,re={cellpadding:"cellPadding",cellspacing:"cellSpacing",colspan:"colSpan",frameborder:"frameBorder",height:"height",maxlength:"maxLength",nonce:"nonce",role:"role",rowspan:"rowSpan",type:"type",usemap:"useMap",valign:"vAlign",width:"width"};function oe(){var t,e=arguments,n=document,i=String(e[0]),r=e[1];return!Qt&&r&&(r.name||r.type)&&(i=["<",i],r.name&&i.push(' name="',Ut(r.name),'"'),r.type&&(i.push(' type="',Ut(r.type),'"'),lt(t={},r),delete t.type,r=t),i.push(">"),i=i.join("")),i=ae(n,i),r&&("string"==typeof r?i.className=r:Array.isArray(r)?i.className=r.join(" "):ee(i,r)),2<e.length&&function(e,n,t){function i(t){t&&n.appendChild("string"==typeof t?e.createTextNode(t):t)}for(var r=2;r<t.length;r++){var o=t[r];if(!p(o)||m(o)&&0<o.nodeType)i(o);else{t:{if(o&&"number"==typeof o.length){if(m(o)){var a="function"==typeof o.item||"string"==typeof o.item;break t}if(v(o)){a="function"==typeof o.item;break t}}a=!1}V(a?X(o):o,i)}}}(n,i,e),i}function ae(t,e){return e=String(e),"application/xhtml+xml"===t.contentType&&(e=e.toLowerCase()),t.createElement(e)}function se(t){l.setTimeout(function(){throw t},0)}function ue(t,e){ie||function(){{var t;ie=l.Promise&&l.Promise.resolve?(t=l.Promise.resolve(void 0),function(){t.then(le)}):function(){var t=le;!v(l.setImmediate)||l.Window&&l.Window.prototype&&!at("Edge")&&l.Window.prototype.setImmediate==l.setImmediate?(ne=ne||function(){var t=l.MessageChannel;if(void 0===(t=void 0===t&&"undefined"!=typeof window&&window.postMessage&&window.addEventListener&&!at("Presto")?function(){var t=ae(document,"IFRAME");t.style.display="none",document.documentElement.appendChild(t);var e=t.contentWindow;(t=e.document).open(),t.close();var n="callImmediate"+Math.random(),i="file:"==e.location.protocol?"*":e.location.protocol+"//"+e.location.host;t=b(function(t){"*"!=i&&t.origin!=i||t.data!=n||this.port1.onmessage()},this),e.addEventListener("message",t,!1),this.port1={},this.port2={postMessage:function(){e.postMessage(n,i)}}}:t)||at("Trident")||at("MSIE"))return function(t){l.setTimeout(t,0)};var e=new t,n={},i=n;return e.port1.onmessage=function(){var t;void 0!==n.next&&(t=(n=n.next).Gb,n.Gb=null,t())},function(t){i.next={Gb:t},i=i.next,e.port2.postMessage(0)}}())(t):l.setImmediate(t)}}}(),ce||(ie(),ce=!0),he.add(t,e)}var ce=!1,he=new x;function le(){for(var t,e,n;n=e=void 0,n=null,(e=he).a&&(n=e.a,e.a=e.a.next,e.a||(e.b=null),n.next=null),t=n;){try{t.a.call(t.b)}catch(t){se(t)}L(M,t)}ce=!1}function fe(t,e){if(this.a=de,this.i=void 0,this.f=this.b=this.c=null,this.g=this.h=!1,t!=a)try{var n=this;t.call(e,function(t){ke(n,pe,t)},function(t){if(!(t instanceof De))try{if(t instanceof Error)throw t;throw Error("Promise rejected.")}catch(t){}ke(n,ve,t)})}catch(t){ke(this,ve,t)}}var de=0,pe=2,ve=3;function me(){this.next=this.f=this.b=this.g=this.a=null,this.c=!1}me.prototype.reset=function(){this.f=this.b=this.g=this.a=null,this.c=!1};var ge=new P(function(){return new me},function(t){t.reset()});function be(t,e,n){var i=ge.get();return i.g=t,i.b=e,i.f=n,i}function ye(t){if(t instanceof fe)return t;var e=new fe(a);return ke(e,pe,t),e}function we(n){return new fe(function(t,e){e(n)})}function Ie(t,e,n){Se(t,e,n,null)||ue(y(e,t))}function Te(n){return new fe(function(i){var r=n.length,o=[];if(r)for(var t=function(t,e,n){r--,o[t]=e?{Pb:!0,value:n}:{Pb:!1,reason:n},0==r&&i(o)},e=0;e<n.length;e++)Ie(n[e],y(t,e,!0),y(t,e,!1));else i(o)})}function Ee(t,e){t.b||t.a!=pe&&t.a!=ve||Ne(t),t.f?t.f.next=e:t.b=e,t.f=e}function Ae(t,r,o,a){var e=be(null,null,null);return e.a=new fe(function(n,i){e.g=r?function(t){try{var e=r.call(a,t);n(e)}catch(t){i(t)}}:n,e.b=o?function(t){try{var e=o.call(a,t);void 0===e&&t instanceof De?i(t):n(e)}catch(t){i(t)}}:i}),Ee(e.a.c=t,e),e.a}function ke(t,e,n){var i,r;t.a==de&&(t===n&&(e=ve,n=new TypeError("Promise cannot resolve to itself")),t.a=1,Se(n,t.$c,t.ad,t)||(t.i=n,t.a=e,t.c=null,Ne(t),e!=ve||n instanceof De||(r=n,(i=t).g=!0,ue(function(){i.g&&Re.call(null,r)}))))}function Se(t,e,n,i){if(t instanceof fe)return Ee(t,be(e||a,n||null,i)),1;if(O(t))return t.then(e,n,i),1;if(m(t))try{var r=t.then;if(v(r))return function(t,e,n,i,r){function o(t){a||(a=!0,i.call(r,t))}var a=!1;try{e.call(t,function(t){a||(a=!0,n.call(r,t))},o)}catch(t){o(t)}}(t,r,e,n,i),1}catch(t){return n.call(i,t),1}}function Ne(t){t.h||(t.h=!0,ue(t.gc,t))}function _e(t){var e=null;return t.b&&(e=t.b,t.b=e.next,e.next=null),t.b||(t.f=null),e}function Oe(t,e,n,i){if(n==ve&&e.b&&!e.c)for(;t&&t.g;t=t.c)t.g=!1;if(e.a)e.a.c=null,Ce(e,n,i);else try{e.c?e.g.call(e.f):Ce(e,n,i)}catch(t){Re.call(null,t)}L(ge,e)}function Ce(t,e,n){e==pe?t.g.call(t.f,n):t.b&&t.b.call(t.f,n)}fe.prototype.then=function(t,e,n){return Ae(this,v(t)?t:null,v(e)?e:null,n)},fe.prototype.$goog_Thenable=!0,(t=fe.prototype).oa=function(t,e){return(t=be(t,t,e)).c=!0,Ee(this,t),this},t.o=function(t,e){return Ae(this,null,t,e)},t.cancel=function(t){var e;this.a==de&&(e=new De(t),ue(function(){!function t(e,n){if(e.a==de)if(e.c){var i=e.c;if(i.b){for(var r=0,o=null,a=null,s=i.b;s&&(s.c||(r++,!((o=s.a==e?s:o)&&1<r)));s=s.next)o||(a=s);o&&(i.a==de&&1==r?t(i,n):(a?((r=a).next==i.f&&(i.f=r),r.next=r.next.next):_e(i),Oe(i,o,ve,n)))}e.c=null}else ke(e,ve,n)}(this,e)},this))},t.$c=function(t){this.a=de,ke(this,pe,t)},t.ad=function(t){this.a=de,ke(this,ve,t)},t.gc=function(){for(var t;t=_e(this);)Oe(this,t,this.a,this.i);this.h=!1};var Re=se;function De(t){C.call(this,t)}function Pe(){this.xa=this.xa,this.pa=this.pa}w(De,C);var Le=0;function xe(t){t.xa||(t.xa=!0,t.Da(),0==Le)||(t=t,Object.prototype.hasOwnProperty.call(t,n)&&t[n]||(t[n]=++i))}Pe.prototype.xa=!(De.prototype.name="cancel"),Pe.prototype.Da=function(){if(this.pa)for(;this.pa.length;)this.pa.shift()()};var Me=Object.freeze||function(t){return t},je=!Ht||9<=Number(Zt),Ue=Ht&&!$t("9"),Ve=function(){if(!l.addEventListener||!Object.defineProperty)return!1;var t=!1,e=Object.defineProperty({},"passive",{get:function(){t=!0}});try{l.addEventListener("test",a,e),l.removeEventListener("test",a,e)}catch(t){}return t}();function Fe(t,e){this.type=t,this.b=this.target=e,this.defaultPrevented=!1}function qe(t,e){if(Fe.call(this,t?t.type:""),this.relatedTarget=this.b=this.target=null,this.button=this.screenY=this.screenX=this.clientY=this.clientX=0,this.key="",this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1,this.pointerId=0,this.pointerType="",this.a=null,t){var n=this.type=t.type,i=t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:null;if(this.target=t.target||t.srcElement,this.b=e,e=t.relatedTarget){if(Bt){t:{try{Vt(e.nodeName);var r=!0;break t}catch(t){}r=!1}r||(e=null)}}else"mouseover"==n?e=t.fromElement:"mouseout"==n&&(e=t.toElement);this.relatedTarget=e,i?(this.clientX=void 0!==i.clientX?i.clientX:i.pageX,this.clientY=void 0!==i.clientY?i.clientY:i.pageY,this.screenX=i.screenX||0,this.screenY=i.screenY||0):(this.clientX=void 0!==t.clientX?t.clientX:t.pageX,this.clientY=void 0!==t.clientY?t.clientY:t.pageY,this.screenX=t.screenX||0,this.screenY=t.screenY||0),this.button=t.button,this.key=t.key||"",this.ctrlKey=t.ctrlKey,this.altKey=t.altKey,this.shiftKey=t.shiftKey,this.metaKey=t.metaKey,this.pointerId=t.pointerId||0,this.pointerType="string"==typeof t.pointerType?t.pointerType:He[t.pointerType]||"",(this.a=t).defaultPrevented&&this.preventDefault()}}Fe.prototype.preventDefault=function(){this.defaultPrevented=!0},w(qe,Fe);var He=Me({2:"touch",3:"pen",4:"mouse"});qe.prototype.preventDefault=function(){qe.ab.preventDefault.call(this);var t=this.a;if(t.preventDefault)t.preventDefault();else if(t.returnValue=!1,Ue)try{(t.ctrlKey||112<=t.keyCode&&t.keyCode<=123)&&(t.keyCode=-1)}catch(t){}},qe.prototype.g=function(){return this.a};var Ke="closure_listenable_"+(1e6*Math.random()|0),Ge=0;function Be(t,e,n,i,r){this.listener=t,this.proxy=null,this.src=e,this.type=n,this.capture=!!i,this.Va=r,this.key=++Ge,this.va=this.Pa=!1}function We(t){t.va=!0,t.listener=null,t.proxy=null,t.src=null,t.Va=null}function Xe(t){this.src=t,this.a={},this.b=0}function Je(t,e){var n=e.type;n in t.a&&G(t.a[n],e)&&(We(e),0==t.a[n].length&&(delete t.a[n],t.b--))}function Ye(t,e,n,i){for(var r=0;r<t.length;++r){var o=t[r];if(!o.va&&o.listener==e&&o.capture==!!n&&o.Va==i)return r}return-1}Xe.prototype.add=function(t,e,n,i,r){var o=t.toString();(t=this.a[o])||(t=this.a[o]=[],this.b++);var a=Ye(t,e,i,r);return-1<a?(e=t[a],n||(e.Pa=!1)):((e=new Be(e,this.src,o,!!i,r)).Pa=n,t.push(e)),e};var ze="closure_lm_"+(1e6*Math.random()|0),$e={};function Ze(t,e,n,i,r){if(i&&i.once)tn(t,e,n,i,r);else if(Array.isArray(e))for(var o=0;o<e.length;o++)Ze(t,e[o],n,i,r);else n=hn(n),t&&t[Ke]?fn(t,e,n,m(i)?!!i.capture:!!i,r):Qe(t,e,n,!1,i,r)}function Qe(t,e,n,i,r,o){if(!e)throw Error("Invalid event type");var a,s,u=m(r)?!!r.capture:!!r,c=un(t);if(c||(t[ze]=c=new Xe(t)),!(n=c.add(e,n,i,u,o)).proxy)if(a=sn,i=s=je?function(t){return a.call(s.src,s.listener,t)}:function(t){if(!(t=a.call(s.src,s.listener,t)))return t},(n.proxy=i).src=t,i.listener=n,t.addEventListener)void 0===(r=!Ve?u:r)&&(r=!1),t.addEventListener(e.toString(),i,r);else if(t.attachEvent)t.attachEvent(rn(e.toString()),i);else{if(!t.addListener||!t.removeListener)throw Error("addEventListener and attachEvent are unavailable.");t.addListener(i)}}function tn(t,e,n,i,r){if(Array.isArray(e))for(var o=0;o<e.length;o++)tn(t,e[o],n,i,r);else n=hn(n),t&&t[Ke]?dn(t,e,n,m(i)?!!i.capture:!!i,r):Qe(t,e,n,!0,i,r)}function en(t,e,n,i,r){if(Array.isArray(e))for(var o=0;o<e.length;o++)en(t,e[o],n,i,r);else i=m(i)?!!i.capture:!!i,n=hn(n),t&&t[Ke]?(t=t.v,(e=String(e).toString())in t.a&&(-1<(n=Ye(o=t.a[e],n,i,r))&&(We(o[n]),Array.prototype.splice.call(o,n,1),0==o.length&&(delete t.a[e],t.b--)))):(t=t&&un(t))&&(e=t.a[e.toString()],(n=(t=-1)<(t=e?Ye(e,n,i,r):t)?e[t]:null)&&nn(n))}function nn(t){var e,n,i;"number"!=typeof t&&t&&!t.va&&((e=t.src)&&e[Ke]?Je(e.v,t):(n=t.type,i=t.proxy,e.removeEventListener?e.removeEventListener(n,i,t.capture):e.detachEvent?e.detachEvent(rn(n),i):e.addListener&&e.removeListener&&e.removeListener(i),(n=un(e))?(Je(n,t),0==n.b&&(n.src=null,e[ze]=null)):We(t)))}function rn(t){return t in $e?$e[t]:$e[t]="on"+t}function on(t,e,n,i){var r=!0;if((t=un(t))&&(e=t.a[e.toString()]))for(e=e.concat(),t=0;t<e.length;t++){var o=e[t];o&&o.capture==n&&!o.va&&(o=an(o,i),r=r&&!1!==o)}return r}function an(t,e){var n=t.listener,i=t.Va||t.src;return t.Pa&&nn(t),n.call(i,e)}function sn(t,e){if(t.va)return!0;if(je)return an(t,new qe(e,this));if(!e)t:{e=["window","event"];for(var n=l,i=0;i<e.length;i++)if(null==(n=n[e[i]])){e=null;break t}e=n}if(e=new qe(i=e,this),n=!0,!(i.keyCode<0||null!=i.returnValue)){t:{var r=!1;if(0==i.keyCode)try{i.keyCode=-1;break t}catch(t){r=!0}!r&&null!=i.returnValue||(i.returnValue=!0)}for(i=[],r=e.b;r;r=r.parentNode)i.push(r);for(t=t.type,r=i.length-1;0<=r;r--){e.b=i[r];var o=on(i[r],t,!0,e),n=n&&o}for(r=0;r<i.length;r++)e.b=i[r],o=on(i[r],t,!1,e),n=n&&o}return n}function un(t){return(t=t[ze])instanceof Xe?t:null}var cn="__closure_events_fn_"+(1e9*Math.random()>>>0);function hn(e){return v(e)?e:(e[cn]||(e[cn]=function(t){return e.handleEvent(t)}),e[cn])}function ln(){Pe.call(this),this.v=new Xe(this),(this.ac=this).gb=null}function fn(t,e,n,i,r){t.v.add(String(e),n,!1,i,r)}function dn(t,e,n,i,r){t.v.add(String(e),n,!0,i,r)}function pn(t,e,n,i){if(!(e=t.v.a[String(e)]))return!0;e=e.concat();for(var r=!0,o=0;o<e.length;++o){var a,s,u=e[o];u&&!u.va&&u.capture==n&&(a=u.listener,s=u.Va||u.src,u.Pa&&Je(t.v,u),r=!1!==a.call(s,i)&&r)}return r&&!i.defaultPrevented}function vn(t,e,n){if(v(t))n&&(t=b(t,n));else{if(!t||"function"!=typeof t.handleEvent)throw Error("Invalid listener argument");t=b(t.handleEvent,t)}return 2147483647<Number(e)?-1:l.setTimeout(t,e||0)}function mn(n){var i=null;return new fe(function(t,e){-1==(i=vn(function(){t(void 0)},n))&&e(Error("Failed to schedule timer."))}).o(function(t){throw l.clearTimeout(i),t})}function gn(t){if(t.W&&"function"==typeof t.W)return t.W();if("string"==typeof t)return t.split("");if(p(t)){for(var e=[],n=t.length,i=0;i<n;i++)e.push(t[i]);return e}for(i in e=[],n=0,t)e[n++]=t[i];return e}function bn(t){if(t.Y&&"function"==typeof t.Y)return t.Y();if(!t.W||"function"!=typeof t.W){if(p(t)||"string"==typeof t){var e=[];t=t.length;for(var n=0;n<t;n++)e.push(n);return e}for(var i in e=[],n=0,t)e[n++]=i;return e}}function yn(t,e){this.b={},this.a=[],this.c=0;var n=arguments.length;if(1<n){if(n%2)throw Error("Uneven number of arguments");for(var i=0;i<n;i+=2)this.set(arguments[i],arguments[i+1])}else if(t)if(t instanceof yn)for(n=t.Y(),i=0;i<n.length;i++)this.set(n[i],t.get(n[i]));else for(i in t)this.set(i,t[i])}function wn(t){if(t.c!=t.a.length){for(var e=0,n=0;e<t.a.length;){var i=t.a[e];In(t.b,i)&&(t.a[n++]=i),e++}t.a.length=n}if(t.c!=t.a.length){for(var r={},n=e=0;e<t.a.length;)In(r,i=t.a[e])||(r[t.a[n++]=i]=1),e++;t.a.length=n}}function In(t,e){return Object.prototype.hasOwnProperty.call(t,e)}w(ln,Pe),ln.prototype[Ke]=!0,ln.prototype.addEventListener=function(t,e,n,i){Ze(this,t,e,n,i)},ln.prototype.removeEventListener=function(t,e,n,i){en(this,t,e,n,i)},ln.prototype.dispatchEvent=function(t){var e;if(n=this.gb)for(e=[];n;n=n.gb)e.push(n);var n=this.ac,i=t.type||t;if("string"==typeof t?t=new Fe(t,n):t instanceof Fe?t.target=t.target||n:(a=t,lt(t=new Fe(i,n),a)),a=!0,e)for(var r=e.length-1;0<=r;r--)var o=t.b=e[r],a=pn(o,i,!0,t)&&a;if(a=pn(o=t.b=n,i,!0,t)&&a,a=pn(o,i,!1,t)&&a,e)for(r=0;r<e.length;r++)a=pn(o=t.b=e[r],i,!1,t)&&a;return a},ln.prototype.Da=function(){if(ln.ab.Da.call(this),this.v){var t,e=this.v;for(t in e.a){for(var n=e.a[t],i=0;i<n.length;i++)We(n[i]);delete e.a[t],e.b--}}this.gb=null},(t=yn.prototype).W=function(){wn(this);for(var t=[],e=0;e<this.a.length;e++)t.push(this.b[this.a[e]]);return t},t.Y=function(){return wn(this),this.a.concat()},t.clear=function(){this.b={},this.c=this.a.length=0},t.get=function(t,e){return In(this.b,t)?this.b[t]:e},t.set=function(t,e){In(this.b,t)||(this.c++,this.a.push(t)),this.b[t]=e},t.forEach=function(t,e){for(var n=this.Y(),i=0;i<n.length;i++){var r=n[i],o=this.get(r);t.call(e,o,r,this)}};var Tn=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function En(t,e){var n;this.a=this.l=this.c="",this.g=null,this.h=this.f="",this.i=!1,t instanceof En?(this.i=void 0!==e?e:t.i,An(this,t.c),this.l=t.l,this.a=t.a,kn(this,t.g),this.f=t.f,Sn(this,Bn(t.b)),this.h=t.h):t&&(n=String(t).match(Tn))?(this.i=!!e,An(this,n[1]||"",!0),this.l=Rn(n[2]||""),this.a=Rn(n[3]||"",!0),kn(this,n[4]),this.f=Rn(n[5]||"",!0),Sn(this,n[6]||"",!0),this.h=Rn(n[7]||"")):(this.i=!!e,this.b=new Vn(null,this.i))}function An(t,e,n){t.c=n?Rn(e,!0):e,t.c&&(t.c=t.c.replace(/:$/,""))}function kn(t,e){if(e){if(e=Number(e),isNaN(e)||e<0)throw Error("Bad port number "+e);t.g=e}else t.g=null}function Sn(t,e,n){var i,r;e instanceof Vn?(t.b=e,i=t.b,(r=t.i)&&!i.f&&(Fn(i),i.c=null,i.a.forEach(function(t,e){var n=e.toLowerCase();e!=n&&(Hn(this,e),Gn(this,n,t))},i)),i.f=r):(n||(e=Dn(e,jn)),t.b=new Vn(e,t.i))}function Nn(t,e,n){t.b.set(e,n)}function _n(t,e){return t.b.get(e)}function On(t){return t instanceof En?new En(t):new En(t,void 0)}function Cn(t,e,n,i){var r=new En(null,void 0);return t&&An(r,t),e&&(r.a=e),n&&kn(r,n),i&&(r.f=i),r}function Rn(t,e){return t?e?decodeURI(t.replace(/%25/g,"%2525")):decodeURIComponent(t):""}function Dn(t,e,n){return"string"==typeof t?(t=encodeURI(t).replace(e,Pn),t=n?t.replace(/%25([0-9a-fA-F]{2})/g,"%$1"):t):null}function Pn(t){return"%"+((t=t.charCodeAt(0))>>4&15).toString(16)+(15&t).toString(16)}En.prototype.toString=function(){var t=[],e=this.c;e&&t.push(Dn(e,Ln,!0),":");var n=this.a;return!n&&"file"!=e||(t.push("//"),(e=this.l)&&t.push(Dn(e,Ln,!0),"@"),t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),null!=(n=this.g)&&t.push(":",String(n))),(n=this.f)&&(this.a&&"/"!=n.charAt(0)&&t.push("/"),t.push(Dn(n,"/"==n.charAt(0)?Mn:xn,!0))),(n=this.b.toString())&&t.push("?",n),(n=this.h)&&t.push("#",Dn(n,Un)),t.join("")},En.prototype.resolve=function(t){var e=new En(this),n=!!t.c;n?An(e,t.c):n=!!t.l,n?e.l=t.l:n=!!t.a,n?e.a=t.a:n=null!=t.g;var i=t.f;if(n)kn(e,t.g);else if(n=!!t.f)if("/"!=i.charAt(0)&&(this.a&&!this.f?i="/"+i:-1!=(r=e.f.lastIndexOf("/"))&&(i=e.f.substr(0,r+1)+i)),".."==(r=i)||"."==r)i="";else if(it(r,"./")||it(r,"/.")){for(var i=0==r.lastIndexOf("/",0),r=r.split("/"),o=[],a=0;a<r.length;){var s=r[a++];"."==s?i&&a==r.length&&o.push(""):".."==s?((1<o.length||1==o.length&&""!=o[0])&&o.pop(),i&&a==r.length&&o.push("")):(o.push(s),i=!0)}i=o.join("/")}else i=r;return n?e.f=i:n=""!==t.b.toString(),n?Sn(e,Bn(t.b)):n=!!t.h,n&&(e.h=t.h),e};var Ln=/[#\/\?@]/g,xn=/[#\?:]/g,Mn=/[#\?]/g,jn=/[#\?@]/g,Un=/#/g;function Vn(t,e){this.b=this.a=null,this.c=t||null,this.f=!!e}function Fn(n){n.a||(n.a=new yn,n.b=0,n.c&&function(t,e){if(t){t=t.split("&");for(var n=0;n<t.length;n++){var i,r=t[n].indexOf("="),o=null;0<=r?(i=t[n].substring(0,r),o=t[n].substring(r+1)):i=t[n],e(i,o?decodeURIComponent(o.replace(/\+/g," ")):"")}}}(n.c,function(t,e){n.add(decodeURIComponent(t.replace(/\+/g," ")),e)}))}function qn(t){var e=bn(t);if(void 0===e)throw Error("Keys are undefined");var n=new Vn(null,void 0);t=gn(t);for(var i=0;i<e.length;i++){var r=e[i],o=t[i];Array.isArray(o)?Gn(n,r,o):n.add(r,o)}return n}function Hn(t,e){Fn(t),e=Wn(t,e),In(t.a.b,e)&&(t.c=null,t.b-=t.a.get(e).length,In((t=t.a).b,e)&&(delete t.b[e],t.c--,t.a.length>2*t.c&&wn(t)))}function Kn(t,e){return Fn(t),e=Wn(t,e),In(t.a.b,e)}function Gn(t,e,n){Hn(t,e),0<n.length&&(t.c=null,t.a.set(Wn(t,e),X(n)),t.b+=n.length)}function Bn(t){var e=new Vn;return e.c=t.c,t.a&&(e.a=new yn(t.a),e.b=t.b),e}function Wn(t,e){return e=String(e),e=t.f?e.toLowerCase():e}function Xn(t){var e=[];return function t(e,n,i){if(null==n)i.push("null");else{if("object"==typeof n){if(Array.isArray(n)){var r=n;n=r.length,i.push("[");for(var o="",a=0;a<n;a++)i.push(o),t(e,r[a],i),o=",";return void i.push("]")}if(!(n instanceof String||n instanceof Number||n instanceof Boolean)){for(r in i.push("{"),o="",n)Object.prototype.hasOwnProperty.call(n,r)&&(a=n[r],"function"!=typeof a&&(i.push(o),$n(r,i),i.push(":"),t(e,a,i),o=","));return void i.push("}")}n=n.valueOf()}switch(typeof n){case"string":$n(n,i);break;case"number":i.push(isFinite(n)&&!isNaN(n)?String(n):"null");break;case"boolean":i.push(String(n));break;case"function":i.push("null");break;default:throw Error("Unknown type: "+typeof n)}}}(new Jn,t,e),e.join("")}function Jn(){}(t=Vn.prototype).add=function(t,e){Fn(this),this.c=null,t=Wn(this,t);var n=this.a.get(t);return n||this.a.set(t,n=[]),n.push(e),this.b+=1,this},t.clear=function(){this.a=this.c=null,this.b=0},t.forEach=function(n,i){Fn(this),this.a.forEach(function(t,e){V(t,function(t){n.call(i,t,e,this)},this)},this)},t.Y=function(){Fn(this);for(var t=this.a.W(),e=this.a.Y(),n=[],i=0;i<e.length;i++)for(var r=t[i],o=0;o<r.length;o++)n.push(e[i]);return n},t.W=function(t){Fn(this);var e=[];if("string"==typeof t)Kn(this,t)&&(e=W(e,this.a.get(Wn(this,t))));else{t=this.a.W();for(var n=0;n<t.length;n++)e=W(e,t[n])}return e},t.set=function(t,e){return Fn(this),this.c=null,Kn(this,t=Wn(this,t))&&(this.b-=this.a.get(t).length),this.a.set(t,[e]),this.b+=1,this},t.get=function(t,e){return t&&0<(t=this.W(t)).length?String(t[0]):e},t.toString=function(){if(this.c)return this.c;if(!this.a)return"";for(var t=[],e=this.a.Y(),n=0;n<e.length;n++)for(var i=e[n],r=encodeURIComponent(String(i)),i=this.W(i),o=0;o<i.length;o++){var a=r;""!==i[o]&&(a+="="+encodeURIComponent(String(i[o]))),t.push(a)}return this.c=t.join("&")};var Yn={'"':'\\"',"\\":"\\\\","/":"\\/","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\u000b"},zn=/\uffff/.test("\uffff")?/[\\"\x00-\x1f\x7f-\uffff]/g:/[\\"\x00-\x1f\x7f-\xff]/g;function $n(t,e){e.push('"',t.replace(zn,function(t){var e=Yn[t];return e||(e="\\u"+(65536|t.charCodeAt(0)).toString(16).substr(1),Yn[t]=e),e}),'"')}function Zn(){var t=gi();return Ht&&Zt&&11==Zt||/Edge\/\d+/.test(t)}function Qn(){return l.window&&l.window.location.href||self&&self.location&&self.location.href||""}function ti(t,e){e=e||l.window;var n="about:blank";t&&(n=St(Ct(t)||Pt)),e.location.href=n}function ei(t){return!!((t=(t||gi()).toLowerCase()).match(/android/)||t.match(/webos/)||t.match(/iphone|ipad|ipod/)||t.match(/blackberry/)||t.match(/windows phone/)||t.match(/iemobile/))}function ni(t){t=t||l.window;try{t.close()}catch(t){}}function ii(t,e,n){var i=Math.floor(1e9*Math.random()).toString();e=e||500,n=n||600;var r=(window.screen.availHeight-n)/2,o=(window.screen.availWidth-e)/2;for(a in e={width:e,height:n,top:0<r?r:0,left:0<o?o:0,location:!0,resizable:!0,statusbar:!0,toolbar:!1},n=gi().toLowerCase(),i&&(e.target=i,it(n,"crios/")&&(e.target="_blank")),pi(gi())==fi&&(t=t||"http://localhost",e.scrollbars=!0),n=t||"",(t=e)||(t={}),i=window,e=n instanceof kt?n:Ct(void 0!==n.href?n.href:String(n))||Pt,n=t.target||n.target,r=[],t)switch(a){case"width":case"height":case"top":case"left":r.push(a+"="+t[a]);break;case"target":case"noopener":case"noreferrer":break;default:r.push(a+"="+(t[a]?1:0))}var a=r.join(",");if((at("iPhone")&&!at("iPod")&&!at("iPad")||at("iPad")||at("iPod"))&&i.navigator&&i.navigator.standalone&&n&&"_self"!=n?(ft(a=ae(document,"A"),"HTMLAnchorElement"),e=e instanceof kt?e:Rt(e),a.href=St(e),a.setAttribute("target",n),t.noreferrer&&a.setAttribute("rel","noreferrer"),(t=document.createEvent("MouseEvent")).initMouseEvent("click",!0,!0,i,1),a.dispatchEvent(t),a={}):t.noreferrer?(a=Mt("",i,n,a),t=St(e),a&&(Gt&&it(t,";")&&(t="'"+t.replace(/'/g,"%27")+"'"),a.opener=null,t='<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url='+Ut(t)+'">',t=new Lt(t=(i=bt())?i.createHTML(t):t,0,xt),i=a.document)&&(i.write((o=t)instanceof Lt&&o.constructor===Lt?o.a:(D("expected object of type SafeHtml, got '"+o+"' of type "+d(o)),"type_error:SafeHtml")),i.close())):(a=Mt(e,i,n,a))&&t.noopener&&(a.opener=null),a)try{a.focus()}catch(t){}return a}var ri=/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,oi=/^[^@]+@[^@]+$/;function ai(){var e=null;return new fe(function(t){"complete"==l.document.readyState?t():(e=function(){t()},tn(window,"load",e))}).o(function(t){throw en(window,"load",e),t})}function si(t){return t=t||gi(),!("file:"!==Ti()&&"ionic:"!==Ti()||!t.toLowerCase().match(/iphone|ipad|ipod|android/))}function ui(){var t=l.window;try{return t&&t!=t.top}catch(t){return}}function ci(){return void 0!==l.WorkerGlobalScope&&"function"==typeof l.importScripts}function hi(){return zl.default.INTERNAL.hasOwnProperty("reactNative")?"ReactNative":zl.default.INTERNAL.hasOwnProperty("node")?"Node":ci()?"Worker":"Browser"}function li(){var t=hi();return"ReactNative"===t||"Node"===t}var fi="Firefox",di="Chrome";function pi(t){var e=t.toLowerCase();return it(e,"opera/")||it(e,"opr/")||it(e,"opios/")?"Opera":it(e,"iemobile")?"IEMobile":it(e,"msie")||it(e,"trident/")?"IE":it(e,"edge/")?"Edge":it(e,"firefox/")?fi:it(e,"silk/")?"Silk":it(e,"blackberry")?"Blackberry":it(e,"webos")?"Webos":!it(e,"safari/")||it(e,"chrome/")||it(e,"crios/")||it(e,"android")?!it(e,"chrome/")&&!it(e,"crios/")||it(e,"edge/")?it(e,"android")?"Android":(t=t.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/))&&2==t.length?t[1]:"Other":di:"Safari"}var vi={md:"FirebaseCore-web",od:"FirebaseUI-web"};function mi(t,e){e=e||[];var n,i=[],r={};for(n in vi)r[vi[n]]=!0;for(n=0;n<e.length;n++)void 0!==r[e[n]]&&(delete r[e[n]],i.push(e[n]));return i.sort(),(e=i).length||(e=["FirebaseCore-web"]),"Browser"===(i=hi())?i=pi(r=gi()):"Worker"===i&&(i=pi(r=gi())+"-"+i),i+"/JsCore/"+t+"/"+e.join(",")}function gi(){return l.navigator&&l.navigator.userAgent||""}function bi(t,e){t=t.split("."),e=e||l;for(var n=0;n<t.length&&"object"==typeof e&&null!=e;n++)e=e[t[n]];return e=n!=t.length?void 0:e}function yi(){try{var t=l.localStorage,e=Ni();if(t)return t.setItem(e,"1"),t.removeItem(e),!Zn()||!!l.indexedDB}catch(t){return ci()&&!!l.indexedDB}return!1}function wi(){return(Ii()||"chrome-extension:"===Ti()||si())&&!li()&&yi()&&!ci()}function Ii(){return"http:"===Ti()||"https:"===Ti()}function Ti(){return l.location&&l.location.protocol||null}function Ei(t){return!ei(t=t||gi())&&pi(t)!=fi}function Ai(t){return void 0===t?null:Xn(t)}function ki(t){var e,n={};for(e in t)t.hasOwnProperty(e)&&null!==t[e]&&void 0!==t[e]&&(n[e]=t[e]);return n}function Si(t){if(null!==t)return JSON.parse(t)}function Ni(t){return t||Math.floor(1e9*Math.random()).toString()}function _i(t){return"Safari"!=pi(t=t||gi())&&!t.toLowerCase().match(/iphone|ipad|ipod/)}function Oi(){var t=l.___jsl;if(t&&t.H)for(var e in t.H)if(t.H[e].r=t.H[e].r||[],t.H[e].L=t.H[e].L||[],t.H[e].r=t.H[e].L.concat(),t.CP)for(var n=0;n<t.CP.length;n++)t.CP[n]=null}function Ci(t,e){if(e<t)throw Error("Short delay should be less than long delay!");this.a=t,this.c=e,t=gi(),e=hi(),this.b=ei(t)||"ReactNative"===e}function Ri(){var t=l.document;return!t||void 0===t.visibilityState||"visible"==t.visibilityState}function Di(){var e=l.document,n=null;return Ri()||!e?ye():new fe(function(t){n=function(){Ri()&&(e.removeEventListener("visibilitychange",n,!1),t())},e.addEventListener("visibilitychange",n,!1)}).o(function(t){throw e.removeEventListener("visibilitychange",n,!1),t})}function Pi(t){try{var e=new Date(parseInt(t,10));if(!isNaN(e.getTime())&&!/[^0-9]/.test(t))return e.toUTCString()}catch(t){}return null}function Li(){return bi("fireauth.oauthhelper",l)||bi("fireauth.iframe",l)}Ci.prototype.get=function(){var t=l.navigator;return!t||"boolean"!=typeof t.onLine||!Ii()&&"chrome-extension:"!==Ti()&&void 0===t.connection||t.onLine?this.b?this.c:this.a:Math.min(5e3,this.a)};var xi,Mi={};function ji(t){Mi[t]||(Mi[t]=!0,"undefined"!=typeof console&&"function"==typeof console.warn&&console.warn(t))}try{var Ui={};Object.defineProperty(Ui,"abcd",{configurable:!0,enumerable:!0,value:1}),Object.defineProperty(Ui,"abcd",{configurable:!0,enumerable:!0,value:2}),xi=2==Ui.abcd}catch(t){xi=!1}function Vi(t,e,n){xi?Object.defineProperty(t,e,{configurable:!0,enumerable:!0,value:n}):t[e]=n}function Fi(t,e){if(e)for(var n in e)e.hasOwnProperty(n)&&Vi(t,n,e[n])}function qi(t){var e={};return Fi(e,t),e}function Hi(t){var e=t;if("object"==typeof t&&null!=t)for(var n in e="length"in t?[]:{},t)Vi(e,n,Hi(t[n]));return e}function Ki(t){var e=t&&(t[Ji]?"phone":null);if(!(e&&t&&t[Xi]))throw new T("internal-error","Internal assert: invalid MultiFactorInfo object");Vi(this,"uid",t[Xi]),Vi(this,"displayName",t[Bi]||null);var n=null;Vi(this,"enrollmentTime",n=t[Wi]?new Date(t[Wi]).toUTCString():n),Vi(this,"factorId",e)}function Gi(t){try{var e=new Yi(t)}catch(t){e=null}return e}Ki.prototype.w=function(){return{uid:this.uid,displayName:this.displayName,factorId:this.factorId,enrollmentTime:this.enrollmentTime}};var Bi="displayName",Wi="enrolledAt",Xi="mfaEnrollmentId",Ji="phoneInfo";function Yi(t){Ki.call(this,t),Vi(this,"phoneNumber",t[Ji])}function zi(t){var e={},n=t[tr],i=t[nr],r=t[ir];if(t=Gi(t[er]),!r||r!=Zi&&r!=Qi&&!n||r==Qi&&!i||r==$i&&!t)throw Error("Invalid checkActionCode response!");r==Qi?(e[or]=n||null,e[sr]=n||null,e[rr]=i):(e[or]=i||null,e[sr]=i||null,e[rr]=n||null),e[ar]=t||null,Vi(this,cr,r),Vi(this,ur,Hi(e))}w(Yi,Ki),Yi.prototype.w=function(){var t=Yi.ab.w.call(this);return t.phoneNumber=this.phoneNumber,t};var $i="REVERT_SECOND_FACTOR_ADDITION",Zi="EMAIL_SIGNIN",Qi="VERIFY_AND_CHANGE_EMAIL",tr="email",er="mfaInfo",nr="newEmail",ir="requestType",rr="email",or="fromEmail",ar="multiFactorInfo",sr="previousEmail",ur="data",cr="operation";function hr(t){var e=_n(t=On(t),lr)||null,n=_n(t,fr)||null,i=(i=_n(t,vr)||null)&&gr[i]||null;if(!e||!n||!i)throw new T("argument-error",lr+", "+fr+"and "+vr+" are required in a valid action code URL.");Fi(this,{apiKey:e,operation:i,code:n,continueUrl:_n(t,dr)||null,languageCode:_n(t,pr)||null,tenantId:_n(t,mr)||null})}var lr="apiKey",fr="oobCode",dr="continueUrl",pr="languageCode",vr="mode",mr="tenantId",gr={recoverEmail:"RECOVER_EMAIL",resetPassword:"PASSWORD_RESET",revertSecondFactorAddition:$i,signIn:Zi,verifyAndChangeEmail:Qi,verifyEmail:"VERIFY_EMAIL"};function br(t){try{return new hr(t)}catch(t){return null}}function yr(t){if(void 0===(e=t[Ar]))throw new T("missing-continue-uri");if("string"!=typeof e||"string"==typeof e&&!e.length)throw new T("invalid-continue-uri");if(this.h=e,this.b=this.a=null,this.g=!1,(i=t[wr])&&"object"==typeof i){var e=i[Nr],n=i[kr],i=i[Sr];if("string"==typeof e&&e.length){if(this.a=e,void 0!==n&&"boolean"!=typeof n)throw new T("argument-error",kr+" property must be a boolean when specified.");if(this.g=!!n,void 0!==i&&("string"!=typeof i||"string"==typeof i&&!i.length))throw new T("argument-error",Sr+" property must be a non empty string when specified.");this.b=i||null}else{if(void 0!==e)throw new T("argument-error",Nr+" property must be a non empty string when specified.");if(void 0!==n||void 0!==i)throw new T("missing-android-pkg-name")}}else if(void 0!==i)throw new T("argument-error",wr+" property must be a non null object when specified.");if(this.f=null,(e=t[Er])&&"object"==typeof e){if("string"==typeof(e=e[_r])&&e.length)this.f=e;else if(void 0!==e)throw new T("argument-error",_r+" property must be a non empty string when specified.")}else if(void 0!==e)throw new T("argument-error",Er+" property must be a non null object when specified.");if(void 0!==(e=t[Tr])&&"boolean"!=typeof e)throw new T("argument-error",Tr+" property must be a boolean when specified.");if(this.c=!!e,void 0!==(t=t[Ir])&&("string"!=typeof t||"string"==typeof t&&!t.length))throw new T("argument-error",Ir+" property must be a non empty string when specified.");this.i=t||null}var wr="android",Ir="dynamicLinkDomain",Tr="handleCodeInApp",Er="iOS",Ar="url",kr="installApp",Sr="minimumVersion",Nr="packageName",_r="bundleId";function Or(t){var e,n={};for(e in n.continueUrl=t.h,n.canHandleCodeInApp=t.c,(n.androidPackageName=t.a)&&(n.androidMinimumVersion=t.b,n.androidInstallApp=t.g),n.iOSBundleId=t.f,n.dynamicLinkDomain=t.i,n)null===n[e]&&delete n[e];return n}var Cr=null;function Rr(t){var e=[];return function(i,t){function e(t){for(;r<i.length;){var e=i.charAt(r++),n=Cr[e];if(null!=n)return n;if(!/^[\s\xa0]*$/.test(e))throw Error("Unknown base64 encoding at char: "+e)}return t}!function(){if(!Cr){Cr={};for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),e=["+/=","+/","-_=","-_.","-_"],n=0;n<5;n++)for(var i=t.concat(e[n].split("")),r=0;r<i.length;r++){var o=i[r];void 0===Cr[o]&&(Cr[o]=r)}}}();for(var r=0;;){var n=e(-1),o=e(0),a=e(64),s=e(64);if(64===s&&-1===n)break;t(n<<2|o>>4),64!=a&&(t(o<<4&240|a>>2),64!=s&&t(a<<6&192|s))}}(t,function(t){e.push(t)}),e}function Dr(t){var e=Lr(t);if(!(e&&e.sub&&e.iss&&e.aud&&e.exp))throw Error("Invalid JWT");this.h=t,this.a=e.exp,this.i=e.sub,t=Date.now()/1e3,this.g=e.iat||(t>this.a?this.a:t),this.b=e.provider_id||e.firebase&&e.firebase.sign_in_provider||null,this.f=e.firebase&&e.firebase.tenant||null,this.c=!!e.is_anonymous||"anonymous"==this.b}function Pr(t){try{return new Dr(t)}catch(t){return null}}function Lr(t){if(!t)return null;if(3!=(t=t.split(".")).length)return null;for(var e=(4-(t=t[1]).length%4)%4,n=0;n<e;n++)t+=".";try{var i=Rr(t);for(t=[],n=e=0;e<i.length;){var r,o,a,s=i[e++];s<128?t[n++]=String.fromCharCode(s):191<s&&s<224?(r=i[e++],t[n++]=String.fromCharCode((31&s)<<6|63&r)):239<s&&s<365?(a=((7&s)<<18|(63&(r=i[e++]))<<12|(63&(o=i[e++]))<<6|63&i[e++])-65536,t[n++]=String.fromCharCode(55296+(a>>10)),t[n++]=String.fromCharCode(56320+(1023&a))):(r=i[e++],o=i[e++],t[n++]=String.fromCharCode((15&s)<<12|(63&r)<<6|63&o))}return JSON.parse(t.join(""))}catch(t){}return null}Dr.prototype.T=function(){return this.f},Dr.prototype.l=function(){return this.c},Dr.prototype.toString=function(){return this.h};var xr="oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),Mr=["client_id","response_type","scope","redirect_uri","state"],jr={nd:{Ja:"locale",ua:700,ta:600,fa:"facebook.com",Xa:Mr},pd:{Ja:null,ua:500,ta:750,fa:"github.com",Xa:Mr},qd:{Ja:"hl",ua:515,ta:680,fa:"google.com",Xa:Mr},wd:{Ja:"lang",ua:485,ta:705,fa:"twitter.com",Xa:xr},kd:{Ja:"locale",ua:640,ta:600,fa:"apple.com",Xa:[]}};function Ur(t){for(var e in jr)if(jr[e].fa==t)return jr[e];return null}function Vr(t){var e={};e["facebook.com"]=Gr,e["google.com"]=Wr,e["github.com"]=Br,e["twitter.com"]=Xr;var n=t&&t[qr];try{if(n)return new(e[n]||Kr)(t);if(void 0!==t[Fr])return new Hr(t)}catch(t){}return null}var Fr="idToken",qr="providerId";function Hr(t){var e,n=t[qr];if(n||!t[Fr]||(e=Pr(t[Fr]))&&e.b&&(n=e.b),!n)throw Error("Invalid additional user info!");"anonymous"!=n&&"custom"!=n||(n=null),e=!1,void 0!==t.isNewUser?e=!!t.isNewUser:"identitytoolkit#SignupNewUserResponse"===t.kind&&(e=!0),Vi(this,"providerId",n),Vi(this,"isNewUser",e)}function Kr(t){Hr.call(this,t),Vi(this,"profile",Hi((t=Si(t.rawUserInfo||"{}"))||{}))}function Gr(t){if(Kr.call(this,t),"facebook.com"!=this.providerId)throw Error("Invalid provider ID!")}function Br(t){if(Kr.call(this,t),"github.com"!=this.providerId)throw Error("Invalid provider ID!");Vi(this,"username",this.profile&&this.profile.login||null)}function Wr(t){if(Kr.call(this,t),"google.com"!=this.providerId)throw Error("Invalid provider ID!")}function Xr(t){if(Kr.call(this,t),"twitter.com"!=this.providerId)throw Error("Invalid provider ID!");Vi(this,"username",t.screenName||null)}function Jr(t){var e=_n(i=On(t),"link"),n=_n(On(e),"link"),i=_n(i,"deep_link_id");return _n(On(i),"link")||i||n||e||t}function Yr(t,e){if(!t&&!e)throw new T("internal-error","Internal assert: no raw session string available");if(t&&e)throw new T("internal-error","Internal assert: unable to determine the session type");this.a=t||null,this.b=e||null,this.type=this.a?zr:$r}w(Kr,Hr),w(Gr,Kr),w(Br,Kr),w(Wr,Kr),w(Xr,Kr);var zr="enroll",$r="signin";function Zr(){}function Qr(t,n){return t.then(function(t){if(t[Ha]){var e=Pr(t[Ha]);if(!e||n!=e.i)throw new T("user-mismatch");return t}throw new T("user-mismatch")}).o(function(t){throw t&&t.code&&t.code==k+"user-not-found"?new T("user-mismatch"):t})}function to(t,e){if(!e)throw new T("internal-error","failed to construct a credential");this.a=e,Vi(this,"providerId",t),Vi(this,"signInMethod",t)}function eo(t){return{pendingToken:t.a,requestUri:"http://localhost"}}function no(t){if(t&&t.providerId&&t.signInMethod&&0==t.providerId.indexOf("saml.")&&t.pendingToken)try{return new to(t.providerId,t.pendingToken)}catch(t){}return null}function io(t,e,n){if(this.a=null,e.idToken||e.accessToken)e.idToken&&Vi(this,"idToken",e.idToken),e.accessToken&&Vi(this,"accessToken",e.accessToken),e.nonce&&!e.pendingToken&&Vi(this,"nonce",e.nonce),e.pendingToken&&(this.a=e.pendingToken);else{if(!e.oauthToken||!e.oauthTokenSecret)throw new T("internal-error","failed to construct a credential");Vi(this,"accessToken",e.oauthToken),Vi(this,"secret",e.oauthTokenSecret)}Vi(this,"providerId",t),Vi(this,"signInMethod",n)}function ro(t){var e={};return t.idToken&&(e.id_token=t.idToken),t.accessToken&&(e.access_token=t.accessToken),t.secret&&(e.oauth_token_secret=t.secret),e.providerId=t.providerId,t.nonce&&!t.a&&(e.nonce=t.nonce),e={postBody:qn(e).toString(),requestUri:"http://localhost"},t.a&&(delete e.postBody,e.pendingToken=t.a),e}function oo(t){if(t&&t.providerId&&t.signInMethod){var e={idToken:t.oauthIdToken,accessToken:t.oauthTokenSecret?null:t.oauthAccessToken,oauthTokenSecret:t.oauthTokenSecret,oauthToken:t.oauthTokenSecret&&t.oauthAccessToken,nonce:t.nonce,pendingToken:t.pendingToken};try{return new io(t.providerId,e,t.signInMethod)}catch(t){}}return null}function ao(t,e){this.Qc=e||[],Fi(this,{providerId:t,isOAuthProvider:!0}),this.Ib={},this.pb=(Ur(t)||{}).Ja||null,this.ob=null}function so(t){if("string"!=typeof t||0!=t.indexOf("saml."))throw new T("argument-error",'SAML provider IDs must be prefixed with "saml."');ao.call(this,t,[])}function uo(t){ao.call(this,t,Mr),this.a=[]}function co(){uo.call(this,"facebook.com")}function ho(t){if(!t)throw new T("argument-error","credential failed: expected 1 argument (the OAuth access token).");var e=t;return m(t)&&(e=t.accessToken),(new co).credential({accessToken:e})}function lo(){uo.call(this,"github.com")}function fo(t){if(!t)throw new T("argument-error","credential failed: expected 1 argument (the OAuth access token).");var e=t;return m(t)&&(e=t.accessToken),(new lo).credential({accessToken:e})}function po(){uo.call(this,"google.com"),this.Ca("profile")}function vo(t,e){var n=t;return m(t)&&(n=t.idToken,e=t.accessToken),(new po).credential({idToken:n,accessToken:e})}function mo(){ao.call(this,"twitter.com",xr)}function go(t,e){var n=t;if(!(n=!m(n)?{oauthToken:t,oauthTokenSecret:e}:n).oauthToken||!n.oauthTokenSecret)throw new T("argument-error","credential failed: expected 2 arguments (the OAuth access token and secret).");return new io("twitter.com",n,"twitter.com")}function bo(t,e,n){this.a=t,this.f=e,Vi(this,"providerId","password"),Vi(this,"signInMethod",n===wo.EMAIL_LINK_SIGN_IN_METHOD?wo.EMAIL_LINK_SIGN_IN_METHOD:wo.EMAIL_PASSWORD_SIGN_IN_METHOD)}function yo(t){return t&&t.email&&t.password?new bo(t.email,t.password,t.signInMethod):null}function wo(){Fi(this,{providerId:"password",isOAuthProvider:!1})}function Io(t,e){if(!(e=To(e)))throw new T("argument-error","Invalid email link!");return new bo(t,e.code,wo.EMAIL_LINK_SIGN_IN_METHOD)}function To(t){return(t=br(t=Jr(t)))&&t.operation===Zi?t:null}function Eo(t){if(!(t.eb&&t.cb||t.La&&t.ea))throw new T("internal-error");this.a=t,Vi(this,"providerId","phone"),this.fa="phone",Vi(this,"signInMethod","phone")}function Ao(e){if(e&&"phone"===e.providerId&&(e.verificationId&&e.verificationCode||e.temporaryProof&&e.phoneNumber)){var n={};return V(["verificationId","verificationCode","temporaryProof","phoneNumber"],function(t){e[t]&&(n[t]=e[t])}),new Eo(n)}return null}function ko(t){return t.a.La&&t.a.ea?{temporaryProof:t.a.La,phoneNumber:t.a.ea}:{sessionInfo:t.a.eb,code:t.a.cb}}function So(t){try{this.a=t||zl.default.auth()}catch(t){throw new T("argument-error","Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().")}Fi(this,{providerId:"phone",isOAuthProvider:!1})}function No(t,e){if(!t)throw new T("missing-verification-id");if(!e)throw new T("missing-verification-code");return new Eo({eb:t,cb:e})}function _o(t){if(t.temporaryProof&&t.phoneNumber)return new Eo({La:t.temporaryProof,ea:t.phoneNumber});var e=t&&t.providerId;if(!e||"password"===e)return null;var n=t&&t.oauthAccessToken,i=t&&t.oauthTokenSecret,r=t&&t.nonce,o=t&&t.oauthIdToken,a=t&&t.pendingToken;try{switch(e){case"google.com":return vo(o,n);case"facebook.com":return ho(n);case"github.com":return fo(n);case"twitter.com":return go(n,i);default:return n||i||o||a?a?0==e.indexOf("saml.")?new to(e,a):new io(e,{pendingToken:a,idToken:t.oauthIdToken,accessToken:t.oauthAccessToken},e):new uo(e).credential({idToken:o,accessToken:n,rawNonce:r}):null}}catch(t){return null}}function Oo(t){if(!t.isOAuthProvider)throw new T("invalid-oauth-provider")}function Co(t,e,n,i,r,o,a){if(this.c=t,this.b=e||null,this.g=n||null,this.f=i||null,this.i=o||null,this.h=a||null,this.a=r||null,!this.g&&!this.a)throw new T("invalid-auth-event");if(this.g&&this.a)throw new T("invalid-auth-event");if(this.g&&!this.f)throw new T("invalid-auth-event")}function Ro(t){return(t=t||{}).type?new Co(t.type,t.eventId,t.urlResponse,t.sessionId,t.error&&E(t.error),t.postBody,t.tenantId):null}function Do(){this.b=null,this.a=[]}Yr.prototype.Ha=function(){return this.a?ye(this.a):ye(this.b)},Yr.prototype.w=function(){return this.type==zr?{multiFactorSession:{idToken:this.a}}:{multiFactorSession:{pendingCredential:this.b}}},Zr.prototype.ka=function(){},Zr.prototype.b=function(){},Zr.prototype.c=function(){},Zr.prototype.w=function(){},to.prototype.ka=function(t){return hs(t,eo(this))},to.prototype.b=function(t,e){var n=eo(this);return n.idToken=e,ls(t,n)},to.prototype.c=function(t,e){return Qr(fs(t,eo(this)),e)},to.prototype.w=function(){return{providerId:this.providerId,signInMethod:this.signInMethod,pendingToken:this.a}},io.prototype.ka=function(t){return hs(t,ro(this))},io.prototype.b=function(t,e){var n=ro(this);return n.idToken=e,ls(t,n)},io.prototype.c=function(t,e){return Qr(fs(t,ro(this)),e)},io.prototype.w=function(){var t={providerId:this.providerId,signInMethod:this.signInMethod};return this.idToken&&(t.oauthIdToken=this.idToken),this.accessToken&&(t.oauthAccessToken=this.accessToken),this.secret&&(t.oauthTokenSecret=this.secret),this.nonce&&(t.nonce=this.nonce),this.a&&(t.pendingToken=this.a),t},ao.prototype.Ka=function(t){return this.Ib=ct(t),this},w(so,ao),w(uo,ao),uo.prototype.Ca=function(t){return K(this.a,t)||this.a.push(t),this},uo.prototype.Qb=function(){return X(this.a)},uo.prototype.credential=function(t,e){e=m(t)?{idToken:t.idToken||null,accessToken:t.accessToken||null,nonce:t.rawNonce||null}:{idToken:t||null,accessToken:e||null};if(!e.idToken&&!e.accessToken)throw new T("argument-error","credential failed: must provide the ID token and/or the access token.");return new io(this.providerId,e,this.providerId)},w(co,uo),Vi(co,"PROVIDER_ID","facebook.com"),Vi(co,"FACEBOOK_SIGN_IN_METHOD","facebook.com"),w(lo,uo),Vi(lo,"PROVIDER_ID","github.com"),Vi(lo,"GITHUB_SIGN_IN_METHOD","github.com"),w(po,uo),Vi(po,"PROVIDER_ID","google.com"),Vi(po,"GOOGLE_SIGN_IN_METHOD","google.com"),w(mo,ao),Vi(mo,"PROVIDER_ID","twitter.com"),Vi(mo,"TWITTER_SIGN_IN_METHOD","twitter.com"),bo.prototype.ka=function(t){return this.signInMethod==wo.EMAIL_LINK_SIGN_IN_METHOD?Xs(t,ws,{email:this.a,oobCode:this.f}):Xs(t,Hs,{email:this.a,password:this.f})},bo.prototype.b=function(t,e){return this.signInMethod==wo.EMAIL_LINK_SIGN_IN_METHOD?Xs(t,Is,{idToken:e,email:this.a,oobCode:this.f}):Xs(t,Ls,{idToken:e,email:this.a,password:this.f})},bo.prototype.c=function(t,e){return Qr(this.ka(t),e)},bo.prototype.w=function(){return{email:this.a,password:this.f,signInMethod:this.signInMethod}},Fi(wo,{PROVIDER_ID:"password"}),Fi(wo,{EMAIL_LINK_SIGN_IN_METHOD:"emailLink"}),Fi(wo,{EMAIL_PASSWORD_SIGN_IN_METHOD:"password"}),Eo.prototype.ka=function(t){return t.fb(ko(this))},Eo.prototype.b=function(t,e){var n=ko(this);return n.idToken=e,Xs(t,Gs,n)},Eo.prototype.c=function(t,e){var n=ko(this);return n.operation="REAUTH",Qr(t=Xs(t,Bs,n),e)},Eo.prototype.w=function(){var t={providerId:"phone"};return this.a.eb&&(t.verificationId=this.a.eb),this.a.cb&&(t.verificationCode=this.a.cb),this.a.La&&(t.temporaryProof=this.a.La),this.a.ea&&(t.phoneNumber=this.a.ea),t},So.prototype.fb=function(i,r){var o=this.a.a;return ye(r.verify()).then(function(n){if("string"!=typeof n)throw new T("argument-error","An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");if("recaptcha"!==r.type)throw new T("argument-error",'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.');var t=m(i)?i.session:null,e=m(i)?i.phoneNumber:i,t=t&&t.type==zr?t.Ha().then(function(t){return Xs(o,Ms,{idToken:t,phoneEnrollmentInfo:{phoneNumber:e,recaptchaToken:n}}).then(function(t){return t.phoneSessionInfo.sessionInfo})}):t&&t.type==$r?t.Ha().then(function(t){return e=o,t={mfaPendingCredential:t,mfaEnrollmentId:i.multiFactorHint&&i.multiFactorHint.uid||i.multiFactorUid,phoneSignInInfo:{recaptchaToken:n}},Xs(e,js,t).then(function(t){return t.phoneResponseInfo.sessionInfo});var e}):Xs(o,Ds,{phoneNumber:e,recaptchaToken:n});return t.then(function(t){return"function"==typeof r.reset&&r.reset(),t},function(t){throw"function"==typeof r.reset&&r.reset(),t})})},Fi(So,{PROVIDER_ID:"phone"}),Fi(So,{PHONE_SIGN_IN_METHOD:"phone"}),Co.prototype.getUid=function(){var t=[];return t.push(this.c),this.b&&t.push(this.b),this.f&&t.push(this.f),this.h&&t.push(this.h),t.join("-")},Co.prototype.T=function(){return this.h},Co.prototype.w=function(){return{type:this.c,eventId:this.b,urlResponse:this.g,sessionId:this.f,postBody:this.i,tenantId:this.h,error:this.a&&this.a.w()}};var Po,Lo=null;function xo(t){var e="unauthorized-domain",n=void 0,i=On(t);t=i.a,"chrome-extension"==(i=i.c)?n=jt("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",t):"http"==i||"https"==i?n=jt("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.",t):e="operation-not-supported-in-this-environment",T.call(this,e,n)}function Mo(t,e,n){T.call(this,t,n),(t=e||{}).Jb&&Vi(this,"email",t.Jb),t.ea&&Vi(this,"phoneNumber",t.ea),t.credential&&Vi(this,"credential",t.credential),t.Zb&&Vi(this,"tenantId",t.Zb)}function jo(t){if(t.code){var e=t.code||"";0==e.indexOf(k)&&(e=e.substring(k.length));var n={credential:_o(t),Zb:t.tenantId};if(t.email)n.Jb=t.email;else if(t.phoneNumber)n.ea=t.phoneNumber;else if(!n.credential)return new T(e,t.message||void 0);return new Mo(e,n,t.message)}return null}function Uo(){}function Vo(t){return t.c||(t.c=t.b())}function Fo(){}function qo(t){if(t.f||"undefined"!=typeof XMLHttpRequest||"undefined"==typeof ActiveXObject)return t.f;for(var e=["MSXML2.XMLHTTP.6.0","MSXML2.XMLHTTP.3.0","MSXML2.XMLHTTP","Microsoft.XMLHTTP"],n=0;n<e.length;n++){var i=e[n];try{return new ActiveXObject(i),t.f=i}catch(t){}}throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed")}function Ho(){}function Ko(){this.a=new XDomainRequest,this.readyState=0,this.onreadystatechange=null,this.responseType=this.responseText=this.response="",this.status=-1,this.statusText="",this.a.onload=b(this.qc,this),this.a.onerror=b(this.Sb,this),this.a.onprogress=b(this.rc,this),this.a.ontimeout=b(this.vc,this)}function Go(t,e){t.readyState=e,t.onreadystatechange&&t.onreadystatechange()}function Bo(t,e,n){this.reset(t,e,n,void 0,void 0)}function Wo(t){this.f=t,this.b=this.c=this.a=null}function Xo(t,e){this.name=t,this.value=e}w(xo,T),w(Mo,T),Mo.prototype.w=function(){var t={code:this.code,message:this.message};this.email&&(t.email=this.email),this.phoneNumber&&(t.phoneNumber=this.phoneNumber),this.tenantId&&(t.tenantId=this.tenantId);var e=this.credential&&this.credential.w();return e&&lt(t,e),t},Mo.prototype.toJSON=function(){return this.w()},Uo.prototype.c=null,w(Fo,Uo),Fo.prototype.a=function(){var t=qo(this);return t?new ActiveXObject(t):new XMLHttpRequest},Fo.prototype.b=function(){var t={};return qo(this)&&(t[0]=!0,t[1]=!0),t},Po=new Fo,w(Ho,Uo),Ho.prototype.a=function(){var t=new XMLHttpRequest;if("withCredentials"in t)return t;if("undefined"!=typeof XDomainRequest)return new Ko;throw Error("Unsupported browser")},Ho.prototype.b=function(){return{}},(t=Ko.prototype).open=function(t,e,n){if(null!=n&&!n)throw Error("Only async requests are supported.");this.a.open(t,e)},t.send=function(t){if(t){if("string"!=typeof t)throw Error("Only string data is supported");this.a.send(t)}else this.a.send()},t.abort=function(){this.a.abort()},t.setRequestHeader=function(){},t.getResponseHeader=function(t){return"content-type"==t.toLowerCase()?this.a.contentType:""},t.qc=function(){this.status=200,this.response=this.responseText=this.a.responseText,Go(this,4)},t.Sb=function(){this.status=500,this.response=this.responseText="",Go(this,4)},t.vc=function(){this.Sb()},t.rc=function(){this.status=200,Go(this,1)},t.getAllResponseHeaders=function(){return"content-type: "+this.a.contentType},Bo.prototype.a=null,Bo.prototype.reset=function(t,e,n,i,r){delete this.a},Xo.prototype.toString=function(){return this.name};var Jo=new Xo("SEVERE",1e3),Yo=new Xo("WARNING",900),zo=new Xo("CONFIG",700),$o=new Xo("FINE",500);Wo.prototype.log=function(t,e,n){if(t.value>=function t(e){return e.c||(e.a?t(e.a):(D("Root logger has no level set."),null))}(this).value)for(v(e)&&(e=e()),t=new Bo(t,String(e),this.f),n&&(t.a=n),n=this;n;)n=n.a};var Zo,Qo={},ta=null;function ea(t){var e,n,i;return ta||(ta=new Wo(""),(Qo[""]=ta).c=zo),(e=Qo[t])||(e=new Wo(t),i=t.lastIndexOf("."),n=t.substr(i+1),(i=ea(t.substr(0,i))).b||(i.b={}),(i.b[n]=e).a=i,Qo[t]=e),e}function na(t,e){t&&t.log($o,e,void 0)}function ia(t){this.f=t}function ra(t){ln.call(this),this.u=t,this.h=void 0,this.readyState=oa,this.status=0,this.responseType=this.responseText=this.response=this.statusText="",this.onreadystatechange=null,this.l=new Headers,this.b=null,this.s="GET",this.f="",this.a=!1,this.i=ea("goog.net.FetchXmlHttp"),this.m=this.c=this.g=null}w(ia,Uo),ia.prototype.a=function(){return new ra(this.f)},ia.prototype.b=(Zo={},function(){return Zo}),w(ra,ln);var oa=0;function aa(t){t.c.read().then(t.pc.bind(t)).catch(t.Ua.bind(t))}function sa(t){t.readyState=4,t.g=null,t.c=null,t.m=null,ua(t)}function ua(t){t.onreadystatechange&&t.onreadystatechange.call(t)}function ca(t){ln.call(this),this.headers=new yn,this.D=t||null,this.c=!1,this.C=this.a=null,this.h=this.R=this.l="",this.f=this.O=this.i=this.J=!1,this.g=0,this.s=null,this.m=ha,this.u=this.S=!1}(t=ra.prototype).open=function(t,e){if(this.readyState!=oa)throw this.abort(),Error("Error reopening a connection");this.s=t,this.f=e,this.readyState=1,ua(this)},t.send=function(t){if(1!=this.readyState)throw this.abort(),Error("need to call open() first. ");this.a=!0;var e={headers:this.l,method:this.s,credentials:this.h,cache:void 0};t&&(e.body=t),this.u.fetch(new Request(this.f,e)).then(this.uc.bind(this),this.Ua.bind(this))},t.abort=function(){this.response=this.responseText="",this.l=new Headers,this.status=0,this.c&&this.c.cancel("Request was aborted."),1<=this.readyState&&this.a&&4!=this.readyState&&(this.a=!1,sa(this)),this.readyState=oa},t.uc=function(t){this.a&&(this.g=t,this.b||(this.status=this.g.status,this.statusText=this.g.statusText,this.b=t.headers,this.readyState=2,ua(this)),this.a&&(this.readyState=3,ua(this),this.a&&("arraybuffer"===this.responseType?t.arrayBuffer().then(this.sc.bind(this),this.Ua.bind(this)):void 0!==l.ReadableStream&&"body"in t?(this.response=this.responseText="",this.c=t.body.getReader(),this.m=new TextDecoder,aa(this)):t.text().then(this.tc.bind(this),this.Ua.bind(this)))))},t.pc=function(t){var e;this.a&&((e=this.m.decode(t.value||new Uint8Array(0),{stream:!t.done}))&&(this.response=this.responseText+=e),(t.done?sa:ua)(this),3==this.readyState&&aa(this))},t.tc=function(t){this.a&&(this.response=this.responseText=t,sa(this))},t.sc=function(t){this.a&&(this.response=t,sa(this))},t.Ua=function(t){var e=this.i;e&&e.log(Yo,"Failed to fetch url "+this.f,t instanceof Error?t:Error(t)),this.a&&sa(this)},t.setRequestHeader=function(t,e){this.l.append(t,e)},t.getResponseHeader=function(t){return this.b?this.b.get(t.toLowerCase())||"":((t=this.i)&&t.log(Yo,"Attempting to get response header but no headers have been received for url: "+this.f,void 0),"")},t.getAllResponseHeaders=function(){if(!this.b){var t=this.i;return t&&t.log(Yo,"Attempting to get all response headers but no headers have been received for url: "+this.f,void 0),""}for(var t=[],e=this.b.entries(),n=e.next();!n.done;)n=n.value,t.push(n[0]+": "+n[1]),n=e.next();return t.join("\r\n")},Object.defineProperty(ra.prototype,"withCredentials",{get:function(){return"include"===this.h},set:function(t){this.h=t?"include":"same-origin"}}),w(ca,ln);var ha="";ca.prototype.b=ea("goog.net.XhrIo");var la=/^https?$/i,fa=["POST","PUT"];function da(e,t,n,i,r){if(e.a)throw Error("[goog.net.XhrIo] Object is active with another request="+e.l+"; newUri="+t);n=n?n.toUpperCase():"GET",e.l=t,e.h="",e.R=n,e.J=!1,e.c=!0,e.a=(e.D||Po).a(),e.C=e.D?Vo(e.D):Vo(Po),e.a.onreadystatechange=b(e.Vb,e);try{na(e.b,Ta(e,"Opening Xhr")),e.O=!0,e.a.open(n,String(t),!0),e.O=!1}catch(t){return na(e.b,Ta(e,"Error opening Xhr: "+t.message)),void va(e,t)}t=i||"";var o,a=new yn(e.headers);r&&function(t,e){if(t.forEach&&"function"==typeof t.forEach)t.forEach(e,void 0);else if(p(t)||"string"==typeof t)V(t,e,void 0);else for(var n=bn(t),i=gn(t),r=i.length,o=0;o<r;o++)e.call(void 0,i[o],n&&n[o],t)}(r,function(t,e){a.set(e,t)}),r=function(t){t:{for(var e=pa,n=t.length,i="string"==typeof t?t.split(""):t,r=0;r<n;r++)if(r in i&&e.call(void 0,i[r],r,t)){e=r;break t}e=-1}return e<0?null:"string"==typeof t?t.charAt(e):t[e]}(a.Y()),i=l.FormData&&t instanceof l.FormData,!K(fa,n)||r||i||a.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8"),a.forEach(function(t,e){this.a.setRequestHeader(e,t)},e),e.m&&(e.a.responseType=e.m),"withCredentials"in e.a&&e.a.withCredentials!==e.S&&(e.a.withCredentials=e.S);try{ya(e),0<e.g&&(e.u=(o=e.a,Ht&&$t(9)&&"number"==typeof o.timeout&&void 0!==o.ontimeout),na(e.b,Ta(e,"Will abort after "+e.g+"ms if incomplete, xhr2 "+e.u)),e.u?(e.a.timeout=e.g,e.a.ontimeout=b(e.Ma,e)):e.s=vn(e.Ma,e.g,e)),na(e.b,Ta(e,"Sending request")),e.i=!0,e.a.send(t),e.i=!1}catch(t){na(e.b,Ta(e,"Send error: "+t.message)),va(e,t)}}function pa(t){return"content-type"==t.toLowerCase()}function va(t,e){t.c=!1,t.a&&(t.f=!0,t.a.abort(),t.f=!1),t.h=e,ma(t),ba(t)}function ma(t){t.J||(t.J=!0,t.dispatchEvent("complete"),t.dispatchEvent("error"))}function ga(e){if(e.c&&void 0!==h)if(e.C[1]&&4==wa(e)&&2==Ia(e))na(e.b,Ta(e,"Local request error detected and ignored"));else if(e.i&&4==wa(e))vn(e.Vb,0,e);else if(e.dispatchEvent("readystatechange"),4==wa(e)){na(e.b,Ta(e,"Request complete")),e.c=!1;try{var t,n,i,r,o=Ia(e);t:switch(o){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var a=!0;break t;default:a=!1}if((t=a)||((n=0===o)&&(!(r=String(e.l).match(Tn)[1]||null)&&l.self&&l.self.location&&(r=(i=l.self.location.protocol).substr(0,i.length-1)),n=!la.test(r?r.toLowerCase():"")),t=n),t)e.dispatchEvent("complete"),e.dispatchEvent("success");else{try{var s=2<wa(e)?e.a.statusText:""}catch(t){na(e.b,"Can not get status: "+t.message),s=""}e.h=s+" ["+Ia(e)+"]",ma(e)}}finally{ba(e)}}}function ba(e,t){if(e.a){ya(e);var n=e.a,i=e.C[0]?a:null;e.a=null,e.C=null,t||e.dispatchEvent("ready");try{n.onreadystatechange=i}catch(t){(e=e.b)&&e.log(Jo,"Problem encountered resetting onreadystatechange: "+t.message,void 0)}}}function ya(t){t.a&&t.u&&(t.a.ontimeout=null),t.s&&(l.clearTimeout(t.s),t.s=null)}function wa(t){return t.a?t.a.readyState:0}function Ia(t){try{return 2<wa(t)?t.a.status:-1}catch(t){return-1}}function Ta(t,e){return e+" ["+t.R+" "+t.l+" "+Ia(t)+"]"}function Ea(t){var e=La;this.g=[],this.u=e,this.s=t||null,this.f=this.a=!1,this.c=void 0,this.v=this.C=this.i=!1,this.h=0,this.b=null,this.l=0}function Aa(t,e,n){t.a=!0,t.c=n,t.f=!e,_a(t)}function ka(t){if(t.a){if(!t.v)throw new Oa;t.v=!1}}function Sa(t,e,n,i){t.g.push([e,n,i]),t.a&&_a(t)}function Na(t){return H(t.g,function(t){return v(t[1])})}function _a(e){var n;e.h&&e.a&&Na(e)&&(i=e.h,(n=Da[i])&&(l.clearTimeout(n.a),delete Da[i]),e.h=0),e.b&&(e.b.l--,delete e.b);for(var i=e.c,t=n=!1;e.g.length&&!e.i;){var r=(a=e.g.shift())[0],o=a[1],a=a[2];if(r=e.f?o:r)try{var s=r.call(a||e.s,i);void 0!==s&&(e.f=e.f&&(s==i||s instanceof Error),e.c=i=s),(O(i)||"function"==typeof l.Promise&&i instanceof l.Promise)&&(t=!0,e.i=!0)}catch(t){i=t,e.f=!0,Na(e)||(n=!0)}}e.c=i,t&&(s=b(e.m,e,!0),t=b(e.m,e,!1),i instanceof Ea?(Sa(i,s,t),i.C=!0):i.then(s,t)),n&&(i=new Ra(i),Da[i.a]=i,e.h=i.a)}function Oa(){C.call(this)}function Ca(){C.call(this)}function Ra(t){this.a=l.setTimeout(b(this.c,this),0),this.b=t}(t=ca.prototype).Ma=function(){void 0!==h&&this.a&&(this.h="Timed out after "+this.g+"ms, aborting",na(this.b,Ta(this,this.h)),this.dispatchEvent("timeout"),this.abort(8))},t.abort=function(){this.a&&this.c&&(na(this.b,Ta(this,"Aborting")),this.c=!1,this.f=!0,this.a.abort(),this.f=!1,this.dispatchEvent("complete"),this.dispatchEvent("abort"),ba(this))},t.Da=function(){this.a&&(this.c&&(this.c=!1,this.f=!0,this.a.abort(),this.f=!1),ba(this,!0)),ca.ab.Da.call(this)},t.Vb=function(){this.xa||(this.O||this.i||this.f?ga(this):this.Jc())},t.Jc=function(){ga(this)},t.getResponse=function(){try{if(!this.a)return null;if("response"in this.a)return this.a.response;switch(this.m){case ha:case"text":return this.a.responseText;case"arraybuffer":if("mozResponseArrayBuffer"in this.a)return this.a.mozResponseArrayBuffer}var t=this.b;return t&&t.log(Jo,"Response type "+this.m+" is not supported on this browser",void 0),null}catch(t){return na(this.b,"Can not get response: "+t.message),null}},Ea.prototype.cancel=function(t){var e;this.a?this.c instanceof Ea&&this.c.cancel():(this.b&&(e=this.b,delete this.b,t?e.cancel(t):(e.l--,e.l<=0&&e.cancel())),this.u?this.u.call(this.s,this):this.v=!0,this.a||(t=new Ca,ka(this),Aa(this,!1,t)))},Ea.prototype.m=function(t,e){this.i=!1,Aa(this,t,e)},Ea.prototype.then=function(t,e,n){var i,r,o=new fe(function(t,e){i=t,r=e});return Sa(this,i,function(t){t instanceof Ca?o.cancel():r(t)}),o.then(t,e,n)},Ea.prototype.$goog_Thenable=!0,w(Oa,C),Oa.prototype.message="Deferred has already fired",Oa.prototype.name="AlreadyCalledError",w(Ca,C),Ca.prototype.message="Deferred was canceled",Ca.prototype.name="CanceledError",Ra.prototype.c=function(){throw delete Da[this.a],this.b};var Da={};function Pa(t){var e=document,n=wt(t).toString(),i=ae(document,"SCRIPT"),r={Wb:i,Ma:void 0},o=new Ea(r),a=window.setTimeout(function(){xa(i,!0);var t=new Ua(ja,"Timeout reached for loading script "+n);ka(o),Aa(o,!1,t)},5e3);return r.Ma=a,i.onload=i.onreadystatechange=function(){i.readyState&&"loaded"!=i.readyState&&"complete"!=i.readyState||(xa(i,!1,a),ka(o),Aa(o,!0,null))},i.onerror=function(){xa(i,!0,a);var t=new Ua(Ma,"Error while loading script "+n);ka(o),Aa(o,!1,t)},lt(r={},{type:"text/javascript",charset:"UTF-8"}),ee(i,r),r=t,ft(t=i,"HTMLScriptElement"),t.src=wt(r),(r=(r=t.ownerDocument&&t.ownerDocument.defaultView)&&r!=l?f(r.document):s=null===s?f(l.document):s)&&t.setAttribute("nonce",r),((e=((r=e)||document).getElementsByTagName("HEAD"))&&0!=e.length?e[0]:r.documentElement).appendChild(i),o}function La(){var t;this&&this.Wb&&((t=this.Wb)&&"SCRIPT"==t.tagName&&xa(t,!0,this.Ma))}function xa(t,e,n){null!=n&&l.clearTimeout(n),t.onload=a,t.onerror=a,t.onreadystatechange=a,e&&window.setTimeout(function(){t&&t.parentNode&&t.parentNode.removeChild(t)},0)}var Ma=0,ja=1;function Ua(t,e){var n="Jsloader error (code #"+t+")";e&&(n+=": "+e),C.call(this,n),this.code=t}function Va(t){this.f=t}function Fa(t,e,n){if(this.c=t,t=e||{},this.l=t.secureTokenEndpoint||"https://securetoken.googleapis.com/v1/token",this.m=t.secureTokenTimeout||Ka,this.g=ct(t.secureTokenHeaders||Ga),this.h=t.firebaseEndpoint||"https://www.googleapis.com/identitytoolkit/v3/relyingparty/",this.i=t.identityPlatformEndpoint||"https://identitytoolkit.googleapis.com/v2/",this.v=t.firebaseTimeout||Ba,this.a=ct(t.firebaseHeaders||Wa),n&&(this.a["X-Client-Version"]=n,this.g["X-Client-Version"]=n),n="Node"==hi(),!(n=l.XMLHttpRequest||n&&zl.default.INTERNAL.node&&zl.default.INTERNAL.node.XMLHttpRequest)&&!ci())throw new T("internal-error","The XMLHttpRequest compatibility library was not found.");this.f=void 0,ci()?this.f=new ia(self):li()?this.f=new Va(n):this.f=new Ho,this.b=null}w(Ua,C),w(Va,Uo),Va.prototype.a=function(){return new this.f},Va.prototype.b=function(){return{}};var qa,Ha="idToken",Ka=new Ci(3e4,6e4),Ga={"Content-Type":"application/x-www-form-urlencoded"},Ba=new Ci(3e4,6e4),Wa={"Content-Type":"application/json"};function Xa(t,e){e?t.a["X-Firebase-Locale"]=e:delete t.a["X-Firebase-Locale"]}function Ja(t,e){e&&(t.l=Ya("https://securetoken.googleapis.com/v1/token",e),t.h=Ya("https://www.googleapis.com/identitytoolkit/v3/relyingparty/",e),t.i=Ya("https://identitytoolkit.googleapis.com/v2/",e))}function Ya(t,e){return t=On(t),e=On(e.url),t.f=t.a+t.f,An(t,e.c),t.a=e.a,kn(t,e.g),t.toString()}function za(t,e){e?(t.a["X-Client-Version"]=e,t.g["X-Client-Version"]=e):(delete t.a["X-Client-Version"],delete t.g["X-Client-Version"])}function $a(t,e,n,i,r,o,a){var s;(t=((s=pi(s=gi())==di&&(s=s.match(/\sChrome\/(\d+)/i))&&2==s.length?parseInt(s[1],10):null)&&s<30||Ht&&Zt&&!(9<Zt))&&!ci()?(qa=qa||new fe(function(t,e){var n,i;n=t,i=e,((window.gapi||{}).client||{}).request?n():(l[Qa]=function(){((window.gapi||{}).client||{}).request?n():i(Error("CORS_UNSUPPORTED"))},function(t,e){Sa(t,null,e,void 0)}(Pa(It(Za,{onload:Qa})),function(){i(Error("CORS_UNSUPPORTED"))}))}),b(t.s,t)):b(t.u,t))(e,n,i,r,o,a)}Fa.prototype.T=function(){return this.b},Fa.prototype.u=function(t,n,e,i,r,o){if(ci()&&(void 0===l.fetch||void 0===l.Headers||void 0===l.Request))throw new T("operation-not-supported-in-this-environment","fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.");var a,s=new ca(this.f);o&&(s.g=Math.max(0,o),a=setTimeout(function(){s.dispatchEvent("timeout")},o)),fn(s,"complete",function(){a&&clearTimeout(a);var e=null;try{e=JSON.parse(function(e){try{return e.a?e.a.responseText:""}catch(t){return na(e.b,"Can not get responseText: "+t.message),""}}(this))||null}catch(t){e=null}n&&n(e)}),dn(s,"ready",function(){a&&clearTimeout(a),xe(this)}),dn(s,"timeout",function(){a&&clearTimeout(a),xe(this),n&&n(null)}),da(s,t,e,i,r)};var Za=new dt(gt,"https://apis.google.com/js/client.js?onload=%{onload}"),Qa="__fcb"+Math.floor(1e6*Math.random()).toString();function ts(t,e,n,i,r,o,a){var s=On(e+n);Nn(s,"key",t.c),a&&Nn(s,"cb",Date.now().toString());var u="GET"==i;if(u)for(var c in r)r.hasOwnProperty(c)&&Nn(s,c,r[c]);return new fe(function(e,n){$a(t,s.toString(),function(t){t?t.error?n(Ys(t,o||{})):e(t):n(new T("network-request-failed"))},i,u?void 0:Xn(ki(r)),t.a,t.v.get())})}function es(t){if("string"!=typeof(t=t.email)||!oi.test(t))throw new T("invalid-email")}function ns(t){"email"in t&&es(t)}function is(t){if(!t[Ha]){if(t.mfaPendingCredential)throw new T("multi-factor-auth-required",null,ct(t));throw new T("internal-error")}}function rs(t){if(t.phoneNumber||t.temporaryProof){if(!t.phoneNumber||!t.temporaryProof)throw new T("internal-error")}else{if(!t.sessionInfo)throw new T("missing-verification-id");if(!t.code)throw new T("missing-verification-code")}}Fa.prototype.s=function(t,n,i,r,o){var a=this;qa.then(function(){window.gapi.client.setApiKey(a.c);var e=window.gapi.auth.getToken();window.gapi.auth.setToken(null),window.gapi.client.request({path:t,method:i,body:r,headers:o,authType:"none",callback:function(t){window.gapi.auth.setToken(e),n&&n(t)}})}).o(function(t){n&&n({error:{message:t&&t.message||"CORS_UNSUPPORTED"}})})},Fa.prototype.zb=function(){return Xs(this,xs,{})},Fa.prototype.Bb=function(t,e){return Xs(this,Ps,{idToken:t,email:e})},Fa.prototype.Cb=function(t,e){return Xs(this,Ls,{idToken:t,password:e})};var os={displayName:"DISPLAY_NAME",photoUrl:"PHOTO_URL"};function as(t){if(!t.phoneVerificationInfo)throw new T("internal-error");if(!t.phoneVerificationInfo.sessionInfo)throw new T("missing-verification-id");if(!t.phoneVerificationInfo.code)throw new T("missing-verification-code")}function ss(t){if(!t.requestUri||!t.sessionId&&!t.postBody&&!t.pendingToken)throw new T("internal-error")}function us(t,e){return e.oauthIdToken&&e.providerId&&0==e.providerId.indexOf("oidc.")&&!e.pendingToken&&(t.sessionId?e.nonce=t.sessionId:t.postBody&&(Kn(t=new Vn(t.postBody),"nonce")&&(e.nonce=t.get("nonce")))),e}function cs(t){var e=null;if(t.needConfirmation?(t.code="account-exists-with-different-credential",e=jo(t)):"FEDERATED_USER_ID_ALREADY_LINKED"==t.errorMessage?(t.code="credential-already-in-use",e=jo(t)):"EMAIL_EXISTS"==t.errorMessage?(t.code="email-already-in-use",e=jo(t)):t.errorMessage&&(e=Js(t.errorMessage)),e)throw e;is(t)}function hs(t,e){return e.returnIdpCredential=!0,Xs(t,Us,e)}function ls(t,e){return e.returnIdpCredential=!0,Xs(t,Fs,e)}function fs(t,e){return e.returnIdpCredential=!0,e.autoCreate=!1,Xs(t,Vs,e)}function ds(t){if(!t.oobCode)throw new T("invalid-action-code")}(t=Fa.prototype).Db=function(t,i){var r={idToken:t},o=[];return st(os,function(t,e){var n=i[e];null===n?o.push(t):e in i&&(r[e]=n)}),o.length&&(r.deleteAttribute=o),Xs(this,Ps,r)},t.vb=function(t,e){return lt(t={requestType:"PASSWORD_RESET",email:t},e),Xs(this,_s,t)},t.wb=function(t,e){return lt(t={requestType:"EMAIL_SIGNIN",email:t},e),Xs(this,ks,t)},t.ub=function(t,e){return lt(t={requestType:"VERIFY_EMAIL",idToken:t},e),Xs(this,Ss,t)},t.Eb=function(t,e,n){return lt(t={requestType:"VERIFY_AND_CHANGE_EMAIL",idToken:t,newEmail:e},n),Xs(this,Ns,t)},t.fb=function(t){return Xs(this,Ks,t)},t.nb=function(t,e){return Xs(this,Rs,{oobCode:t,newPassword:e})},t.Ra=function(t){return Xs(this,vs,{oobCode:t})},t.jb=function(t){return Xs(this,ps,{oobCode:t})};var ps={endpoint:"setAccountInfo",A:ds,Z:"email",B:!0},vs={endpoint:"resetPassword",A:ds,G:function(t){var e=t.requestType;if(!e||!t.email&&"EMAIL_SIGNIN"!=e&&"VERIFY_AND_CHANGE_EMAIL"!=e)throw new T("internal-error")},B:!0},ms={endpoint:"signupNewUser",A:function(t){if(es(t),!t.password)throw new T("weak-password")},G:is,V:!0,B:!0},gs={endpoint:"createAuthUri",B:!0},bs={endpoint:"deleteAccount",N:["idToken"]},ys={endpoint:"setAccountInfo",N:["idToken","deleteProvider"],A:function(t){if(!Array.isArray(t.deleteProvider))throw new T("internal-error")}},ws={endpoint:"emailLinkSignin",N:["email","oobCode"],A:es,G:is,V:!0,B:!0},Is={endpoint:"emailLinkSignin",N:["idToken","email","oobCode"],A:es,G:is,V:!0},Ts={endpoint:"accounts/mfaEnrollment:finalize",N:["idToken","phoneVerificationInfo"],A:as,G:is,B:!0,Na:!0},Es={endpoint:"accounts/mfaSignIn:finalize",N:["mfaPendingCredential","phoneVerificationInfo"],A:as,G:is,B:!0,Na:!0},As={endpoint:"getAccountInfo"},ks={endpoint:"getOobConfirmationCode",N:["requestType"],A:function(t){if("EMAIL_SIGNIN"!=t.requestType)throw new T("internal-error");es(t)},Z:"email",B:!0},Ss={endpoint:"getOobConfirmationCode",N:["idToken","requestType"],A:function(t){if("VERIFY_EMAIL"!=t.requestType)throw new T("internal-error")},Z:"email",B:!0},Ns={endpoint:"getOobConfirmationCode",N:["idToken","newEmail","requestType"],A:function(t){if("VERIFY_AND_CHANGE_EMAIL"!=t.requestType)throw new T("internal-error")},Z:"email",B:!0},_s={endpoint:"getOobConfirmationCode",N:["requestType"],A:function(t){if("PASSWORD_RESET"!=t.requestType)throw new T("internal-error");es(t)},Z:"email",B:!0},Os={lb:!0,endpoint:"getProjectConfig",Ub:"GET"},Cs={lb:!0,endpoint:"getRecaptchaParam",Ub:"GET",G:function(t){if(!t.recaptchaSiteKey)throw new T("internal-error")}},Rs={endpoint:"resetPassword",A:ds,Z:"email",B:!0},Ds={endpoint:"sendVerificationCode",N:["phoneNumber","recaptchaToken"],Z:"sessionInfo",B:!0},Ps={endpoint:"setAccountInfo",N:["idToken"],A:ns,V:!0},Ls={endpoint:"setAccountInfo",N:["idToken"],A:function(t){if(ns(t),!t.password)throw new T("weak-password")},G:is,V:!0},xs={endpoint:"signupNewUser",G:is,V:!0,B:!0},Ms={endpoint:"accounts/mfaEnrollment:start",N:["idToken","phoneEnrollmentInfo"],A:function(t){if(!t.phoneEnrollmentInfo)throw new T("internal-error");if(!t.phoneEnrollmentInfo.phoneNumber)throw new T("missing-phone-number");if(!t.phoneEnrollmentInfo.recaptchaToken)throw new T("missing-app-credential")},G:function(t){if(!t.phoneSessionInfo||!t.phoneSessionInfo.sessionInfo)throw new T("internal-error")},B:!0,Na:!0},js={endpoint:"accounts/mfaSignIn:start",N:["mfaPendingCredential","mfaEnrollmentId","phoneSignInInfo"],A:function(t){if(!t.phoneSignInInfo||!t.phoneSignInInfo.recaptchaToken)throw new T("missing-app-credential")},G:function(t){if(!t.phoneResponseInfo||!t.phoneResponseInfo.sessionInfo)throw new T("internal-error")},B:!0,Na:!0},Us={endpoint:"verifyAssertion",A:ss,Ya:us,G:cs,V:!0,B:!0},Vs={endpoint:"verifyAssertion",A:ss,Ya:us,G:function(t){if(t.errorMessage&&"USER_NOT_FOUND"==t.errorMessage)throw new T("user-not-found");if(t.errorMessage)throw Js(t.errorMessage);is(t)},V:!0,B:!0},Fs={endpoint:"verifyAssertion",A:function(t){if(ss(t),!t.idToken)throw new T("internal-error")},Ya:us,G:cs,V:!0},qs={endpoint:"verifyCustomToken",A:function(t){if(!t.token)throw new T("invalid-custom-token")},G:is,V:!0,B:!0},Hs={endpoint:"verifyPassword",A:function(t){if(es(t),!t.password)throw new T("wrong-password")},G:is,V:!0,B:!0},Ks={endpoint:"verifyPhoneNumber",A:rs,G:is,B:!0},Gs={endpoint:"verifyPhoneNumber",A:function(t){if(!t.idToken)throw new T("internal-error");rs(t)},G:function(t){if(t.temporaryProof)throw t.code="credential-already-in-use",jo(t);is(t)}},Bs={Hb:{USER_NOT_FOUND:"user-not-found"},endpoint:"verifyPhoneNumber",A:rs,G:is,B:!0},Ws={endpoint:"accounts/mfaEnrollment:withdraw",N:["idToken","mfaEnrollmentId"],G:function(t){if(!!t[Ha]^!!t.refreshToken)throw new T("internal-error")},B:!0,Na:!0};function Xs(t,e,n){if(!function(t,e){if(!e||!e.length)return 1;if(t){for(var n=0;n<e.length;n++){var i=t[e[n]];if(null==i||""===i)return}return 1}}(n,e.N))return we(new T("internal-error"));var i,r=!!e.Na,o=e.Ub||"POST";return ye(n).then(e.A).then(function(){return e.V&&(n.returnSecureToken=!0),e.B&&t.b&&void 0===n.tenantId&&(n.tenantId=t.b),ts(t,r?t.i:t.h,e.endpoint,o,n,e.Hb,e.lb||!1)}).then(function(t){return i=t,e.Ya?e.Ya(n,i):i}).then(e.G).then(function(){if(!e.Z)return i;if(!(e.Z in i))throw new T("internal-error");return i[e.Z]})}function Js(t){return Ys({error:{errors:[{message:t}],code:400,message:t}})}function Ys(t,e){var n,i=(t.error&&t.error.errors&&t.error.errors[0]||{}).reason||"",r={keyInvalid:"invalid-api-key",ipRefererBlocked:"app-not-authorized"};if(i=r[i]?new T(r[i]):null)return i;for(n in i=t.error&&t.error.message||"",lt(r={INVALID_CUSTOM_TOKEN:"invalid-custom-token",CREDENTIAL_MISMATCH:"custom-token-mismatch",MISSING_CUSTOM_TOKEN:"internal-error",INVALID_IDENTIFIER:"invalid-email",MISSING_CONTINUE_URI:"internal-error",INVALID_EMAIL:"invalid-email",INVALID_PASSWORD:"wrong-password",USER_DISABLED:"user-disabled",MISSING_PASSWORD:"internal-error",EMAIL_EXISTS:"email-already-in-use",PASSWORD_LOGIN_DISABLED:"operation-not-allowed",INVALID_IDP_RESPONSE:"invalid-credential",INVALID_PENDING_TOKEN:"invalid-credential",FEDERATED_USER_ID_ALREADY_LINKED:"credential-already-in-use",MISSING_OR_INVALID_NONCE:"missing-or-invalid-nonce",INVALID_MESSAGE_PAYLOAD:"invalid-message-payload",INVALID_RECIPIENT_EMAIL:"invalid-recipient-email",INVALID_SENDER:"invalid-sender",EMAIL_NOT_FOUND:"user-not-found",RESET_PASSWORD_EXCEED_LIMIT:"too-many-requests",EXPIRED_OOB_CODE:"expired-action-code",INVALID_OOB_CODE:"invalid-action-code",MISSING_OOB_CODE:"internal-error",INVALID_PROVIDER_ID:"invalid-provider-id",CREDENTIAL_TOO_OLD_LOGIN_AGAIN:"requires-recent-login",INVALID_ID_TOKEN:"invalid-user-token",TOKEN_EXPIRED:"user-token-expired",USER_NOT_FOUND:"user-token-expired",CORS_UNSUPPORTED:"cors-unsupported",DYNAMIC_LINK_NOT_ACTIVATED:"dynamic-link-not-activated",INVALID_APP_ID:"invalid-app-id",TOO_MANY_ATTEMPTS_TRY_LATER:"too-many-requests",WEAK_PASSWORD:"weak-password",OPERATION_NOT_ALLOWED:"operation-not-allowed",USER_CANCELLED:"user-cancelled",CAPTCHA_CHECK_FAILED:"captcha-check-failed",INVALID_APP_CREDENTIAL:"invalid-app-credential",INVALID_CODE:"invalid-verification-code",INVALID_PHONE_NUMBER:"invalid-phone-number",INVALID_SESSION_INFO:"invalid-verification-id",INVALID_TEMPORARY_PROOF:"invalid-credential",MISSING_APP_CREDENTIAL:"missing-app-credential",MISSING_CODE:"missing-verification-code",MISSING_PHONE_NUMBER:"missing-phone-number",MISSING_SESSION_INFO:"missing-verification-id",QUOTA_EXCEEDED:"quota-exceeded",SESSION_EXPIRED:"code-expired",REJECTED_CREDENTIAL:"rejected-credential",INVALID_CONTINUE_URI:"invalid-continue-uri",MISSING_ANDROID_PACKAGE_NAME:"missing-android-pkg-name",MISSING_IOS_BUNDLE_ID:"missing-ios-bundle-id",UNAUTHORIZED_DOMAIN:"unauthorized-continue-uri",INVALID_DYNAMIC_LINK_DOMAIN:"invalid-dynamic-link-domain",INVALID_OAUTH_CLIENT_ID:"invalid-oauth-client-id",INVALID_CERT_HASH:"invalid-cert-hash",UNSUPPORTED_TENANT_OPERATION:"unsupported-tenant-operation",INVALID_TENANT_ID:"invalid-tenant-id",TENANT_ID_MISMATCH:"tenant-id-mismatch",ADMIN_ONLY_OPERATION:"admin-restricted-operation",INVALID_MFA_PENDING_CREDENTIAL:"invalid-multi-factor-session",MFA_ENROLLMENT_NOT_FOUND:"multi-factor-info-not-found",MISSING_MFA_PENDING_CREDENTIAL:"missing-multi-factor-session",MISSING_MFA_ENROLLMENT_ID:"missing-multi-factor-info",EMAIL_CHANGE_NEEDS_VERIFICATION:"email-change-needs-verification",SECOND_FACTOR_EXISTS:"second-factor-already-in-use",SECOND_FACTOR_LIMIT_EXCEEDED:"maximum-second-factor-count-exceeded",UNSUPPORTED_FIRST_FACTOR:"unsupported-first-factor",UNVERIFIED_EMAIL:"unverified-email"},e||{}),e=(e=i.match(/^[^\s]+\s*:\s*([\s\S]*)$/))&&1<e.length?e[1]:void 0,r)if(0===i.indexOf(n))return new T(r[n],e);return new T("internal-error",e=!e&&t?Ai(t):e)}function zs(t){var o;this.b=t,this.a=null,this.rb=(o=this,(tu=tu||new fe(function(t,e){function n(){Oi(),bi("gapi.load")("gapi.iframes",{callback:t,ontimeout:function(){Oi(),e(Error("Network Error"))},timeout:Zs.get()})}var i;bi("gapi.iframes.Iframe")?t():bi("gapi.load")?n():(i="__iframefcb"+Math.floor(1e6*Math.random()).toString(),l[i]=function(){bi("gapi.load")?n():e(Error("Network Error"))},ye(Pa(i=It($s,{onload:i}))).o(function(){e(Error("Network Error"))}))}).o(function(t){throw tu=null,t})).then(function(){return new fe(function(i,r){bi("gapi.iframes.getContext")().open({where:document.body,url:o.b,messageHandlersFilter:bi("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),attributes:{style:{position:"absolute",top:"-100px",width:"1px",height:"1px"}},dontclear:!0},function(t){function e(){clearTimeout(n),i()}o.a=t,o.a.restyle({setHideOnLeave:!1});var n=setTimeout(function(){r(Error("Network Error"))},Qs.get());t.ping(e).then(e,function(){r(Error("Network Error"))})})})}))}var $s=new dt(gt,"https://apis.google.com/js/api.js?onload=%{onload}"),Zs=new Ci(3e4,6e4),Qs=new Ci(5e3,15e3),tu=null;function eu(t,e,n,i){this.l=t,this.h=e,this.i=n,this.g=i,this.f=null,t=this.g?Cn((t=On(this.g.url)).c,t.a,t.g,"/emulator/auth/iframe"):Cn("https",this.l,null,"/__/auth/iframe"),this.a=t,Nn(this.a,"apiKey",this.h),Nn(this.a,"appName",this.i),this.b=null,this.c=[]}function nu(t,e,n,i,r,o){this.u=t,this.s=e,this.c=n,this.m=i,this.v=o,this.i=this.g=this.l=null,this.a=r,this.h=this.f=null}function iu(t){try{return zl.default.app(t).auth().Ga()}catch(t){return[]}}function ru(t,e,n,i,r,o){this.s=t,this.g=e,this.b=n,this.f=o,this.c=i||null,this.i=r||null,this.l=this.u=this.C=null,this.h=[],this.m=this.a=null}function ou(t){var s=Qn();return Xs(t,Os,{}).then(function(t){return t.authorizedDomains||[]}).then(function(t){t:{for(var e=(n=On(s)).c,n=n.a,i=0;i<t.length;i++){var r=t[i],o=n,a=e;if(o=0==r.indexOf("chrome-extension://")?On(r).a==o&&"chrome-extension"==a:("http"==a||"https"==a)&&(ri.test(r)?o==r:(r=r.split(".").join("\\."),new RegExp("^(.+\\."+r+"|"+r+")$","i").test(o)))){t=!0;break t}}t=!1}if(!t)throw new xo(Qn())})}function au(r){return r.m||(r.m=ai().then(function(){var t,e,n,i;r.u||(t=r.c,e=r.i,n=iu(r.b),(i=new eu(r.s,r.g,r.b,r.f)).f=t,i.b=e,i.c=X(n||[]),r.u=i.toString()),r.v=new zs(r.u),function(i){if(!i.v)throw Error("IfcHandler must be initialized!");!function(t,e){t.rb.then(function(){t.a.register("authEvent",e,bi("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})}(i.v,function(t){var e={};if(t&&t.authEvent){var n=!1;for(t=Ro(t.authEvent),e=0;e<i.h.length;e++)n=i.h[e](t)||n;return(e={}).status=n?"ACK":"ERROR",ye(e)}return e.status="ERROR",ye(e)})}(r)}),r.m)}function su(t){return t.l||(t.C=t.c?mi(t.c,iu(t.b)):null,t.l=new Fa(t.g,_(t.i),t.C),t.f&&Ja(t.l,t.f)),t.l}function uu(t,e,n,i,r,o,a,s,u,c,h,l){return(t=new nu(t,e,n,i,r,l)).l=o,t.g=a,t.i=s,t.b=ct(u||null),t.f=c,t.yb(h).toString()}function cu(t){if(this.a=t||zl.default.INTERNAL.reactNative&&zl.default.INTERNAL.reactNative.AsyncStorage,!this.a)throw new T("internal-error","The React Native compatibility library was not found.");this.type="asyncStorage"}function hu(t){this.b=t,this.a={},this.f=b(this.c,this)}eu.prototype.toString=function(){return this.f?Nn(this.a,"v",this.f):Hn(this.a.b,"v"),this.b?Nn(this.a,"eid",this.b):Hn(this.a.b,"eid"),this.c.length?Nn(this.a,"fw",this.c.join(",")):Hn(this.a.b,"fw"),this.a.toString()},nu.prototype.yb=function(t){return this.h=t,this},nu.prototype.toString=function(){var t;if(Nn(t=this.v?Cn((t=On(this.v.url)).c,t.a,t.g,"/emulator/auth/handler"):Cn("https",this.u,null,"/__/auth/handler"),"apiKey",this.s),Nn(t,"appName",this.c),Nn(t,"authType",this.m),this.a.isOAuthProvider){var e=this.a;try{var n=zl.default.app(this.c).auth().la()}catch(t){n=null}for(i in e.ob=n,Nn(t,"providerId",this.a.providerId),e=ki((n=this.a).Ib))e[i]=e[i].toString();for(var i=n.Qc,e=ct(e),r=0;r<i.length;r++){var o=i[r];o in e&&delete e[o]}n.pb&&n.ob&&!e[n.pb]&&(e[n.pb]=n.ob),ut(e)||Nn(t,"customParameters",Ai(e))}if("function"==typeof this.a.Qb&&((n=this.a.Qb()).length&&Nn(t,"scopes",n.join(","))),this.l?Nn(t,"redirectUrl",this.l):Hn(t.b,"redirectUrl"),this.g?Nn(t,"eventId",this.g):Hn(t.b,"eventId"),this.i?Nn(t,"v",this.i):Hn(t.b,"v"),this.b)for(var a in this.b)this.b.hasOwnProperty(a)&&!_n(t,a)&&Nn(t,a,this.b[a]);return this.h?Nn(t,"tid",this.h):Hn(t.b,"tid"),this.f?Nn(t,"eid",this.f):Hn(t.b,"eid"),(a=iu(this.c)).length&&Nn(t,"fw",a.join(",")),t.toString()},(t=ru.prototype).Ob=function(e,n,t){var i=new T("popup-closed-by-user"),r=new T("web-storage-unsupported"),o=this,a=!1;return this.ma().then(function(){var t,i;i={type:"webStorageSupport"},au(t=o).then(function(){return e=t.v,n=i,e.rb.then(function(){return new fe(function(t){e.a.send(n.type,n,t,bi("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"))})});var e,n}).then(function(t){if(t&&t.length&&void 0!==t[0].webStorageSupport)return t[0].webStorageSupport;throw Error()}).then(function(t){t||(e&&ni(e),n(r),a=!0)})}).o(function(){}).then(function(){if(!a)return n=e,new fe(function(e){return function t(){mn(2e3).then(function(){return n&&!n.closed?t():void e()})}()});var n}).then(function(){if(!a)return mn(t).then(function(){n(i)})})},t.Xb=function(){var t=gi();return!Ei(t)&&!_i(t)},t.Tb=function(){return!1},t.Mb=function(e,t,n,i,r,o,a,s){if(!e)return we(new T("popup-blocked"));if(a&&!Ei())return this.ma().o(function(t){ni(e),r(t)}),i(),ye();this.a||(this.a=ou(su(this)));var u=this;return this.a.then(function(){var t=u.ma().o(function(t){throw ni(e),r(t),t});return i(),t}).then(function(){Oo(n),a||ti(uu(u.s,u.g,u.b,t,n,null,o,u.c,void 0,u.i,s,u.f),e)}).o(function(t){throw"auth/network-request-failed"==t.code&&(u.a=null),t})},t.Nb=function(t,e,n,i){this.a||(this.a=ou(su(this)));var r=this;return this.a.then(function(){Oo(e),ti(uu(r.s,r.g,r.b,t,e,Qn(),n,r.c,void 0,r.i,i,r.f))}).o(function(t){throw"auth/network-request-failed"==t.code&&(r.a=null),t})},t.ma=function(){var t=this;return au(this).then(function(){return t.v.rb}).o(function(){throw t.a=null,new T("network-request-failed")})},t.$b=function(){return!0},t.Ea=function(t){this.h.push(t)},t.Sa=function(e){B(this.h,function(t){return t==e})},(t=cu.prototype).get=function(t){return ye(this.a.getItem(t)).then(function(t){return t&&Si(t)})},t.set=function(t,e){return ye(this.a.setItem(t,Ai(e)))},t.U=function(t){return ye(this.a.removeItem(t))},t.ca=function(){},t.ia=function(){};var lu,fu=[];function du(t,e,n){ut(t.a)&&t.b.addEventListener("message",t.f),void 0===t.a[e]&&(t.a[e]=[]),t.a[e].push(n)}function pu(t){this.a=t}function vu(t){this.c=t,this.b=!1,this.a=[]}function mu(i,t,e,n){var r,o,a,s,u=e||{},c=null;if(i.b)return we(Error("connection_unavailable"));var h=n?800:50,l="undefined"!=typeof MessageChannel?new MessageChannel:null;return new fe(function(e,n){l?(r=Math.floor(Math.random()*Math.pow(10,20)).toString(),l.port1.start(),a=setTimeout(function(){n(Error("unsupported_event"))},h),c={messageChannel:l,onMessage:o=function(t){t.data.eventId===r&&("ack"===t.data.status?(clearTimeout(a),s=setTimeout(function(){n(Error("timeout"))},3e3)):"done"===t.data.status?(clearTimeout(s),void 0!==t.data.response?e(t.data.response):n(Error("unknown_error"))):(clearTimeout(a),clearTimeout(s),n(Error("invalid_response"))))}},i.a.push(c),l.port1.addEventListener("message",o),i.c.postMessage({eventType:t,eventId:r,data:u},[l.port2])):n(Error("connection_unavailable"))}).then(function(t){return gu(i,c),t}).o(function(t){throw gu(i,c),t})}function gu(t,e){var n,i;e&&(n=e.messageChannel,i=e.onMessage,n&&(n.port1.removeEventListener("message",i),n.port1.close()),B(t.a,function(t){return t==e}))}function bu(){if(!Tu())throw new T("web-storage-unsupported");this.c={},this.a=[],this.b=0,this.m=l.indexedDB,this.type="indexedDB",this.g=this.v=this.f=this.l=null,this.s=!1,this.h=null;var t,e,n,i=this;ci()&&self?(this.v=(n=ci()?self:null,V(fu,function(t){t.b==n&&(e=t)}),e||(e=new hu(n),fu.push(e)),e),du(this.v,"keyChanged",function(t,n){return Nu(i).then(function(e){return 0<e.length&&V(i.a,function(t){t(e)}),{keyProcessed:K(e,n.key)}})}),du(this.v,"ping",function(){return ye(["keyChanged"])})):((t=l.navigator)&&t.serviceWorker?ye().then(function(){return t.serviceWorker.ready}).then(function(t){return t.active||null}).o(function(){return null}):ye(null)).then(function(t){(i.h=t)&&(i.g=new vu(new pu(t)),mu(i.g,"ping",null,!0).then(function(t){t[0].fulfilled&&K(t[0].value,"keyChanged")&&(i.s=!0)}).o(function(){}))})}function yu(r){return new fe(function(e,n){var t=r.m.open("firebaseLocalStorageDb",1);t.onerror=function(t){try{t.preventDefault()}catch(t){}n(Error(t.target.error))},t.onupgradeneeded=function(t){t=t.target.result;try{t.createObjectStore("firebaseLocalStorage",{keyPath:"fbase_key"})}catch(t){n(t)}},t.onsuccess=function(t){var i;(t=t.target.result).objectStoreNames.contains("firebaseLocalStorage")?e(t):(i=r,new fe(function(t,e){var n=i.m.deleteDatabase("firebaseLocalStorageDb");n.onsuccess=function(){t()},n.onerror=function(t){e(Error(t.target.error))}}).then(function(){return yu(r)}).then(function(t){e(t)}).o(function(t){n(t)}))}})}function wu(t){return t.i||(t.i=yu(t)),t.i}function Iu(r,t){var o=0;return new fe(function e(n,i){wu(r).then(t).then(n).o(function(t){return 3<++o?void i(t):wu(r).then(function(t){return t.close(),r.i=void 0,e(n,i)}).o(function(t){i(t)})})})}function Tu(){try{return l.indexedDB}catch(t){return}}function Eu(t){return t.objectStore("firebaseLocalStorage")}function Au(t,e){return t.transaction(["firebaseLocalStorage"],e?"readwrite":"readonly")}function ku(t){return new fe(function(e,n){t.onsuccess=function(t){t&&t.target?e(t.target.result):e()},t.onerror=function(t){n(t.target.error)}})}function Su(t,e){return t.g&&t.h&&((n=l.navigator)&&n.serviceWorker&&n.serviceWorker.controller||null)===t.h?mu(t.g,"keyChanged",{key:e},t.s).then(function(){}).o(function(){}):ye();var n}function Nu(i){return wu(i).then(function(t){var r=Eu(Au(t,!1));return r.getAll?ku(r.getAll()):new fe(function(e,n){var i=[],t=r.openCursor();t.onsuccess=function(t){(t=t.target.result)?(i.push(t.value),t.continue()):e(i)},t.onerror=function(t){n(t.target.error)}})}).then(function(t){var e={},n=[];if(0==i.b){for(n=0;n<t.length;n++)e[t[n].fbase_key]=t[n].value;n=function t(e,n){var i,r=[];for(i in e)i in n&&typeof e[i]==typeof n[i]?"object"==typeof e[i]&&null!=e[i]&&null!=n[i]?0<t(e[i],n[i]).length&&r.push(i):e[i]!==n[i]&&r.push(i):r.push(i);for(i in n)i in e||r.push(i);return r}(i.c,e),i.c=e}return n})}function _u(t){t.l&&t.l.cancel("STOP_EVENT"),t.f&&(clearTimeout(t.f),t.f=null)}function Ou(t){var i=this,r=null;this.a=[],this.type="indexedDB",this.c=t,this.b=ye().then(function(){if(Tu()){var e=Ni(),n="__sak"+e;return lu=lu||new bu,(r=lu).set(n,e).then(function(){return r.get(n)}).then(function(t){if(t!==e)throw Error("indexedDB not supported!");return r.U(n)}).then(function(){return r}).o(function(){return i.c})}return i.c}).then(function(t){return i.type=t.type,t.ca(function(e){V(i.a,function(t){t(e)})}),t})}function Cu(){this.a={},this.type="inMemory"}function Ru(){if(!function(){var t="Node"==hi();if(!(t=Du()||t&&zl.default.INTERNAL.node&&zl.default.INTERNAL.node.localStorage))return!1;try{return t.setItem("__sak","1"),t.removeItem("__sak"),!0}catch(t){return!1}}()){if("Node"==hi())throw new T("internal-error","The LocalStorage compatibility library was not found.");throw new T("web-storage-unsupported")}this.a=Du()||zl.default.INTERNAL.node.localStorage,this.type="localStorage"}function Du(){try{var t=l.localStorage,e=Ni();return t&&(t.setItem(e,"1"),t.removeItem(e)),t}catch(t){return null}}function Pu(){this.type="nullStorage"}function Lu(){if(!function(){var t="Node"==hi();if(!(t=xu()||t&&zl.default.INTERNAL.node&&zl.default.INTERNAL.node.sessionStorage))return!1;try{return t.setItem("__sak","1"),t.removeItem("__sak"),!0}catch(t){return!1}}()){if("Node"==hi())throw new T("internal-error","The SessionStorage compatibility library was not found.");throw new T("web-storage-unsupported")}this.a=xu()||zl.default.INTERNAL.node.sessionStorage,this.type="sessionStorage"}function xu(){try{var t=l.sessionStorage,e=Ni();return t&&(t.setItem(e,"1"),t.removeItem(e)),t}catch(t){return null}}function Mu(){var t={};t.Browser=Vu,t.Node=Fu,t.ReactNative=qu,t.Worker=Hu,this.a=t[hi()]}hu.prototype.c=function(n){var e,i=n.data.eventType,r=n.data.eventId,t=this.a[i];t&&0<t.length&&(n.ports[0].postMessage({status:"ack",eventId:r,eventType:i,response:null}),e=[],V(t,function(t){e.push(ye().then(function(){return t(n.origin,n.data.data)}))}),Te(e).then(function(t){var e=[];V(t,function(t){e.push({fulfilled:t.Pb,value:t.value,reason:t.reason?t.reason.message:void 0})}),V(e,function(t){for(var e in t)void 0===t[e]&&delete t[e]}),n.ports[0].postMessage({status:"done",eventId:r,eventType:i,response:e})}))},pu.prototype.postMessage=function(t,e){this.a.postMessage(t,e)},vu.prototype.close=function(){for(;0<this.a.length;)gu(this,this.a[0]);this.b=!0},(t=bu.prototype).set=function(i,r){var o=this,a=!1;return Iu(this,function(t){return ku((t=Eu(Au(t,!0))).get(i))}).then(function(n){return Iu(o,function(t){if(t=Eu(Au(t,!0)),n)return n.value=r,ku(t.put(n));o.b++,a=!0;var e={};return e.fbase_key=i,e.value=r,ku(t.add(e))})}).then(function(){return o.c[i]=r,Su(o,i)}).oa(function(){a&&o.b--})},t.get=function(e){return Iu(this,function(t){return ku(Eu(Au(t,!1)).get(e))}).then(function(t){return t&&t.value})},t.U=function(e){var n=this,i=!1;return Iu(this,function(t){return i=!0,n.b++,ku(Eu(Au(t,!0)).delete(e))}).then(function(){return delete n.c[e],Su(n,e)}).oa(function(){i&&n.b--})},t.ca=function(t){var n;0==this.a.length&&(_u(n=this),function e(){n.f=setTimeout(function(){n.l=Nu(n).then(function(e){0<e.length&&V(n.a,function(t){t(e)})}).then(function(){e()}).o(function(t){"STOP_EVENT"!=t.message&&e()})},800)}()),this.a.push(t)},t.ia=function(e){B(this.a,function(t){return t==e}),0==this.a.length&&_u(this)},(t=Ou.prototype).get=function(e){return this.b.then(function(t){return t.get(e)})},t.set=function(e,n){return this.b.then(function(t){return t.set(e,n)})},t.U=function(e){return this.b.then(function(t){return t.U(e)})},t.ca=function(t){this.a.push(t)},t.ia=function(e){B(this.a,function(t){return t==e})},(t=Cu.prototype).get=function(t){return ye(this.a[t])},t.set=function(t,e){return this.a[t]=e,ye()},t.U=function(t){return delete this.a[t],ye()},t.ca=function(){},t.ia=function(){},(t=Ru.prototype).get=function(t){var e=this;return ye().then(function(){return Si(e.a.getItem(t))})},t.set=function(e,n){var i=this;return ye().then(function(){var t=Ai(n);null===t?i.U(e):i.a.setItem(e,t)})},t.U=function(t){var e=this;return ye().then(function(){e.a.removeItem(t)})},t.ca=function(t){l.window&&Ze(l.window,"storage",t)},t.ia=function(t){l.window&&en(l.window,"storage",t)},(t=Pu.prototype).get=function(){return ye(null)},t.set=function(){return ye()},t.U=function(){return ye()},t.ca=function(){},t.ia=function(){},(t=Lu.prototype).get=function(t){var e=this;return ye().then(function(){return Si(e.a.getItem(t))})},t.set=function(e,n){var i=this;return ye().then(function(){var t=Ai(n);null===t?i.U(e):i.a.setItem(e,t)})},t.U=function(t){var e=this;return ye().then(function(){e.a.removeItem(t)})},t.ca=function(){},t.ia=function(){};var ju,Uu,Vu={F:Ru,bb:Lu},Fu={F:Ru,bb:Lu},qu={F:cu,bb:Pu},Hu={F:Ru,bb:Pu},Ku={rd:"local",NONE:"none",td:"session"};function Gu(){var t=!(_i(gi())||!ui()),e=Ei(),n=yi();this.m=t,this.h=e,this.l=n,this.a={},t=ju=ju||new Mu;try{this.g=!Zn()&&Li()||!l.indexedDB?new t.a.F:new Ou(new(ci()?Cu:t.a.F))}catch(t){this.g=new Cu,this.h=!0}try{this.i=new t.a.bb}catch(t){this.i=new Cu}this.v=new Cu,this.f=b(this.Yb,this),this.b={}}function Bu(){return Uu=Uu||new Gu}function Wu(t,e){switch(e){case"session":return t.i;case"none":return t.v;default:return t.g}}function Xu(t,e){return"firebase:"+t.name+(e?":"+e:"")}function Ju(t,e,n){return n=Xu(e,n),"local"==e.F&&(t.b[n]=null),Wu(t,e.F).U(n)}function Yu(t){t.c&&(clearInterval(t.c),t.c=null)}function zu(t){this.a=t,this.b=Bu()}(t=Gu.prototype).get=function(t,e){return Wu(this,t.F).get(Xu(t,e))},t.set=function(e,t,n){var i=Xu(e,n),r=this,o=Wu(this,e.F);return o.set(i,t).then(function(){return o.get(i)}).then(function(t){"local"==e.F&&(r.b[i]=t)})},t.addListener=function(t,e,n){var i;t=Xu(t,e),this.l&&(this.b[t]=l.localStorage.getItem(t)),ut(this.a)&&(Wu(this,"local").ca(this.f),this.h||(Zn()||!Li())&&l.indexedDB||!this.l||(Yu(i=this),i.c=setInterval(function(){for(var t in i.a){var e=l.localStorage.getItem(t),n=i.b[t];e!=n&&(i.b[t]=e,e=new qe({type:"storage",key:t,target:window,oldValue:n,newValue:e,a:!0}),i.Yb(e))}},1e3))),this.a[t]||(this.a[t]=[]),this.a[t].push(n)},t.removeListener=function(t,e,n){t=Xu(t,e),this.a[t]&&(B(this.a[t],function(t){return t==n}),0==this.a[t].length&&delete this.a[t]),ut(this.a)&&(Wu(this,"local").ia(this.f),Yu(this))},t.Yb=function(t){if(t&&t.g){var e=t.a.key;if(null==e)for(var n in this.a){var i=this.b[n];void 0===i&&(i=null);var r=l.localStorage.getItem(n);r!==i&&(this.b[n]=r,this.mb(n))}else if(0==e.indexOf("firebase:")&&this.a[e]){if(void 0!==t.a.a?Wu(this,"local").ia(this.f):Yu(this),this.m)if(n=l.localStorage.getItem(e),(i=t.a.newValue)!==n)null!==i?l.localStorage.setItem(e,i):l.localStorage.removeItem(e);else if(this.b[e]===i&&void 0===t.a.a)return;var o=this,n=function(){void 0===t.a.a&&o.b[e]===l.localStorage.getItem(e)||(o.b[e]=l.localStorage.getItem(e),o.mb(e))};Ht&&Zt&&10==Zt&&l.localStorage.getItem(e)!==t.a.newValue&&t.a.newValue!==t.a.oldValue?setTimeout(n,10):n()}}else V(t,b(this.mb,this))},t.mb=function(t){this.a[t]&&V(this.a[t],function(t){t()})};var $u,Zu={name:"authEvent",F:"local"};function Qu(){this.a=Bu()}function tc(t,e){this.b=ec,this.f=l.Uint8Array?new Uint8Array(this.b):Array(this.b),this.g=this.c=0,this.a=[],this.i=t,this.h=e,this.l=l.Int32Array?new Int32Array(64):Array(64),void 0===$u&&($u=l.Int32Array?new Int32Array(uc):uc),this.reset()}w(tc,function(){this.b=-1});for(var ec=64,nc=ec-1,ic=[],rc=0;rc<nc;rc++)ic[rc]=0;var oc=W(128,ic);function ac(t){for(var e=t.f,n=t.l,i=0,r=0;r<e.length;)n[i++]=e[r]<<24|e[r+1]<<16|e[r+2]<<8|e[r+3],r=4*i;for(e=16;e<64;e++){var r=0|n[e-15],i=0|n[e-2],o=(0|n[e-16])+((r>>>7|r<<25)^(r>>>18|r<<14)^r>>>3)|0,a=(0|n[e-7])+((i>>>17|i<<15)^(i>>>19|i<<13)^i>>>10)|0;n[e]=o+a|0}i=0|t.a[0],r=0|t.a[1];var s=0|t.a[2],u=0|t.a[3],c=0|t.a[4],h=0|t.a[5],l=0|t.a[6];for(o=0|t.a[7],e=0;e<64;e++){var f=((i>>>2|i<<30)^(i>>>13|i<<19)^(i>>>22|i<<10))+(i&r^i&s^r&s)|0;a=(o=o+((c>>>6|c<<26)^(c>>>11|c<<21)^(c>>>25|c<<7))|0)+((a=(a=c&h^~c&l)+(0|$u[e])|0)+(0|n[e])|0)|0,o=l,l=h,h=c,c=u+a|0,u=s,s=r,r=i,i=a+f|0}t.a[0]=t.a[0]+i|0,t.a[1]=t.a[1]+r|0,t.a[2]=t.a[2]+s|0,t.a[3]=t.a[3]+u|0,t.a[4]=t.a[4]+c|0,t.a[5]=t.a[5]+h|0,t.a[6]=t.a[6]+l|0,t.a[7]=t.a[7]+o|0}function sc(t,e,n){void 0===n&&(n=e.length);var i=0,r=t.c;if("string"==typeof e)for(;i<n;)t.f[r++]=e.charCodeAt(i++),r==t.b&&(ac(t),r=0);else{if(!p(e))throw Error("message must be string or array");for(;i<n;){var o=e[i++];if(!("number"==typeof o&&0<=o&&o<=255&&o==(0|o)))throw Error("message must be a byte array");t.f[r++]=o,r==t.b&&(ac(t),r=0)}}t.c=r,t.g+=n}tc.prototype.reset=function(){this.g=this.c=0,this.a=l.Int32Array?new Int32Array(this.h):X(this.h)};var uc=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function cc(){tc.call(this,8,hc)}w(cc,tc);var hc=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];function lc(t,e,n,i,r,o){this.v=t,this.i=e,this.l=n,this.m=i||null,this.u=r||null,this.s=o,this.h=e+":"+n,this.C=new Qu,this.g=new zu(this.h),this.f=null,this.b=[],this.a=this.c=null}function fc(t){return new T("invalid-cordova-configuration",t)}function dc(t){var e=new cc;sc(e,t),t=[];var n=8*e.g;e.c<56?sc(e,oc,56-e.c):sc(e,oc,e.b-(e.c-56));for(var i=63;56<=i;i--)e.f[i]=255&n,n/=256;for(ac(e),i=n=0;i<e.i;i++)for(var r=24;0<=r;r-=8)t[n++]=e.a[i]>>r&255;return q(t,function(t){return 1<(t=t.toString(16)).length?t:"0"+t}).join("")}function pc(t,e){for(var n=0;n<t.b.length;n++)try{t.b[n](e)}catch(t){}}function vc(s){return s.f||(s.f=s.ma().then(function(){return new fe(function(n){function e(i){t=!0,a&&a.cancel(),mc(r).then(function(t){var e,n=o;t&&i&&i.url&&(e=null,n=(e=-1!=(n=Jr(i.url)).indexOf("/__/auth/callback")?(e="object"==typeof(e=Si(_n(e=On(n),"firebaseError")||null))?E(e):null)?new Co(t.c,t.b,null,null,e,null,t.T()):new Co(t.c,t.b,n,t.f,null,null,t.T()):e)||o),pc(r,n)})}var r,o,t,a,i;s.Ea(function t(e){return n(e),s.Sa(t),!1}),r=s,o=new Co("unknown",null,null,null,new T("no-auth-event")),t=!1,a=mn(500).then(function(){return mc(r).then(function(){t||pc(r,o)})}),i=l.handleOpenURL,l.handleOpenURL=function(t){if(0==t.toLowerCase().indexOf(bi("BuildInfo.packageName",l).toLowerCase()+"://")&&e({url:t}),"function"==typeof i)try{i(t)}catch(t){console.error(t)}},Lo=Lo||new Do,function(t){var n=Lo;n.a.push(t),n.b||(n.b=function(t){for(var e=0;e<n.a.length;e++)n.a[e](t)},"function"==typeof(t=bi("universalLinks.subscribe",l))&&t(null,n.b))}(e)})})),s.f}function mc(e){var t,n=null;return(t=e.g).b.get(Zu,t.a).then(Ro).then(function(t){return n=t,Ju((t=e.g).b,Zu,t.a)}).then(function(){return n})}function gc(t){this.a=t,this.b=Bu()}(t=lc.prototype).ma=function(){return this.Ia||(this.Ia=(si(void 0)?ai().then(function(){return new fe(function(t,e){var n=l.document,i=setTimeout(function(){e(Error("Cordova framework is not ready."))},1e3);n.addEventListener("deviceready",function(){clearTimeout(i),t()},!1)})}):we(Error("Cordova must run in an Android or iOS file scheme."))).then(function(){if("function"!=typeof bi("universalLinks.subscribe",l))throw fc("cordova-universal-links-plugin-fix is not installed");if(void 0===bi("BuildInfo.packageName",l))throw fc("cordova-plugin-buildinfo is not installed");if("function"!=typeof bi("cordova.plugins.browsertab.openUrl",l))throw fc("cordova-plugin-browsertab is not installed");if("function"!=typeof bi("cordova.InAppBrowser.open",l))throw fc("cordova-plugin-inappbrowser is not installed")},function(){throw new T("cordova-not-ready")}))},t.Ob=function(t,e){return e(new T("operation-not-supported-in-this-environment")),ye()},t.Mb=function(){return we(new T("operation-not-supported-in-this-environment"))},t.$b=function(){return!1},t.Xb=function(){return!0},t.Tb=function(){return!0},t.Nb=function(t,e,n,i){if(this.c)return we(new T("redirect-operation-pending"));var r=this,o=l.document,a=null,s=null,u=null,c=null;return this.c=ye().then(function(){return Oo(e),vc(r)}).then(function(){return function(n,t,e,i,r){var o=function(){for(var t=20,e=[];0<t;)e.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),t--;return e.join("")}(),a=new Co(t,i,null,o,new T("no-auth-event"),null,r),s=bi("BuildInfo.packageName",l);if("string"!=typeof s)throw new T("invalid-cordova-configuration");var u=bi("BuildInfo.displayName",l),c={};if(gi().toLowerCase().match(/iphone|ipad|ipod/))c.ibi=s;else{if(!gi().toLowerCase().match(/android/))return we(new T("operation-not-supported-in-this-environment"));c.apn=s}u&&(c.appDisplayName=u),o=dc(o),c.sessionId=o;var h=uu(n.v,n.i,n.l,t,e,null,i,n.m,c,n.u,r,n.s);return n.ma().then(function(){var t=n.h;return n.C.a.set(Zu,a.w(),t)}).then(function(){var t=bi("cordova.plugins.browsertab.isAvailable",l);if("function"!=typeof t)throw new T("invalid-cordova-configuration");var e=null;t(function(t){if(t){if("function"!=typeof(e=bi("cordova.plugins.browsertab.openUrl",l)))throw new T("invalid-cordova-configuration");e(h)}else{if("function"!=typeof(e=bi("cordova.InAppBrowser.open",l)))throw new T("invalid-cordova-configuration");t=gi(),n.a=e(h,t.match(/(iPad|iPhone|iPod).*OS 7_\d/i)||t.match(/(iPad|iPhone|iPod).*OS 8_\d/i)?"_blank":"_system","location=yes")}})})}(r,t,e,n,i)}).then(function(){return new fe(function(e,t){s=function(){var t=bi("cordova.plugins.browsertab.close",l);return e(),"function"==typeof t&&t(),r.a&&"function"==typeof r.a.close&&(r.a.close(),r.a=null),!1},r.Ea(s),u=function(){a=a||mn(2e3).then(function(){t(new T("redirect-cancelled-by-user"))})},c=function(){Ri()&&u()},o.addEventListener("resume",u,!1),gi().toLowerCase().match(/android/)||o.addEventListener("visibilitychange",c,!1)}).o(function(t){return mc(r).then(function(){throw t})})}).oa(function(){u&&o.removeEventListener("resume",u,!1),c&&o.removeEventListener("visibilitychange",c,!1),a&&a.cancel(),s&&r.Sa(s),r.c=null})},t.Ea=function(e){this.b.push(e),vc(this).o(function(t){"auth/invalid-cordova-configuration"===t.code&&(t=new Co("unknown",null,null,null,new T("no-auth-event")),e(t))})},t.Sa=function(e){B(this.b,function(t){return t==e})};var bc={name:"pendingRedirect",F:"session"};function yc(t){return Ju(t.b,bc,t.a)}function wc(t,e,n,i){this.i={},this.u=0,this.D=t,this.v=e,this.m=n,this.J=i,this.h=[],this.f=!1,this.l=b(this.s,this),this.b=new xc,this.C=new Fc,this.g=new gc(Pc(this.v,this.m)),this.c={},this.c.unknown=this.b,this.c.signInViaRedirect=this.b,this.c.linkViaRedirect=this.b,this.c.reauthViaRedirect=this.b,this.c.signInViaPopup=this.C,this.c.linkViaPopup=this.C,this.c.reauthViaPopup=this.C,this.a=Ic(this.D,this.v,this.m,A,this.J)}function Ic(t,e,n,i,r){var o=zl.default.SDK_VERSION||null;return new(si()?lc:ru)(t,e,n,o,i,r)}function Tc(e){e.f||(e.f=!0,e.a.Ea(e.l));var n=e.a;return e.a.ma().o(function(t){throw e.a==n&&e.reset(),t})}function Ec(n){n.a.Xb()&&Tc(n).o(function(t){var e=new Co("unknown",null,null,null,new T("operation-not-supported-in-this-environment"));Oc(t)&&n.s(e)}),n.a.Tb()||Mc(n.b)}function Ac(n,t){K(n.h,t)||n.h.push(t),n.f||(t=n.g).b.get(bc,t.a).then(function(t){return"pending"==t}).then(function(t){t?yc(n.g).then(function(){Tc(n).o(function(t){var e=new Co("unknown",null,null,null,new T("operation-not-supported-in-this-environment"));Oc(t)&&n.s(e)})}):Ec(n)}).o(function(){Ec(n)})}function kc(t,e){B(t.h,function(t){return t==e})}wc.prototype.reset=function(){this.f=!1,this.a.Sa(this.l),this.a=Ic(this.D,this.v,this.m,null,this.J),this.i={}},wc.prototype.s=function(t){if(!t)throw new T("invalid-auth-event");if(6e5<=Date.now()-this.u&&(this.i={},this.u=0),t&&t.getUid()&&this.i.hasOwnProperty(t.getUid()))return!1;for(var e=!1,n=0;n<this.h.length;n++){var i=this.h[n];if(i.Fb(t.c,t.b)){(e=this.c[t.c])&&(e.h(t,i),t&&(t.f||t.b)&&(this.i[t.getUid()]=!0,this.u=Date.now())),e=!0;break}}return Mc(this.b),e};var Sc=new Ci(2e3,1e4),Nc=new Ci(3e4,6e4);function _c(t,e,n,i,r,o,a){return t.a.Mb(e,n,i,function(){t.f||(t.f=!0,t.a.Ea(t.l))},function(){t.reset()},r,o,a)}function Oc(t){return!(!t||"auth/cordova-not-ready"!=t.code)}function Cc(e,t,n,i,r){var o,a;return(a=e.g).b.set(bc,"pending",a.a).then(function(){return e.a.Nb(t,n,i,r).o(function(t){if(Oc(t))throw new T("operation-not-supported-in-this-environment");return o=t,yc(e.g).then(function(){throw o})}).then(function(){return e.a.$b()?new fe(function(){}):yc(e.g).then(function(){return e.qa()}).then(function(){}).o(function(){})})})}function Rc(t,e,n,i,r){return t.a.Ob(i,function(t){e.na(n,null,t,r)},Sc.get())}wc.prototype.qa=function(){return this.b.qa()};var Dc={};function Pc(t,e,n){return t=t+":"+e,t=n?t+":"+n.url:t}function Lc(t,e,n,i){var r=Pc(e,n,i);return Dc[r]||(Dc[r]=new wc(t,e,n,i)),Dc[r]}function xc(){this.b=null,this.f=[],this.c=[],this.a=null,this.i=this.g=!1}function Mc(t){t.g||(t.g=!0,Vc(t,!1,null,null))}function jc(t){t.g&&!t.i&&Vc(t,!1,null,null)}function Uc(t,e){if(t.b=function(){return ye(e)},t.f.length)for(var n=0;n<t.f.length;n++)t.f[n](e)}function Vc(t,e,n,i){e?i?function(t,e){if(t.b=function(){return we(e)},t.c.length)for(var n=0;n<t.c.length;n++)t.c[n](e)}(t,i):Uc(t,n):Uc(t,{user:null}),t.f=[],t.c=[]}function Fc(){}function qc(){this.ib=!1,Object.defineProperty(this,"appVerificationDisabled",{get:function(){return this.ib},set:function(t){this.ib=t},enumerable:!1})}function Hc(t,e){this.a=e,Vi(this,"verificationId",t)}function Kc(t,e,n,i){return new So(t).fb(e,n).then(function(t){return new Hc(t,i)})}function Gc(t){var e=Lr(t);if(!(e&&e.exp&&e.auth_time&&e.iat))throw new T("internal-error","An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.");Fi(this,{token:t,expirationTime:Pi(1e3*e.exp),authTime:Pi(1e3*e.auth_time),issuedAtTime:Pi(1e3*e.iat),signInProvider:e.firebase&&e.firebase.sign_in_provider?e.firebase.sign_in_provider:null,signInSecondFactor:e.firebase&&e.firebase.sign_in_second_factor?e.firebase.sign_in_second_factor:null,claims:e})}function Bc(t,e,n){var i=e&&e[Xc];if(!i)throw new T("argument-error","Internal assert: Invalid MultiFactorResolver");this.a=t,this.f=ct(e),this.g=n,this.c=new Yr(null,i),this.b=[];var r=this;V(e[Wc]||[],function(t){(t=Gi(t))&&r.b.push(t)}),Vi(this,"auth",this.a),Vi(this,"session",this.c),Vi(this,"hints",this.b)}xc.prototype.reset=function(){this.b=null,this.a&&(this.a.cancel(),this.a=null)},xc.prototype.h=function(t,e){var n,i,r,o;t?(this.reset(),this.g=!0,n=t.c,i=t.b,r=t.a&&"auth/web-storage-unsupported"==t.a.code,o=t.a&&"auth/operation-not-supported-in-this-environment"==t.a.code,this.i=!(!r&&!o),"unknown"!=n||r||o?t.a?(Vc(this,!0,null,t.a),ye()):e.Fa(n,i)?function(e,t,n){n=n.Fa(t.c,t.b);var i=t.g,r=t.f,o=t.i,a=t.T(),s=!!t.c.match(/Redirect$/);n(i,r,a,o).then(function(t){Vc(e,s,t,null)}).o(function(t){Vc(e,s,null,t)})}(this,t,e):we(new T("invalid-auth-event")):(Vc(this,!1,null,null),ye())):we(new T("invalid-auth-event"))},xc.prototype.qa=function(){var r=this;return new fe(function(t,e){var n,i;r.b?r.b().then(t,e):(r.f.push(t),r.c.push(e),n=r,i=new T("timeout"),n.a&&n.a.cancel(),n.a=mn(Nc.get()).then(function(){n.b||(n.g=!0,Vc(n,!0,null,i))}))})},Fc.prototype.h=function(t,e){var n,i,r,o,a;t?(n=t.c,i=t.b,t.a?(e.na(t.c,null,t.a,t.b),ye()):e.Fa(n,i)?(r=e,o=(t=t).b,a=t.c,r.Fa(a,o)(t.g,t.f,t.T(),t.i).then(function(t){r.na(a,t,null,o)}).o(function(t){r.na(a,null,t,o)})):we(new T("invalid-auth-event"))):we(new T("invalid-auth-event"))},Hc.prototype.confirm=function(t){return t=No(this.verificationId,t),this.a(t)};var Wc="mfaInfo",Xc="mfaPendingCredential";function Jc(t,e,n,i){T.call(this,"multi-factor-auth-required",i,e),this.b=new Bc(t,e,n),Vi(this,"resolver",this.b)}function Yc(t,e,n){if(t&&m(t.serverResponse)&&"auth/multi-factor-auth-required"===t.code)try{return new Jc(e,t.serverResponse,n,t.message)}catch(t){}return null}function zc(){}function $c(t){Vi(this,"factorId",t.fa),this.a=t}function Zc(t){if($c.call(this,t),this.a.fa!=So.PROVIDER_ID)throw new T("argument-error","firebase.auth.PhoneMultiFactorAssertion requires a valid firebase.auth.PhoneAuthCredential")}function Qc(t,e){for(var n in Fe.call(this,t),e)this[n]=e[n]}function th(t,e){this.a=t,this.b=[],this.c=b(this.yc,this),Ze(this.a,"userReloaded",this.c);var i=[];e&&e.multiFactor&&e.multiFactor.enrolledFactors&&V(e.multiFactor.enrolledFactors,function(t){var e=null,n={};if(t){t.uid&&(n[Xi]=t.uid),t.displayName&&(n[Bi]=t.displayName),t.enrollmentTime&&(n[Wi]=new Date(t.enrollmentTime).toISOString()),t.phoneNumber&&(n[Ji]=t.phoneNumber);try{e=new Yi(n)}catch(t){}t=e}else t=null;t&&i.push(t)}),eh(this,i)}function eh(t,e){t.b=e,Vi(t,"enrolledFactors",e)}function nh(t,e,n){if(this.h=t,this.i=e,this.g=n,this.c=3e4,this.f=96e4,this.b=null,this.a=this.c,this.f<this.c)throw Error("Proactive refresh lower bound greater than upper bound!")}function ih(t,e){return e?(t.a=t.c,t.g()):(e=t.a,t.a*=2,t.a>t.f&&(t.a=t.f),e)}function rh(t){this.f=t,this.b=this.a=null,this.c=Date.now()}function oh(t,e){void 0===e&&(e=t.b?(e=t.b).a-e.g:0),t.c=Date.now()+1e3*e}function ah(t,e){t.b=Pr(e[Ha]||""),t.a=e.refreshToken,oh(t,void 0!==(e=e.expiresIn)?Number(e):void 0)}function sh(e,t){return i=e.f,r=t,new fe(function(e,n){"refresh_token"==r.grant_type&&r.refresh_token||"authorization_code"==r.grant_type&&r.code?$a(i,i.l+"?key="+encodeURIComponent(i.c),function(t){t?t.error?n(Ys(t)):t.access_token&&t.refresh_token?e(t):n(new T("internal-error")):n(new T("network-request-failed"))},"POST",qn(r).toString(),i.g,i.m.get()):n(new T("internal-error"))}).then(function(t){return e.b=Pr(t.access_token),e.a=t.refresh_token,oh(e,t.expires_in),{accessToken:e.b.toString(),refreshToken:e.a}}).o(function(t){throw"auth/user-token-expired"==t.code&&(e.a=null),t});var i,r}function uh(t,e){this.a=t||null,this.b=e||null,Fi(this,{lastSignInTime:Pi(e||null),creationTime:Pi(t||null)})}function ch(t,e,n,i,r,o){Fi(this,{uid:t,displayName:i||null,photoURL:r||null,email:n||null,phoneNumber:o||null,providerId:e})}function hh(t,e,n){this.J=[],this.l=t.apiKey,this.m=t.appName,this.s=t.authDomain||null;var i,r=zl.default.SDK_VERSION?mi(zl.default.SDK_VERSION):null;this.a=new Fa(this.l,_(A),r),t.emulatorConfig&&Ja(this.a,t.emulatorConfig),this.b=new rh(this.a),bh(this,e[Ha]),ah(this.b,e),Vi(this,"refreshToken",this.b.a),Ih(this,n||{}),ln.call(this),this.R=!1,this.s&&wi()&&(this.i=Lc(this.s,this.l,this.m)),this.S=[],this.h=null,this.u=(i=this,new nh(function(){return i.I(!0)},function(t){return!(!t||"auth/network-request-failed"!=t.code)},function(){var t=i.b.c-Date.now()-3e5;return 0<t?t:0})),this.aa=b(this.hb,this);var o=this;this.ya=null,this.Oa=function(t){o.wa(t.h)},this.ja=null,this.Aa=function(t){Ja(o.a,t.c)},this.X=null,this.$=[],this.Ba=function(t){dh(o,t.f)},this.ba=null,this.O=new th(this,n),Vi(this,"multiFactor",this.O)}function lh(t,e){t.ja&&en(t.ja,"languageCodeChanged",t.Oa),(t.ja=e)&&Ze(e,"languageCodeChanged",t.Oa)}function fh(t,e){t.X&&en(t.X,"emulatorConfigChanged",t.Aa),(t.X=e)&&Ze(e,"emulatorConfigChanged",t.Aa)}function dh(t,e){t.$=e,za(t.a,zl.default.SDK_VERSION?mi(zl.default.SDK_VERSION,t.$):null)}function ph(t,e){t.ba&&en(t.ba,"frameworkChanged",t.Ba),(t.ba=e)&&Ze(e,"frameworkChanged",t.Ba)}function vh(e){try{return zl.default.app(e.m).auth()}catch(t){throw new T("internal-error","No firebase.auth.Auth instance is available for the Firebase App '"+e.m+"'!")}}function mh(t){t.D||t.u.b||(t.u.start(),en(t,"tokenChanged",t.aa),Ze(t,"tokenChanged",t.aa))}function gh(t){en(t,"tokenChanged",t.aa),t.u.stop()}function bh(t,e){t.za=e,Vi(t,"_lat",e)}function yh(t){for(var e=[],n=0;n<t.S.length;n++)e.push(t.S[n](t));return Te(e).then(function(){return t})}function wh(t){t.i&&!t.R&&(t.R=!0,Ac(t.i,t))}function Ih(t,e){Fi(t,{uid:e.uid,displayName:e.displayName||null,photoURL:e.photoURL||null,email:e.email||null,emailVerified:e.emailVerified||!1,phoneNumber:e.phoneNumber||null,isAnonymous:e.isAnonymous||!1,tenantId:e.tenantId||null,metadata:new uh(e.createdAt,e.lastLoginAt),providerData:[]}),t.a.b=t.tenantId}function Th(){}function Eh(t){return ye().then(function(){if(t.D)throw new T("app-deleted")})}function Ah(t){return q(t.providerData,function(t){return t.providerId})}function kh(t,e){e&&(Sh(t,e.providerId),t.providerData.push(e))}function Sh(t,e){B(t.providerData,function(t){return t.providerId==e})}function Nh(t,e,n){("uid"!=e||n)&&t.hasOwnProperty(e)&&Vi(t,e,n)}function _h(e,t){var n,i;e!=t&&(Fi(e,{uid:t.uid,displayName:t.displayName,photoURL:t.photoURL,email:t.email,emailVerified:t.emailVerified,phoneNumber:t.phoneNumber,isAnonymous:t.isAnonymous,tenantId:t.tenantId,providerData:[]}),t.metadata?Vi(e,"metadata",new uh((i=t.metadata).a,i.b)):Vi(e,"metadata",new uh),V(t.providerData,function(t){kh(e,t)}),n=e.b,i=t.b,n.b=i.b,n.a=i.a,n.c=i.c,Vi(e,"refreshToken",e.b.a),eh(e.O,t.O.b))}function Oh(r){return r.I().then(function(t){var e,n,i=r.isAnonymous;return n=t,Xs((e=r).a,As,{idToken:n}).then(b(e.Kc,e)).then(function(){return i||Nh(r,"isAnonymous",!1),t})})}function Ch(t,e){e[Ha]&&t.za!=e[Ha]&&(ah(t.b,e),t.dispatchEvent(new Qc("tokenChanged")),bh(t,e[Ha]),Nh(t,"refreshToken",t.b.a))}function Rh(t,e){return Oh(t).then(function(){if(K(Ah(t),e))return yh(t).then(function(){throw new T("provider-already-linked")})})}function Dh(t,e,n){return qi({user:t,credential:_o(e),additionalUserInfo:e=Vr(e),operationType:n})}function Ph(t,e){return Ch(t,e),t.reload().then(function(){return t})}function Lh(n,i,t,e,r){if(!wi())return we(new T("operation-not-supported-in-this-environment"));if(n.h&&!r)return we(n.h);var o=Ur(t.providerId),a=Ni(n.uid+":::"),s=null,u=ii(s=(!Ei()||ui())&&n.s&&t.isOAuthProvider?uu(n.s,n.l,n.m,i,t,null,a,zl.default.SDK_VERSION||null,null,null,n.tenantId):s,o&&o.ua,o&&o.ta);return e=e().then(function(){if(Mh(n),!r)return n.I().then(function(){})}).then(function(){return _c(n.i,u,i,t,a,!!s,n.tenantId)}).then(function(){return new fe(function(t,e){n.na(i,null,new T("cancelled-popup-request"),n.g||null),n.f=t,n.C=e,n.g=a,n.c=Rc(n.i,n,i,u,a)})}).then(function(t){return u&&ni(u),t?qi(t):null}).o(function(t){throw u&&ni(u),t}),jh(n,e,r)}function xh(e,t,n,i,r){if(!wi())return we(new T("operation-not-supported-in-this-environment"));if(e.h&&!r)return we(e.h);var o=null,a=Ni(e.uid+":::");return i=i().then(function(){if(Mh(e),!r)return e.I().then(function(){})}).then(function(){return e.ga=a,yh(e)}).then(function(t){return t=e.ha?(t=e.ha).b.set(Fh,e.w(),t.a):t}).then(function(){return Cc(e.i,t,n,a,e.tenantId)}).o(function(t){if(o=t,e.ha)return qh(e.ha);throw o}).then(function(){if(o)throw o}),jh(e,i,r)}function Mh(t){if(!t.i||!t.R){if(t.i&&!t.R)throw new T("internal-error");throw new T("auth-domain-config-required")}}function jh(n,t,e){var i,r=(t=t,e=e,(i=n).h&&!e?(t.cancel(),we(i.h)):t.o(function(t){throw!t||"auth/user-disabled"!=t.code&&"auth/user-token-expired"!=t.code||(i.h||i.dispatchEvent(new Qc("userInvalidated")),i.h=t),t}));return n.J.push(r),r.oa(function(){G(n.J,r)}),r.o(function(t){var e=null;throw(e=t&&"auth/multi-factor-auth-required"===t.code?Yc(t.w(),vh(n),b(n.jc,n)):e)||t})}function Uh(t){if(!t.apiKey)return null;var e={apiKey:t.apiKey,authDomain:t.authDomain,appName:t.appName,emulatorConfig:t.emulatorConfig},n={};if(!t.stsTokenManager||!t.stsTokenManager.accessToken)return null;n[Ha]=t.stsTokenManager.accessToken,n.refreshToken=t.stsTokenManager.refreshToken||null;var i=t.stsTokenManager.expirationTime;i&&(n.expiresIn=(i-Date.now())/1e3);var r=new hh(e,n,t);return t.providerData&&V(t.providerData,function(t){t&&kh(r,qi(t))}),t.redirectEventId&&(r.ga=t.redirectEventId),r}function Vh(t){this.a=t,this.b=Bu()}Bc.prototype.Rc=function(t){var n=this;return t.sb(this.a.a,this.c).then(function(t){var e=ct(n.f);return delete e[Wc],delete e[Xc],lt(e,t),n.g(e)})},w(Jc,T),zc.prototype.sb=function(t,e,n){return e.type==zr?(o=this,a=t,s=n,e.Ha().then(function(t){return t={idToken:t},void 0!==s&&(t.displayName=s),lt(t,{phoneVerificationInfo:ko(o.a)}),Xs(a,Ts,t)})):(i=this,r=t,e.Ha().then(function(t){return lt(t={mfaPendingCredential:t},{phoneVerificationInfo:ko(i.a)}),Xs(r,Es,t)}));var i,r,o,a,s},w($c,zc),w(Zc,$c),w(Qc,Fe),(t=th.prototype).yc=function(t){var e;eh(this,(t=t.hd,e=[],V(t.mfaInfo||[],function(t){(t=Gi(t))&&e.push(t)}),e))},t.Rb=function(){return this.a.I().then(function(t){return new Yr(t,null)})},t.fc=function(e,n){var i=this,r=this.a.a;return this.Rb().then(function(t){return e.sb(r,t,n)}).then(function(t){return Ch(i.a,t),i.a.reload()})},t.bd=function(t){var n=this,i="string"==typeof t?t:t.uid,e=this.a.a;return this.a.I().then(function(t){return Xs(e,Ws,{idToken:t,mfaEnrollmentId:i})}).then(function(t){var e=F(n.b,function(t){return t.uid!=i});return eh(n,e),Ch(n.a,t),n.a.reload().o(function(t){if("auth/user-token-expired"!=t.code)throw t})})},t.w=function(){return{multiFactor:{enrolledFactors:q(this.b,function(t){return t.w()})}}},nh.prototype.start=function(){this.a=this.c,function e(n,t){n.stop();n.b=mn(ih(n,t)).then(Di).then(function(){return n.h()}).then(function(){e(n,!0)}).o(function(t){n.i(t)&&e(n,!1)})}(this,!0)},nh.prototype.stop=function(){this.b&&(this.b.cancel(),this.b=null)},rh.prototype.w=function(){return{apiKey:this.f.c,refreshToken:this.a,accessToken:this.b&&this.b.toString(),expirationTime:this.c}},rh.prototype.getToken=function(t){return t=!!t,this.b&&!this.a?we(new T("user-token-expired")):t||!this.b||Date.now()>this.c-3e4?this.a?sh(this,{grant_type:"refresh_token",refresh_token:this.a}):ye(null):ye({accessToken:this.b.toString(),refreshToken:this.a})},uh.prototype.w=function(){return{lastLoginAt:this.b,createdAt:this.a}},w(hh,ln),hh.prototype.wa=function(t){this.ya=t,Xa(this.a,t)},hh.prototype.la=function(){return this.ya},hh.prototype.Ga=function(){return X(this.$)},hh.prototype.hb=function(){this.u.b&&(this.u.stop(),this.u.start())},Vi(hh.prototype,"providerId","firebase"),(t=hh.prototype).reload=function(){var t=this;return jh(this,Eh(this).then(function(){return Oh(t).then(function(){return yh(t)}).then(Th)}))},t.oc=function(t){return this.I(t).then(function(t){return new Gc(t)})},t.I=function(t){var e=this;return jh(this,Eh(this).then(function(){return e.b.getToken(t)}).then(function(t){if(!t)throw new T("internal-error");return t.accessToken!=e.za&&(bh(e,t.accessToken),e.dispatchEvent(new Qc("tokenChanged"))),Nh(e,"refreshToken",t.refreshToken),t.accessToken}))},t.Kc=function(t){if(!(t=t.users)||!t.length)throw new T("internal-error");Ih(this,{uid:(t=t[0]).localId,displayName:t.displayName,photoURL:t.photoUrl,email:t.email,emailVerified:!!t.emailVerified,phoneNumber:t.phoneNumber,lastLoginAt:t.lastLoginAt,createdAt:t.createdAt,tenantId:t.tenantId});for(var e,n=(e=(e=t).providerUserInfo)&&e.length?q(e,function(t){return new ch(t.rawId,t.providerId,t.email,t.displayName,t.photoUrl,t.phoneNumber)}):[],i=0;i<n.length;i++)kh(this,n[i]);Nh(this,"isAnonymous",!(this.email&&t.passwordHash||this.providerData&&this.providerData.length)),this.dispatchEvent(new Qc("userReloaded",{hd:t}))},t.Lc=function(t){return ji("firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead."),this.tb(t)},t.tb=function(t){var e=this,n=null;return jh(this,t.c(this.a,this.uid).then(function(t){return Ch(e,t),n=Dh(e,t,"reauthenticate"),e.h=null,e.reload()}).then(function(){return n}),!0)},t.Cc=function(t){return ji("firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead."),this.qb(t)},t.qb=function(e){var n=this,i=null;return jh(this,Rh(this,e.providerId).then(function(){return n.I()}).then(function(t){return e.b(n.a,t)}).then(function(t){return i=Dh(n,t,"link"),Ph(n,t)}).then(function(){return i}))},t.Dc=function(t,e){var n=this;return jh(this,Rh(this,"phone").then(function(){return Kc(vh(n),t,e,b(n.qb,n))}))},t.Mc=function(t,e){var n=this;return jh(this,ye().then(function(){return Kc(vh(n),t,e,b(n.tb,n))}),!0)},t.Bb=function(e){var n=this;return jh(this,this.I().then(function(t){return n.a.Bb(t,e)}).then(function(t){return Ch(n,t),n.reload()}))},t.ed=function(e){var n=this;return jh(this,this.I().then(function(t){return e.b(n.a,t)}).then(function(t){return Ch(n,t),n.reload()}))},t.Cb=function(e){var n=this;return jh(this,this.I().then(function(t){return n.a.Cb(t,e)}).then(function(t){return Ch(n,t),n.reload()}))},t.Db=function(e){if(void 0===e.displayName&&void 0===e.photoURL)return Eh(this);var n=this;return jh(this,this.I().then(function(t){return n.a.Db(t,{displayName:e.displayName,photoUrl:e.photoURL})}).then(function(t){return Ch(n,t),Nh(n,"displayName",t.displayName||null),Nh(n,"photoURL",t.photoUrl||null),V(n.providerData,function(t){"password"===t.providerId&&(Vi(t,"displayName",n.displayName),Vi(t,"photoURL",n.photoURL))}),yh(n)}).then(Th))},t.cd=function(e){var n=this;return jh(this,Oh(this).then(function(t){return K(Ah(n),e)?Xs(n.a,ys,{idToken:t,deleteProvider:[e]}).then(function(t){var e={};return V(t.providerUserInfo||[],function(t){e[t.providerId]=!0}),V(Ah(n),function(t){e[t]||Sh(n,t)}),e[So.PROVIDER_ID]||Vi(n,"phoneNumber",null),yh(n)}):yh(n).then(function(){throw new T("no-such-provider")})}))},t.delete=function(){var e=this;return jh(this,this.I().then(function(t){return Xs(e.a,bs,{idToken:t})}).then(function(){e.dispatchEvent(new Qc("userDeleted"))})).then(function(){for(var t=0;t<e.J.length;t++)e.J[t].cancel("app-deleted");lh(e,null),fh(e,null),ph(e,null),e.J=[],e.D=!0,gh(e),Vi(e,"refreshToken",null),e.i&&kc(e.i,e)})},t.Fb=function(t,e){return!!("linkViaPopup"==t&&(this.g||null)==e&&this.f||"reauthViaPopup"==t&&(this.g||null)==e&&this.f||"linkViaRedirect"==t&&(this.ga||null)==e||"reauthViaRedirect"==t&&(this.ga||null)==e)},t.na=function(t,e,n,i){"linkViaPopup"!=t&&"reauthViaPopup"!=t||i!=(this.g||null)||(n&&this.C?this.C(n):e&&!n&&this.f&&this.f(e),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.C)},t.Fa=function(t,e){return"linkViaPopup"==t&&e==(this.g||null)?b(this.Kb,this):"reauthViaPopup"==t&&e==(this.g||null)?b(this.Lb,this):"linkViaRedirect"==t&&(this.ga||null)==e?b(this.Kb,this):"reauthViaRedirect"==t&&(this.ga||null)==e?b(this.Lb,this):null},t.Ec=function(t){var e=this;return Lh(this,"linkViaPopup",t,function(){return Rh(e,t.providerId).then(function(){return yh(e)})},!1)},t.Nc=function(t){return Lh(this,"reauthViaPopup",t,function(){return ye()},!0)},t.Fc=function(t){var e=this;return xh(this,"linkViaRedirect",t,function(){return Rh(e,t.providerId)},!1)},t.Oc=function(t){return xh(this,"reauthViaRedirect",t,function(){return ye()},!0)},t.Kb=function(e,n,t,i){var r=this;this.c&&(this.c.cancel(),this.c=null);var o=null;return t=this.I().then(function(t){return ls(r.a,{requestUri:e,postBody:i,sessionId:n,idToken:t})}).then(function(t){return o=Dh(r,t,"link"),Ph(r,t)}).then(function(){return o}),jh(this,t)},t.Lb=function(t,e,n,i){var r=this;this.c&&(this.c.cancel(),this.c=null);var o=null;return jh(this,ye().then(function(){return Qr(fs(r.a,{requestUri:t,sessionId:e,postBody:i,tenantId:n}),r.uid)}).then(function(t){return o=Dh(r,t,"reauthenticate"),Ch(r,t),r.h=null,r.reload()}).then(function(){return o}),!0)},t.ub=function(e){var n=this,i=null;return jh(this,this.I().then(function(t){return i=t,void 0===e||ut(e)?{}:Or(new yr(e))}).then(function(t){return n.a.ub(i,t)}).then(function(t){if(n.email!=t)return n.reload()}).then(function(){}))},t.Eb=function(e,n){var i=this,r=null;return jh(this,this.I().then(function(t){return r=t,void 0===n||ut(n)?{}:Or(new yr(n))}).then(function(t){return i.a.Eb(r,e,t)}).then(function(t){if(i.email!=t)return i.reload()}).then(function(){}))},t.jc=function(t){var e=null,n=this;return jh(this,t=Qr(ye(t),n.uid).then(function(t){return e=Dh(n,t,"reauthenticate"),Ch(n,t),n.h=null,n.reload()}).then(function(){return e}),!0)},t.toJSON=function(){return this.w()},t.w=function(){var e={uid:this.uid,displayName:this.displayName,photoURL:this.photoURL,email:this.email,emailVerified:this.emailVerified,phoneNumber:this.phoneNumber,isAnonymous:this.isAnonymous,tenantId:this.tenantId,providerData:[],apiKey:this.l,appName:this.m,authDomain:this.s,stsTokenManager:this.b.w(),redirectEventId:this.ga||null};return this.metadata&&lt(e,this.metadata.w()),V(this.providerData,function(t){e.providerData.push(function(t){var e,n={};for(e in t)t.hasOwnProperty(e)&&(n[e]=t[e]);return n}(t))}),lt(e,this.O.w()),e};var Fh={name:"redirectUser",F:"session"};function qh(t){return Ju(t.b,Fh,t.a)}function Hh(t){var e,n,i,r;this.a=t,this.b=Bu(),this.c=null,this.f=(n=Bh("local"),i=Bh("session"),r=Bh("none"),function(n,i,r){var o=Xu(i,r),a=Wu(n,i.F);return n.get(i,r).then(function(t){var e=null;try{e=Si(l.localStorage.getItem(o))}catch(t){}if(e&&!t)return l.localStorage.removeItem(o),n.set(i,e,r);e&&t&&"localStorage"!=a.type&&l.localStorage.removeItem(o)})}((e=this).b,n,e.a).then(function(){return e.b.get(i,e.a)}).then(function(t){return t?i:e.b.get(r,e.a).then(function(t){return t?r:e.b.get(n,e.a).then(function(t){return t?n:e.b.get(Gh,e.a).then(function(t){return t?Bh(t):n})})})}).then(function(t){return e.c=t,Kh(e,t.F)}).o(function(){e.c||(e.c=n)})),this.b.addListener(Bh("local"),this.a,b(this.g,this))}function Kh(t,e){var n,s,i=[];for(n in Ku)Ku[n]!==e&&i.push(Ju(t.b,Bh(Ku[n]),t.a));return i.push(Ju(t.b,Gh,t.a)),s=i,new fe(function(n,e){var i=s.length,r=[];if(i)for(var t=function(t,e){i--,r[t]=e,0==i&&n(r)},o=function(t){e(t)},a=0;a<s.length;a++)Ie(s[a],y(t,a),o);else n(r)})}Hh.prototype.g=function(){var e=this,n=Bh("local");Yh(this,function(){return ye().then(function(){return e.c&&"local"!=e.c.F?e.b.get(n,e.a):null}).then(function(t){if(t)return Kh(e,"local").then(function(){e.c=n})})})};var Gh={name:"persistence",F:"session"};function Bh(t){return{name:"authUser",F:t}}function Wh(t,e){return Yh(t,function(){return t.b.set(t.c,e.w(),t.a)})}function Xh(t){return Yh(t,function(){return Ju(t.b,t.c,t.a)})}function Jh(t,e,n){return Yh(t,function(){return t.b.get(t.c,t.a).then(function(t){return t&&e&&(t.authDomain=e),t&&n&&(t.emulatorConfig=n),Uh(t||{})})})}function Yh(t,e){return t.f=t.f.then(e,e),t.f}function zh(t){if(this.l=!1,Vi(this,"settings",new qc),Vi(this,"app",t),!this.app.options||!this.app.options.apiKey)throw new T("invalid-api-key");var n,e,i,r,o,a;t=zl.default.SDK_VERSION?mi(zl.default.SDK_VERSION):null,this.a=new Fa(this.app.options&&this.app.options.apiKey,_(A),t),this.R=[],this.s=[],this.O=[],this.hb=zl.default.INTERNAL.createSubscribe(b(this.zc,this)),this.X=void 0,this.bc=zl.default.INTERNAL.createSubscribe(b(this.Ac,this)),il(this,null),this.i=new Hh(this.app.options.apiKey+":"+this.app.name),this.D=new Vh(this.app.options.apiKey+":"+this.app.name),this.$=ul(this,(e=(n=this).app.options.authDomain,t=function(e){var t=function(t,e){return t.b.get(Fh,t.a).then(function(t){return t&&e&&(t.authDomain=e),Uh(t||{})})}(e.D,e.app.options.authDomain).then(function(t){return(e.m=t)&&(t.ha=e.D),qh(e.D)});return ul(e,t)}(n).then(function(){return Jh(n.i,e,n.P)}).then(function(e){return e?(e.ha=n.D,n.m&&(n.m.ga||null)==(e.ga||null)?e:e.reload().then(function(){return Wh(n.i,e).then(function(){return e})}).o(function(t){return"auth/network-request-failed"==t.code?e:Xh(n.i)})):null}).then(function(t){il(n,t||null)}),ul(n,t))),this.h=ul(this,(i=this).$.then(function(){return el(i)}).o(function(){}).then(function(){if(!i.l)return i.ja()}).o(function(){}).then(function(){var t;i.l||(i.ba=!0,(t=i.i).b.addListener(Bh("local"),t.a,i.ja))})),this.ba=!1,this.ja=b(this.Zc,this),this.Ba=b(this.da,this),this.ya=b(this.mc,this),this.za=b(this.wc,this),this.Aa=b(this.xc,this),this.b=null,o=(r=this).app.options.authDomain,a=r.app.options.apiKey,o&&wi()&&(r.Oa=r.$.then(function(){var t;if(!r.l)return r.b=Lc(o,a,r.app.name,r.P),Ac(r.b,r),ol(r)&&wh(ol(r)),r.m&&(wh(r.m),(t=r.m).wa(r.la()),lh(t,r),dh(t=r.m,r.J),ph(t,r),Ja((t=r.m).a,r.P),fh(t,r),r.m=null),r.b})),this.INTERNAL={},this.INTERNAL.delete=b(this.delete,this),this.INTERNAL.logFramework=b(this.Gc,this),this.u=0,ln.call(this),t=this,Object.defineProperty(t,"lc",{get:function(){return this.la()},set:function(t){this.wa(t)},enumerable:!1}),t.aa=null,Object.defineProperty(t,"ti",{get:function(){return this.T()},set:function(t){this.yb(t)},enumerable:!1}),t.S=null,Object.defineProperty(t,"emulatorConfig",{get:function(){var t;return t=this.P?qi({protocol:(t=On(this.P.url)).c,host:t.a,port:t.g,options:qi({disableWarnings:this.P.ec})}):null},enumerable:!1}),this.J=[],this.P=null}function $h(t){Fe.call(this,"languageCodeChanged"),this.h=t}function Zh(t){Fe.call(this,"emulatorConfigChanged"),this.c=t}function Qh(t){Fe.call(this,"frameworkChanged"),this.f=t}function tl(t){return t.Oa||we(new T("auth-domain-config-required"))}function el(t){if(!wi())return we(new T("operation-not-supported-in-this-environment"));var e=tl(t).then(function(){return t.b.qa()}).then(function(t){return t?qi(t):null});return ul(t,e)}function nl(o,a){var s={};return s.apiKey=o.app.options.apiKey,s.authDomain=o.app.options.authDomain,s.appName=o.app.name,o.P&&(s.emulatorConfig=o.P),o.$.then(function(){return t=s,e=a,n=o.D,i=o.Ga(),r=new hh(t,e),n&&(r.ha=n),i&&dh(r,i),r.reload().then(function(){return r});var t,e,n,i,r}).then(function(t){return ol(o)&&t.uid==ol(o).uid?_h(ol(o),t):(il(o,t),wh(t)),o.da(t)}).then(function(){sl(o)})}function il(t,e){var n,i;ol(t)&&(n=ol(t),i=t.Ba,B(n.S,function(t){return t==i}),en(ol(t),"tokenChanged",t.ya),en(ol(t),"userDeleted",t.za),en(ol(t),"userInvalidated",t.Aa),gh(ol(t))),e&&(e.S.push(t.Ba),Ze(e,"tokenChanged",t.ya),Ze(e,"userDeleted",t.za),Ze(e,"userInvalidated",t.Aa),0<t.u&&mh(e)),Vi(t,"currentUser",e),e&&(e.wa(t.la()),lh(e,t),dh(e,t.J),ph(e,t),Ja(e.a,t.P),fh(e,t))}function rl(n,t){var e=null,i=null;return ul(n,t.then(function(t){return e=_o(t),i=Vr(t),nl(n,t)},function(t){var e=null;throw(e=t&&"auth/multi-factor-auth-required"===t.code?Yc(t.w(),n,b(n.kc,n)):e)||t}).then(function(){return qi({user:ol(n),credential:e,additionalUserInfo:i,operationType:"signIn"})}))}function ol(t){return t.currentUser}function al(t){return ol(t)&&ol(t)._lat||null}function sl(t){if(t.ba){for(var e=0;e<t.s.length;e++)t.s[e]&&t.s[e](al(t));if(t.X!==t.getUid()&&t.O.length)for(t.X=t.getUid(),e=0;e<t.O.length;e++)t.O[e]&&t.O[e](al(t))}}function ul(t,e){return t.R.push(e),e.oa(function(){G(t.R,e)}),e}function cl(){}function hl(){this.a={},this.b=1e12}Hh.prototype.xb=function(e){var n=null,i=this;return function(t){var e=new T("invalid-persistence-type"),n=new T("unsupported-persistence-type");t:{for(i in Ku)if(Ku[i]==t){var i=!0;break t}i=!1}if(!i||"string"!=typeof t)throw e;switch(hi()){case"ReactNative":if("session"===t)throw n;break;case"Node":if("none"!==t)throw n;break;case"Worker":if("session"===t||!Tu()&&"none"!==t)throw n;break;default:if(!yi()&&"none"!==t)throw n}}(e),Yh(this,function(){return e!=i.c.F?i.b.get(i.c,i.a).then(function(t){return n=t,Kh(i,e)}).then(function(){if(i.c=Bh(e),n)return i.b.set(i.c,n,i.a)}):ye()})},w(zh,ln),w($h,Fe),w(Zh,Fe),w(Qh,Fe),(t=zh.prototype).xb=function(t){return t=this.i.xb(t),ul(this,t)},t.wa=function(t){this.aa===t||this.l||(this.aa=t,Xa(this.a,this.aa),this.dispatchEvent(new $h(this.la())))},t.la=function(){return this.aa},t.fd=function(){var t=l.navigator;this.wa(t&&(t.languages&&t.languages[0]||t.language||t.userLanguage)||null)},t.gd=function(t,e){if(!this.P){if(!/^https?:\/\//.test(t))throw new T("argument-error","Emulator URL must start with a valid scheme (http:// or https://).");e=!!e&&!!e.disableWarnings,n=e,"undefined"!=typeof console&&"function"==typeof console.info&&console.info("WARNING: You are using the Auth Emulator, which is intended for local testing only.  Do not use with production credentials."),l.document&&!n&&ai().then(function(){var t=l.document.createElement("div");t.innerText="Running in emulator mode. Do not use with production credentials.",t.style.position="fixed",t.style.width="100%",t.style.backgroundColor="#ffffff",t.style.border=".1em solid #000000",t.style.color="#ff0000",t.style.bottom="0px",t.style.left="0px",t.style.margin="0px",t.style.zIndex=1e4,t.style.textAlign="center",t.classList.add("firebase-emulator-warning"),l.document.body.appendChild(t)}),this.P={url:t,ec:e},this.settings.ib=!0,Ja(this.a,this.P),this.dispatchEvent(new Zh(this.P))}var n},t.Gc=function(t){this.J.push(t),za(this.a,zl.default.SDK_VERSION?mi(zl.default.SDK_VERSION,this.J):null),this.dispatchEvent(new Qh(this.J))},t.Ga=function(){return X(this.J)},t.yb=function(t){this.S===t||this.l||(this.S=t,this.a.b=this.S)},t.T=function(){return this.S},t.toJSON=function(){return{apiKey:this.app.options.apiKey,authDomain:this.app.options.authDomain,appName:this.app.name,currentUser:ol(this)&&ol(this).w()}},t.Fb=function(t,e){switch(t){case"unknown":case"signInViaRedirect":return!0;case"signInViaPopup":return this.g==e&&!!this.f;default:return!1}},t.na=function(t,e,n,i){"signInViaPopup"==t&&this.g==i&&(n&&this.C?this.C(n):e&&!n&&this.f&&this.f(e),this.c&&(this.c.cancel(),this.c=null),delete this.f,delete this.C)},t.Fa=function(t,e){return"signInViaRedirect"==t||"signInViaPopup"==t&&this.g==e&&this.f?b(this.ic,this):null},t.ic=function(t,e,n,i){var r=this,o={requestUri:t,postBody:i,sessionId:e,tenantId:n};return this.c&&(this.c.cancel(),this.c=null),r.$.then(function(){return rl(r,hs(r.a,o))})},t.Xc=function(e){if(!wi())return we(new T("operation-not-supported-in-this-environment"));var n=this,t=Ur(e.providerId),i=Ni(),r=null,o=ii(r=(!Ei()||ui())&&this.app.options.authDomain&&e.isOAuthProvider?uu(this.app.options.authDomain,this.app.options.apiKey,this.app.name,"signInViaPopup",e,null,i,zl.default.SDK_VERSION||null,null,null,this.T(),this.P):r,t&&t.ua,t&&t.ta);return ul(this,t=tl(this).then(function(t){return _c(t,o,"signInViaPopup",e,i,!!r,n.T())}).then(function(){return new fe(function(t,e){n.na("signInViaPopup",null,new T("cancelled-popup-request"),n.g),n.f=t,n.C=e,n.g=i,n.c=Rc(n.b,n,"signInViaPopup",o,i)})}).then(function(t){return o&&ni(o),t?qi(t):null}).o(function(t){throw o&&ni(o),t}))},t.Yc=function(t){if(!wi())return we(new T("operation-not-supported-in-this-environment"));var e=this;return ul(this,tl(this).then(function(){return Yh(t=e.i,function(){return t.b.set(Gh,t.c.F,t.a)});var t}).then(function(){return Cc(e.b,"signInViaRedirect",t,void 0,e.T())}))},t.qa=function(){var e=this;return el(this).then(function(t){return e.b&&jc(e.b.b),t}).o(function(t){throw e.b&&jc(e.b.b),t})},t.dd=function(t){if(!t)return we(new T("null-user"));if(this.S!=t.tenantId)return we(new T("tenant-id-mismatch"));var e=this,n={};n.apiKey=this.app.options.apiKey,n.authDomain=this.app.options.authDomain,n.appName=this.app.name;var i,r,o,a,s,u=(i=t,r=n,o=e.D,a=e.Ga(),s=i.b,(n={})[Ha]=s.b&&s.b.toString(),n.refreshToken=s.a,r=new hh(r||{apiKey:i.l,authDomain:i.s,appName:i.m},n),o&&(r.ha=o),a&&dh(r,a),_h(r,i),r);return ul(this,this.h.then(function(){if(e.app.options.apiKey!=t.l)return u.reload()}).then(function(){return ol(e)&&t.uid==ol(e).uid?(_h(ol(e),t),e.da(t)):(il(e,u),wh(u),e.da(u))}).then(function(){sl(e)}))},t.Ab=function(){var t=this,e=this.h.then(function(){return t.b&&jc(t.b.b),ol(t)?(il(t,null),Xh(t.i).then(function(){sl(t)})):ye()});return ul(this,e)},t.Zc=function(){var i=this;return Jh(this.i,this.app.options.authDomain).then(function(t){if(!i.l){var e,n;if((e=ol(i)&&t)&&(e=ol(i).uid,n=t.uid,e=null!=e&&""!==e&&null!=n&&""!==n&&e==n),e)return _h(ol(i),t),ol(i).I();(ol(i)||t)&&(il(i,t),t&&(wh(t),t.ha=i.D),i.b&&Ac(i.b,i),sl(i))}})},t.da=function(t){return Wh(this.i,t)},t.mc=function(){sl(this),this.da(ol(this))},t.wc=function(){this.Ab()},t.xc=function(){this.Ab()},t.kc=function(t){var e=this;return this.h.then(function(){return rl(e,ye(t))})},t.zc=function(t){var e=this;this.addAuthTokenListener(function(){t.next(ol(e))})},t.Ac=function(t){var e,n,i=this;n=function(){t.next(ol(i))},(e=this).O.push(n),ul(e,e.h.then(function(){!e.l&&K(e.O,n)&&e.X!==e.getUid()&&(e.X=e.getUid(),n(al(e)))}))},t.Ic=function(t,e,n){var i=this;return this.ba&&Promise.resolve().then(function(){"function"==typeof t?t(ol(i)):"function"==typeof t.next&&t.next(ol(i))}),this.hb(t,e,n)},t.Hc=function(t,e,n){var i=this;return this.ba&&Promise.resolve().then(function(){i.X=i.getUid(),"function"==typeof t?t(ol(i)):"function"==typeof t.next&&t.next(ol(i))}),this.bc(t,e,n)},t.nc=function(t){var e=this,n=this.h.then(function(){return ol(e)?ol(e).I(t).then(function(t){return{accessToken:t}}):null});return ul(this,n)},t.Tc=function(t){var n=this;return this.h.then(function(){return rl(n,Xs(n.a,qs,{token:t}))}).then(function(t){var e=t.user;return Nh(e,"isAnonymous",!1),n.da(e),t})},t.Uc=function(t,e){var n=this;return this.h.then(function(){return rl(n,Xs(n.a,Hs,{email:t,password:e}))})},t.dc=function(t,e){var n=this;return this.h.then(function(){return rl(n,Xs(n.a,ms,{email:t,password:e}))})},t.$a=function(t){var e=this;return this.h.then(function(){return rl(e,t.ka(e.a))})},t.Sc=function(t){return ji("firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead."),this.$a(t)},t.zb=function(){var n=this;return this.h.then(function(){var t=ol(n);if(t&&t.isAnonymous){var e=qi({providerId:null,isNewUser:!1});return qi({user:t,credential:null,additionalUserInfo:e,operationType:"signIn"})}return rl(n,n.a.zb()).then(function(t){var e=t.user;return Nh(e,"isAnonymous",!0),n.da(e),t})})},t.getUid=function(){return ol(this)&&ol(this).uid||null},t.cc=function(t){this.addAuthTokenListener(t),this.u++,0<this.u&&ol(this)&&mh(ol(this))},t.Pc=function(e){var n=this;V(this.s,function(t){t==e&&n.u--}),this.u<0&&(this.u=0),0==this.u&&ol(this)&&gh(ol(this)),this.removeAuthTokenListener(e)},t.addAuthTokenListener=function(t){var e=this;this.s.push(t),ul(this,this.h.then(function(){e.l||K(e.s,t)&&t(al(e))}))},t.removeAuthTokenListener=function(e){B(this.s,function(t){return t==e})},t.delete=function(){this.l=!0;for(var t=0;t<this.R.length;t++)this.R[t].cancel("app-deleted");return this.R=[],this.i&&(t=this.i).b.removeListener(Bh("local"),t.a,this.ja),this.b&&(kc(this.b,this),jc(this.b.b)),Promise.resolve()},t.hc=function(t){return ul(this,Xs(this.a,gs,{identifier:t,continueUri:Ii()?Qn():"http://localhost"}).then(function(t){return t.signinMethods||[]}))},t.Bc=function(t){return!!To(t)},t.wb=function(e,n){var i=this;return ul(this,ye().then(function(){var t=new yr(n);if(!t.c)throw new T("argument-error",Tr+" must be true when sending sign in link to email");return Or(t)}).then(function(t){return i.a.wb(e,t)}).then(function(){}))},t.jd=function(t){return this.Ra(t).then(function(t){return t.data.email})},t.nb=function(t,e){return ul(this,this.a.nb(t,e).then(function(){}))},t.Ra=function(t){return ul(this,this.a.Ra(t).then(function(t){return new zi(t)}))},t.jb=function(t){return ul(this,this.a.jb(t).then(function(){}))},t.vb=function(e,t){var n=this;return ul(this,ye().then(function(){return void 0===t||ut(t)?{}:Or(new yr(t))}).then(function(t){return n.a.vb(e,t)}).then(function(){}))},t.Wc=function(t,e){return ul(this,Kc(this,t,e,b(this.$a,this)))},t.Vc=function(n,i){var r=this;return ul(this,ye().then(function(){var t=i||Qn(),e=Io(n,t);if(!(t=To(t)))throw new T("argument-error","Invalid email link!");if(t.tenantId!==r.T())throw new T("tenant-id-mismatch");return r.$a(e)}))},cl.prototype.render=function(){},cl.prototype.reset=function(){},cl.prototype.getResponse=function(){},cl.prototype.execute=function(){};var ll=null;function fl(t,e){return(e=dl(e))&&t.a[e]||null}function dl(t){return(t=void 0===t?1e12:t)?t.toString():null}function pl(t,e){this.g=!1,this.c=e,this.a=this.b=null,this.h="invisible"!==this.c.size,this.f=te(t);var n=this;this.i=function(){n.execute()},this.h?this.execute():Ze(this.f,"click",this.i)}function vl(t){if(t.g)throw Error("reCAPTCHA mock was already deleted!")}function ml(){}function gl(){}hl.prototype.render=function(t,e){return this.a[this.b.toString()]=new pl(t,e),this.b++},hl.prototype.reset=function(t){var e=fl(this,t);t=dl(t),e&&t&&(e.delete(),delete this.a[t])},hl.prototype.getResponse=function(t){return(t=fl(this,t))?t.getResponse():null},hl.prototype.execute=function(t){(t=fl(this,t))&&t.execute()},pl.prototype.getResponse=function(){return vl(this),this.b},pl.prototype.execute=function(){vl(this);var n=this;this.a||(this.a=setTimeout(function(){n.b=function(){for(var t=50,e=[];0<t;)e.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62*Math.random()))),t--;return e.join("")}();var t=n.c.callback,e=n.c["expired-callback"];if(t)try{t(n.b)}catch(t){}n.a=setTimeout(function(){if(n.a=null,n.b=null,e)try{e()}catch(t){}n.h&&n.execute()},6e4)},500))},pl.prototype.delete=function(){vl(this),this.g=!0,clearTimeout(this.a),this.a=null,en(this.f,"click",this.i)},Vi(ml,"FACTOR_ID","phone"),gl.prototype.g=function(){return ye(ll=ll||new hl)},gl.prototype.c=function(){};var bl=null;function yl(){this.b=l.grecaptcha?1/0:0,this.f=null,this.a="__rcb"+Math.floor(1e6*Math.random()).toString()}var wl=new dt(gt,"https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),Il=new Ci(3e4,6e4);yl.prototype.g=function(r){var o=this;return new fe(function(t,e){var i=setTimeout(function(){e(new T("network-request-failed"))},Il.get());!l.grecaptcha||r!==o.f&&!o.b?(l[o.a]=function(){var n;l.grecaptcha?(o.f=r,n=l.grecaptcha.render,l.grecaptcha.render=function(t,e){return t=n(t,e),o.b++,t},clearTimeout(i),t(l.grecaptcha)):(clearTimeout(i),e(new T("internal-error"))),delete l[o.a]},ye(Pa(It(wl,{onload:o.a,hl:r||""}))).o(function(){clearTimeout(i),e(new T("internal-error","Unable to load external reCAPTCHA dependencies!"))})):(clearTimeout(i),t(l.grecaptcha))})},yl.prototype.c=function(){this.b--};var Tl=null;function El(t,e,n,i,r,o,a){if(Vi(this,"type","recaptcha"),this.c=this.f=null,this.D=!1,this.v=e,this.g=null,a=a?bl=bl||new gl:Tl=Tl||new yl,this.m=a,this.a=n||{theme:"light",type:"image"},this.h=[],this.a[Sl])throw new T("argument-error","sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");if(this.i="invisible"===this.a[Nl],!l.document)throw new T("operation-not-supported-in-this-environment","RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.");if(!te(e)||!this.i&&te(e).hasChildNodes())throw new T("argument-error","reCAPTCHA container is either not found or already contains inner elements!");this.s=new Fa(t,o||null,r||null),this.u=i||function(){return null};var s=this;this.l=[];var u=this.a[Al];this.a[Al]=function(t){var e;_l(s,t),"function"==typeof u?u(t):"string"!=typeof u||"function"==typeof(e=bi(u,l))&&e(t)};var c=this.a[kl];this.a[kl]=function(){var t;_l(s,null),"function"==typeof c?c():"string"!=typeof c||"function"==typeof(t=bi(c,l))&&t()}}var Al="callback",kl="expired-callback",Sl="sitekey",Nl="size";function _l(t,e){for(var n=0;n<t.l.length;n++)try{t.l[n](e)}catch(t){}}function Ol(t,e){return t.h.push(e),e.oa(function(){G(t.h,e)}),e}function Cl(t){if(t.D)throw new T("internal-error","RecaptchaVerifier instance has been destroyed.")}function Rl(t,e,n){var i=!1;try{this.b=n||zl.default.app()}catch(t){throw new T("argument-error","No firebase.app.App instance is currently initialized.")}if(!this.b.options||!this.b.options.apiKey)throw new T("invalid-api-key");n=this.b.options.apiKey;var r=this,o=null;try{o=this.b.auth().Ga()}catch(t){}try{i=this.b.auth().settings.appVerificationDisabledForTesting}catch(t){}o=zl.default.SDK_VERSION?mi(zl.default.SDK_VERSION,o):null,El.call(this,n,t,e,function(){try{var e=r.b.auth().la()}catch(t){e=null}return e},o,_(A),i)}function Dl(t,e,n,i){t:{n=Array.prototype.slice.call(n);for(var r=0,o=!1,a=0;a<e.length;a++)if(e[a].optional)o=!0;else{if(o)throw new T("internal-error","Argument validator encountered a required argument after an optional argument.");r++}if(o=e.length,n.length<r||o<n.length)i="Expected "+(r==o?1==r?"1 argument":r+" arguments":r+"-"+o+" arguments")+" but got "+n.length+".";else{for(r=0;r<n.length;r++)if(o=e[r].optional&&void 0===n[r],!e[r].M(n[r])&&!o){if(e=e[r],r<0||r>=Pl.length)throw new T("internal-error","Argument validator received an unsupported number of arguments.");n=Pl[r],i=(i?"":n+" argument ")+(e.name?'"'+e.name+'" ':"")+"must be "+e.K+".";break t}i=null}}if(i)throw new T("argument-error",t+" failed: "+i)}(t=El.prototype).Ia=function(){var e=this;return this.f||(this.f=Ol(this,ye().then(function(){if(Ii()&&!ci())return ai();throw new T("operation-not-supported-in-this-environment","RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.")}).then(function(){return e.m.g(e.u())}).then(function(t){return e.g=t,Xs(e.s,Cs,{})}).then(function(t){e.a[Sl]=t.recaptchaSiteKey}).o(function(t){throw e.f=null,t})))},t.render=function(){Cl(this);var n=this;return Ol(this,this.Ia().then(function(){var t,e;return null===n.c&&(e=n.v,n.i||(t=te(e),e=oe("DIV"),t.appendChild(e)),n.c=n.g.render(e,n.a)),n.c}))},t.verify=function(){Cl(this);var r=this;return Ol(this,this.render().then(function(e){return new fe(function(n){var i,t=r.g.getResponse(e);t?n(t):(i=function(t){var e;t&&(e=i,B(r.l,function(t){return t==e}),n(t))},r.l.push(i),r.i&&r.g.execute(r.c))})}))},t.reset=function(){Cl(this),null!==this.c&&this.g.reset(this.c)},t.clear=function(){Cl(this),this.D=!0,this.m.c();for(var t,e=0;e<this.h.length;e++)this.h[e].cancel("RecaptchaVerifier instance has been destroyed.");if(!this.i){e=te(this.v);for(;t=e.firstChild;)e.removeChild(t)}},w(Rl,El);var Pl="First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" ");function Ll(t,e){return{name:t||"",K:"a valid string",optional:!!e,M:function(t){return"string"==typeof t}}}function xl(t,e){return{name:t||"",K:"a boolean",optional:!!e,M:function(t){return"boolean"==typeof t}}}function Ml(t,e){return{name:t||"",K:"a valid object",optional:!!e,M:m}}function jl(t,e){return{name:t||"",K:"a function",optional:!!e,M:function(t){return"function"==typeof t}}}function Ul(t,e){return{name:t||"",K:"null",optional:!!e,M:function(t){return null===t}}}function Vl(n){return{name:n?n+"Credential":"credential",K:n?"a valid "+n+" credential":"a valid credential",optional:!1,M:function(t){if(!t)return!1;var e=!n||t.providerId===n;return!(!t.ka||!e)}}}function Fl(){return{name:"multiFactorAssertion",K:"a valid multiFactorAssertion",optional:!1,M:function(t){return!!t&&!!t.sb}}}function ql(){return{name:"authProvider",K:"a valid Auth provider",optional:!1,M:function(t){return!!(t&&t.providerId&&t.hasOwnProperty&&t.hasOwnProperty("isOAuthProvider"))}}}function Hl(t,e){return m(t)&&"string"==typeof t.type&&t.type===e&&"function"==typeof t.Ha}function Kl(t){return m(t)&&"string"==typeof t.uid}function Gl(){return{name:"applicationVerifier",K:"an implementation of firebase.auth.ApplicationVerifier",optional:!1,M:function(t){return!(!t||"string"!=typeof t.type||"function"!=typeof t.verify)}}}function Bl(e,n,t,i){return{name:t||"",K:e.K+" or "+n.K,optional:!!i,M:function(t){return e.M(t)||n.M(t)}}}function Wl(t,e){for(var n in e){var i=e[n].name;t[i]=Yl(i,t[n],e[n].j)}}function Xl(t,e){for(var n in e){var i=e[n].name;i!==n&&Object.defineProperty(t,i,{get:y(function(t){return this[t]},n),set:y(function(t,e,n,i){Dl(t,[n],[i],!0),this[e]=i},i,n,e[n].kb),enumerable:!0})}}function Jl(t,e,n,i){t[e]=Yl(e,n,i)}function Yl(t,e,n){function i(){var t=Array.prototype.slice.call(arguments);return Dl(o,n,t),e.apply(this,t)}if(!n)return e;var r,o=(t=(t=t).split("."))[t.length-1];for(r in e)i[r]=e[r];for(r in e.prototype)i.prototype[r]=e.prototype[r];return i}Wl(zh.prototype,{jb:{name:"applyActionCode",j:[Ll("code")]},Ra:{name:"checkActionCode",j:[Ll("code")]},nb:{name:"confirmPasswordReset",j:[Ll("code"),Ll("newPassword")]},dc:{name:"createUserWithEmailAndPassword",j:[Ll("email"),Ll("password")]},hc:{name:"fetchSignInMethodsForEmail",j:[Ll("email")]},qa:{name:"getRedirectResult",j:[]},Bc:{name:"isSignInWithEmailLink",j:[Ll("emailLink")]},Hc:{name:"onAuthStateChanged",j:[Bl(Ml(),jl(),"nextOrObserver"),jl("opt_error",!0),jl("opt_completed",!0)]},Ic:{name:"onIdTokenChanged",j:[Bl(Ml(),jl(),"nextOrObserver"),jl("opt_error",!0),jl("opt_completed",!0)]},vb:{name:"sendPasswordResetEmail",j:[Ll("email"),Bl(Ml("opt_actionCodeSettings",!0),Ul(null,!0),"opt_actionCodeSettings",!0)]},wb:{name:"sendSignInLinkToEmail",j:[Ll("email"),Ml("actionCodeSettings")]},xb:{name:"setPersistence",j:[Ll("persistence")]},Sc:{name:"signInAndRetrieveDataWithCredential",j:[Vl()]},zb:{name:"signInAnonymously",j:[]},$a:{name:"signInWithCredential",j:[Vl()]},Tc:{name:"signInWithCustomToken",j:[Ll("token")]},Uc:{name:"signInWithEmailAndPassword",j:[Ll("email"),Ll("password")]},Vc:{name:"signInWithEmailLink",j:[Ll("email"),Ll("emailLink",!0)]},Wc:{name:"signInWithPhoneNumber",j:[Ll("phoneNumber"),Gl()]},Xc:{name:"signInWithPopup",j:[ql()]},Yc:{name:"signInWithRedirect",j:[ql()]},dd:{name:"updateCurrentUser",j:[Bl({name:"user",K:"an instance of Firebase User",optional:!1,M:function(t){return!!(t&&t instanceof hh)}},Ul(),"user")]},Ab:{name:"signOut",j:[]},toJSON:{name:"toJSON",j:[Ll(null,!0)]},fd:{name:"useDeviceLanguage",j:[]},gd:{name:"useEmulator",j:[Ll("url"),Ml("options",!0)]},jd:{name:"verifyPasswordResetCode",j:[Ll("code")]}}),Xl(zh.prototype,{lc:{name:"languageCode",kb:Bl(Ll(),Ul(),"languageCode")},ti:{name:"tenantId",kb:Bl(Ll(),Ul(),"tenantId")}}),(zh.Persistence=Ku).LOCAL="local",zh.Persistence.SESSION="session",zh.Persistence.NONE="none",Wl(hh.prototype,{delete:{name:"delete",j:[]},oc:{name:"getIdTokenResult",j:[xl("opt_forceRefresh",!0)]},I:{name:"getIdToken",j:[xl("opt_forceRefresh",!0)]},Cc:{name:"linkAndRetrieveDataWithCredential",j:[Vl()]},qb:{name:"linkWithCredential",j:[Vl()]},Dc:{name:"linkWithPhoneNumber",j:[Ll("phoneNumber"),Gl()]},Ec:{name:"linkWithPopup",j:[ql()]},Fc:{name:"linkWithRedirect",j:[ql()]},Lc:{name:"reauthenticateAndRetrieveDataWithCredential",j:[Vl()]},tb:{name:"reauthenticateWithCredential",j:[Vl()]},Mc:{name:"reauthenticateWithPhoneNumber",j:[Ll("phoneNumber"),Gl()]},Nc:{name:"reauthenticateWithPopup",j:[ql()]},Oc:{name:"reauthenticateWithRedirect",j:[ql()]},reload:{name:"reload",j:[]},ub:{name:"sendEmailVerification",j:[Bl(Ml("opt_actionCodeSettings",!0),Ul(null,!0),"opt_actionCodeSettings",!0)]},toJSON:{name:"toJSON",j:[Ll(null,!0)]},cd:{name:"unlink",j:[Ll("provider")]},Bb:{name:"updateEmail",j:[Ll("email")]},Cb:{name:"updatePassword",j:[Ll("password")]},ed:{name:"updatePhoneNumber",j:[Vl("phone")]},Db:{name:"updateProfile",j:[Ml("profile")]},Eb:{name:"verifyBeforeUpdateEmail",j:[Ll("email"),Bl(Ml("opt_actionCodeSettings",!0),Ul(null,!0),"opt_actionCodeSettings",!0)]}}),Wl(hl.prototype,{execute:{name:"execute"},render:{name:"render"},reset:{name:"reset"},getResponse:{name:"getResponse"}}),Wl(cl.prototype,{execute:{name:"execute"},render:{name:"render"},reset:{name:"reset"},getResponse:{name:"getResponse"}}),Wl(fe.prototype,{oa:{name:"finally"},o:{name:"catch"},then:{name:"then"}}),Xl(qc.prototype,{appVerificationDisabled:{name:"appVerificationDisabledForTesting",kb:xl("appVerificationDisabledForTesting")}}),Wl(Hc.prototype,{confirm:{name:"confirm",j:[Ll("verificationCode")]}}),Jl(Zr,"fromJSON",function(t){t="string"==typeof t?JSON.parse(t):t;for(var e,n=[oo,yo,Ao,no],i=0;i<n.length;i++)if(e=n[i](t))return e;return null},[Bl(Ll(),Ml(),"json")]),Jl(wo,"credential",function(t,e){return new bo(t,e)},[Ll("email"),Ll("password")]),Wl(bo.prototype,{w:{name:"toJSON",j:[Ll(null,!0)]}}),Wl(co.prototype,{Ca:{name:"addScope",j:[Ll("scope")]},Ka:{name:"setCustomParameters",j:[Ml("customOAuthParameters")]}}),Jl(co,"credential",ho,[Bl(Ll(),Ml(),"token")]),Jl(wo,"credentialWithLink",Io,[Ll("email"),Ll("emailLink")]),Wl(lo.prototype,{Ca:{name:"addScope",j:[Ll("scope")]},Ka:{name:"setCustomParameters",j:[Ml("customOAuthParameters")]}}),Jl(lo,"credential",fo,[Bl(Ll(),Ml(),"token")]),Wl(po.prototype,{Ca:{name:"addScope",j:[Ll("scope")]},Ka:{name:"setCustomParameters",j:[Ml("customOAuthParameters")]}}),Jl(po,"credential",vo,[Bl(Ll(),Bl(Ml(),Ul()),"idToken"),Bl(Ll(),Ul(),"accessToken",!0)]),Wl(mo.prototype,{Ka:{name:"setCustomParameters",j:[Ml("customOAuthParameters")]}}),Jl(mo,"credential",go,[Bl(Ll(),Ml(),"token"),Ll("secret",!0)]),Wl(uo.prototype,{Ca:{name:"addScope",j:[Ll("scope")]},credential:{name:"credential",j:[Bl(Ll(),Bl(Ml(),Ul()),"optionsOrIdToken"),Bl(Ll(),Ul(),"accessToken",!0)]},Ka:{name:"setCustomParameters",j:[Ml("customOAuthParameters")]}}),Wl(io.prototype,{w:{name:"toJSON",j:[Ll(null,!0)]}}),Wl(to.prototype,{w:{name:"toJSON",j:[Ll(null,!0)]}}),Jl(So,"credential",No,[Ll("verificationId"),Ll("verificationCode")]),Wl(So.prototype,{fb:{name:"verifyPhoneNumber",j:[Bl(Ll(),{name:"phoneInfoOptions",K:"valid phone info options",optional:!1,M:function(t){return!!t&&(t.session&&t.phoneNumber?Hl(t.session,zr)&&"string"==typeof t.phoneNumber:t.session&&t.multiFactorHint?Hl(t.session,$r)&&Kl(t.multiFactorHint):t.session&&t.multiFactorUid?Hl(t.session,$r)&&"string"==typeof t.multiFactorUid:!!t.phoneNumber&&"string"==typeof t.phoneNumber)}},"phoneInfoOptions"),Gl()]}}),Wl(Eo.prototype,{w:{name:"toJSON",j:[Ll(null,!0)]}}),Wl(T.prototype,{toJSON:{name:"toJSON",j:[Ll(null,!0)]}}),Wl(Mo.prototype,{toJSON:{name:"toJSON",j:[Ll(null,!0)]}}),Wl(xo.prototype,{toJSON:{name:"toJSON",j:[Ll(null,!0)]}}),Wl(Jc.prototype,{toJSON:{name:"toJSON",j:[Ll(null,!0)]}}),Wl(Bc.prototype,{Rc:{name:"resolveSignIn",j:[Fl()]}}),Wl(th.prototype,{Rb:{name:"getSession",j:[]},fc:{name:"enroll",j:[Fl(),Ll("displayName",!0)]},bd:{name:"unenroll",j:[Bl({name:"multiFactorInfo",K:"a valid multiFactorInfo",optional:!1,M:Kl},Ll(),"multiFactorInfoIdentifier")]}}),Wl(Rl.prototype,{clear:{name:"clear",j:[]},render:{name:"render",j:[]},verify:{name:"verify",j:[]}}),Jl(hr,"parseLink",br,[Ll("link")]),Jl(ml,"assertion",function(t){return new Zc(t)},[Vl("phone")]),function(){if(void 0===zl.default||!zl.default.INTERNAL||!zl.default.INTERNAL.registerComponent)throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");var t={ActionCodeInfo:{Operation:{EMAIL_SIGNIN:Zi,PASSWORD_RESET:"PASSWORD_RESET",RECOVER_EMAIL:"RECOVER_EMAIL",REVERT_SECOND_FACTOR_ADDITION:$i,VERIFY_AND_CHANGE_EMAIL:Qi,VERIFY_EMAIL:"VERIFY_EMAIL"}},Auth:zh,AuthCredential:Zr,Error:T};Jl(t,"EmailAuthProvider",wo,[]),Jl(t,"FacebookAuthProvider",co,[]),Jl(t,"GithubAuthProvider",lo,[]),Jl(t,"GoogleAuthProvider",po,[]),Jl(t,"TwitterAuthProvider",mo,[]),Jl(t,"OAuthProvider",uo,[Ll("providerId")]),Jl(t,"SAMLAuthProvider",so,[Ll("providerId")]),Jl(t,"PhoneAuthProvider",So,[{name:"auth",K:"an instance of Firebase Auth",optional:!0,M:function(t){return!!(t&&t instanceof zh)}}]),Jl(t,"RecaptchaVerifier",Rl,[Bl(Ll(),{name:"",K:"an HTML element",optional:!1,M:function(t){return!!(t&&t instanceof Element)}},"recaptchaContainer"),Ml("recaptchaParameters",!0),{name:"app",K:"an instance of Firebase App",optional:!0,M:function(t){return!!(t&&t instanceof zl.default.app.App)}}]),Jl(t,"ActionCodeURL",hr,[]),Jl(t,"PhoneMultiFactorGenerator",ml,[]),zl.default.INTERNAL.registerComponent({name:"auth",instanceFactory:function(t){return new zh(t=t.getProvider("app").getImmediate())},multipleInstances:!1,serviceProps:t,instantiationMode:"LAZY",type:"PUBLIC"}),zl.default.INTERNAL.registerComponent({name:"auth-internal",instanceFactory:function(t){return{getUid:b((t=t.getProvider("auth").getImmediate()).getUid,t),getToken:b(t.nc,t),addAuthTokenListener:b(t.cc,t),removeAuthTokenListener:b(t.Pc,t)}},multipleInstances:!1,instantiationMode:"LAZY",type:"PRIVATE"}),zl.default.registerVersion("@firebase/auth","0.16.5"),zl.default.INTERNAL.extendNamespace({User:hh})}()}.apply("undefined"!=typeof __webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})}.apply(this,arguments)}catch(t){throw console.error(t),new Error("Cannot instantiate firebase-auth.js - be sure to load firebase-app.js first.")}});
//# sourceMappingURL=firebase-auth.js.map


/***/ }),

/***/ "./node_modules/firebase/firebase-firestore.js":
/*!*****************************************************!*\
  !*** ./node_modules/firebase/firebase-firestore.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

!function(t,e){ true?e(__webpack_require__(/*! @firebase/app */ "./node_modules/@firebase/app/dist/index.esm.js")):0}(this,function(om){"use strict";try{!function(){function t(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var e=t(om),r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)};function n(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Class extends value "+String(e)+" is not a constructor or null");function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function y(t,s,a,u){return new(a=a||Promise)(function(n,e){function r(t){try{o(u.next(t))}catch(t){e(t)}}function i(t){try{o(u.throw(t))}catch(t){e(t)}}function o(t){var e;t.done?n(t.value):((e=t.value)instanceof a?e:new a(function(t){t(e)})).then(r,i)}o((u=u.apply(t,s||[])).next())})}function g(n,r){var i,o,s,a={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]},t={next:e(0),throw:e(1),return:e(2)};return"function"==typeof Symbol&&(t[Symbol.iterator]=function(){return this}),t;function e(e){return function(t){return function(e){if(i)throw new TypeError("Generator is already executing.");for(;a;)try{if(i=1,o&&(s=2&e[0]?o.return:e[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,e[1])).done)return s;switch(o=0,(e=s?[2&e[0],s.value]:e)[0]){case 0:case 1:s=e;break;case 4:return a.label++,{value:e[1],done:!1};case 5:a.label++,o=e[1],e=[0];continue;case 7:e=a.ops.pop(),a.trys.pop();continue;default:if(!(s=0<(s=a.trys).length&&s[s.length-1])&&(6===e[0]||2===e[0])){a=0;continue}if(3===e[0]&&(!s||e[1]>s[0]&&e[1]<s[3])){a.label=e[1];break}if(6===e[0]&&a.label<s[1]){a.label=s[1],s=e;break}if(s&&a.label<s[2]){a.label=s[2],a.ops.push(e);break}s[2]&&a.ops.pop(),a.trys.pop();continue}e=r.call(n,a)}catch(t){e=[6,t],o=0}finally{i=s=0}if(5&e[0])throw e[1];return{value:e[0]?e[1]:void 0,done:!0}}([e,t])}}}function s(t,e){for(var n=0,r=e.length,i=t.length;n<r;n++,i++)t[i]=e[n];return t}function h(){return"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent?navigator.userAgent:""}var i,o="FirebaseError",a=(n(u,i=Error),u);function u(t,e,n){e=i.call(this,e)||this;return e.code=t,e.customData=n,e.name=o,Object.setPrototypeOf(e,u.prototype),Error.captureStackTrace&&Error.captureStackTrace(e,c.prototype.create),e}var c=(l.prototype.create=function(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];var r,i=e[0]||{},o=this.service+"/"+t,t=this.errors[t],t=t?(r=i,t.replace(d,function(t,e){var n=r[e];return null!=n?String(n):"<"+e+"?>"})):"Error",t=this.serviceName+": "+t+" ("+o+").";return new a(o,t,i)},l);function l(t,e,n){this.service=t,this.serviceName=e,this.errors=n}var f,d=/\{\$([^}]+)}/g;function m(t){return t&&t._delegate?t._delegate:t}(Ee=f=f||{})[Ee.DEBUG=0]="DEBUG",Ee[Ee.VERBOSE=1]="VERBOSE",Ee[Ee.INFO=2]="INFO",Ee[Ee.WARN=3]="WARN",Ee[Ee.ERROR=4]="ERROR",Ee[Ee.SILENT=5]="SILENT";function p(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];if(!(e<t.logLevel)){var i=(new Date).toISOString(),o=w[e];if(!o)throw new Error("Attempted to log a message with an invalid logType (value: "+e+")");console[o].apply(console,s(["["+i+"]  "+t.name+":"],n))}}var v={debug:f.DEBUG,verbose:f.VERBOSE,info:f.INFO,warn:f.WARN,error:f.ERROR,silent:f.SILENT},b=f.INFO,w=((Te={})[f.DEBUG]="log",Te[f.VERBOSE]="log",Te[f.INFO]="info",Te[f.WARN]="warn",Te[f.ERROR]="error",Te),I=(Object.defineProperty(E.prototype,"logLevel",{get:function(){return this._logLevel},set:function(t){if(!(t in f))throw new TypeError('Invalid value "'+t+'" assigned to `logLevel`');this._logLevel=t},enumerable:!1,configurable:!0}),E.prototype.setLogLevel=function(t){this._logLevel="string"==typeof t?v[t]:t},Object.defineProperty(E.prototype,"logHandler",{get:function(){return this._logHandler},set:function(t){if("function"!=typeof t)throw new TypeError("Value assigned to `logHandler` must be a function");this._logHandler=t},enumerable:!1,configurable:!0}),Object.defineProperty(E.prototype,"userLogHandler",{get:function(){return this._userLogHandler},set:function(t){this._userLogHandler=t},enumerable:!1,configurable:!0}),E.prototype.debug=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,f.DEBUG],t)),this._logHandler.apply(this,s([this,f.DEBUG],t))},E.prototype.log=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,f.VERBOSE],t)),this._logHandler.apply(this,s([this,f.VERBOSE],t))},E.prototype.info=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,f.INFO],t)),this._logHandler.apply(this,s([this,f.INFO],t))},E.prototype.warn=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,f.WARN],t)),this._logHandler.apply(this,s([this,f.WARN],t))},E.prototype.error=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._userLogHandler&&this._userLogHandler.apply(this,s([this,f.ERROR],t)),this._logHandler.apply(this,s([this,f.ERROR],t))},E);function E(t){this.name=t,this._logLevel=b,this._logHandler=p,this._userLogHandler=null}var T=function(t,e){return(T=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)};function _(t){var e="function"==typeof Symbol&&Symbol.iterator,n=e&&t[e],r=0;if(n)return n.call(t);if(t&&"number"==typeof t.length)return{next:function(){return{value:(t=t&&r>=t.length?void 0:t)&&t[r++],done:!t}}};throw new TypeError(e?"Object is not iterable.":"Symbol.iterator is not defined.")}var S,N="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof __webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:{},D={},A=N||self;function k(){}function C(t){var e=typeof t;return"array"==(e="object"!=e?e:t?Array.isArray(t)?"array":e:"null")||"object"==e&&"number"==typeof t.length}function R(t){var e=typeof t;return"object"==e&&null!=t||"function"==e}var x="closure_uid_"+(1e9*Math.random()>>>0),O=0;function L(t,e,n){return t.call.apply(t.bind,arguments)}function P(e,n,t){if(!e)throw Error();if(2<arguments.length){var r=Array.prototype.slice.call(arguments,2);return function(){var t=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(t,r),e.apply(n,t)}}return function(){return e.apply(n,arguments)}}function M(t,e,n){return(M=Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?L:P).apply(null,arguments)}function F(e){var n=Array.prototype.slice.call(arguments,1);return function(){var t=n.slice();return t.push.apply(t,arguments),e.apply(this,t)}}function V(){return Date.now()}function U(t,o){function e(){}e.prototype=o.prototype,t.X=o.prototype,t.prototype=new e,(t.prototype.constructor=t).Kb=function(t,e,n){for(var r=Array(arguments.length-2),i=2;i<arguments.length;i++)r[i-2]=arguments[i];return o.prototype[e].apply(t,r)}}function q(){this.j=this.j,this.i=this.i}q.prototype.j=!1,q.prototype.ja=function(){var t;!this.j&&(this.j=!0,this.G(),0)&&(t=this,Object.prototype.hasOwnProperty.call(t,x)&&t[x]||(t[x]=++O))},q.prototype.G=function(){if(this.i)for(;this.i.length;)this.i.shift()()};var B=Array.prototype.indexOf?function(t,e){return Array.prototype.indexOf.call(t,e,void 0)}:function(t,e){if("string"==typeof t)return"string"!=typeof e||1!=e.length?-1:t.indexOf(e,0);for(var n=0;n<t.length;n++)if(n in t&&t[n]===e)return n;return-1},j=Array.prototype.forEach?function(t,e,n){Array.prototype.forEach.call(t,e,n)}:function(t,e,n){for(var r=t.length,i="string"==typeof t?t.split(""):t,o=0;o<r;o++)o in i&&e.call(n,i[o],o,t)};function K(){return Array.prototype.concat.apply([],arguments)}function G(t){var e=t.length;if(0<e){for(var n=Array(e),r=0;r<e;r++)n[r]=t[r];return n}return[]}function Q(t){return/^[\s\xa0]*$/.test(t)}var z,H=String.prototype.trim?function(t){return t.trim()}:function(t){return/^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(t)[1]};function W(t,e){return-1!=t.indexOf(e)}function Y(t,e){return t<e?-1:e<t?1:0}t:{var X=A.navigator;if(X){X=X.userAgent;if(X){z=X;break t}}z=""}function J(t,e,n){for(var r in t)e.call(n,t[r],r,t)}function $(t){var e,n={};for(e in t)n[e]=t[e];return n}var Z="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");function tt(t){for(var e,n,r=1;r<arguments.length;r++){for(e in n=arguments[r])t[e]=n[e];for(var i=0;i<Z.length;i++)e=Z[i],Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])}}function et(t){return et[" "](t),t}et[" "]=k;var nt,rt=W(z,"Opera"),it=W(z,"Trident")||W(z,"MSIE"),ot=W(z,"Edge"),st=ot||it,at=W(z,"Gecko")&&!(W(z.toLowerCase(),"webkit")&&!W(z,"Edge"))&&!(W(z,"Trident")||W(z,"MSIE"))&&!W(z,"Edge"),ut=W(z.toLowerCase(),"webkit")&&!W(z,"Edge");function ct(){var t=A.document;return t?t.documentMode:void 0}t:{var ht="",lt=(lt=z,at?/rv:([^\);]+)(\)|;)/.exec(lt):ot?/Edge\/([\d\.]+)/.exec(lt):it?/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(lt):ut?/WebKit\/(\S+)/.exec(lt):rt?/(?:Version)[ \/]?(\S+)/.exec(lt):void 0);if(lt&&(ht=lt?lt[1]:""),it){lt=ct();if(null!=lt&&lt>parseFloat(ht)){nt=String(lt);break t}}nt=ht}var ft={};function dt(a){return t=a,e=function(){for(var t=0,e=H(String(nt)).split("."),n=H(String(a)).split("."),r=Math.max(e.length,n.length),i=0;0==t&&i<r;i++)for(var o=e[i]||"",s=n[i]||"";o=/(\d*)(\D*)(.*)/.exec(o)||["","","",""],s=/(\d*)(\D*)(.*)/.exec(s)||["","","",""],(0!=o[0].length||0!=s[0].length)&&(t=Y(0==o[1].length?0:parseInt(o[1],10),0==s[1].length?0:parseInt(s[1],10))||Y(0==o[2].length,0==s[2].length)||Y(o[2],s[2]),o=o[3],s=s[3],0==t););return 0<=t},n=ft,Object.prototype.hasOwnProperty.call(n,t)?n[t]:n[t]=e(t);var t,e,n}var pt=A.document&&it&&(ct()||parseInt(nt,10))||void 0,yt=!it||9<=Number(pt),gt=it&&!dt("9"),mt=function(){if(!A.addEventListener||!Object.defineProperty)return!1;var t=!1,e=Object.defineProperty({},"passive",{get:function(){t=!0}});try{A.addEventListener("test",k,e),A.removeEventListener("test",k,e)}catch(t){}return t}();function vt(t,e){this.type=t,this.a=this.target=e,this.defaultPrevented=!1}function bt(t,e){if(vt.call(this,t?t.type:""),this.relatedTarget=this.a=this.target=null,this.button=this.screenY=this.screenX=this.clientY=this.clientX=0,this.key="",this.metaKey=this.shiftKey=this.altKey=this.ctrlKey=!1,this.pointerId=0,this.pointerType="",this.c=null,t){var n=this.type=t.type,r=t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:null;if(this.target=t.target||t.srcElement,this.a=e,e=t.relatedTarget){if(at){t:{try{et(e.nodeName);var i=!0;break t}catch(t){}i=!1}i||(e=null)}}else"mouseover"==n?e=t.fromElement:"mouseout"==n&&(e=t.toElement);this.relatedTarget=e,r?(this.clientX=void 0!==r.clientX?r.clientX:r.pageX,this.clientY=void 0!==r.clientY?r.clientY:r.pageY,this.screenX=r.screenX||0,this.screenY=r.screenY||0):(this.clientX=void 0!==t.clientX?t.clientX:t.pageX,this.clientY=void 0!==t.clientY?t.clientY:t.pageY,this.screenX=t.screenX||0,this.screenY=t.screenY||0),this.button=t.button,this.key=t.key||"",this.ctrlKey=t.ctrlKey,this.altKey=t.altKey,this.shiftKey=t.shiftKey,this.metaKey=t.metaKey,this.pointerId=t.pointerId||0,this.pointerType="string"==typeof t.pointerType?t.pointerType:wt[t.pointerType]||"",(this.c=t).defaultPrevented&&this.b()}}vt.prototype.b=function(){this.defaultPrevented=!0},U(bt,vt);var wt={2:"touch",3:"pen",4:"mouse"};bt.prototype.b=function(){bt.X.b.call(this);var t=this.c;if(t.preventDefault)t.preventDefault();else if(t.returnValue=!1,gt)try{(t.ctrlKey||112<=t.keyCode&&t.keyCode<=123)&&(t.keyCode=-1)}catch(t){}};var It="closure_listenable_"+(1e6*Math.random()|0),Et=0;function Tt(t,e,n,r,i){this.listener=t,this.proxy=null,this.src=e,this.type=n,this.capture=!!r,this.ca=i,this.key=++Et,this.Y=this.Z=!1}function _t(t){t.Y=!0,t.listener=null,t.proxy=null,t.src=null,t.ca=null}function St(t){this.src=t,this.a={},this.b=0}function Nt(t,e){var n,r,i,o=e.type;o in t.a&&(n=t.a[o],(i=0<=(r=B(n,e)))&&Array.prototype.splice.call(n,r,1),i&&(_t(e),0==t.a[o].length&&(delete t.a[o],t.b--)))}function Dt(t,e,n,r){for(var i=0;i<t.length;++i){var o=t[i];if(!o.Y&&o.listener==e&&o.capture==!!n&&o.ca==r)return i}return-1}St.prototype.add=function(t,e,n,r,i){var o=t.toString();(t=this.a[o])||(t=this.a[o]=[],this.b++);var s=Dt(t,e,r,i);return-1<s?(e=t[s],n||(e.Z=!1)):((e=new Tt(e,this.src,o,!!r,i)).Z=n,t.push(e)),e};var At="closure_lm_"+(1e6*Math.random()|0),kt={};function Ct(t,e,n,r,i){if(r&&r.once)return function t(e,n,r,i,o){if(Array.isArray(n)){for(var s=0;s<n.length;s++)t(e,n[s],r,i,o);return null}r=Vt(r);return e&&e[It]?e.wa(n,r,R(i)?!!i.capture:!!i,o):Rt(e,n,r,!0,i,o)}(t,e,n,r,i);if(Array.isArray(e)){for(var o=0;o<e.length;o++)Ct(t,e[o],n,r,i);return null}return n=Vt(n),t&&t[It]?t.va(e,n,R(r)?!!r.capture:!!r,i):Rt(t,e,n,!1,r,i)}function Rt(t,e,n,r,i,o){if(!e)throw Error("Invalid event type");var s=R(i)?!!i.capture:!!i;if(s&&!yt)return null;var a,u,c=Mt(t);if(c||(t[At]=c=new St(t)),(n=c.add(e,n,r,s,o)).proxy)return n;if(a=Pt,r=u=yt?function(t){return a.call(u.src,u.listener,t)}:function(t){if(!(t=a.call(u.src,u.listener,t)))return t},(n.proxy=r).src=t,r.listener=n,t.addEventListener)void 0===(i=!mt?s:i)&&(i=!1),t.addEventListener(e.toString(),r,i);else if(t.attachEvent)t.attachEvent(Ot(e.toString()),r);else{if(!t.addListener||!t.removeListener)throw Error("addEventListener and attachEvent are unavailable.");t.addListener(r)}return n}function xt(t){var e,n,r;"number"!=typeof t&&t&&!t.Y&&((e=t.src)&&e[It]?Nt(e.c,t):(n=t.type,r=t.proxy,e.removeEventListener?e.removeEventListener(n,r,t.capture):e.detachEvent?e.detachEvent(Ot(n),r):e.addListener&&e.removeListener&&e.removeListener(r),(n=Mt(e))?(Nt(n,t),0==n.b&&(n.src=null,e[At]=null)):_t(t)))}function Ot(t){return t in kt?kt[t]:kt[t]="on"+t}function Lt(t,e){var n=t.listener,r=t.ca||t.src;return t.Z&&xt(t),n.call(r,e)}function Pt(t,e){if(t.Y)return!0;if(yt)return Lt(t,new bt(e,this));if(!e)t:{e=["window","event"];for(var n=A,r=0;r<e.length;r++)if(null==(n=n[e[r]])){e=null;break t}e=n}return Lt(t,e=new bt(e,this))}function Mt(t){return(t=t[At])instanceof St?t:null}var Ft="__closure_events_fn_"+(1e9*Math.random()>>>0);function Vt(e){return"function"==typeof e?e:(e[Ft]||(e[Ft]=function(t){return e.handleEvent(t)}),e[Ft])}function Ut(){q.call(this),this.c=new St(this),(this.J=this).C=null}function qt(t,e){var n,r=t.C;if(r)for(n=[];r;r=r.C)n.push(r);if(t=t.J,r=e.type||e,"string"==typeof e?e=new vt(e,t):e instanceof vt?e.target=e.target||t:(s=e,tt(e=new vt(r,t),s)),s=!0,n)for(var i=n.length-1;0<=i;i--)var o=e.a=n[i],s=Bt(o,r,!0,e)&&s;if(s=Bt(o=e.a=t,r,!0,e)&&s,s=Bt(o,r,!1,e)&&s,n)for(i=0;i<n.length;i++)s=Bt(o=e.a=n[i],r,!1,e)&&s}function Bt(t,e,n,r){if(!(e=t.c.a[String(e)]))return!0;e=e.concat();for(var i=!0,o=0;o<e.length;++o){var s,a,u=e[o];u&&!u.Y&&u.capture==n&&(s=u.listener,a=u.ca||u.src,u.Z&&Nt(t.c,u),i=!1!==s.call(a,r)&&i)}return i&&!r.defaultPrevented}U(Ut,q),Ut.prototype[It]=!0,(S=Ut.prototype).addEventListener=function(t,e,n,r){Ct(this,t,e,n,r)},S.removeEventListener=function(t,e,n,r){!function t(e,n,r,i,o){if(Array.isArray(n))for(var s=0;s<n.length;s++)t(e,n[s],r,i,o);else i=R(i)?!!i.capture:!!i,r=Vt(r),e&&e[It]?(e=e.c,(n=String(n).toString())in e.a&&-1<(r=Dt(s=e.a[n],r,i,o))&&(_t(s[r]),Array.prototype.splice.call(s,r,1),0==s.length&&(delete e.a[n],e.b--))):(e=e&&Mt(e))&&(n=e.a[n.toString()],(r=(e=-1)<(e=n?Dt(n,r,i,o):e)?n[e]:null)&&xt(r))}(this,t,e,n,r)},S.G=function(){if(Ut.X.G.call(this),this.c){var t,e=this.c;for(t in e.a){for(var n=e.a[t],r=0;r<n.length;r++)_t(n[r]);delete e.a[t],e.b--}}this.C=null},S.va=function(t,e,n,r){return this.c.add(String(t),e,!1,n,r)},S.wa=function(t,e,n,r){return this.c.add(String(t),e,!0,n,r)};var jt=A.JSON.stringify;function Kt(){this.b=this.a=null}var Gt,Qt=(zt.prototype.get=function(){var t;return 0<this.b?(this.b--,t=this.a,this.a=t.next,t.next=null):t=this.c(),t},new zt(function(){return new Ht},function(t){t.reset()}));function zt(t,e){this.c=t,this.f=e,this.b=0,this.a=null}function Ht(){this.next=this.b=this.a=null}function Wt(t,e){var n;Gt||(n=A.Promise.resolve(void 0),Gt=function(){n.then(Jt)}),Yt||(Gt(),Yt=!0),Xt.add(t,e)}Kt.prototype.add=function(t,e){var n=Qt.get();n.set(t,e),this.b?this.b.next=n:this.a=n,this.b=n},Ht.prototype.set=function(t,e){this.a=t,this.b=e,this.next=null};var Yt=!(Ht.prototype.reset=function(){this.next=this.b=this.a=null}),Xt=new Kt;function Jt(){for(var t,e;n=e=void 0,n=null,(e=Xt).a&&(n=e.a,e.a=e.a.next,e.a||(e.b=null),n.next=null),t=n;){try{t.a.call(t.b)}catch(t){!function(t){A.setTimeout(function(){throw t},0)}(t)}var n=Qt;n.f(t),n.b<100&&(n.b++,t.next=n.a,n.a=t)}Yt=!1}function $t(t,e){Ut.call(this),this.b=t||1,this.a=e||A,this.f=M(this.Za,this),this.g=V()}function Zt(t){t.aa=!1,t.M&&(t.a.clearTimeout(t.M),t.M=null)}function te(t,e,n){if("function"==typeof t)n&&(t=M(t,n));else{if(!t||"function"!=typeof t.handleEvent)throw Error("Invalid listener argument");t=M(t.handleEvent,t)}return 2147483647<Number(e)?-1:A.setTimeout(t,e||0)}U($t,Ut),(S=$t.prototype).aa=!1,S.M=null,S.Za=function(){var t;this.aa&&(0<(t=V()-this.g)&&t<.8*this.b?this.M=this.a.setTimeout(this.f,this.b-t):(this.M&&(this.a.clearTimeout(this.M),this.M=null),qt(this,"tick"),this.aa&&(Zt(this),this.start())))},S.start=function(){this.aa=!0,this.M||(this.M=this.a.setTimeout(this.f,this.b),this.g=V())},S.G=function(){$t.X.G.call(this),Zt(this),delete this.a};var ee,ne,re,ie=(T(ne=se,re=ee=q),ne.prototype=null===re?Object.create(re):(oe.prototype=re.prototype,new oe),se.prototype.f=function(t){this.b=arguments,this.a?this.c=!0:function t(e){e.a=te(function(){e.a=null,e.c&&(e.c=!1,t(e))},e.h);var n=e.b;e.b=null,e.g.apply(null,n)}(this)},se.prototype.G=function(){ee.prototype.G.call(this),this.a&&(A.clearTimeout(this.a),this.a=null,this.c=!1,this.b=null)},se);function oe(){this.constructor=ne}function se(t,e){var n=ee.call(this)||this;return n.g=t,n.h=e,n.b=null,n.c=!1,n.a=null,n}function ae(t){q.call(this),this.b=t,this.a={}}U(ae,q);var ue=[];function ce(t,e,n,r){Array.isArray(n)||(n&&(ue[0]=n.toString()),n=ue);for(var i=0;i<n.length;i++){var o=Ct(e,n[i],r||t.handleEvent,!1,t.b||t);if(!o)break;t.a[o.key]=o}}function he(t){J(t.a,function(t,e){this.a.hasOwnProperty(e)&&xt(t)},t),t.a={}}function le(){this.a=!0}function fe(t,e,n,r){t.info(function(){return"XMLHTTP TEXT ("+e+"): "+function(t,e){if(!t.a)return e;if(!e)return null;try{var n=JSON.parse(e);if(n)for(t=0;t<n.length;t++)if(Array.isArray(n[t])){var r=n[t];if(!(r.length<2)){var i=r[1];if(Array.isArray(i)&&!(i.length<1)){r=i[0];if("noop"!=r&&"stop"!=r&&"close"!=r)for(var o=1;o<i.length;o++)i[o]=""}}}return jt(n)}catch(t){return e}}(t,n)+(r?" "+r:"")})}ae.prototype.G=function(){ae.X.G.call(this),he(this)},ae.prototype.handleEvent=function(){throw Error("EventHandler.handleEvent not implemented")},le.prototype.info=function(){};var de={},pe=null;function ye(){return pe=pe||new Ut}function ge(t){vt.call(this,de.Fa,t)}function me(t){var e=ye();qt(e,new ge(e))}function ve(t,e){vt.call(this,de.STAT_EVENT,t),this.stat=e}function be(t){var e=ye();qt(e,new ve(e,t))}function we(t){vt.call(this,de.Ga,t)}function Ie(t,e){if("function"!=typeof t)throw Error("Fn must not be null and must be a function");return A.setTimeout(function(){t()},e)}de.Fa="serverreachability",U(ge,vt),de.STAT_EVENT="statevent",U(ve,vt),de.Ga="timingevent",U(we,vt);var Ee={NO_ERROR:0,$a:1,nb:2,mb:3,hb:4,lb:5,ob:6,Da:7,TIMEOUT:8,rb:9},Te={fb:"complete",Bb:"success",Ea:"error",Da:"abort",tb:"ready",ub:"readystatechange",TIMEOUT:"timeout",pb:"incrementaldata",sb:"progress",ib:"downloadprogress",Jb:"uploadprogress"};function _e(){}function Se(t){var e;return e=!(e=t.a)?t.a={}:e}function Ne(){}_e.prototype.a=null;N={OPEN:"a",eb:"b",Ea:"c",qb:"d"};function De(){vt.call(this,"d")}function Ae(){vt.call(this,"c")}function ke(){}function Ce(t,e,n,r){this.g=t,this.c=e,this.f=n,this.S=r||1,this.J=new ae(this),this.P=xe,t=st?125:void 0,this.R=new $t(t),this.B=null,this.b=!1,this.j=this.l=this.i=this.H=this.u=this.T=this.o=null,this.s=[],this.a=null,this.D=0,this.h=this.m=null,this.N=-1,this.A=!1,this.O=0,this.F=null,this.V=this.C=this.U=this.I=!1}U(De,vt),U(Ae,vt),U(ke,_e);var Re=new ke,xe=45e3,Oe={},Le={};function Pe(t,e,n){t.H=1,t.i=nn(Xe(e)),t.j=n,t.I=!0,Me(t,null)}function Me(t,e){t.u=V(),Ve(t),t.l=Xe(t.i);var s,a,u,c,h,l,n=t.l,r=t.S;Array.isArray(r)||(r=[String(r)]),gn(n.b,"t",r),t.D=0,t.a=cr(t.g,t.g.C?e:null),0<t.O&&(t.F=new ie(M(t.Ca,t,t.a),t.O)),ce(t.J,t.a,"readystatechange",t.Xa),e=t.B?$(t.B):{},t.j?(t.m||(t.m="POST"),e["Content-Type"]="application/x-www-form-urlencoded",t.a.ba(t.l,t.m,t.j,e)):(t.m="GET",t.a.ba(t.l,t.m,null,e)),me(1),s=t.c,a=t.m,u=t.l,c=t.f,h=t.S,l=t.j,s.info(function(){if(s.a)if(l)for(var t="",e=l.split("&"),n=0;n<e.length;n++){var r,i,o=e[n].split("=");1<o.length&&(r=o[0],o=o[1],t=2<=(i=r.split("_")).length&&"type"==i[1]?t+(r+"=")+o+"&":t+(r+"=redacted&"))}else t=null;else t=l;return"XMLHTTP REQ ("+c+") [attempt "+h+"]: "+a+"\n"+u+"\n"+t})}function Fe(t,e,n){for(var r,i,o,s=!0;!t.A&&t.D<n.length;){var a=(a=n,o=i=void 0,i=(r=t).D,-1==(o=a.indexOf("\n",i))?Le:(i=Number(a.substring(i,o)),isNaN(i)?Oe:(o+=1)+i>a.length?Le:(a=a.substr(o,i),r.D=o+i,a)));if(a==Le){4==e&&(t.h=4,be(14),s=!1),fe(t.c,t.f,null,"[Incomplete Response]");break}if(a==Oe){t.h=4,be(15),fe(t.c,t.f,n,"[Invalid Chunk]"),s=!1;break}fe(t.c,t.f,a,null),Ke(t,a)}4==e&&0==n.length&&(t.h=1,be(16),s=!1),t.b=t.b&&s,s?0<n.length&&!t.V&&(t.V=!0,(e=t.g).a==t&&e.U&&!e.F&&(e.c.info("Great, no buffering proxy detected. Bytes received: "+n.length),er(e),e.F=!0,be(11))):(fe(t.c,t.f,n,"[Invalid Chunked Response]"),je(t),Be(t))}function Ve(t){t.T=V()+t.P,Ue(t,t.P)}function Ue(t,e){if(null!=t.o)throw Error("WatchDog timer not null");t.o=Ie(M(t.Va,t),e)}function qe(t){t.o&&(A.clearTimeout(t.o),t.o=null)}function Be(t){0==t.g.v||t.A||ir(t.g,t)}function je(t){qe(t);var e=t.F;e&&"function"==typeof e.ja&&e.ja(),t.F=null,Zt(t.R),he(t.J),t.a&&(e=t.a,t.a=null,e.abort(),e.ja())}function Ke(t,e){try{var n,r,i,o,s,a=t.g;if(0!=a.v&&(a.a==t||Tn(a.b,t)))if(a.I=t.N,!t.C&&Tn(a.b,t)&&3==a.v){try{var u=a.ka.a.parse(e)}catch(t){u=null}if(Array.isArray(u)&&3==u.length){var c=u;if(0==c[0]){t:if(!a.j){if(a.a){if(!(a.a.u+3e3<t.u))break t;rr(a),zn(a)}tr(a),be(18)}}else a.oa=c[1],0<a.oa-a.P&&c[2]<37500&&a.H&&0==a.o&&!a.m&&(a.m=Ie(M(a.Sa,a),6e3));if(En(a.b)<=1&&a.ea){try{a.ea()}catch(t){}a.ea=void 0}}else sr(a,11)}else if(!t.C&&a.a!=t||rr(a),!Q(e))for(e=u=a.ka.a.parse(e),u=0;u<e.length;u++)c=e[u],a.P=c[0],c=c[1],2==a.v?"c"==c[0]?(a.J=c[1],a.ga=c[2],null!=(r=c[3])&&(a.ha=r,a.c.info("VER="+a.ha)),null!=(o=c[4])&&(a.pa=o,a.c.info("SVER="+a.pa)),null!=(r=c[5])&&"number"==typeof r&&0<r&&(n=1.5*r,a.D=n,a.c.info("backChannelRequestTimeoutMs_="+n)),n=a,(o=t.a)&&(!(r=o.a?o.a.getResponseHeader("X-Client-Wire-Protocol"):null)||!(i=n.b).a&&(W(r,"spdy")||W(r,"quic")||W(r,"h2"))&&(i.f=i.g,i.a=new Set,i.b&&(_n(i,i.b),i.b=null)),!n.A||(s=o.a?o.a.getResponseHeader("X-HTTP-Session-Id"):null)&&(n.na=s,en(n.B,n.A,s))),a.v=3,a.f&&a.f.ta(),a.U&&(a.N=V()-t.u,a.c.info("Handshake RTT: "+a.N+"ms")),i=t,(n=a).la=ur(n,n.C?n.ga:null,n.fa),i.C?(Sn(n.b,i),o=i,(s=n.D)&&o.setTimeout(s),o.o&&(qe(o),Ve(o)),n.a=i):Zn(n),0<a.g.length&&Yn(a)):"stop"!=c[0]&&"close"!=c[0]||sr(a,7):3==a.v&&("stop"==c[0]||"close"==c[0]?"stop"==c[0]?sr(a,7):Qn(a):"noop"!=c[0]&&a.f&&a.f.sa(c),a.o=0);me(4)}catch(t){}}function Ge(t,e){if(t.forEach&&"function"==typeof t.forEach)t.forEach(e,void 0);else if(C(t)||"string"==typeof t)j(t,e,void 0);else{if(t.L&&"function"==typeof t.L)var n=t.L();else if(t.K&&"function"==typeof t.K)n=void 0;else if(C(t)||"string"==typeof t)for(var n=[],r=t.length,i=0;i<r;i++)n.push(i);else for(i in n=[],r=0,t)n[r++]=i;for(var i=(r=function(t){if(t.K&&"function"==typeof t.K)return t.K();if("string"==typeof t)return t.split("");if(C(t)){for(var e=[],n=t.length,r=0;r<n;r++)e.push(t[r]);return e}for(r in e=[],n=0,t)e[n++]=t[r];return e}(t)).length,o=0;o<i;o++)e.call(void 0,r[o],n&&n[o],t)}}function Qe(t,e){this.b={},this.a=[],this.c=0;var n=arguments.length;if(1<n){if(n%2)throw Error("Uneven number of arguments");for(var r=0;r<n;r+=2)this.set(arguments[r],arguments[r+1])}else if(t)if(t instanceof Qe)for(n=t.L(),r=0;r<n.length;r++)this.set(n[r],t.get(n[r]));else for(r in t)this.set(r,t[r])}function ze(t){if(t.c!=t.a.length){for(var e=0,n=0;e<t.a.length;){var r=t.a[e];He(t.b,r)&&(t.a[n++]=r),e++}t.a.length=n}if(t.c!=t.a.length){for(var i={},n=e=0;e<t.a.length;)He(i,r=t.a[e])||(i[t.a[n++]=r]=1),e++;t.a.length=n}}function He(t,e){return Object.prototype.hasOwnProperty.call(t,e)}(S=Ce.prototype).setTimeout=function(t){this.P=t},S.Xa=function(t){t=t.target;var e=this.F;e&&3==Bn(t)?e.f():this.Ca(t)},S.Ca=function(t){try{if(t==this.a)t:{var e=Bn(this.a),n=this.a.ua(),r=this.a.W();if(!(e<3||3==e&&!st&&!this.a.$())){this.A||4!=e||7==n||me(8==n||r<=0?3:2),qe(this);var i=this.a.W();this.N=i;var o=this.a.$();if(this.b=200==i,r=this.c,u=this.m,c=this.l,h=this.f,l=this.S,f=e,d=i,r.info(function(){return"XMLHTTP RESP ("+h+") [ attempt "+l+"]: "+u+"\n"+c+"\n"+f+" "+d}),this.b){if(this.U&&!this.C){e:{if(this.a){var s=this.a;if((s=s.a?s.a.getResponseHeader("X-HTTP-Initial-Response"):null)&&!Q(s)){var a=s;break e}}a=null}if(!a){this.b=!1,this.h=3,be(12),je(this),Be(this);break t}fe(this.c,this.f,a,"Initial handshake response via X-HTTP-Initial-Response"),this.C=!0,Ke(this,a)}this.I?(Fe(this,e,o),st&&this.b&&3==e&&(ce(this.J,this.R,"tick",this.Wa),this.R.start())):(fe(this.c,this.f,o,null),Ke(this,o)),4==e&&je(this),this.b&&!this.A&&(4==e?ir(this.g,this):(this.b=!1,Ve(this)))}else 400==i&&0<o.indexOf("Unknown SID")?(this.h=3,be(12)):(this.h=0,be(13)),je(this),Be(this)}}}catch(t){}var u,c,h,l,f,d},S.Wa=function(){var t,e;this.a&&(t=Bn(this.a),e=this.a.$(),this.D<e.length&&(qe(this),Fe(this,t,e),this.b&&4!=t&&Ve(this)))},S.cancel=function(){this.A=!0,je(this)},S.Va=function(){this.o=null;var t,e,n=V();0<=n-this.T?(t=this.c,e=this.l,t.info(function(){return"TIMEOUT: "+e}),2!=this.H&&(me(3),be(17)),je(this),this.h=2,Be(this)):Ue(this,this.T-n)},(S=Qe.prototype).K=function(){ze(this);for(var t=[],e=0;e<this.a.length;e++)t.push(this.b[this.a[e]]);return t},S.L=function(){return ze(this),this.a.concat()},S.get=function(t,e){return He(this.b,t)?this.b[t]:e},S.set=function(t,e){He(this.b,t)||(this.c++,this.a.push(t)),this.b[t]=e},S.forEach=function(t,e){for(var n=this.L(),r=0;r<n.length;r++){var i=n[r],o=this.get(i);t.call(e,o,i,this)}};var We=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;function Ye(t,e){var n;this.c=this.j=this.f="",this.h=null,this.i=this.g="",this.a=!1,t instanceof Ye?(this.a=void 0!==e?e:t.a,Je(this,t.f),this.j=t.j,$e(this,t.c),Ze(this,t.h),this.g=t.g,e=t.b,(n=new fn).c=e.c,e.a&&(n.a=new Qe(e.a),n.b=e.b),tn(this,n),this.i=t.i):t&&(n=String(t).match(We))?(this.a=!!e,Je(this,n[1]||"",!0),this.j=rn(n[2]||""),$e(this,n[3]||"",!0),Ze(this,n[4]),this.g=rn(n[5]||"",!0),tn(this,n[6]||"",!0),this.i=rn(n[7]||"")):(this.a=!!e,this.b=new fn(null,this.a))}function Xe(t){return new Ye(t)}function Je(t,e,n){t.f=n?rn(e,!0):e,t.f&&(t.f=t.f.replace(/:$/,""))}function $e(t,e,n){t.c=n?rn(e,!0):e}function Ze(t,e){if(e){if(e=Number(e),isNaN(e)||e<0)throw Error("Bad port number "+e);t.h=e}else t.h=null}function tn(t,e,n){var r,i;e instanceof fn?(t.b=e,r=t.b,(i=t.a)&&!r.f&&(dn(r),r.c=null,r.a.forEach(function(t,e){var n=e.toLowerCase();e!=n&&(pn(this,e),gn(this,n,t))},r)),r.f=i):(n||(e=on(e,hn)),t.b=new fn(e,t.a))}function en(t,e,n){t.b.set(e,n)}function nn(t){return en(t,"zx",Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^V()).toString(36)),t}function rn(t,e){return t?e?decodeURI(t.replace(/%25/g,"%2525")):decodeURIComponent(t):""}function on(t,e,n){return"string"==typeof t?(t=encodeURI(t).replace(e,sn),t=n?t.replace(/%25([0-9a-fA-F]{2})/g,"%$1"):t):null}function sn(t){return"%"+((t=t.charCodeAt(0))>>4&15).toString(16)+(15&t).toString(16)}Ye.prototype.toString=function(){var t=[],e=this.f;e&&t.push(on(e,an,!0),":");var n=this.c;return!n&&"file"!=e||(t.push("//"),(e=this.j)&&t.push(on(e,an,!0),"@"),t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g,"%$1")),null!=(n=this.h)&&t.push(":",String(n))),(n=this.g)&&(this.c&&"/"!=n.charAt(0)&&t.push("/"),t.push(on(n,"/"==n.charAt(0)?cn:un,!0))),(n=this.b.toString())&&t.push("?",n),(n=this.i)&&t.push("#",on(n,ln)),t.join("")};var an=/[#\/\?@]/g,un=/[#\?:]/g,cn=/[#\?]/g,hn=/[#\?@]/g,ln=/#/g;function fn(t,e){this.b=this.a=null,this.c=t||null,this.f=!!e}function dn(n){n.a||(n.a=new Qe,n.b=0,n.c&&function(t,e){if(t){t=t.split("&");for(var n=0;n<t.length;n++){var r,i=t[n].indexOf("="),o=null;0<=i?(r=t[n].substring(0,i),o=t[n].substring(i+1)):r=t[n],e(r,o?decodeURIComponent(o.replace(/\+/g," ")):"")}}}(n.c,function(t,e){n.add(decodeURIComponent(t.replace(/\+/g," ")),e)}))}function pn(t,e){dn(t),e=mn(t,e),He(t.a.b,e)&&(t.c=null,t.b-=t.a.get(e).length,He((t=t.a).b,e)&&(delete t.b[e],t.c--,t.a.length>2*t.c&&ze(t)))}function yn(t,e){return dn(t),e=mn(t,e),He(t.a.b,e)}function gn(t,e,n){pn(t,e),0<n.length&&(t.c=null,t.a.set(mn(t,e),G(n)),t.b+=n.length)}function mn(t,e){return e=String(e),e=t.f?e.toLowerCase():e}(S=fn.prototype).add=function(t,e){dn(this),this.c=null,t=mn(this,t);var n=this.a.get(t);return n||this.a.set(t,n=[]),n.push(e),this.b+=1,this},S.forEach=function(n,r){dn(this),this.a.forEach(function(t,e){j(t,function(t){n.call(r,t,e,this)},this)},this)},S.L=function(){dn(this);for(var t=this.a.K(),e=this.a.L(),n=[],r=0;r<e.length;r++)for(var i=t[r],o=0;o<i.length;o++)n.push(e[r]);return n},S.K=function(t){dn(this);var e=[];if("string"==typeof t)yn(this,t)&&(e=K(e,this.a.get(mn(this,t))));else{t=this.a.K();for(var n=0;n<t.length;n++)e=K(e,t[n])}return e},S.set=function(t,e){return dn(this),this.c=null,yn(this,t=mn(this,t))&&(this.b-=this.a.get(t).length),this.a.set(t,[e]),this.b+=1,this},S.get=function(t,e){return t&&0<(t=this.K(t)).length?String(t[0]):e},S.toString=function(){if(this.c)return this.c;if(!this.a)return"";for(var t=[],e=this.a.L(),n=0;n<e.length;n++)for(var r=e[n],i=encodeURIComponent(String(r)),r=this.K(r),o=0;o<r.length;o++){var s=i;""!==r[o]&&(s+="="+encodeURIComponent(String(r[o]))),t.push(s)}return this.c=t.join("&")};var vn=function(t,e){this.b=t,this.a=e};function bn(t){this.g=t||wn,t=A.PerformanceNavigationTiming?0<(t=A.performance.getEntriesByType("navigation")).length&&("hq"==t[0].nextHopProtocol||"h2"==t[0].nextHopProtocol):!!(A.ia&&A.ia.ya&&A.ia.ya()&&A.ia.ya().Lb),this.f=t?this.g:1,this.a=null,1<this.f&&(this.a=new Set),this.b=null,this.c=[]}var wn=10;function In(t){return t.b||t.a&&t.a.size>=t.f}function En(t){return t.b?1:t.a?t.a.size:0}function Tn(t,e){return t.b?t.b==e:t.a&&t.a.has(e)}function _n(t,e){t.a?t.a.add(e):t.b=e}function Sn(t,e){t.b&&t.b==e?t.b=null:t.a&&t.a.has(e)&&t.a.delete(e)}function Nn(t){var e,n;if(null!=t.b)return t.c.concat(t.b.s);if(null==t.a||0===t.a.size)return G(t.c);var r=t.c;try{for(var i=_(t.a.values()),o=i.next();!o.done;o=i.next())var s=o.value,r=r.concat(s.s)}catch(t){e={error:t}}finally{try{o&&!o.done&&(n=i.return)&&n.call(i)}finally{if(e)throw e.error}}return r}function Dn(){}function An(){this.a=new Dn}function kn(t,e,n,r,i){try{e.onload=null,e.onerror=null,e.onabort=null,e.ontimeout=null,i(r)}catch(t){}}bn.prototype.cancel=function(){var e,t;if(this.c=Nn(this),this.b)this.b.cancel(),this.b=null;else if(this.a&&0!==this.a.size){try{for(var n=_(this.a.values()),r=n.next();!r.done;r=n.next())r.value.cancel()}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}this.a.clear()}},Dn.prototype.stringify=function(t){return A.JSON.stringify(t,void 0)},Dn.prototype.parse=function(t){return A.JSON.parse(t,void 0)};var Cn=A.JSON.parse;function Rn(t){Ut.call(this),this.headers=new Qe,this.H=t||null,this.b=!1,this.s=this.a=null,this.B="",this.h=0,this.f="",this.g=this.A=this.l=this.u=!1,this.o=0,this.m=null,this.I=xn,this.D=this.F=!1}U(Rn,Ut);var xn="",On=/^https?$/i,Ln=["POST","PUT"];function Pn(t){return"content-type"==t.toLowerCase()}function Mn(t,e){t.b=!1,t.a&&(t.g=!0,t.a.abort(),t.g=!1),t.f=e,t.h=5,Fn(t),Un(t)}function Fn(t){t.u||(t.u=!0,qt(t,"complete"),qt(t,"error"))}function Vn(t){if(t.b&&void 0!==D&&(!t.s[1]||4!=Bn(t)||2!=t.W()))if(t.l&&4==Bn(t))te(t.za,0,t);else if(qt(t,"readystatechange"),4==Bn(t)){t.b=!1;try{var e,n,r,i,o=t.W();t:switch(o){case 200:case 201:case 202:case 204:case 206:case 304:case 1223:var s=!0;break t;default:s=!1}(e=s)||((n=0===o)&&(!(i=String(t.B).match(We)[1]||null)&&A.self&&A.self.location&&(i=(r=A.self.location.protocol).substr(0,r.length-1)),n=!On.test(i?i.toLowerCase():"")),e=n);if(e)qt(t,"complete"),qt(t,"success");else{t.h=6;try{var a=2<Bn(t)?t.a.statusText:""}catch(o){a=""}t.f=a+" ["+t.W()+"]",Fn(t)}}finally{Un(t)}}}function Un(t,e){if(t.a){qn(t);var n=t.a,r=t.s[0]?k:null;t.a=null,t.s=null,e||qt(t,"ready");try{n.onreadystatechange=r}catch(t){}}}function qn(t){t.a&&t.D&&(t.a.ontimeout=null),t.m&&(A.clearTimeout(t.m),t.m=null)}function Bn(t){return t.a?t.a.readyState:0}function jn(t,e,n){t:{for(r in n){var r=!1;break t}r=!0}var i;r||(i="",J(n,function(t,e){i+=e,i+=":",i+=t,i+="\r\n"}),n=i,"string"==typeof t?null!=n&&encodeURIComponent(String(n)):en(t,e,n))}function Kn(t,e,n){return n&&n.internalChannelParams&&n.internalChannelParams[t]||e}function Gn(t){this.pa=0,this.g=[],this.c=new le,this.ga=this.la=this.B=this.fa=this.a=this.na=this.A=this.V=this.i=this.O=this.l=null,this.Oa=this.R=0,this.La=Kn("failFast",!1,t),this.H=this.m=this.j=this.h=this.f=null,this.S=!0,this.I=this.oa=this.P=-1,this.T=this.o=this.u=0,this.Ha=Kn("baseRetryDelayMs",5e3,t),this.Ra=Kn("retryDelaySeedMs",1e4,t),this.Ma=Kn("forwardChannelMaxRetries",2,t),this.ma=Kn("forwardChannelRequestTimeoutMs",2e4,t),this.Na=t&&t.g||void 0,this.D=void 0,this.C=t&&t.supportsCrossDomainXhr||!1,this.J="",this.b=new bn(t&&t.concurrentRequestLimit),this.ka=new An,this.da=t&&t.fastHandshake||!1,this.Ia=t&&t.b||!1,t&&t.f&&(this.c.a=!1),t&&t.forceLongPolling&&(this.S=!1),this.U=!this.da&&this.S&&t&&t.detectBufferingProxy||!1,this.ea=void 0,this.N=0,this.F=!1,this.s=null,(this.Ka=t&&t.c||!1)&&this.c.info("Opt-in to enable Chrome Origin Trials.")}function Qn(t){var e,n;Hn(t),3==t.v&&(e=t.R++,en(n=Xe(t.B),"SID",t.J),en(n,"RID",e),en(n,"TYPE","terminate"),Jn(t,n),(e=new Ce(t,t.c,e,void 0)).H=2,e.i=nn(Xe(n)),n=!1,!(n=A.navigator&&A.navigator.sendBeacon?A.navigator.sendBeacon(e.i.toString(),""):n)&&A.Image&&((new Image).src=e.i,n=!0),n||(e.a=cr(e.g,null),e.a.ba(e.i)),e.u=V(),Ve(e)),ar(t)}function zn(t){t.a&&(er(t),t.a.cancel(),t.a=null)}function Hn(t){zn(t),t.j&&(A.clearTimeout(t.j),t.j=null),rr(t),t.b.cancel(),t.h&&("number"==typeof t.h&&A.clearTimeout(t.h),t.h=null)}function Wn(t,e){t.g.push(new vn(t.Oa++,e)),3==t.v&&Yn(t)}function Yn(t){In(t.b)||t.h||(t.h=!0,Wt(t.Ba,t),t.u=0)}function Xn(t,e){var n=e?e.f:t.R++,r=Xe(t.B);en(r,"SID",t.J),en(r,"RID",n),en(r,"AID",t.P),Jn(t,r),t.i&&t.l&&jn(r,t.i,t.l),n=new Ce(t,t.c,n,t.u+1),null===t.i&&(n.B=t.l),e&&(t.g=e.s.concat(t.g)),e=$n(t,n,1e3),n.setTimeout(Math.round(.5*t.ma)+Math.round(.5*t.ma*Math.random())),_n(t.b,n),Pe(n,r,e)}function Jn(t,n){t.f&&Ge({},function(t,e){en(n,e,t)})}function $n(t,e,n){n=Math.min(t.g.length,n);var r=t.f?M(t.f.Ja,t.f,t):null;t:for(var i=t.g,o=-1;;){var s=["count="+n];-1==o?0<n?(o=i[0].b,s.push("ofs="+o)):o=0:s.push("ofs="+o);for(var a=!0,u=0;u<n;u++){var c=i[u].b,h=i[u].a;if((c-=o)<0)o=Math.max(0,i[u].b-100),a=!1;else try{!function(t,r,e){var i=e||"";try{Ge(t,function(t,e){var n=t;R(t)&&(n=jt(t)),r.push(i+e+"="+encodeURIComponent(n))})}catch(t){throw r.push(i+"type="+encodeURIComponent("_badmap")),t}}(h,s,"req"+c+"_")}catch(t){r&&r(h)}}if(a){r=s.join("&");break t}}return t=t.g.splice(0,n),e.s=t,r}function Zn(t){t.a||t.j||(t.T=1,Wt(t.Aa,t),t.o=0)}function tr(t){return!(t.a||t.j||3<=t.o)&&(t.T++,t.j=Ie(M(t.Aa,t),or(t,t.o)),t.o++,1)}function er(t){null!=t.s&&(A.clearTimeout(t.s),t.s=null)}function nr(t){t.a=new Ce(t,t.c,"rpc",t.T),null===t.i&&(t.a.B=t.l),t.a.O=0;var e=Xe(t.la);en(e,"RID","rpc"),en(e,"SID",t.J),en(e,"CI",t.H?"0":"1"),en(e,"AID",t.P),Jn(t,e),en(e,"TYPE","xmlhttp"),t.i&&t.l&&jn(e,t.i,t.l),t.D&&t.a.setTimeout(t.D);var n=t.a;t=t.ga,n.H=1,n.i=nn(Xe(e)),n.j=null,n.I=!0,Me(n,t)}function rr(t){null!=t.m&&(A.clearTimeout(t.m),t.m=null)}function ir(t,e){var n,r,i,o=null;if(t.a==e){rr(t),er(t),t.a=null;var s=2}else{if(!Tn(t.b,e))return;o=e.s,Sn(t.b,e),s=1}if(t.I=e.N,0!=t.v)if(e.b)1==s?(o=e.j?e.j.length:0,e=V()-e.u,n=t.u,qt(s=ye(),new we(s)),Yn(t)):Zn(t);else if(3==(n=e.h)||0==n&&0<t.I||(1!=s||(i=e,En((r=t).b)>=r.b.f-(r.h?1:0)||(r.h?(r.g=i.s.concat(r.g),0):1==r.v||2==r.v||r.u>=(r.La?0:r.Ma)||(r.h=Ie(M(r.Ba,r,i),or(r,r.u)),r.u++,0))))&&(2!=s||!tr(t)))switch(o&&0<o.length&&(e=t.b,e.c=e.c.concat(o)),n){case 1:sr(t,5);break;case 4:sr(t,10);break;case 3:sr(t,6);break;default:sr(t,2)}}function or(t,e){var n=t.Ha+Math.floor(Math.random()*t.Ra);return t.f||(n*=2),n*e}function sr(t,e){var n,r,i,o;t.c.info("Error code "+e),2==e?(r=null,t.f&&(r=null),o=M(t.Ya,t),r||(r=new Ye("//www.google.com/images/cleardot.gif"),A.location&&"http"==A.location.protocol||Je(r,"https"),nn(r)),n=r.toString(),r=o,o=new le,A.Image?((i=new Image).onload=F(kn,o,i,"TestLoadImage: loaded",!0,r),i.onerror=F(kn,o,i,"TestLoadImage: error",!1,r),i.onabort=F(kn,o,i,"TestLoadImage: abort",!1,r),i.ontimeout=F(kn,o,i,"TestLoadImage: timeout",!1,r),A.setTimeout(function(){i.ontimeout&&i.ontimeout()},1e4),i.src=n):r(!1)):be(2),t.v=0,t.f&&t.f.ra(e),ar(t),Hn(t)}function ar(t){t.v=0,t.I=-1,t.f&&(0==Nn(t.b).length&&0==t.g.length||(t.b.c.length=0,G(t.g),t.g.length=0),t.f.qa())}function ur(t,e,n){var r,i,o,s,a,u=(s=n)instanceof Ye?Xe(s):new Ye(s,void 0);return""!=u.c?(e&&$e(u,e+"."+u.c),Ze(u,u.h)):(a=A.location,r=a.protocol,i=e?e+"."+a.hostname:a.hostname,o=+a.port,s=n,a=new Ye(null,void 0),r&&Je(a,r),i&&$e(a,i),o&&Ze(a,o),s&&(a.g=s),u=a),t.V&&J(t.V,function(t,e){en(u,e,t)}),e=t.A,n=t.na,e&&n&&en(u,e,n),en(u,"VER",t.ha),Jn(t,u),u}function cr(t,e){if(e&&!t.C)throw Error("Can't create secondary domain capable XhrIo object.");return(e=new Rn(t.Na)).F=t.C,e}function hr(){}function lr(){if(it&&!(10<=Number(pt)))throw Error("Environmental error: no available transport.")}function fr(t,e){Ut.call(this),this.a=new Gn(e),this.o=t,this.b=e&&e.messageUrlParams||null,t=e&&e.messageHeaders||null,e&&e.clientProtocolHeaderRequired&&(t?t["X-Client-Protocol"]="webchannel":t={"X-Client-Protocol":"webchannel"}),this.a.l=t,t=e&&e.initMessageHeaders||null,e&&e.messageContentType&&(t?t["X-WebChannel-Content-Type"]=e.messageContentType:t={"X-WebChannel-Content-Type":e.messageContentType}),e&&e.a&&(t?t["X-WebChannel-Client-Profile"]=e.a:t={"X-WebChannel-Client-Profile":e.a}),this.a.O=t,(t=e&&e.httpHeadersOverwriteParam)&&!Q(t)&&(this.a.i=t),this.m=e&&e.supportsCrossDomainXhr||!1,this.l=e&&e.sendRawJson||!1,(e=e&&e.httpSessionIdParam)&&!Q(e)&&(this.a.A=e,null!==(t=this.b)&&e in t&&(e in(t=this.b)&&delete t[e])),this.f=new yr(this)}function dr(t){De.call(this);var e=t.__sm__;if(e){t:{for(var n in e){t=n;break t}t=void 0}(this.c=t)?(t=this.c,this.data=null!==e&&t in e?e[t]:void 0):this.data=e}else this.data=t}function pr(){Ae.call(this),this.status=1}function yr(t){this.a=t}(S=Rn.prototype).ba=function(t,e,n,r){if(this.a)throw Error("[goog.net.XhrIo] Object is active with another request="+this.B+"; newUri="+t);e=e?e.toUpperCase():"GET",this.B=t,this.f="",this.h=0,this.u=!1,this.b=!0,this.a=new XMLHttpRequest,this.s=this.H?Se(this.H):Se(Re),this.a.onreadystatechange=M(this.za,this);try{this.A=!0,this.a.open(e,String(t),!0),this.A=!1}catch(t){return void Mn(this,t)}t=n||"";var i,o=new Qe(this.headers);r&&Ge(r,function(t,e){o.set(e,t)}),r=function(t){t:{for(var e=Pn,n=t.length,r="string"==typeof t?t.split(""):t,i=0;i<n;i++)if(i in r&&e.call(void 0,r[i],i,t)){e=i;break t}e=-1}return e<0?null:"string"==typeof t?t.charAt(e):t[e]}(o.L()),n=A.FormData&&t instanceof A.FormData,0<=B(Ln,e)&&!r&&!n&&o.set("Content-Type","application/x-www-form-urlencoded;charset=utf-8"),o.forEach(function(t,e){this.a.setRequestHeader(e,t)},this),this.I&&(this.a.responseType=this.I),"withCredentials"in this.a&&this.a.withCredentials!==this.F&&(this.a.withCredentials=this.F);try{qn(this),0<this.o&&((this.D=(i=this.a,it&&dt(9)&&"number"==typeof i.timeout&&void 0!==i.ontimeout))?(this.a.timeout=this.o,this.a.ontimeout=M(this.xa,this)):this.m=te(this.xa,this.o,this)),this.l=!0,this.a.send(t),this.l=!1}catch(t){Mn(this,t)}},S.xa=function(){void 0!==D&&this.a&&(this.f="Timed out after "+this.o+"ms, aborting",this.h=8,qt(this,"timeout"),this.abort(8))},S.abort=function(t){this.a&&this.b&&(this.b=!1,this.g=!0,this.a.abort(),this.g=!1,this.h=t||7,qt(this,"complete"),qt(this,"abort"),Un(this))},S.G=function(){this.a&&(this.b&&(this.b=!1,this.g=!0,this.a.abort(),this.g=!1),Un(this,!0)),Rn.X.G.call(this)},S.za=function(){this.j||(this.A||this.l||this.g?Vn(this):this.Ua())},S.Ua=function(){Vn(this)},S.W=function(){try{return 2<Bn(this)?this.a.status:-1}catch(t){return-1}},S.$=function(){try{return this.a?this.a.responseText:""}catch(t){return""}},S.Pa=function(t){if(this.a){var e=this.a.responseText;return t&&0==e.indexOf(t)&&(e=e.substring(t.length)),Cn(e)}},S.ua=function(){return this.h},S.Qa=function(){return"string"==typeof this.f?this.f:String(this.f)},(S=Gn.prototype).ha=8,S.v=1,S.Ba=function(t){if(this.h)if(this.h=null,1==this.v){if(!t){this.R=Math.floor(1e5*Math.random()),t=this.R++;var e,n=new Ce(this,this.c,t,void 0),r=this.l;if(this.O&&(r?tt(r=$(r),this.O):r=this.O),null===this.i&&(n.B=r),this.da)t:{for(var i=e=0;i<this.g.length;i++){var o=this.g[i];if("__data__"in o.a&&"string"==typeof(o=o.a.__data__)?o=o.length:o=void 0,void 0===o)break;if(4096<(e+=o)){e=i;break t}if(4096===e||i===this.g.length-1){e=i+1;break t}}e=1e3}else e=1e3;e=$n(this,n,e),en(i=Xe(this.B),"RID",t),en(i,"CVER",22),this.A&&en(i,"X-HTTP-Session-Id",this.A),Jn(this,i),this.i&&r&&jn(i,this.i,r),_n(this.b,n),this.Ia&&en(i,"TYPE","init"),this.da?(en(i,"$req",e),en(i,"SID","null"),n.U=!0,Pe(n,i,null)):Pe(n,i,e),this.v=2}}else 3==this.v&&(t?Xn(this,t):0==this.g.length||In(this.b)||Xn(this))},S.Aa=function(){var t;this.j=null,nr(this),this.U&&!(this.F||null==this.a||this.N<=0)&&(t=2*this.N,this.c.info("BP detection timer enabled: "+t),this.s=Ie(M(this.Ta,this),t))},S.Ta=function(){this.s&&(this.s=null,this.c.info("BP detection timeout reached."),this.c.info("Buffering proxy detected and switch to long-polling!"),this.H=!1,this.F=!0,be(10),zn(this),nr(this))},S.Sa=function(){null!=this.m&&(this.m=null,zn(this),tr(this),be(19))},S.Ya=function(t){t?(this.c.info("Successfully pinged google.com"),be(2)):(this.c.info("Failed to ping google.com"),be(1))},(S=hr.prototype).ta=function(){},S.sa=function(){},S.ra=function(){},S.qa=function(){},S.Ja=function(){},lr.prototype.a=function(t,e){return new fr(t,e)},U(fr,Ut),fr.prototype.g=function(){this.a.f=this.f,this.m&&(this.a.C=!0);var t=this.a,e=this.o,n=this.b||void 0;be(0),t.fa=e,t.V=n||{},t.H=t.S,t.B=ur(t,null,t.fa),Yn(t)},fr.prototype.close=function(){Qn(this.a)},fr.prototype.h=function(t){var e;"string"==typeof t?((e={}).__data__=t,Wn(this.a,e)):this.l?((e={}).__data__=jt(t),Wn(this.a,e)):Wn(this.a,t)},fr.prototype.G=function(){this.a.f=null,delete this.f,Qn(this.a),delete this.a,fr.X.G.call(this)},U(dr,De),U(pr,Ae),U(yr,hr),yr.prototype.ta=function(){qt(this.a,"a")},yr.prototype.sa=function(t){qt(this.a,new dr(t))},yr.prototype.ra=function(t){qt(this.a,new pr)},yr.prototype.qa=function(){qt(this.a,"b")},lr.prototype.createWebChannel=lr.prototype.a,fr.prototype.send=fr.prototype.h,fr.prototype.open=fr.prototype.g,Ee.NO_ERROR=0,Ee.TIMEOUT=8,Ee.HTTP_ERROR=6,Te.COMPLETE="complete",(Ne.EventType=N).OPEN="a",N.CLOSE="b",N.ERROR="c",N.MESSAGE="d",Ut.prototype.listen=Ut.prototype.va,Rn.prototype.listenOnce=Rn.prototype.wa,Rn.prototype.getLastError=Rn.prototype.Qa,Rn.prototype.getLastErrorCode=Rn.prototype.ua,Rn.prototype.getStatus=Rn.prototype.W,Rn.prototype.getResponseJson=Rn.prototype.Pa,Rn.prototype.getResponseText=Rn.prototype.$,Rn.prototype.send=Rn.prototype.ba;var gr=ye,mr=Ee,vr=Te,br=de,wr=10,Ir=11,Er=Ne,Tr=Rn,_r=(Sr.prototype.t=function(t){return this.previousValue=Math.max(t,this.previousValue),this.previousValue},Sr.prototype.next=function(){var t=++this.previousValue;return this.i&&this.i(t),t},Sr);function Sr(t,e){var n=this;this.previousValue=t,e&&(e.sequenceNumberHandler=function(t){return n.t(t)},this.i=function(t){return e.writeSequenceNumber(t)})}_r.o=-1;var Nr,Dr={OK:"ok",CANCELLED:"cancelled",UNKNOWN:"unknown",INVALID_ARGUMENT:"invalid-argument",DEADLINE_EXCEEDED:"deadline-exceeded",NOT_FOUND:"not-found",ALREADY_EXISTS:"already-exists",PERMISSION_DENIED:"permission-denied",UNAUTHENTICATED:"unauthenticated",RESOURCE_EXHAUSTED:"resource-exhausted",FAILED_PRECONDITION:"failed-precondition",ABORTED:"aborted",OUT_OF_RANGE:"out-of-range",UNIMPLEMENTED:"unimplemented",INTERNAL:"internal",UNAVAILABLE:"unavailable",DATA_LOSS:"data-loss"},Ar=(n(Cr,Nr=Error),Cr),kr=new I("@firebase/firestore");function Cr(t,e){var n=this;return(n=Nr.call(this,e)||this).code=t,n.message=e,n.name="FirebaseError",n.toString=function(){return n.name+": [code="+n.code+"]: "+n.message},n}function Rr(){return kr.logLevel}function xr(t){for(var e,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];kr.logLevel<=f.DEBUG&&(e=n.map(Pr),kr.debug.apply(kr,s(["Firestore (8.4.2): "+t],e)))}function Or(t){for(var e,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];kr.logLevel<=f.ERROR&&(e=n.map(Pr),kr.error.apply(kr,s(["Firestore (8.4.2): "+t],e)))}function Lr(t){for(var e,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];kr.logLevel<=f.WARN&&(e=n.map(Pr),kr.warn.apply(kr,s(["Firestore (8.4.2): "+t],e)))}function Pr(e){if("string"==typeof e)return e;try{return JSON.stringify(e)}catch(t){return e}}function Mr(t){t="FIRESTORE (8.4.2) INTERNAL ASSERTION FAILED: "+(t=void 0===t?"Unexpected state":t);throw Or(t),new Error(t)}function Fr(t){t||Mr()}var Vr=(Ur.u=function(){for(var t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",e=Math.floor(256/t.length)*t.length,n="";n.length<20;)for(var r=function(t){var e="undefined"!=typeof self&&(self.crypto||self.msCrypto),n=new Uint8Array(t);if(e&&"function"==typeof e.getRandomValues)e.getRandomValues(n);else for(var r=0;r<t;r++)n[r]=Math.floor(256*Math.random());return n}(40),i=0;i<r.length;++i)n.length<20&&r[i]<e&&(n+=t.charAt(r[i]%t.length));return n},Ur);function Ur(){}function qr(t,e){return t<e?-1:e<t?1:0}function Br(t,n,r){return t.length===n.length&&t.every(function(t,e){return r(t,n[e])})}function jr(t){return t+"\0"}var Kr=(zr.now=function(){return zr.fromMillis(Date.now())},zr.fromDate=function(t){return zr.fromMillis(t.getTime())},zr.fromMillis=function(t){var e=Math.floor(t/1e3);return new zr(e,Math.floor(1e6*(t-1e3*e)))},zr.prototype.toDate=function(){return new Date(this.toMillis())},zr.prototype.toMillis=function(){return 1e3*this.seconds+this.nanoseconds/1e6},zr.prototype._compareTo=function(t){return this.seconds===t.seconds?qr(this.nanoseconds,t.nanoseconds):qr(this.seconds,t.seconds)},zr.prototype.isEqual=function(t){return t.seconds===this.seconds&&t.nanoseconds===this.nanoseconds},zr.prototype.toString=function(){return"Timestamp(seconds="+this.seconds+", nanoseconds="+this.nanoseconds+")"},zr.prototype.toJSON=function(){return{seconds:this.seconds,nanoseconds:this.nanoseconds}},zr.prototype.valueOf=function(){var t=this.seconds- -62135596800;return String(t).padStart(12,"0")+"."+String(this.nanoseconds).padStart(9,"0")},zr),Gr=(Qr.fromTimestamp=function(t){return new Qr(t)},Qr.min=function(){return new Qr(new Kr(0,0))},Qr.prototype.compareTo=function(t){return this.timestamp._compareTo(t.timestamp)},Qr.prototype.isEqual=function(t){return this.timestamp.isEqual(t.timestamp)},Qr.prototype.toMicroseconds=function(){return 1e6*this.timestamp.seconds+this.timestamp.nanoseconds/1e3},Qr.prototype.toString=function(){return"SnapshotVersion("+this.timestamp.toString()+")"},Qr.prototype.toTimestamp=function(){return this.timestamp},Qr);function Qr(t){this.timestamp=t}function zr(t,e){if(this.seconds=t,(this.nanoseconds=e)<0)throw new Ar(Dr.INVALID_ARGUMENT,"Timestamp nanoseconds out of range: "+e);if(1e9<=e)throw new Ar(Dr.INVALID_ARGUMENT,"Timestamp nanoseconds out of range: "+e);if(t<-62135596800)throw new Ar(Dr.INVALID_ARGUMENT,"Timestamp seconds out of range: "+t);if(253402300800<=t)throw new Ar(Dr.INVALID_ARGUMENT,"Timestamp seconds out of range: "+t)}function Hr(t){var e,n=0;for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&n++;return n}function Wr(t,e){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e(n,t[n])}function Yr(t){for(var e in t)if(Object.prototype.hasOwnProperty.call(t,e))return!1;return!0}var Xr,Jr,Te=(Object.defineProperty(ai.prototype,"length",{get:function(){return this.len},enumerable:!1,configurable:!0}),ai.prototype.isEqual=function(t){return 0===ai.comparator(this,t)},ai.prototype.child=function(t){var e=this.segments.slice(this.offset,this.limit());return t instanceof ai?t.forEach(function(t){e.push(t)}):e.push(t),this.construct(e)},ai.prototype.limit=function(){return this.offset+this.length},ai.prototype.popFirst=function(t){return t=void 0===t?1:t,this.construct(this.segments,this.offset+t,this.length-t)},ai.prototype.popLast=function(){return this.construct(this.segments,this.offset,this.length-1)},ai.prototype.firstSegment=function(){return this.segments[this.offset]},ai.prototype.lastSegment=function(){return this.get(this.length-1)},ai.prototype.get=function(t){return this.segments[this.offset+t]},ai.prototype.isEmpty=function(){return 0===this.length},ai.prototype.isPrefixOf=function(t){if(t.length<this.length)return!1;for(var e=0;e<this.length;e++)if(this.get(e)!==t.get(e))return!1;return!0},ai.prototype.isImmediateParentOf=function(t){if(this.length+1!==t.length)return!1;for(var e=0;e<this.length;e++)if(this.get(e)!==t.get(e))return!1;return!0},ai.prototype.forEach=function(t){for(var e=this.offset,n=this.limit();e<n;e++)t(this.segments[e])},ai.prototype.toArray=function(){return this.segments.slice(this.offset,this.limit())},ai.comparator=function(t,e){for(var n=Math.min(t.length,e.length),r=0;r<n;r++){var i=t.get(r),o=e.get(r);if(i<o)return-1;if(o<i)return 1}return t.length<e.length?-1:t.length>e.length?1:0},ai),$r=(n(si,Jr=Te),si.prototype.construct=function(t,e,n){return new si(t,e,n)},si.prototype.canonicalString=function(){return this.toArray().join("/")},si.prototype.toString=function(){return this.canonicalString()},si.fromString=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=[],r=0,i=t;r<i.length;r++){var o=i[r];if(0<=o.indexOf("//"))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid segment ("+o+"). Paths must not contain // in them.");n.push.apply(n,o.split("/").filter(function(t){return 0<t.length}))}return new si(n)},si.emptyPath=function(){return new si([])},si),Zr=/^[_a-zA-Z][_a-zA-Z0-9]*$/,ti=(n(oi,Xr=Te),oi.prototype.construct=function(t,e,n){return new oi(t,e,n)},oi.isValidIdentifier=function(t){return Zr.test(t)},oi.prototype.canonicalString=function(){return this.toArray().map(function(t){return t=t.replace(/\\/g,"\\\\").replace(/`/g,"\\`"),t=!oi.isValidIdentifier(t)?"`"+t+"`":t}).join(".")},oi.prototype.toString=function(){return this.canonicalString()},oi.prototype.isKeyField=function(){return 1===this.length&&"__name__"===this.get(0)},oi.keyField=function(){return new oi(["__name__"])},oi.fromServerFormat=function(t){for(var e=[],n="",r=0,i=function(){if(0===n.length)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid field path ("+t+"). Paths must not be empty, begin with '.', end with '.', or contain '..'");e.push(n),n=""},o=!1;r<t.length;){var s=t[r];if("\\"===s){if(r+1===t.length)throw new Ar(Dr.INVALID_ARGUMENT,"Path has trailing escape character: "+t);var a=t[r+1];if("\\"!==a&&"."!==a&&"`"!==a)throw new Ar(Dr.INVALID_ARGUMENT,"Path has invalid escape sequence: "+t);n+=a,r+=2}else"`"===s?o=!o:"."!==s||o?n+=s:i(),r++}if(i(),o)throw new Ar(Dr.INVALID_ARGUMENT,"Unterminated ` in path: "+t);return new oi(e)},oi.emptyPath=function(){return new oi([])},oi),ei=(ii.prototype.covers=function(t){for(var e=0,n=this.fields;e<n.length;e++)if(n[e].isPrefixOf(t))return!0;return!1},ii.prototype.isEqual=function(t){return Br(this.fields,t.fields,function(t,e){return t.isEqual(e)})},ii),ni=(ri.fromBase64String=function(t){return new ri(atob(t))},ri.fromUint8Array=function(t){return new ri(function(t){for(var e="",n=0;n<t.length;++n)e+=String.fromCharCode(t[n]);return e}(t))},ri.prototype.toBase64=function(){return t=this.binaryString,btoa(t);var t},ri.prototype.toUint8Array=function(){return function(t){for(var e=new Uint8Array(t.length),n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}(this.binaryString)},ri.prototype.approximateByteSize=function(){return 2*this.binaryString.length},ri.prototype.compareTo=function(t){return qr(this.binaryString,t.binaryString)},ri.prototype.isEqual=function(t){return this.binaryString===t.binaryString},ri);function ri(t){this.binaryString=t}function ii(t){(this.fields=t).sort(ti.comparator)}function oi(){return null!==Xr&&Xr.apply(this,arguments)||this}function si(){return null!==Jr&&Jr.apply(this,arguments)||this}function ai(t,e,n){void 0===e?e=0:e>t.length&&Mr(),void 0===n?n=t.length-e:n>t.length-e&&Mr(),this.segments=t,this.offset=e,this.len=n}ni.EMPTY_BYTE_STRING=new ni("");var ui=new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);function ci(t){if(Fr(!!t),"string"!=typeof t)return{seconds:hi(t.seconds),nanos:hi(t.nanos)};var e=0,n=ui.exec(t);Fr(!!n),n[1]&&(n=((n=n[1])+"000000000").substr(0,9),e=Number(n));t=new Date(t);return{seconds:Math.floor(t.getTime()/1e3),nanos:e}}function hi(t){return"number"==typeof t?t:"string"==typeof t?Number(t):0}function li(t){return"string"==typeof t?ni.fromBase64String(t):ni.fromUint8Array(t)}function fi(t){return"server_timestamp"===(null===(t=((null===(t=null==t?void 0:t.mapValue)||void 0===t?void 0:t.fields)||{}).__type__)||void 0===t?void 0:t.stringValue)}function di(t){t=ci(t.mapValue.fields.__local_write_time__.timestampValue);return new Kr(t.seconds,t.nanos)}function pi(t){return null==t}function yi(t){return 0===t&&1/t==-1/0}function gi(t){return"number"==typeof t&&Number.isInteger(t)&&!yi(t)&&t<=Number.MAX_SAFE_INTEGER&&t>=Number.MIN_SAFE_INTEGER}var mi=(vi.fromPath=function(t){return new vi($r.fromString(t))},vi.fromName=function(t){return new vi($r.fromString(t).popFirst(5))},vi.prototype.hasCollectionId=function(t){return 2<=this.path.length&&this.path.get(this.path.length-2)===t},vi.prototype.isEqual=function(t){return null!==t&&0===$r.comparator(this.path,t.path)},vi.prototype.toString=function(){return this.path.toString()},vi.comparator=function(t,e){return $r.comparator(t.path,e.path)},vi.isDocumentKey=function(t){return t.length%2==0},vi.fromSegments=function(t){return new vi(new $r(t.slice()))},vi);function vi(t){this.path=t}function bi(t){return"nullValue"in t?0:"booleanValue"in t?1:"integerValue"in t||"doubleValue"in t?2:"timestampValue"in t?3:"stringValue"in t?5:"bytesValue"in t?6:"referenceValue"in t?7:"geoPointValue"in t?8:"arrayValue"in t?9:"mapValue"in t?fi(t)?4:10:Mr()}function wi(r,i){var t,e,n=bi(r);if(n!==bi(i))return!1;switch(n){case 0:return!0;case 1:return r.booleanValue===i.booleanValue;case 4:return di(r).isEqual(di(i));case 3:return function(t){if("string"==typeof r.timestampValue&&"string"==typeof t.timestampValue&&r.timestampValue.length===t.timestampValue.length)return r.timestampValue===t.timestampValue;var e=ci(r.timestampValue),t=ci(t.timestampValue);return e.seconds===t.seconds&&e.nanos===t.nanos}(i);case 5:return r.stringValue===i.stringValue;case 6:return e=i,li(r.bytesValue).isEqual(li(e.bytesValue));case 7:return r.referenceValue===i.referenceValue;case 8:return t=i,hi((e=r).geoPointValue.latitude)===hi(t.geoPointValue.latitude)&&hi(e.geoPointValue.longitude)===hi(t.geoPointValue.longitude);case 2:return function(t,e){if("integerValue"in t&&"integerValue"in e)return hi(t.integerValue)===hi(e.integerValue);if("doubleValue"in t&&"doubleValue"in e){t=hi(t.doubleValue),e=hi(e.doubleValue);return t===e?yi(t)===yi(e):isNaN(t)&&isNaN(e)}return!1}(r,i);case 9:return Br(r.arrayValue.values||[],i.arrayValue.values||[],wi);case 10:return function(){var t,e=r.mapValue.fields||{},n=i.mapValue.fields||{};if(Hr(e)!==Hr(n))return!1;for(t in e)if(e.hasOwnProperty(t)&&(void 0===n[t]||!wi(e[t],n[t])))return!1;return!0}();default:return Mr()}}function Ii(t,e){return void 0!==(t.values||[]).find(function(t){return wi(t,e)})}function Ei(t,e){var n,r,i,o=bi(t),s=bi(e);if(o!==s)return qr(o,s);switch(o){case 0:return 0;case 1:return qr(t.booleanValue,e.booleanValue);case 2:return r=e,i=hi(t.integerValue||t.doubleValue),r=hi(r.integerValue||r.doubleValue),i<r?-1:r<i?1:i===r?0:isNaN(i)?isNaN(r)?0:-1:1;case 3:return Ti(t.timestampValue,e.timestampValue);case 4:return Ti(di(t),di(e));case 5:return qr(t.stringValue,e.stringValue);case 6:return function(t,e){t=li(t),e=li(e);return t.compareTo(e)}(t.bytesValue,e.bytesValue);case 7:return function(t,e){for(var n=t.split("/"),r=e.split("/"),i=0;i<n.length&&i<r.length;i++){var o=qr(n[i],r[i]);if(0!==o)return o}return qr(n.length,r.length)}(t.referenceValue,e.referenceValue);case 8:return n=t.geoPointValue,i=e.geoPointValue,0!==(r=qr(hi(n.latitude),hi(i.latitude)))?r:qr(hi(n.longitude),hi(i.longitude));case 9:return function(t,e){for(var n=t.values||[],r=e.values||[],i=0;i<n.length&&i<r.length;++i){var o=Ei(n[i],r[i]);if(o)return o}return qr(n.length,r.length)}(t.arrayValue,e.arrayValue);case 10:return function(t,e){var n=t.fields||{},r=Object.keys(n),i=e.fields||{},o=Object.keys(i);r.sort(),o.sort();for(var s=0;s<r.length&&s<o.length;++s){var a=qr(r[s],o[s]);if(0!==a)return a;a=Ei(n[r[s]],i[o[s]]);if(0!==a)return a}return qr(r.length,o.length)}(t.mapValue,e.mapValue);default:throw Mr()}}function Ti(t,e){if("string"==typeof t&&"string"==typeof e&&t.length===e.length)return qr(t,e);var n=ci(t),t=ci(e),e=qr(n.seconds,t.seconds);return 0!==e?e:qr(n.nanos,t.nanos)}function _i(t){return function s(t){return"nullValue"in t?"null":"booleanValue"in t?""+t.booleanValue:"integerValue"in t?""+t.integerValue:"doubleValue"in t?""+t.doubleValue:"timestampValue"in t?function(t){var t=ci(t);return"time("+t.seconds+","+t.nanos+")"}(t.timestampValue):"stringValue"in t?t.stringValue:"bytesValue"in t?li(t.bytesValue).toBase64():"referenceValue"in t?(e=t.referenceValue,mi.fromName(e).toString()):"geoPointValue"in t?"geo("+(e=t.geoPointValue).latitude+","+e.longitude+")":"arrayValue"in t?function(t){for(var e="[",n=!0,r=0,i=t.values||[];r<i.length;r++)n?n=!1:e+=",",e+=s(i[r]);return e+"]"}(t.arrayValue):"mapValue"in t?function(t){for(var e="{",n=!0,r=0,i=Object.keys(t.fields||{}).sort();r<i.length;r++){var o=i[r];n?n=!1:e+=",",e+=o+":"+s(t.fields[o])}return e+"}"}(t.mapValue):Mr();var e}(t)}function Si(t,e){return{referenceValue:"projects/"+t.projectId+"/databases/"+t.database+"/documents/"+e.path.canonicalString()}}function Ni(t){return t&&"integerValue"in t}function Di(t){return!!t&&"arrayValue"in t}function Ai(t){return t&&"nullValue"in t}function ki(t){return t&&"doubleValue"in t&&isNaN(Number(t.doubleValue))}function Ci(t){return t&&"mapValue"in t}var Ri=(xi.empty=function(){return new xi({mapValue:{}})},xi.prototype.field=function(t){return xi.extractNestedValue(this.buildProto(),t)},xi.prototype.toProto=function(){return this.field(ti.emptyPath())},xi.prototype.set=function(t,e){this.setOverlay(t,e)},xi.prototype.setAll=function(t){var n=this;t.forEach(function(t,e){t?n.set(e,t):n.delete(e)})},xi.prototype.delete=function(t){this.setOverlay(t,null)},xi.prototype.isEqual=function(t){return wi(this.buildProto(),t.buildProto())},xi.prototype.setOverlay=function(t,e){for(var n=this.overlayMap,r=0;r<t.length-1;++r)var i=t.get(r),o=n.get(i),n=(o instanceof Map||(o=o&&10===bi(o)?new Map(Object.entries(o.mapValue.fields||{})):new Map,n.set(i,o)),o);n.set(t.lastSegment(),e)},xi.prototype.applyOverlay=function(r,t){var i=this,o=!1,e=xi.extractNestedValue(this.partialValue,r),s=Ci(e)?Object.assign({},e.mapValue.fields):{};return t.forEach(function(t,e){var n;t instanceof Map?null!=(n=i.applyOverlay(r.child(e),t))&&(s[e]=n,o=!0):null!==t?(s[e]=t,o=!0):s.hasOwnProperty(e)&&(delete s[e],o=!0)}),o?{mapValue:{fields:s}}:null},xi.prototype.buildProto=function(){var t=this.applyOverlay(ti.emptyPath(),this.overlayMap);return null!=t&&(this.partialValue=t,this.overlayMap.clear()),this.partialValue},xi.extractNestedValue=function(t,e){if(e.isEmpty())return t;for(var n=t,r=0;r<e.length-1;++r){if(!n.mapValue.fields)return null;if(!Ci(n=n.mapValue.fields[e.get(r)]))return null}return(n=(n.mapValue.fields||{})[e.lastSegment()])||null},xi.prototype.clone=function(){return new xi(this.buildProto())},xi);function xi(t){this.overlayMap=new Map,this.partialValue=t}var Oi=(Pi.newInvalidDocument=function(t){return new Pi(t,0,Gr.min(),Ri.empty(),0)},Pi.newFoundDocument=function(t,e,n){return new Pi(t,1,e,n,0)},Pi.newNoDocument=function(t,e){return new Pi(t,2,e,Ri.empty(),0)},Pi.newUnknownDocument=function(t,e){return new Pi(t,3,e,Ri.empty(),2)},Pi.prototype.convertToFoundDocument=function(t,e){return this.version=t,this.documentType=1,this.data=e,this.documentState=0,this},Pi.prototype.convertToNoDocument=function(t){return this.version=t,this.documentType=2,this.data=Ri.empty(),this.documentState=0,this},Pi.prototype.convertToUnknownDocument=function(t){return this.version=t,this.documentType=3,this.data=Ri.empty(),this.documentState=2,this},Pi.prototype.setHasCommittedMutations=function(){return this.documentState=2,this},Pi.prototype.setHasLocalMutations=function(){return this.documentState=1,this},Object.defineProperty(Pi.prototype,"hasLocalMutations",{get:function(){return 1===this.documentState},enumerable:!1,configurable:!0}),Object.defineProperty(Pi.prototype,"hasCommittedMutations",{get:function(){return 2===this.documentState},enumerable:!1,configurable:!0}),Object.defineProperty(Pi.prototype,"hasPendingWrites",{get:function(){return this.hasLocalMutations||this.hasCommittedMutations},enumerable:!1,configurable:!0}),Pi.prototype.isValidDocument=function(){return 0!==this.documentType},Pi.prototype.isFoundDocument=function(){return 1===this.documentType},Pi.prototype.isNoDocument=function(){return 2===this.documentType},Pi.prototype.isUnknownDocument=function(){return 3===this.documentType},Pi.prototype.isEqual=function(t){return t instanceof Pi&&this.key.isEqual(t.key)&&this.version.isEqual(t.version)&&this.documentType===t.documentType&&this.documentState===t.documentState&&this.data.isEqual(t.data)},Pi.prototype.clone=function(){return new Pi(this.key,this.documentType,this.version,this.data.clone(),this.documentState)},Pi.prototype.toString=function(){return"Document("+this.key+", "+this.version+", "+JSON.stringify(this.data.toProto())+", {documentType: "+this.documentType+"}), {documentState: "+this.documentState+"})"},Pi),Li=function(t,e,n,r,i,o,s){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o=null),void 0===s&&(s=null),this.path=t,this.collectionGroup=e,this.orderBy=n,this.filters=r,this.limit=i,this.startAt=o,this.endAt=s,this.h=null};function Pi(t,e,n,r,i){this.key=t,this.documentType=e,this.version=n,this.data=r,this.documentState=i}function Mi(t,e,n,r,i,o,s){return new Li(t,e=void 0===e?null:e,n=void 0===n?[]:n,r=void 0===r?[]:r,i=void 0===i?null:i,o=void 0===o?null:o,s=void 0===s?null:s)}function Fi(t){var e=t;return null===e.h&&(t=e.path.canonicalString(),null!==e.collectionGroup&&(t+="|cg:"+e.collectionGroup),t+="|f:",t+=e.filters.map(function(t){return(t=t).field.canonicalString()+t.op.toString()+_i(t.value)}).join(","),t+="|ob:",t+=e.orderBy.map(function(t){return(t=t).field.canonicalString()+t.dir}).join(","),pi(e.limit)||(t+="|l:",t+=e.limit),e.startAt&&(t+="|lb:",t+=fo(e.startAt)),e.endAt&&(t+="|ub:",t+=fo(e.endAt)),e.h=t),e.h}function Vi(t,e){if(t.limit!==e.limit)return!1;if(t.orderBy.length!==e.orderBy.length)return!1;for(var n,r,i=0;i<t.orderBy.length;i++)if(n=t.orderBy[i],r=e.orderBy[i],n.dir!==r.dir||!n.field.isEqual(r.field))return!1;if(t.filters.length!==e.filters.length)return!1;for(var o,s,a=0;a<t.filters.length;a++)if(o=t.filters[a],s=e.filters[a],o.op!==s.op||!o.field.isEqual(s.field)||!wi(o.value,s.value))return!1;return t.collectionGroup===e.collectionGroup&&!!t.path.isEqual(e.path)&&!!go(t.startAt,e.startAt)&&go(t.endAt,e.endAt)}function Ui(t){return mi.isDocumentKey(t.path)&&null===t.collectionGroup&&0===t.filters.length}var qi,Bi=(n(ji,qi=function(){}),ji.create=function(t,e,n){return t.isKeyField()?"in"===e||"not-in"===e?this.l(t,e,n):new zi(t,e,n):"array-contains"===e?new ro(t,n):"in"===e?new io(t,n):"not-in"===e?new oo(t,n):"array-contains-any"===e?new so(t,n):new ji(t,e,n)},ji.l=function(t,e,n){return new("in"===e?Hi:Wi)(t,n)},ji.prototype.matches=function(t){t=t.data.field(this.field);return"!="===this.op?null!==t&&this.m(Ei(t,this.value)):null!==t&&bi(this.value)===bi(t)&&this.m(Ei(t,this.value))},ji.prototype.m=function(t){switch(this.op){case"<":return t<0;case"<=":return t<=0;case"==":return 0===t;case"!=":return 0!==t;case">":return 0<t;case">=":return 0<=t;default:return Mr()}},ji.prototype.g=function(){return 0<=["<","<=",">",">=","!=","not-in"].indexOf(this.op)},ji);function ji(t,e,n){var r=this;return(r=qi.call(this)||this).field=t,r.op=e,r.value=n,r}var Ki,Gi,Qi,zi=(n(Ji,Qi=Bi),Ji.prototype.matches=function(t){t=mi.comparator(t.key,this.key);return this.m(t)},Ji),Hi=(n(Xi,Gi=Bi),Xi.prototype.matches=function(e){return this.keys.some(function(t){return t.isEqual(e.key)})},Xi),Wi=(n(Yi,Ki=Bi),Yi.prototype.matches=function(e){return!this.keys.some(function(t){return t.isEqual(e.key)})},Yi);function Yi(t,e){var n=this;return(n=Ki.call(this,t,"not-in",e)||this).keys=$i(0,e),n}function Xi(t,e){var n=this;return(n=Gi.call(this,t,"in",e)||this).keys=$i(0,e),n}function Ji(t,e,n){var r=this;return(r=Qi.call(this,t,e,n)||this).key=mi.fromName(n.referenceValue),r}function $i(t,e){return((null===(e=e.arrayValue)||void 0===e?void 0:e.values)||[]).map(function(t){return mi.fromName(t.referenceValue)})}var Zi,to,eo,no,ro=(n(lo,no=Bi),lo.prototype.matches=function(t){t=t.data.field(this.field);return Di(t)&&Ii(t.arrayValue,this.value)},lo),io=(n(ho,eo=Bi),ho.prototype.matches=function(t){t=t.data.field(this.field);return null!==t&&Ii(this.value.arrayValue,t)},ho),oo=(n(co,to=Bi),co.prototype.matches=function(t){if(Ii(this.value.arrayValue,{nullValue:"NULL_VALUE"}))return!1;t=t.data.field(this.field);return null!==t&&!Ii(this.value.arrayValue,t)},co),so=(n(uo,Zi=Bi),uo.prototype.matches=function(t){var e=this,t=t.data.field(this.field);return!(!Di(t)||!t.arrayValue.values)&&t.arrayValue.values.some(function(t){return Ii(e.value.arrayValue,t)})},uo),ao=function(t,e){this.position=t,this.before=e};function uo(t,e){return Zi.call(this,t,"array-contains-any",e)||this}function co(t,e){return to.call(this,t,"not-in",e)||this}function ho(t,e){return eo.call(this,t,"in",e)||this}function lo(t,e){return no.call(this,t,"array-contains",e)||this}function fo(t){return(t.before?"b":"a")+":"+t.position.map(_i).join(",")}var po=function(t,e){void 0===e&&(e="asc"),this.field=t,this.dir=e};function yo(t,e,n){for(var r=0,i=0;i<t.position.length;i++){var o=e[i],s=t.position[i],r=o.field.isKeyField()?mi.comparator(mi.fromName(s.referenceValue),n.key):Ei(s,n.data.field(o.field));if("desc"===o.dir&&(r*=-1),0!==r)break}return t.before?r<=0:r<0}function go(t,e){if(null===t)return null===e;if(null===e)return!1;if(t.before!==e.before||t.position.length!==e.position.length)return!1;for(var n=0;n<t.position.length;n++)if(!wi(t.position[n],e.position[n]))return!1;return!0}var mo=function(t,e,n,r,i,o,s,a){void 0===e&&(e=null),void 0===n&&(n=[]),void 0===r&&(r=[]),void 0===i&&(i=null),void 0===o&&(o="F"),void 0===s&&(s=null),void 0===a&&(a=null),this.path=t,this.collectionGroup=e,this.explicitOrderBy=n,this.filters=r,this.limit=i,this.limitType=o,this.startAt=s,this.endAt=a,this.p=null,this.T=null,this.startAt,this.endAt};function vo(t,e,n,r,i,o,s,a){return new mo(t,e,n,r,i,o,s,a)}function bo(t){return new mo(t)}function wo(t){return!pi(t.limit)&&"F"===t.limitType}function Io(t){return!pi(t.limit)&&"L"===t.limitType}function Eo(t){return 0<t.explicitOrderBy.length?t.explicitOrderBy[0].field:null}function To(t){for(var e=0,n=t.filters;e<n.length;e++){var r=n[e];if(r.g())return r.field}return null}function _o(t){return null!==t.collectionGroup}function So(t){var e=t;if(null===e.p){e.p=[];var n=To(e),t=Eo(e);if(null!==n&&null===t)n.isKeyField()||e.p.push(new po(n)),e.p.push(new po(ti.keyField(),"asc"));else{for(var r=!1,i=0,o=e.explicitOrderBy;i<o.length;i++){var s=o[i];e.p.push(s),s.field.isKeyField()&&(r=!0)}r||(n=0<e.explicitOrderBy.length?e.explicitOrderBy[e.explicitOrderBy.length-1].dir:"asc",e.p.push(new po(ti.keyField(),n)))}}return e.p}function No(t){var e=t;if(!e.T)if("F"===e.limitType)e.T=Mi(e.path,e.collectionGroup,So(e),e.filters,e.limit,e.startAt,e.endAt);else{for(var n=[],r=0,i=So(e);r<i.length;r++){var o=i[r],s="desc"===o.dir?"asc":"desc";n.push(new po(o.field,s))}var a=e.endAt?new ao(e.endAt.position,!e.endAt.before):null,t=e.startAt?new ao(e.startAt.position,!e.startAt.before):null;e.T=Mi(e.path,e.collectionGroup,n,e.filters,e.limit,a,t)}return e.T}function Do(t,e,n){return new mo(t.path,t.collectionGroup,t.explicitOrderBy.slice(),t.filters.slice(),e,n,t.startAt,t.endAt)}function Ao(t,e){return Vi(No(t),No(e))&&t.limitType===e.limitType}function ko(t){return Fi(No(t))+"|lt:"+t.limitType}function Co(t){return"Query(target="+(e=No(t),n=e.path.canonicalString(),null!==e.collectionGroup&&(n+=" collectionGroup="+e.collectionGroup),0<e.filters.length&&(n+=", filters: ["+e.filters.map(function(t){return(t=t).field.canonicalString()+" "+t.op+" "+_i(t.value)}).join(", ")+"]"),pi(e.limit)||(n+=", limit: "+e.limit),0<e.orderBy.length&&(n+=", orderBy: ["+e.orderBy.map(function(t){return(t=t).field.canonicalString()+" ("+t.dir+")"}).join(", ")+"]"),e.startAt&&(n+=", startAt: "+fo(e.startAt)),e.endAt&&(n+=", endAt: "+fo(e.endAt)),"Target("+n+")")+"; limitType="+t.limitType+")";var e,n}function Ro(i,t){return t.isFoundDocument()&&(e=i,n=t.key.path,null!==e.collectionGroup?t.key.hasCollectionId(e.collectionGroup)&&e.path.isPrefixOf(n):mi.isDocumentKey(e.path)?e.path.isEqual(n):e.path.isImmediateParentOf(n))&&function(t){for(var e=0,n=i.explicitOrderBy;e<n.length;e++){var r=n[e];if(!r.field.isKeyField()&&null===t.data.field(r.field))return}return 1}(t)&&function(t){for(var e=0,n=i.filters;e<n.length;e++)if(!n[e].matches(t))return;return 1}(t)&&(n=t,(!(t=i).startAt||yo(t.startAt,So(t),n))&&(!t.endAt||!yo(t.endAt,So(t),n)));var e,n}function xo(a){return function(t,e){for(var n=!1,r=0,i=So(a);r<i.length;r++){var o=i[r],s=function(t,r,e){var n=t.field.isKeyField()?mi.comparator(r.key,e.key):function(t,e){var n=r.data.field(t),t=e.data.field(t);return null!==n&&null!==t?Ei(n,t):Mr()}(t.field,e);switch(t.dir){case"asc":return n;case"desc":return-1*n;default:return Mr()}}(o,t,e);if(0!==s)return s;n=n||o.field.isKeyField()}return 0}}function Oo(t,e){if(t.I){if(isNaN(e))return{doubleValue:"NaN"};if(e===1/0)return{doubleValue:"Infinity"};if(e===-1/0)return{doubleValue:"-Infinity"}}return{doubleValue:yi(e)?"-0":e}}function Lo(t){return{integerValue:""+t}}function Po(t,e){return gi(e)?Lo(e):Oo(t,e)}I=function(){this._=void 0};function Mo(t,e){return t instanceof Yo?Ni(t=e)||t&&"doubleValue"in t?e:{integerValue:0}:null}var Fo,Vo,Uo=(n(jo,Vo=I),jo),qo=(n(Bo,Fo=I),Bo);function Bo(t){var e=this;return(e=Fo.call(this)||this).elements=t,e}function jo(){return null!==Vo&&Vo.apply(this,arguments)||this}function Ko(t,e){for(var n=$o(e),r=0,i=t.elements;r<i.length;r++)!function(e){n.some(function(t){return wi(t,e)})||n.push(e)}(i[r]);return{arrayValue:{values:n}}}var Go,Qo=(n(zo,Go=I),zo);function zo(t){var e=this;return(e=Go.call(this)||this).elements=t,e}function Ho(t,e){for(var n=$o(e),r=0,i=t.elements;r<i.length;r++)!function(e){n=n.filter(function(t){return!wi(t,e)})}(i[r]);return{arrayValue:{values:n}}}var Wo,Yo=(n(Xo,Wo=I),Xo);function Xo(t,e){var n=this;return(n=Wo.call(this)||this).R=t,n.A=e,n}function Jo(t){return hi(t.integerValue||t.doubleValue)}function $o(t){return Di(t)&&t.arrayValue.values?t.arrayValue.values.slice():[]}function Zo(t,e){this.version=t,this.transformResults=e}var ts=function(t,e){this.field=t,this.transform=e},es=(ns.none=function(){return new ns},ns.exists=function(t){return new ns(void 0,t)},ns.updateTime=function(t){return new ns(t)},Object.defineProperty(ns.prototype,"isNone",{get:function(){return void 0===this.updateTime&&void 0===this.exists},enumerable:!1,configurable:!0}),ns.prototype.isEqual=function(t){return this.exists===t.exists&&(this.updateTime?!!t.updateTime&&this.updateTime.isEqual(t.updateTime):!t.updateTime)},ns);function ns(t,e){this.updateTime=t,this.exists=e}function rs(t,e){return void 0!==t.updateTime?e.isFoundDocument()&&e.version.isEqual(t.updateTime):void 0===t.exists||t.exists===e.isFoundDocument()}Te=function(){};function is(t,e,n){var r,i,o,s;t instanceof cs?(i=e,o=n,rs((r=t).precondition,i)&&(s=r.value.clone(),o=ys(r.fieldTransforms,o,i),s.setAll(o),i.convertToFoundDocument(ss(i),s).setHasLocalMutations())):t instanceof hs?(o=e,i=n,rs((s=t).precondition,o)&&(n=ys(s.fieldTransforms,i,o),(i=o.data).setAll(ds(s)),i.setAll(n),o.convertToFoundDocument(ss(o),i).setHasLocalMutations())):(e=e,rs(t.precondition,e)&&e.convertToNoDocument(Gr.min()))}function os(t,e){return t.type===e.type&&!!t.key.isEqual(e.key)&&!!t.precondition.isEqual(e.precondition)&&(n=t.fieldTransforms,r=e.fieldTransforms,!!(void 0===n&&void 0===r||n&&r&&Br(n,r,function(t,e){return e=e,(t=t).field.isEqual(e.field)&&(t=t.transform,e=e.transform,t instanceof qo&&e instanceof qo||t instanceof Qo&&e instanceof Qo?Br(t.elements,e.elements,wi):t instanceof Yo&&e instanceof Yo?wi(t.A,e.A):t instanceof Uo&&e instanceof Uo)})))&&(0===t.type?t.value.isEqual(e.value):1!==t.type||t.data.isEqual(e.data)&&t.fieldMask.isEqual(e.fieldMask));var n,r}function ss(t){return t.isFoundDocument()?t.version:Gr.min()}var as,us,cs=(n(fs,us=Te),fs),hs=(n(ls,as=Te),ls);function ls(t,e,n,r,i){void 0===i&&(i=[]);var o=this;return(o=as.call(this)||this).key=t,o.data=e,o.fieldMask=n,o.precondition=r,o.fieldTransforms=i,o.type=1,o}function fs(t,e,n,r){void 0===r&&(r=[]);var i=this;return(i=us.call(this)||this).key=t,i.value=e,i.precondition=n,i.fieldTransforms=r,i.type=0,i}function ds(n){var r=new Map;return n.fieldMask.fields.forEach(function(t){var e;t.isEmpty()||(e=n.data.field(t),r.set(t,e))}),r}function ps(t,e,n){var r=new Map;Fr(t.length===n.length);for(var i=0;i<n.length;i++){var o=t[i],s=o.transform,a=e.data.field(o.field);r.set(o.field,(o=s,s=a,a=n[i],o instanceof qo?Ko(o,s):o instanceof Qo?Ho(o,s):a))}return r}function ys(t,e,n){for(var r,i=new Map,o=0,s=t;o<s.length;o++){var a=s[o],u=a.transform,c=n.data.field(a.field);i.set(a.field,(r=c,a=e,c=void 0,(u=u)instanceof Uo?(c={fields:{__type__:{stringValue:"server_timestamp"},__local_write_time__:{timestampValue:{seconds:a.seconds,nanos:a.nanoseconds}}}},r&&(c.fields.__previous_value__=r),{mapValue:c}):u instanceof qo?Ko(u,r):u instanceof Qo?Ho(u,r):(u=Mo(c=u,r),r=Jo(u)+Jo(c.A),Ni(u)&&Ni(c.A)?Lo(r):Oo(c.R,r))))}return i}function gs(t){this.count=t}var ms,vs,bs,ws=(n(Ts,bs=Te),Ts),Is=(n(Es,vs=Te),Es);function Es(t,e){var n=this;return(n=vs.call(this)||this).key=t,n.precondition=e,n.type=3,n.fieldTransforms=[],n}function Ts(t,e){var n=this;return(n=bs.call(this)||this).key=t,n.precondition=e,n.type=2,n.fieldTransforms=[],n}function _s(t){switch(t){case Dr.OK:return Mr(),0;case Dr.CANCELLED:case Dr.UNKNOWN:case Dr.DEADLINE_EXCEEDED:case Dr.RESOURCE_EXHAUSTED:case Dr.INTERNAL:case Dr.UNAVAILABLE:case Dr.UNAUTHENTICATED:return;case Dr.INVALID_ARGUMENT:case Dr.NOT_FOUND:case Dr.ALREADY_EXISTS:case Dr.PERMISSION_DENIED:case Dr.FAILED_PRECONDITION:case Dr.ABORTED:case Dr.OUT_OF_RANGE:case Dr.UNIMPLEMENTED:case Dr.DATA_LOSS:return 1;default:return Mr(),0}}function Ss(t){if(void 0===t)return Or("GRPC error has no .code"),Dr.UNKNOWN;switch(t){case ms.OK:return Dr.OK;case ms.CANCELLED:return Dr.CANCELLED;case ms.UNKNOWN:return Dr.UNKNOWN;case ms.DEADLINE_EXCEEDED:return Dr.DEADLINE_EXCEEDED;case ms.RESOURCE_EXHAUSTED:return Dr.RESOURCE_EXHAUSTED;case ms.INTERNAL:return Dr.INTERNAL;case ms.UNAVAILABLE:return Dr.UNAVAILABLE;case ms.UNAUTHENTICATED:return Dr.UNAUTHENTICATED;case ms.INVALID_ARGUMENT:return Dr.INVALID_ARGUMENT;case ms.NOT_FOUND:return Dr.NOT_FOUND;case ms.ALREADY_EXISTS:return Dr.ALREADY_EXISTS;case ms.PERMISSION_DENIED:return Dr.PERMISSION_DENIED;case ms.FAILED_PRECONDITION:return Dr.FAILED_PRECONDITION;case ms.ABORTED:return Dr.ABORTED;case ms.OUT_OF_RANGE:return Dr.OUT_OF_RANGE;case ms.UNIMPLEMENTED:return Dr.UNIMPLEMENTED;case ms.DATA_LOSS:return Dr.DATA_LOSS;default:return Mr()}}(I=ms=ms||{})[I.OK=0]="OK",I[I.CANCELLED=1]="CANCELLED",I[I.UNKNOWN=2]="UNKNOWN",I[I.INVALID_ARGUMENT=3]="INVALID_ARGUMENT",I[I.DEADLINE_EXCEEDED=4]="DEADLINE_EXCEEDED",I[I.NOT_FOUND=5]="NOT_FOUND",I[I.ALREADY_EXISTS=6]="ALREADY_EXISTS",I[I.PERMISSION_DENIED=7]="PERMISSION_DENIED",I[I.UNAUTHENTICATED=16]="UNAUTHENTICATED",I[I.RESOURCE_EXHAUSTED=8]="RESOURCE_EXHAUSTED",I[I.FAILED_PRECONDITION=9]="FAILED_PRECONDITION",I[I.ABORTED=10]="ABORTED",I[I.OUT_OF_RANGE=11]="OUT_OF_RANGE",I[I.UNIMPLEMENTED=12]="UNIMPLEMENTED",I[I.INTERNAL=13]="INTERNAL",I[I.UNAVAILABLE=14]="UNAVAILABLE",I[I.DATA_LOSS=15]="DATA_LOSS";var Ns=(Rs.prototype.insert=function(t,e){return new Rs(this.comparator,this.root.insert(t,e,this.comparator).copy(null,null,As.BLACK,null,null))},Rs.prototype.remove=function(t){return new Rs(this.comparator,this.root.remove(t,this.comparator).copy(null,null,As.BLACK,null,null))},Rs.prototype.get=function(t){for(var e=this.root;!e.isEmpty();){var n=this.comparator(t,e.key);if(0===n)return e.value;n<0?e=e.left:0<n&&(e=e.right)}return null},Rs.prototype.indexOf=function(t){for(var e=0,n=this.root;!n.isEmpty();){var r=this.comparator(t,n.key);if(0===r)return e+n.left.size;n=r<0?n.left:(e+=n.left.size+1,n.right)}return-1},Rs.prototype.isEmpty=function(){return this.root.isEmpty()},Object.defineProperty(Rs.prototype,"size",{get:function(){return this.root.size},enumerable:!1,configurable:!0}),Rs.prototype.minKey=function(){return this.root.minKey()},Rs.prototype.maxKey=function(){return this.root.maxKey()},Rs.prototype.inorderTraversal=function(t){return this.root.inorderTraversal(t)},Rs.prototype.forEach=function(n){this.inorderTraversal(function(t,e){return n(t,e),!1})},Rs.prototype.toString=function(){var n=[];return this.inorderTraversal(function(t,e){return n.push(t+":"+e),!1}),"{"+n.join(", ")+"}"},Rs.prototype.reverseTraversal=function(t){return this.root.reverseTraversal(t)},Rs.prototype.getIterator=function(){return new Ds(this.root,null,this.comparator,!1)},Rs.prototype.getIteratorFrom=function(t){return new Ds(this.root,t,this.comparator,!1)},Rs.prototype.getReverseIterator=function(){return new Ds(this.root,null,this.comparator,!0)},Rs.prototype.getReverseIteratorFrom=function(t){return new Ds(this.root,t,this.comparator,!0)},Rs),Ds=(Cs.prototype.getNext=function(){var t=this.nodeStack.pop(),e={key:t.key,value:t.value};if(this.isReverse)for(t=t.left;!t.isEmpty();)this.nodeStack.push(t),t=t.right;else for(t=t.right;!t.isEmpty();)this.nodeStack.push(t),t=t.left;return e},Cs.prototype.hasNext=function(){return 0<this.nodeStack.length},Cs.prototype.peek=function(){if(0===this.nodeStack.length)return null;var t=this.nodeStack[this.nodeStack.length-1];return{key:t.key,value:t.value}},Cs),As=(ks.prototype.copy=function(t,e,n,r,i){return new ks(null!=t?t:this.key,null!=e?e:this.value,null!=n?n:this.color,null!=r?r:this.left,null!=i?i:this.right)},ks.prototype.isEmpty=function(){return!1},ks.prototype.inorderTraversal=function(t){return this.left.inorderTraversal(t)||t(this.key,this.value)||this.right.inorderTraversal(t)},ks.prototype.reverseTraversal=function(t){return this.right.reverseTraversal(t)||t(this.key,this.value)||this.left.reverseTraversal(t)},ks.prototype.min=function(){return this.left.isEmpty()?this:this.left.min()},ks.prototype.minKey=function(){return this.min().key},ks.prototype.maxKey=function(){return this.right.isEmpty()?this.key:this.right.maxKey()},ks.prototype.insert=function(t,e,n){var r=this,i=n(t,r.key);return(r=i<0?r.copy(null,null,null,r.left.insert(t,e,n),null):0===i?r.copy(null,e,null,null,null):r.copy(null,null,null,null,r.right.insert(t,e,n))).fixUp()},ks.prototype.removeMin=function(){if(this.left.isEmpty())return ks.EMPTY;var t=this;return(t=(t=!t.left.isRed()&&!t.left.left.isRed()?t.moveRedLeft():t).copy(null,null,null,t.left.removeMin(),null)).fixUp()},ks.prototype.remove=function(t,e){var n,r=this;if(e(t,r.key)<0)r=(r=!(r.left.isEmpty()||r.left.isRed()||r.left.left.isRed())?r.moveRedLeft():r).copy(null,null,null,r.left.remove(t,e),null);else{if(0===e(t,(r=!((r=r.left.isRed()?r.rotateRight():r).right.isEmpty()||r.right.isRed()||r.right.left.isRed())?r.moveRedRight():r).key)){if(r.right.isEmpty())return ks.EMPTY;n=r.right.min(),r=r.copy(n.key,n.value,null,null,r.right.removeMin())}r=r.copy(null,null,null,null,r.right.remove(t,e))}return r.fixUp()},ks.prototype.isRed=function(){return this.color},ks.prototype.fixUp=function(){var t=this;return t=(t=(t=t.right.isRed()&&!t.left.isRed()?t.rotateLeft():t).left.isRed()&&t.left.left.isRed()?t.rotateRight():t).left.isRed()&&t.right.isRed()?t.colorFlip():t},ks.prototype.moveRedLeft=function(){var t=this.colorFlip();return t=t.right.left.isRed()?(t=(t=t.copy(null,null,null,null,t.right.rotateRight())).rotateLeft()).colorFlip():t},ks.prototype.moveRedRight=function(){var t=this.colorFlip();return t=t.left.left.isRed()?(t=t.rotateRight()).colorFlip():t},ks.prototype.rotateLeft=function(){var t=this.copy(null,null,ks.RED,null,this.right.left);return this.right.copy(null,null,this.color,t,null)},ks.prototype.rotateRight=function(){var t=this.copy(null,null,ks.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,t)},ks.prototype.colorFlip=function(){var t=this.left.copy(null,null,!this.left.color,null,null),e=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,t,e)},ks.prototype.checkMaxDepth=function(){var t=this.check();return Math.pow(2,t)<=this.size+1},ks.prototype.check=function(){if(this.isRed()&&this.left.isRed())throw Mr();if(this.right.isRed())throw Mr();var t=this.left.check();if(t!==this.right.check())throw Mr();return t+(this.isRed()?0:1)},ks);function ks(t,e,n,r,i){this.key=t,this.value=e,this.color=null!=n?n:ks.RED,this.left=null!=r?r:ks.EMPTY,this.right=null!=i?i:ks.EMPTY,this.size=this.left.size+1+this.right.size}function Cs(t,e,n,r){this.isReverse=r,this.nodeStack=[];for(var i=1;!t.isEmpty();)if(i=e?n(t.key,e):1,r&&(i*=-1),i<0)t=this.isReverse?t.left:t.right;else{if(0===i){this.nodeStack.push(t);break}this.nodeStack.push(t),t=this.isReverse?t.right:t.left}}function Rs(t,e){this.comparator=t,this.root=e||As.EMPTY}function xs(){this.size=0}As.EMPTY=null,As.RED=!0,As.BLACK=!1,As.EMPTY=(Object.defineProperty(xs.prototype,"key",{get:function(){throw Mr()},enumerable:!1,configurable:!0}),Object.defineProperty(xs.prototype,"value",{get:function(){throw Mr()},enumerable:!1,configurable:!0}),Object.defineProperty(xs.prototype,"color",{get:function(){throw Mr()},enumerable:!1,configurable:!0}),Object.defineProperty(xs.prototype,"left",{get:function(){throw Mr()},enumerable:!1,configurable:!0}),Object.defineProperty(xs.prototype,"right",{get:function(){throw Mr()},enumerable:!1,configurable:!0}),xs.prototype.copy=function(t,e,n,r,i){return this},xs.prototype.insert=function(t,e,n){return new As(t,e)},xs.prototype.remove=function(t,e){return this},xs.prototype.isEmpty=function(){return!0},xs.prototype.inorderTraversal=function(t){return!1},xs.prototype.reverseTraversal=function(t){return!1},xs.prototype.minKey=function(){return null},xs.prototype.maxKey=function(){return null},xs.prototype.isRed=function(){return!1},xs.prototype.checkMaxDepth=function(){return!0},xs.prototype.check=function(){return 0},new xs);var Os=(Fs.prototype.has=function(t){return null!==this.data.get(t)},Fs.prototype.first=function(){return this.data.minKey()},Fs.prototype.last=function(){return this.data.maxKey()},Object.defineProperty(Fs.prototype,"size",{get:function(){return this.data.size},enumerable:!1,configurable:!0}),Fs.prototype.indexOf=function(t){return this.data.indexOf(t)},Fs.prototype.forEach=function(n){this.data.inorderTraversal(function(t,e){return n(t),!1})},Fs.prototype.forEachInRange=function(t,e){for(var n=this.data.getIteratorFrom(t[0]);n.hasNext();){var r=n.getNext();if(0<=this.comparator(r.key,t[1]))return;e(r.key)}},Fs.prototype.forEachWhile=function(t,e){for(var n=void 0!==e?this.data.getIteratorFrom(e):this.data.getIterator();n.hasNext();)if(!t(n.getNext().key))return},Fs.prototype.firstAfterOrEqual=function(t){t=this.data.getIteratorFrom(t);return t.hasNext()?t.getNext().key:null},Fs.prototype.getIterator=function(){return new Ls(this.data.getIterator())},Fs.prototype.getIteratorFrom=function(t){return new Ls(this.data.getIteratorFrom(t))},Fs.prototype.add=function(t){return this.copy(this.data.remove(t).insert(t,!0))},Fs.prototype.delete=function(t){return this.has(t)?this.copy(this.data.remove(t)):this},Fs.prototype.isEmpty=function(){return this.data.isEmpty()},Fs.prototype.unionWith=function(t){var e=this;return e.size<t.size&&(e=t,t=this),t.forEach(function(t){e=e.add(t)}),e},Fs.prototype.isEqual=function(t){if(!(t instanceof Fs))return!1;if(this.size!==t.size)return!1;for(var e=this.data.getIterator(),n=t.data.getIterator();e.hasNext();){var r=e.getNext().key,i=n.getNext().key;if(0!==this.comparator(r,i))return!1}return!0},Fs.prototype.toArray=function(){var e=[];return this.forEach(function(t){e.push(t)}),e},Fs.prototype.toString=function(){var e=[];return this.forEach(function(t){return e.push(t)}),"SortedSet("+e.toString()+")"},Fs.prototype.copy=function(t){var e=new Fs(this.comparator);return e.data=t,e},Fs),Ls=(Ms.prototype.getNext=function(){return this.iter.getNext().key},Ms.prototype.hasNext=function(){return this.iter.hasNext()},Ms),Ps=new Ns(mi.comparator);function Ms(t){this.iter=t}function Fs(t){this.comparator=t,this.data=new Ns(this.comparator)}var Vs=new Ns(mi.comparator);var Us=new Ns(mi.comparator);var qs=new Os(mi.comparator);function Bs(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=qs,r=0,i=t;r<i.length;r++)var o=i[r],n=n.add(o);return n}var js=new Os(qr);var Ks=(Zs.createSynthesizedRemoteEventForCurrentChange=function(t,e){var n=new Map;return n.set(t,Gs.createSynthesizedTargetChangeForCurrentChange(t,e)),new Zs(Gr.min(),n,js,Ps,Bs())},Zs),Gs=($s.createSynthesizedTargetChangeForCurrentChange=function(t,e){return new $s(ni.EMPTY_BYTE_STRING,e,Bs(),Bs(),Bs())},$s),Qs=function(t,e,n,r){this.v=t,this.removedTargetIds=e,this.key=n,this.P=r},zs=function(t,e){this.targetId=t,this.V=e},Hs=function(t,e,n,r){void 0===n&&(n=ni.EMPTY_BYTE_STRING),void 0===r&&(r=null),this.state=t,this.targetIds=e,this.resumeToken=n,this.cause=r},Ws=(Object.defineProperty(Js.prototype,"current",{get:function(){return this.N},enumerable:!1,configurable:!0}),Object.defineProperty(Js.prototype,"resumeToken",{get:function(){return this.C},enumerable:!1,configurable:!0}),Object.defineProperty(Js.prototype,"k",{get:function(){return 0!==this.S},enumerable:!1,configurable:!0}),Object.defineProperty(Js.prototype,"O",{get:function(){return this.F},enumerable:!1,configurable:!0}),Js.prototype.$=function(t){0<t.approximateByteSize()&&(this.F=!0,this.C=t)},Js.prototype.M=function(){var n=Bs(),r=Bs(),i=Bs();return this.D.forEach(function(t,e){switch(e){case 0:n=n.add(t);break;case 2:r=r.add(t);break;case 1:i=i.add(t);break;default:Mr()}}),new Gs(this.C,this.N,n,r,i)},Js.prototype.L=function(){this.F=!1,this.D=ea()},Js.prototype.B=function(t,e){this.F=!0,this.D=this.D.insert(t,e)},Js.prototype.q=function(t){this.F=!0,this.D=this.D.remove(t)},Js.prototype.U=function(){this.S+=1},Js.prototype.K=function(){--this.S},Js.prototype.j=function(){this.F=!0,this.N=!0},Js),Ys=(Xs.prototype.X=function(t){for(var e=0,n=t.v;e<n.length;e++){var r=n[e];t.P&&t.P.isFoundDocument()?this.Z(r,t.P):this.tt(r,t.key,t.P)}for(var i=0,o=t.removedTargetIds;i<o.length;i++)r=o[i],this.tt(r,t.key,t.P)},Xs.prototype.et=function(n){var r=this;this.forEachTarget(n,function(t){var e=r.nt(t);switch(n.state){case 0:r.st(t)&&e.$(n.resumeToken);break;case 1:e.K(),e.k||e.L(),e.$(n.resumeToken);break;case 2:e.K(),e.k||r.removeTarget(t);break;case 3:r.st(t)&&(e.j(),e.$(n.resumeToken));break;case 4:r.st(t)&&(r.it(t),e.$(n.resumeToken));break;default:Mr()}})},Xs.prototype.forEachTarget=function(t,n){var r=this;0<t.targetIds.length?t.targetIds.forEach(n):this.G.forEach(function(t,e){r.st(e)&&n(e)})},Xs.prototype.rt=function(t){var e=t.targetId,n=t.V.count,t=this.ot(e);t&&(Ui(t=t.target)?0===n?(t=new mi(t.path),this.tt(e,t,Oi.newNoDocument(t,Gr.min()))):Fr(1===n):this.ct(e)!==n&&(this.it(e),this.Y=this.Y.add(e)))},Xs.prototype.ut=function(r){var i=this,o=new Map;this.G.forEach(function(t,e){var n=i.ot(e);n&&(t.current&&Ui(n.target)&&(n=new mi(n.target.path),null!==i.H.get(n)||i.at(e,n)||i.tt(e,n,Oi.newNoDocument(n,r))),t.O&&(o.set(e,t.M()),t.L()))});var s=Bs();this.J.forEach(function(t,e){var n=!0;e.forEachWhile(function(t){t=i.ot(t);return!t||2===t.purpose||(n=!1)}),n&&(s=s.add(t))});var t=new Ks(r,o,this.Y,this.H,s);return this.H=Ps,this.J=ta(),this.Y=new Os(qr),t},Xs.prototype.Z=function(t,e){var n;this.st(t)&&(n=this.at(t,e.key)?2:0,this.nt(t).B(e.key,n),this.H=this.H.insert(e.key,e),this.J=this.J.insert(e.key,this.ht(e.key).add(t)))},Xs.prototype.tt=function(t,e,n){var r;this.st(t)&&(r=this.nt(t),this.at(t,e)?r.B(e,1):r.q(e),this.J=this.J.insert(e,this.ht(e).delete(t)),n&&(this.H=this.H.insert(e,n)))},Xs.prototype.removeTarget=function(t){this.G.delete(t)},Xs.prototype.ct=function(t){var e=this.nt(t).M();return this.W.getRemoteKeysForTarget(t).size+e.addedDocuments.size-e.removedDocuments.size},Xs.prototype.U=function(t){this.nt(t).U()},Xs.prototype.nt=function(t){var e=this.G.get(t);return e||(e=new Ws,this.G.set(t,e)),e},Xs.prototype.ht=function(t){var e=this.J.get(t);return e||(e=new Os(qr),this.J=this.J.insert(t,e)),e},Xs.prototype.st=function(t){var e=null!==this.ot(t);return e||xr("WatchChangeAggregator","Detected inactive target",t),e},Xs.prototype.ot=function(t){var e=this.G.get(t);return e&&e.k?null:this.W.lt(t)},Xs.prototype.it=function(e){var n=this;this.G.set(e,new Ws),this.W.getRemoteKeysForTarget(e).forEach(function(t){n.tt(e,t,null)})},Xs.prototype.at=function(t,e){return this.W.getRemoteKeysForTarget(t).has(e)},Xs);function Xs(t){this.W=t,this.G=new Map,this.H=Ps,this.J=ta(),this.Y=new Os(qr)}function Js(){this.S=0,this.D=ea(),this.C=ni.EMPTY_BYTE_STRING,this.N=!1,this.F=!0}function $s(t,e,n,r,i){this.resumeToken=t,this.current=e,this.addedDocuments=n,this.modifiedDocuments=r,this.removedDocuments=i}function Zs(t,e,n,r,i){this.snapshotVersion=t,this.targetChanges=e,this.targetMismatches=n,this.documentUpdates=r,this.resolvedLimboDocuments=i}function ta(){return new Ns(mi.comparator)}function ea(){return new Ns(mi.comparator)}var na={asc:"ASCENDING",desc:"DESCENDING"},ra={"<":"LESS_THAN","<=":"LESS_THAN_OR_EQUAL",">":"GREATER_THAN",">=":"GREATER_THAN_OR_EQUAL","==":"EQUAL","!=":"NOT_EQUAL","array-contains":"ARRAY_CONTAINS",in:"IN","not-in":"NOT_IN","array-contains-any":"ARRAY_CONTAINS_ANY"},ia=function(t,e){this.databaseId=t,this.I=e};function oa(t,e){return t.I?new Date(1e3*e.seconds).toISOString().replace(/\.\d*/,"").replace("Z","")+"."+("000000000"+e.nanoseconds).slice(-9)+"Z":{seconds:""+e.seconds,nanos:e.nanoseconds}}function sa(t,e){return t.I?e.toBase64():e.toUint8Array()}function aa(t){return Fr(!!t),Gr.fromTimestamp((t=ci(t),new Kr(t.seconds,t.nanos)))}function ua(t,e){return new $r(["projects",t.projectId,"databases",t.database]).child("documents").child(e).canonicalString()}function ca(t){t=$r.fromString(t);return Fr(ka(t)),t}function ha(t,e){return ua(t.databaseId,e.path)}function la(t,e){e=ca(e);if(e.get(1)!==t.databaseId.projectId)throw new Ar(Dr.INVALID_ARGUMENT,"Tried to deserialize key from different project: "+e.get(1)+" vs "+t.databaseId.projectId);if(e.get(3)!==t.databaseId.database)throw new Ar(Dr.INVALID_ARGUMENT,"Tried to deserialize key from different database: "+e.get(3)+" vs "+t.databaseId.database);return new mi(ya(e))}function fa(t,e){return ua(t.databaseId,e)}function da(t){t=ca(t);return 4===t.length?$r.emptyPath():ya(t)}function pa(t){return new $r(["projects",t.databaseId.projectId,"databases",t.databaseId.database]).canonicalString()}function ya(t){return Fr(4<t.length&&"documents"===t.get(4)),t.popFirst(5)}function ga(t,e,n){return{name:ha(t,e),fields:n.toProto().mapValue.fields}}function ma(t,e,n){var r=la(t,e.name),t=aa(e.updateTime),e=new Ri({mapValue:{fields:e.fields}}),e=Oi.newFoundDocument(r,t,e);return n&&e.setHasCommittedMutations(),n?e.setHasCommittedMutations():e}function va(t,e){var n,r,i;if(e instanceof cs)n={update:ga(t,e.key,e.value)};else if(e instanceof ws)n={delete:ha(t,e.key)};else if(e instanceof hs)n={update:ga(t,e.key,e.data),updateMask:(i=e.fieldMask,r=[],i.fields.forEach(function(t){return r.push(t.canonicalString())}),{fieldPaths:r})};else{if(!(e instanceof Is))return Mr();n={verify:ha(t,e.key)}}return 0<e.fieldTransforms.length&&(n.updateTransforms=e.fieldTransforms.map(function(t){var e=t.transform;if(e instanceof Uo)return{fieldPath:t.field.canonicalString(),setToServerValue:"REQUEST_TIME"};if(e instanceof qo)return{fieldPath:t.field.canonicalString(),appendMissingElements:{values:e.elements}};if(e instanceof Qo)return{fieldPath:t.field.canonicalString(),removeAllFromArray:{values:e.elements}};if(e instanceof Yo)return{fieldPath:t.field.canonicalString(),increment:e.A};throw Mr()})),e.precondition.isNone||(n.currentDocument=void 0!==(i=e.precondition).updateTime?{updateTime:(e=t,t=i.updateTime,oa(e,t.toTimestamp()))}:void 0!==i.exists?{exists:i.exists}:Mr()),n}function ba(e,t){var n=t.currentDocument?void 0!==(s=t.currentDocument).updateTime?es.updateTime(aa(s.updateTime)):void 0!==s.exists?es.exists(s.exists):es.none():es.none(),r=t.updateTransforms?t.updateTransforms.map(function(t){return function(t,e){var n,r=null;"setToServerValue"in e?(Fr("REQUEST_TIME"===e.setToServerValue),r=new Uo):"appendMissingElements"in e?(n=e.appendMissingElements.values||[],r=new qo(n)):"removeAllFromArray"in e?(n=e.removeAllFromArray.values||[],r=new Qo(n)):"increment"in e?r=new Yo(t,e.increment):Mr();e=ti.fromServerFormat(e.fieldPath);return new ts(e,r)}(e,t)}):[];if(t.update){t.update.name;var i=la(e,t.update.name),o=new Ri({mapValue:{fields:t.update.fields}});if(t.updateMask){var s=(s=t.updateMask.fieldPaths||[],new ei(s.map(function(t){return ti.fromServerFormat(t)})));return new hs(i,o,s,n,r)}return new cs(i,o,n,r)}if(t.delete){r=la(e,t.delete);return new ws(r,n)}if(t.verify){t=la(e,t.verify);return new Is(t,n)}return Mr()}function wa(t,e){return{documents:[fa(t,e.path)]}}function Ia(t,e){var n={structuredQuery:{}},r=e.path;null!==e.collectionGroup?(n.parent=fa(t,r),n.structuredQuery.from=[{collectionId:e.collectionGroup,allDescendants:!0}]):(n.parent=fa(t,r.popLast()),n.structuredQuery.from=[{collectionId:r.lastSegment()}]);r=function(t){if(0!==t.length){t=t.map(function(t){if("=="===t.op){if(ki(t.value))return{unaryFilter:{field:Sa(t.field),op:"IS_NAN"}};if(Ai(t.value))return{unaryFilter:{field:Sa(t.field),op:"IS_NULL"}}}else if("!="===t.op){if(ki(t.value))return{unaryFilter:{field:Sa(t.field),op:"IS_NOT_NAN"}};if(Ai(t.value))return{unaryFilter:{field:Sa(t.field),op:"IS_NOT_NULL"}}}return{fieldFilter:{field:Sa(t.field),op:(e=t.op,ra[e]),value:t.value}};var e});return 1===t.length?t[0]:{compositeFilter:{op:"AND",filters:t}}}}(e.filters);r&&(n.structuredQuery.where=r);r=function(t){if(0!==t.length)return t.map(function(t){return{field:Sa((t=t).field),direction:(t=t.dir,na[t])}})}(e.orderBy);r&&(n.structuredQuery.orderBy=r);r=e.limit,r=t.I||pi(r)?r:{value:r};return null!==r&&(n.structuredQuery.limit=r),e.startAt&&(n.structuredQuery.startAt=Ta(e.startAt)),e.endAt&&(n.structuredQuery.endAt=Ta(e.endAt)),n}function Ea(t){var e=da(t.parent),n=t.structuredQuery,r=n.from?n.from.length:0,i=null;0<r&&(Fr(1===r),(a=n.from[0]).allDescendants?i=a.collectionId:e=e.child(a.collectionId));var o=[];n.where&&(o=function e(t){return t?void 0!==t.unaryFilter?[Aa(t)]:void 0!==t.fieldFilter?[Da(t)]:void 0!==t.compositeFilter?t.compositeFilter.filters.map(function(t){return e(t)}).reduce(function(t,e){return t.concat(e)}):Mr():[]}(n.where));var s=[],t=null,r=null,a=null;return vo(e,i,s=n.orderBy?n.orderBy.map(function(t){return new po(Na((e=t).field),function(){switch(e.direction){case"ASCENDING":return"asc";case"DESCENDING":return"desc";default:return}}());var e}):s,o,t=n.limit?pi(o="object"==typeof(o=n.limit)?o.value:o)?null:o:t,"F",r=n.startAt?_a(n.startAt):r,a=n.endAt?_a(n.endAt):a)}function Ta(t){return{before:t.before,values:t.position}}function _a(t){var e=!!t.before,t=t.values||[];return new ao(t,e)}function Sa(t){return{fieldPath:t.canonicalString()}}function Na(t){return ti.fromServerFormat(t.fieldPath)}function Da(t){return Bi.create(Na(t.fieldFilter.field),function(){switch(t.fieldFilter.op){case"EQUAL":return"==";case"NOT_EQUAL":return"!=";case"GREATER_THAN":return">";case"GREATER_THAN_OR_EQUAL":return">=";case"LESS_THAN":return"<";case"LESS_THAN_OR_EQUAL":return"<=";case"ARRAY_CONTAINS":return"array-contains";case"IN":return"in";case"NOT_IN":return"not-in";case"ARRAY_CONTAINS_ANY":return"array-contains-any";case"OPERATOR_UNSPECIFIED":default:return Mr()}}(),t.fieldFilter.value)}function Aa(t){switch(t.unaryFilter.op){case"IS_NAN":var e=Na(t.unaryFilter.field);return Bi.create(e,"==",{doubleValue:NaN});case"IS_NULL":e=Na(t.unaryFilter.field);return Bi.create(e,"==",{nullValue:"NULL_VALUE"});case"IS_NOT_NAN":var n=Na(t.unaryFilter.field);return Bi.create(n,"!=",{doubleValue:NaN});case"IS_NOT_NULL":n=Na(t.unaryFilter.field);return Bi.create(n,"!=",{nullValue:"NULL_VALUE"});case"OPERATOR_UNSPECIFIED":default:return Mr()}}function ka(t){return 4<=t.length&&"projects"===t.get(0)&&"databases"===t.get(2)}function Ca(t){for(var e="",n=0;n<t.length;n++)0<e.length&&(e=Ra(e)),e=function(t,e){for(var n=e,r=t.length,i=0;i<r;i++){var o=t.charAt(i);switch(o){case"\0":n+="\x01\x10";break;case"\x01":n+="\x01\x11";break;default:n+=o}}return n}(t.get(n),e);return Ra(e)}function Ra(t){return t+"\x01\x01"}function xa(t){var e=t.length;if(Fr(2<=e),2===e)return Fr("\x01"===t.charAt(0)&&"\x01"===t.charAt(1)),$r.emptyPath();for(var n=e-2,r=[],i="",o=0;o<e;){var s=t.indexOf("\x01",o);switch((s<0||n<s)&&Mr(),t.charAt(s+1)){case"\x01":var a=t.substring(o,s),u=void 0;0===i.length?u=a:(u=i+=a,i=""),r.push(u);break;case"\x10":i+=t.substring(o,s),i+="\0";break;case"\x11":i+=t.substring(o,s+1);break;default:Mr()}o=s+2}return new $r(r)}function Oa(t,e,n){this.ownerId=t,this.allowTabSynchronization=e,this.leaseTimestampMs=n}var La=function(t,e){this.seconds=t,this.nanoseconds=e};Oa.store="owner",Oa.key="owner";function Pa(t,e,n){this.userId=t,this.lastAcknowledgedBatchId=e,this.lastStreamToken=n}Pa.store="mutationQueues",Pa.keyPath="userId";function Ma(t,e,n,r,i){this.userId=t,this.batchId=e,this.localWriteTimeMs=n,this.baseMutations=r,this.mutations=i}Ma.store="mutations",Ma.keyPath="batchId",Ma.userMutationsIndex="userMutationsIndex",Ma.userMutationsKeyPath=["userId","batchId"];var Fa=(Va.prefixForUser=function(t){return[t]},Va.prefixForPath=function(t,e){return[t,Ca(e)]},Va.key=function(t,e,n){return[t,Ca(e),n]},Va);function Va(){}Fa.store="documentMutations",Fa.PLACEHOLDER=new Fa;function Ua(t,e){this.path=t,this.readTime=e}function qa(t,e){this.path=t,this.version=e}var Ba=function(t,e,n,r,i,o){this.unknownDocument=t,this.noDocument=e,this.document=n,this.hasCommittedMutations=r,this.readTime=i,this.parentPath=o};Ba.store="remoteDocuments",Ba.readTimeIndex="readTimeIndex",Ba.readTimeIndexPath="readTime",Ba.collectionReadTimeIndex="collectionReadTimeIndex",Ba.collectionReadTimeIndexPath=["parentPath","readTime"];function ja(t){this.byteSize=t}ja.store="remoteDocumentGlobal",ja.key="remoteDocumentGlobalKey";function Ka(t,e,n,r,i,o,s){this.targetId=t,this.canonicalId=e,this.readTime=n,this.resumeToken=r,this.lastListenSequenceNumber=i,this.lastLimboFreeSnapshotVersion=o,this.query=s}Ka.store="targets",Ka.keyPath="targetId",Ka.queryTargetsIndexName="queryTargetsIndex",Ka.queryTargetsKeyPath=["canonicalId","targetId"];var Ga=function(t,e,n){this.targetId=t,this.path=e,this.sequenceNumber=n};Ga.store="targetDocuments",Ga.keyPath=["targetId","path"],Ga.documentTargetsIndex="documentTargetsIndex",Ga.documentTargetsKeyPath=["path","targetId"];function Qa(t,e,n,r){this.highestTargetId=t,this.highestListenSequenceNumber=e,this.lastRemoteSnapshotVersion=n,this.targetCount=r}Qa.key="targetGlobalKey",Qa.store="targetGlobal";function za(t,e){this.collectionId=t,this.parent=e}za.store="collectionParents",za.keyPath=["collectionId","parent"];function Ha(t,e,n,r){this.clientId=t,this.updateTimeMs=e,this.networkEnabled=n,this.inForeground=r}Ha.store="clientMetadata",Ha.keyPath="clientId";function Wa(t,e,n){this.bundleId=t,this.createTime=e,this.version=n}Wa.store="bundles",Wa.keyPath="bundleId";function Ya(t,e,n){this.name=t,this.readTime=e,this.bundledQuery=n}Ya.store="namedQueries",Ya.keyPath="name";var Xa,Ja=s(s([],s(s([],s(s([],s(s([],[Pa.store,Ma.store,Fa.store,Ba.store,Ka.store,Oa.store,Qa.store,Ga.store]),[Ha.store])),[ja.store])),[za.store])),[Wa.store,Ya.store]),$a="The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.",Te=(hu.prototype.addOnCommittedListener=function(t){this.onCommittedListeners.push(t)},hu.prototype.raiseOnCommittedEvent=function(){this.onCommittedListeners.forEach(function(t){return t()})},hu),Za=function(){var n=this;this.promise=new Promise(function(t,e){n.resolve=t,n.reject=e})},tu=(cu.prototype.catch=function(t){return this.next(void 0,t)},cu.prototype.next=function(r,i){var o=this;return this.callbackAttached&&Mr(),this.callbackAttached=!0,this.isDone?this.error?this.wrapFailure(i,this.error):this.wrapSuccess(r,this.result):new cu(function(e,n){o.nextCallback=function(t){o.wrapSuccess(r,t).next(e,n)},o.catchCallback=function(t){o.wrapFailure(i,t).next(e,n)}})},cu.prototype.toPromise=function(){var n=this;return new Promise(function(t,e){n.next(t,e)})},cu.prototype.wrapUserFunction=function(t){try{var e=t();return e instanceof cu?e:cu.resolve(e)}catch(t){return cu.reject(t)}},cu.prototype.wrapSuccess=function(t,e){return t?this.wrapUserFunction(function(){return t(e)}):cu.resolve(e)},cu.prototype.wrapFailure=function(t,e){return t?this.wrapUserFunction(function(){return t(e)}):cu.reject(e)},cu.resolve=function(n){return new cu(function(t,e){t(n)})},cu.reject=function(n){return new cu(function(t,e){e(n)})},cu.waitFor=function(t){return new cu(function(e,n){var r=0,i=0,o=!1;t.forEach(function(t){++r,t.next(function(){++i,o&&i===r&&e()},function(t){return n(t)})}),o=!0,i===r&&e()})},cu.or=function(t){for(var n=cu.resolve(!1),e=0,r=t;e<r.length;e++)!function(e){n=n.next(function(t){return t?cu.resolve(t):e()})}(r[e]);return n},cu.forEach=function(t,n){var r=this,i=[];return t.forEach(function(t,e){i.push(n.call(r,t,e))}),this.waitFor(i)},cu),eu=(uu.open=function(t,e,n,r){try{return new uu(e,t.transaction(r,n))}catch(t){throw new iu(e,t)}},Object.defineProperty(uu.prototype,"dt",{get:function(){return this.ft.promise},enumerable:!1,configurable:!0}),uu.prototype.abort=function(t){t&&this.ft.reject(t),this.aborted||(xr("SimpleDb","Aborting transaction:",t?t.message:"Client-initiated abort"),this.aborted=!0,this.transaction.abort())},uu.prototype.store=function(t){t=this.transaction.objectStore(t);return new fu(t)},uu),nu=(au.delete=function(t){return xr("SimpleDb","Removing database:",t),pu(window.indexedDB.deleteDatabase(t)).toPromise()},au.yt=function(){if("undefined"==typeof indexedDB)return!1;if(au.gt())return!0;var t=h(),e=au._t(t),n=0<e&&e<10,e=au.Et(t),e=0<e&&e<4.5;return!(0<t.indexOf("MSIE ")||0<t.indexOf("Trident/")||0<t.indexOf("Edge/")||n||e)},au.gt=function(){var t;return"undefined"!=typeof process&&"YES"===(null===(t=process.env)||void 0===t?void 0:t.Tt)},au.It=function(t,e){return t.store(e)},au._t=function(t){t=t.match(/i(?:phone|pad|pod) os ([\d_]+)/i),t=t?t[1].split("_").slice(0,2).join("."):"-1";return Number(t)},au.Et=function(t){t=t.match(/Android ([\d.]+)/i),t=t?t[1].split(".").slice(0,2).join("."):"-1";return Number(t)},au.prototype.At=function(o){return y(this,void 0,void 0,function(){var e,i=this;return g(this,function(t){switch(t.label){case 0:return this.db?[3,2]:(xr("SimpleDb","Opening database:",this.name),e=this,[4,new Promise(function(e,n){var r=indexedDB.open(i.name,i.version);r.onsuccess=function(t){t=t.target.result;e(t)},r.onblocked=function(){n(new iu(o,"Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."))},r.onerror=function(t){t=t.target.error;"VersionError"===t.name?n(new Ar(Dr.FAILED_PRECONDITION,"A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.")):n(new iu(o,t))},r.onupgradeneeded=function(t){xr("SimpleDb",'Database "'+i.name+'" requires upgrade from version:',t.oldVersion);var e=t.target.result;i.wt.Rt(e,r.transaction,t.oldVersion,i.version).next(function(){xr("SimpleDb","Database upgrade to version "+i.version+" complete")})}})]);case 1:e.db=t.sent(),t.label=2;case 2:return[2,(this.bt&&(this.db.onversionchange=function(t){return i.bt(t)}),this.db)]}})})},au.prototype.vt=function(e){this.bt=e,this.db&&(this.db.onversionchange=function(t){return e(t)})},au.prototype.runTransaction=function(a,n,u,c){return y(this,void 0,void 0,function(){var i,o,s,e;return g(this,function(t){switch(t.label){case 0:i="readonly"===n,o=0,e=function(){var e,n,r;return g(this,function(t){switch(t.label){case 0:++o,t.label=1;case 1:return t.trys.push([1,4,,5]),[4,s.At(a)];case 2:return s.db=t.sent(),e=eu.open(s.db,a,i?"readonly":"readwrite",u),n=c(e).catch(function(t){return e.abort(t),tu.reject(t)}).toPromise(),r={},n.catch(function(){}),[4,e.dt];case 3:return[2,(r.value=(t.sent(),n),r)];case 4:return n=t.sent(),r="FirebaseError"!==n.name&&o<3,xr("SimpleDb","Transaction failed with error:",n.message,"Retrying:",r),s.close(),r?[3,5]:[2,{value:Promise.reject(n)}];case 5:return[2]}})},s=this,t.label=1;case 1:return[5,e()];case 2:if("object"==typeof(e=t.sent()))return[2,e.value];t.label=3;case 3:return[3,1];case 4:return[2]}})})},au.prototype.close=function(){this.db&&this.db.close(),this.db=void 0},au),ru=(Object.defineProperty(su.prototype,"isDone",{get:function(){return this.Vt},enumerable:!1,configurable:!0}),Object.defineProperty(su.prototype,"Dt",{get:function(){return this.St},enumerable:!1,configurable:!0}),Object.defineProperty(su.prototype,"cursor",{set:function(t){this.Pt=t},enumerable:!1,configurable:!0}),su.prototype.done=function(){this.Vt=!0},su.prototype.Ct=function(t){this.St=t},su.prototype.delete=function(){return pu(this.Pt.delete())},su),iu=(n(ou,Xa=Ar),ou);function ou(t,e){var n=this;return(n=Xa.call(this,Dr.UNAVAILABLE,"IndexedDB transaction '"+t+"' failed: "+e)||this).name="IndexedDbTransactionError",n}function su(t){this.Pt=t,this.Vt=!1,this.St=null}function au(t,e,n){this.name=t,this.version=e,this.wt=n,12.2===au._t(h())&&Or("Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.")}function uu(e,t){var n=this;this.action=e,this.transaction=t,this.aborted=!1,this.ft=new Za,this.transaction.oncomplete=function(){n.ft.resolve()},this.transaction.onabort=function(){t.error?n.ft.reject(new iu(e,t.error)):n.ft.resolve()},this.transaction.onerror=function(t){t=gu(t.target.error);n.ft.reject(new iu(e,t))}}function cu(t){var e=this;this.nextCallback=null,this.catchCallback=null,this.result=void 0,this.error=void 0,this.isDone=!1,this.callbackAttached=!1,t(function(t){e.isDone=!0,e.result=t,e.nextCallback&&e.nextCallback(t)},function(t){e.isDone=!0,e.error=t,e.catchCallback&&e.catchCallback(t)})}function hu(){this.onCommittedListeners=[]}function lu(t){return"IndexedDbTransactionError"===t.name}var fu=(du.prototype.put=function(t,e){t=void 0!==e?(xr("SimpleDb","PUT",this.store.name,t,e),this.store.put(e,t)):(xr("SimpleDb","PUT",this.store.name,"<auto-key>",t),this.store.put(t));return pu(t)},du.prototype.add=function(t){return xr("SimpleDb","ADD",this.store.name,t,t),pu(this.store.add(t))},du.prototype.get=function(e){var n=this;return pu(this.store.get(e)).next(function(t){return void 0===t&&(t=null),xr("SimpleDb","GET",n.store.name,e,t),t})},du.prototype.delete=function(t){return xr("SimpleDb","DELETE",this.store.name,t),pu(this.store.delete(t))},du.prototype.count=function(){return xr("SimpleDb","COUNT",this.store.name),pu(this.store.count())},du.prototype.Nt=function(t,e){var e=this.cursor(this.options(t,e)),n=[];return this.xt(e,function(t,e){n.push(e)}).next(function(){return n})},du.prototype.Ft=function(t,e){xr("SimpleDb","DELETE ALL",this.store.name);e=this.options(t,e);e.kt=!1;e=this.cursor(e);return this.xt(e,function(t,e,n){return n.delete()})},du.prototype.Ot=function(t,e){e?n=t:(n={},e=t);var n=this.cursor(n);return this.xt(n,e)},du.prototype.$t=function(r){var t=this.cursor({});return new tu(function(n,e){t.onerror=function(t){t=gu(t.target.error);e(t)},t.onsuccess=function(t){var e=t.target.result;e?r(e.primaryKey,e.value).next(function(t){t?e.continue():n()}):n()}})},du.prototype.xt=function(t,i){var o=[];return new tu(function(r,e){t.onerror=function(t){e(t.target.error)},t.onsuccess=function(t){var e,n=t.target.result;n?(e=new ru(n),(t=i(n.primaryKey,n.value,e))instanceof tu&&(t=t.catch(function(t){return e.done(),tu.reject(t)}),o.push(t)),e.isDone?r():null===e.Dt?n.continue():n.continue(e.Dt)):r()}}).next(function(){return tu.waitFor(o)})},du.prototype.options=function(t,e){var n;return void 0!==t&&("string"==typeof t?n=t:e=t),{index:n,range:e}},du.prototype.cursor=function(t){var e="next";if(t.reverse&&(e="prev"),t.index){var n=this.store.index(t.index);return t.kt?n.openKeyCursor(t.range,e):n.openCursor(t.range,e)}return this.store.openCursor(t.range,e)},du);function du(t){this.store=t}function pu(t){return new tu(function(e,n){t.onsuccess=function(t){t=t.target.result;e(t)},t.onerror=function(t){t=gu(t.target.error);n(t)}})}var yu=!1;function gu(t){var e=nu._t(h());if(12.2<=e&&e<13){e="An internal error was encountered in the Indexed Database server";if(0<=t.message.indexOf(e)){var n=new Ar("internal","IOS_INDEXEDDB_BUG1: IndexedDb has thrown '"+e+"'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");return yu||(yu=!0,setTimeout(function(){throw n},0)),n}}return t}var mu,vu=(n(bu,mu=Te),bu);function bu(t,e){var n=this;return(n=mu.call(this)||this).Mt=t,n.currentSequenceNumber=e,n}function wu(t,e){return nu.It(t.Mt,e)}var Iu=(Du.prototype.applyToRemoteDocument=function(t,e){for(var n,r,i,o,s,a,u=e.mutationResults,c=0;c<this.mutations.length;c++){var h=this.mutations[c];h.key.isEqual(t.key)&&(n=h,r=t,i=u[c],h=a=s=o=void 0,n instanceof cs?(s=r,a=i,h=(o=n).value.clone(),o=ps(o.fieldTransforms,s,a.transformResults),h.setAll(o),s.convertToFoundDocument(a.version,h).setHasCommittedMutations()):n instanceof hs?(o=r,s=i,rs((a=n).precondition,o)?(h=ps(a.fieldTransforms,o,s.transformResults),(n=o.data).setAll(ds(a)),n.setAll(h),o.convertToFoundDocument(s.version,n).setHasCommittedMutations()):o.convertToUnknownDocument(s.version)):r.convertToNoDocument(i.version).setHasCommittedMutations())}},Du.prototype.applyToLocalView=function(t){for(var e=0,n=this.baseMutations;e<n.length;e++)(r=n[e]).key.isEqual(t.key)&&is(r,t,this.localWriteTime);for(var r,i=0,o=this.mutations;i<o.length;i++)(r=o[i]).key.isEqual(t.key)&&is(r,t,this.localWriteTime)},Du.prototype.applyToLocalDocumentSet=function(n){var r=this;this.mutations.forEach(function(t){var e=n.get(t.key),t=e;r.applyToLocalView(t),e.isValidDocument()||t.convertToNoDocument(Gr.min())})},Du.prototype.keys=function(){return this.mutations.reduce(function(t,e){return t.add(e.key)},Bs())},Du.prototype.isEqual=function(t){return this.batchId===t.batchId&&Br(this.mutations,t.mutations,os)&&Br(this.baseMutations,t.baseMutations,os)},Du),Eu=(Nu.from=function(t,e,n){Fr(t.mutations.length===n.length);for(var r=Us,i=t.mutations,o=0;o<i.length;o++)r=r.insert(i[o].key,n[o].version);return new Nu(t,e,n,r)},Nu),Tu=(Su.prototype.withSequenceNumber=function(t){return new Su(this.target,this.targetId,this.purpose,t,this.snapshotVersion,this.lastLimboFreeSnapshotVersion,this.resumeToken)},Su.prototype.withResumeToken=function(t,e){return new Su(this.target,this.targetId,this.purpose,this.sequenceNumber,e,this.lastLimboFreeSnapshotVersion,t)},Su.prototype.withLastLimboFreeSnapshotVersion=function(t){return new Su(this.target,this.targetId,this.purpose,this.sequenceNumber,this.snapshotVersion,t,this.resumeToken)},Su),_u=function(t){this.Lt=t};function Su(t,e,n,r,i,o,s){void 0===i&&(i=Gr.min()),void 0===o&&(o=Gr.min()),void 0===s&&(s=ni.EMPTY_BYTE_STRING),this.target=t,this.targetId=e,this.purpose=n,this.sequenceNumber=r,this.snapshotVersion=i,this.lastLimboFreeSnapshotVersion=o,this.resumeToken=s}function Nu(t,e,n,r){this.batch=t,this.commitVersion=e,this.mutationResults=n,this.docVersions=r}function Du(t,e,n,r){this.batchId=t,this.localWriteTime=e,this.baseMutations=n,this.mutations=r}function Au(t,e){if(e.document)return ma(t.Lt,e.document,!!e.hasCommittedMutations);if(e.noDocument){var n=mi.fromSegments(e.noDocument.path),r=Ou(e.noDocument.readTime),n=Oi.newNoDocument(n,r);return e.hasCommittedMutations?n.setHasCommittedMutations():n}if(e.unknownDocument){n=mi.fromSegments(e.unknownDocument.path),r=Ou(e.unknownDocument.version);return Oi.newUnknownDocument(n,r)}return Mr()}function ku(t,e,n){var r=Cu(n),n=e.key.path.popLast().toArray();if(e.isFoundDocument()){var i={name:ha(o=t.Lt,(s=e).key),fields:s.data.toProto().mapValue.fields,updateTime:oa(o,s.version.toTimestamp())},o=e.hasCommittedMutations;return new Ba(null,null,i,o,r,n)}if(e.isNoDocument()){var s=e.key.path.toArray(),i=xu(e.version),o=e.hasCommittedMutations;return new Ba(null,new Ua(s,i),null,o,r,n)}if(e.isUnknownDocument()){o=e.key.path.toArray(),e=xu(e.version);return new Ba(new qa(o,e),null,null,!0,r,n)}return Mr()}function Cu(t){t=t.toTimestamp();return[t.seconds,t.nanoseconds]}function Ru(t){t=new Kr(t[0],t[1]);return Gr.fromTimestamp(t)}function xu(t){t=t.toTimestamp();return new La(t.seconds,t.nanoseconds)}function Ou(t){t=new Kr(t.seconds,t.nanoseconds);return Gr.fromTimestamp(t)}function Lu(e,t){for(var n=(t.baseMutations||[]).map(function(t){return ba(e.Lt,t)}),r=0;r<t.mutations.length-1;++r){var i,o=t.mutations[r];r+1<t.mutations.length&&void 0!==t.mutations[r+1].transform&&(i=t.mutations[r+1],o.updateTransforms=i.transform.fieldTransforms,t.mutations.splice(r+1,1),++r)}var s=t.mutations.map(function(t){return ba(e.Lt,t)}),a=Kr.fromMillis(t.localWriteTimeMs);return new Iu(t.batchId,a,n,s)}function Pu(t){var e=Ou(t.readTime),n=void 0!==t.lastLimboFreeSnapshotVersion?Ou(t.lastLimboFreeSnapshotVersion):Gr.min(),r=void 0!==t.query.documents?(Fr(1===(r=t.query).documents.length),No(bo(da(r.documents[0])))):No(Ea(t.query));return new Tu(r,t.targetId,0,t.lastListenSequenceNumber,e,n,ni.fromBase64String(t.resumeToken))}function Mu(t,e){var n=xu(e.snapshotVersion),r=xu(e.lastLimboFreeSnapshotVersion),i=(Ui(e.target)?wa:Ia)(t.Lt,e.target),t=e.resumeToken.toBase64();return new Ka(e.targetId,Fi(e.target),n,t,e.sequenceNumber,r,i)}function Fu(t){var e=Ea({parent:t.parent,structuredQuery:t.structuredQuery});return"LAST"===t.limitType?Do(e,e.limit,"L"):e}var Vu=(Uu.prototype.getBundleMetadata=function(t,e){return qu(t).get(e).next(function(t){if(t)return{id:(t=t).bundleId,createTime:Ou(t.createTime),version:t.version}})},Uu.prototype.saveBundleMetadata=function(t,e){return qu(t).put({bundleId:(e=e).id,createTime:xu(aa(e.createTime)),version:e.version})},Uu.prototype.getNamedQuery=function(t,e){return Bu(t).get(e).next(function(t){if(t)return{name:(t=t).name,query:Fu(t.bundledQuery),readTime:Ou(t.readTime)}})},Uu.prototype.saveNamedQuery=function(t,e){return Bu(t).put({name:(e=e).name,readTime:xu(aa(e.readTime)),bundledQuery:e.bundledQuery})},Uu);function Uu(){}function qu(t){return wu(t,Wa.store)}function Bu(t){return wu(t,Ya.store)}var ju=(Hu.prototype.addToCollectionParentIndex=function(t,e){return this.Bt.add(e),tu.resolve()},Hu.prototype.getCollectionParents=function(t,e){return tu.resolve(this.Bt.getEntries(e))},Hu),Ku=(zu.prototype.add=function(t){var e=t.lastSegment(),n=t.popLast(),r=this.index[e]||new Os($r.comparator),t=!r.has(n);return this.index[e]=r.add(n),t},zu.prototype.has=function(t){var e=t.lastSegment(),t=t.popLast(),e=this.index[e];return e&&e.has(t)},zu.prototype.getEntries=function(t){return(this.index[t]||new Os($r.comparator)).toArray()},zu),Gu=(Qu.prototype.addToCollectionParentIndex=function(t,e){var n=this;if(this.qt.has(e))return tu.resolve();var r=e.lastSegment(),i=e.popLast();t.addOnCommittedListener(function(){n.qt.add(e)});i={collectionId:r,parent:Ca(i)};return Wu(t).put(i)},Qu.prototype.getCollectionParents=function(t,i){var o=[],e=IDBKeyRange.bound([i,""],[jr(i),""],!1,!0);return Wu(t).Nt(e).next(function(t){for(var e=0,n=t;e<n.length;e++){var r=n[e];if(r.collectionId!==i)break;o.push(xa(r.parent))}return o})},Qu);function Qu(){this.qt=new Ku}function zu(){this.index={}}function Hu(){this.Bt=new Ku}function Wu(t){return wu(t,za.store)}var Yu={didRun:!1,sequenceNumbersCollected:0,targetsRemoved:0,documentsRemoved:0},Xu=(Ju.withCacheSize=function(t){return new Ju(t,Ju.DEFAULT_COLLECTION_PERCENTILE,Ju.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT)},Ju);function Ju(t,e,n){this.cacheSizeCollectionThreshold=t,this.percentileToCollect=e,this.maximumSequenceNumbersToCollect=n}function $u(t,e,n){var r=t.store(Ma.store),i=t.store(Fa.store),o=[],t=IDBKeyRange.only(n.batchId),s=0,t=r.Ot({range:t},function(t,e,n){return s++,n.delete()});o.push(t.next(function(){Fr(1===s)}));for(var a=[],u=0,c=n.mutations;u<c.length;u++){var h=c[u],l=Fa.key(e,h.key.path,n.batchId);o.push(i.delete(l)),a.push(h.key)}return tu.waitFor(o).next(function(){return a})}function Zu(t){if(!t)return 0;var e;if(t.document)e=t.document;else if(t.unknownDocument)e=t.unknownDocument;else{if(!t.noDocument)throw Mr();e=t.noDocument}return JSON.stringify(e).length}Xu.DEFAULT_COLLECTION_PERCENTILE=10,Xu.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT=1e3,Xu.DEFAULT=new Xu(41943040,Xu.DEFAULT_COLLECTION_PERCENTILE,Xu.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT),Xu.DISABLED=new Xu(-1,0,0);var tc=(ec.Kt=function(t,e,n,r){return Fr(""!==t.uid),new ec(t.isAuthenticated()?t.uid:"",e,n,r)},ec.prototype.checkEmpty=function(t){var r=!0,e=IDBKeyRange.bound([this.userId,Number.NEGATIVE_INFINITY],[this.userId,Number.POSITIVE_INFINITY]);return rc(t).Ot({index:Ma.userMutationsIndex,range:e},function(t,e,n){r=!1,n.done()}).next(function(){return r})},ec.prototype.addMutationBatch=function(p,y,g,m){var v=this,b=ic(p),w=rc(p);return w.add({}).next(function(t){Fr("number"==typeof t);for(var e,n,r,i,o,s=new Iu(t,y,g,m),a=(e=v.R,n=v.userId,i=(r=s).baseMutations.map(function(t){return va(e.Lt,t)}),o=r.mutations.map(function(t){return va(e.Lt,t)}),new Ma(n,r.batchId,r.localWriteTime.toMillis(),i,o)),u=[],c=new Os(function(t,e){return qr(t.canonicalString(),e.canonicalString())}),h=0,l=m;h<l.length;h++){var f=l[h],d=Fa.key(v.userId,f.key.path,t),c=c.add(f.key.path.popLast());u.push(w.put(a)),u.push(b.put(d,Fa.PLACEHOLDER))}return c.forEach(function(t){u.push(v.Ut.addToCollectionParentIndex(p,t))}),p.addOnCommittedListener(function(){v.Qt[t]=s.keys()}),tu.waitFor(u).next(function(){return s})})},ec.prototype.lookupMutationBatch=function(t,e){var n=this;return rc(t).get(e).next(function(t){return t?(Fr(t.userId===n.userId),Lu(n.R,t)):null})},ec.prototype.jt=function(t,e){var n=this;return this.Qt[e]?tu.resolve(this.Qt[e]):this.lookupMutationBatch(t,e).next(function(t){if(t){t=t.keys();return n.Qt[e]=t}return null})},ec.prototype.getNextMutationBatchAfterBatchId=function(t,e){var r=this,i=e+1,e=IDBKeyRange.lowerBound([this.userId,i]),o=null;return rc(t).Ot({index:Ma.userMutationsIndex,range:e},function(t,e,n){e.userId===r.userId&&(Fr(e.batchId>=i),o=Lu(r.R,e)),n.done()}).next(function(){return o})},ec.prototype.getHighestUnacknowledgedBatchId=function(t){var e=IDBKeyRange.upperBound([this.userId,Number.POSITIVE_INFINITY]),r=-1;return rc(t).Ot({index:Ma.userMutationsIndex,range:e,reverse:!0},function(t,e,n){r=e.batchId,n.done()}).next(function(){return r})},ec.prototype.getAllMutationBatches=function(t){var e=this,n=IDBKeyRange.bound([this.userId,-1],[this.userId,Number.POSITIVE_INFINITY]);return rc(t).Nt(Ma.userMutationsIndex,n).next(function(t){return t.map(function(t){return Lu(e.R,t)})})},ec.prototype.getAllMutationBatchesAffectingDocumentKey=function(o,s){var a=this,t=Fa.prefixForPath(this.userId,s.path),t=IDBKeyRange.lowerBound(t),u=[];return ic(o).Ot({range:t},function(t,e,n){var r=t[0],i=t[1],t=t[2],i=xa(i);if(r===a.userId&&s.path.isEqual(i))return rc(o).get(t).next(function(t){if(!t)throw Mr();Fr(t.userId===a.userId),u.push(Lu(a.R,t))});n.done()}).next(function(){return u})},ec.prototype.getAllMutationBatchesAffectingDocumentKeys=function(e,t){var s=this,a=new Os(qr),n=[];return t.forEach(function(o){var t=Fa.prefixForPath(s.userId,o.path),t=IDBKeyRange.lowerBound(t),t=ic(e).Ot({range:t},function(t,e,n){var r=t[0],i=t[1],t=t[2],i=xa(i);r===s.userId&&o.path.isEqual(i)?a=a.add(t):n.done()});n.push(t)}),tu.waitFor(n).next(function(){return s.Wt(e,a)})},ec.prototype.getAllMutationBatchesAffectingQuery=function(t,e){var o=this,s=e.path,a=s.length+1,e=Fa.prefixForPath(this.userId,s),e=IDBKeyRange.lowerBound(e),u=new Os(qr);return ic(t).Ot({range:e},function(t,e,n){var r=t[0],i=t[1],t=t[2],i=xa(i);r===o.userId&&s.isPrefixOf(i)?i.length===a&&(u=u.add(t)):n.done()}).next(function(){return o.Wt(t,u)})},ec.prototype.Wt=function(e,t){var n=this,r=[],i=[];return t.forEach(function(t){i.push(rc(e).get(t).next(function(t){if(null===t)throw Mr();Fr(t.userId===n.userId),r.push(Lu(n.R,t))}))}),tu.waitFor(i).next(function(){return r})},ec.prototype.removeMutationBatch=function(e,n){var r=this;return $u(e.Mt,this.userId,n).next(function(t){return e.addOnCommittedListener(function(){r.Gt(n.batchId)}),tu.forEach(t,function(t){return r.referenceDelegate.markPotentiallyOrphaned(e,t)})})},ec.prototype.Gt=function(t){delete this.Qt[t]},ec.prototype.performConsistencyCheck=function(e){var i=this;return this.checkEmpty(e).next(function(t){if(!t)return tu.resolve();var t=IDBKeyRange.lowerBound(Fa.prefixForUser(i.userId)),r=[];return ic(e).Ot({range:t},function(t,e,n){t[0]===i.userId?(t=xa(t[1]),r.push(t)):n.done()}).next(function(){Fr(0===r.length)})})},ec.prototype.containsKey=function(t,e){return nc(t,this.userId,e)},ec.prototype.zt=function(t){var e=this;return oc(t).get(this.userId).next(function(t){return t||new Pa(e.userId,-1,"")})},ec);function ec(t,e,n,r){this.userId=t,this.R=e,this.Ut=n,this.referenceDelegate=r,this.Qt={}}function nc(t,o,e){var e=Fa.prefixForPath(o,e.path),s=e[1],e=IDBKeyRange.lowerBound(e),a=!1;return ic(t).Ot({range:e,kt:!0},function(t,e,n){var r=t[0],i=t[1];t[2],r===o&&i===s&&(a=!0),n.done()}).next(function(){return a})}function rc(t){return wu(t,Ma.store)}function ic(t){return wu(t,Fa.store)}function oc(t){return wu(t,Pa.store)}var sc=(cc.prototype.next=function(){return this.Ht+=2,this.Ht},cc.Jt=function(){return new cc(0)},cc.Yt=function(){return new cc(-1)},cc),ac=(uc.prototype.allocateTargetId=function(n){var r=this;return this.Xt(n).next(function(t){var e=new sc(t.highestTargetId);return t.highestTargetId=e.next(),r.Zt(n,t).next(function(){return t.highestTargetId})})},uc.prototype.getLastRemoteSnapshotVersion=function(t){return this.Xt(t).next(function(t){return Gr.fromTimestamp(new Kr(t.lastRemoteSnapshotVersion.seconds,t.lastRemoteSnapshotVersion.nanoseconds))})},uc.prototype.getHighestSequenceNumber=function(t){return this.Xt(t).next(function(t){return t.highestListenSequenceNumber})},uc.prototype.setTargetsMetadata=function(e,n,r){var i=this;return this.Xt(e).next(function(t){return t.highestListenSequenceNumber=n,r&&(t.lastRemoteSnapshotVersion=r.toTimestamp()),n>t.highestListenSequenceNumber&&(t.highestListenSequenceNumber=n),i.Zt(e,t)})},uc.prototype.addTargetData=function(e,n){var r=this;return this.te(e,n).next(function(){return r.Xt(e).next(function(t){return t.targetCount+=1,r.ee(n,t),r.Zt(e,t)})})},uc.prototype.updateTargetData=function(t,e){return this.te(t,e)},uc.prototype.removeTargetData=function(e,t){var n=this;return this.removeMatchingKeysForTargetId(e,t.targetId).next(function(){return hc(e).delete(t.targetId)}).next(function(){return n.Xt(e)}).next(function(t){return Fr(0<t.targetCount),--t.targetCount,n.Zt(e,t)})},uc.prototype.removeTargets=function(n,r,i){var o=this,s=0,a=[];return hc(n).Ot(function(t,e){e=Pu(e);e.sequenceNumber<=r&&null===i.get(e.targetId)&&(s++,a.push(o.removeTargetData(n,e)))}).next(function(){return tu.waitFor(a)}).next(function(){return s})},uc.prototype.forEachTarget=function(t,n){return hc(t).Ot(function(t,e){e=Pu(e);n(e)})},uc.prototype.Xt=function(t){return lc(t).get(Qa.key).next(function(t){return Fr(null!==t),t})},uc.prototype.Zt=function(t,e){return lc(t).put(Qa.key,e)},uc.prototype.te=function(t,e){return hc(t).put(Mu(this.R,e))},uc.prototype.ee=function(t,e){var n=!1;return t.targetId>e.highestTargetId&&(e.highestTargetId=t.targetId,n=!0),t.sequenceNumber>e.highestListenSequenceNumber&&(e.highestListenSequenceNumber=t.sequenceNumber,n=!0),n},uc.prototype.getTargetCount=function(t){return this.Xt(t).next(function(t){return t.targetCount})},uc.prototype.getTargetData=function(t,r){var e=Fi(r),e=IDBKeyRange.bound([e,Number.NEGATIVE_INFINITY],[e,Number.POSITIVE_INFINITY]),i=null;return hc(t).Ot({range:e,index:Ka.queryTargetsIndexName},function(t,e,n){e=Pu(e);Vi(r,e.target)&&(i=e,n.done())}).next(function(){return i})},uc.prototype.addMatchingKeys=function(n,t,r){var i=this,o=[],s=fc(n);return t.forEach(function(t){var e=Ca(t.path);o.push(s.put(new Ga(r,e))),o.push(i.referenceDelegate.addReference(n,r,t))}),tu.waitFor(o)},uc.prototype.removeMatchingKeys=function(n,t,r){var i=this,o=fc(n);return tu.forEach(t,function(t){var e=Ca(t.path);return tu.waitFor([o.delete([r,e]),i.referenceDelegate.removeReference(n,r,t)])})},uc.prototype.removeMatchingKeysForTargetId=function(t,e){t=fc(t),e=IDBKeyRange.bound([e],[e+1],!1,!0);return t.delete(e)},uc.prototype.getMatchingKeysForTargetId=function(t,e){var e=IDBKeyRange.bound([e],[e+1],!1,!0),t=fc(t),r=Bs();return t.Ot({range:e,kt:!0},function(t,e,n){t=xa(t[1]),t=new mi(t);r=r.add(t)}).next(function(){return r})},uc.prototype.containsKey=function(t,e){var e=Ca(e.path),e=IDBKeyRange.bound([e],[jr(e)],!1,!0),i=0;return fc(t).Ot({index:Ga.documentTargetsIndex,kt:!0,range:e},function(t,e,n){var r=t[0];t[1],0!==r&&(i++,n.done())}).next(function(){return 0<i})},uc.prototype.lt=function(t,e){return hc(t).get(e).next(function(t){return t?Pu(t):null})},uc);function uc(t,e){this.referenceDelegate=t,this.R=e}function cc(t){this.Ht=t}function hc(t){return wu(t,Ka.store)}function lc(t){return wu(t,Qa.store)}function fc(t){return wu(t,Ga.store)}function dc(e){return y(this,void 0,void 0,function(){return g(this,function(t){if(e.code!==Dr.FAILED_PRECONDITION||e.message!==$a)throw e;return xr("LocalStore","Unexpectedly lost primary lease"),[2]})})}function pc(t,e){var n=t[0],r=t[1],t=e[0],e=e[1],t=qr(n,t);return 0===t?qr(r,e):t}var yc=(Ec.prototype.ie=function(){return++this.se},Ec.prototype.re=function(t){var e=[t,this.ie()];this.buffer.size<this.ne?this.buffer=this.buffer.add(e):pc(e,t=this.buffer.last())<0&&(this.buffer=this.buffer.delete(t).add(e))},Object.defineProperty(Ec.prototype,"maxValue",{get:function(){return this.buffer.last()[0]},enumerable:!1,configurable:!0}),Ec),gc=(Ic.prototype.start=function(t){-1!==this.garbageCollector.params.cacheSizeCollectionThreshold&&this.ue(t)},Ic.prototype.stop=function(){this.ce&&(this.ce.cancel(),this.ce=null)},Object.defineProperty(Ic.prototype,"started",{get:function(){return null!==this.ce},enumerable:!1,configurable:!0}),Ic.prototype.ue=function(n){var t=this,e=this.oe?3e5:6e4;xr("LruGarbageCollector","Garbage collection scheduled in "+e+"ms"),this.ce=this.asyncQueue.enqueueAfterDelay("lru_garbage_collection",e,function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:this.ce=null,this.oe=!0,t.label=1;case 1:return t.trys.push([1,3,,7]),[4,n.collectGarbage(this.garbageCollector)];case 2:return t.sent(),[3,7];case 3:return lu(e=t.sent())?(xr("LruGarbageCollector","Ignoring IndexedDB error during garbage collection: ",e),[3,6]):[3,4];case 4:return[4,dc(e)];case 5:t.sent(),t.label=6;case 6:return[3,7];case 7:return[4,this.ue(n)];case 8:return t.sent(),[2]}})})})},Ic),mc=(wc.prototype.calculateTargetCount=function(t,e){return this.ae.he(t).next(function(t){return Math.floor(e/100*t)})},wc.prototype.nthSequenceNumber=function(t,e){var n=this;if(0===e)return tu.resolve(_r.o);var r=new yc(e);return this.ae.forEachTarget(t,function(t){return r.re(t.sequenceNumber)}).next(function(){return n.ae.le(t,function(t){return r.re(t)})}).next(function(){return r.maxValue})},wc.prototype.removeTargets=function(t,e,n){return this.ae.removeTargets(t,e,n)},wc.prototype.removeOrphanedDocuments=function(t,e){return this.ae.removeOrphanedDocuments(t,e)},wc.prototype.collect=function(e,n){var r=this;return-1===this.params.cacheSizeCollectionThreshold?(xr("LruGarbageCollector","Garbage collection skipped; disabled"),tu.resolve(Yu)):this.getCacheSize(e).next(function(t){return t<r.params.cacheSizeCollectionThreshold?(xr("LruGarbageCollector","Garbage collection skipped; Cache size "+t+" is lower than threshold "+r.params.cacheSizeCollectionThreshold),Yu):r.fe(e,n)})},wc.prototype.getCacheSize=function(t){return this.ae.getCacheSize(t)},wc.prototype.fe=function(e,n){var r,i,o,s,a,u,c,h=this,l=Date.now();return this.calculateTargetCount(e,this.params.percentileToCollect).next(function(t){return i=t>h.params.maximumSequenceNumbersToCollect?(xr("LruGarbageCollector","Capping sequence numbers to collect down to the maximum of "+h.params.maximumSequenceNumbersToCollect+" from "+t),h.params.maximumSequenceNumbersToCollect):t,s=Date.now(),h.nthSequenceNumber(e,i)}).next(function(t){return r=t,a=Date.now(),h.removeTargets(e,r,n)}).next(function(t){return o=t,u=Date.now(),h.removeOrphanedDocuments(e,r)}).next(function(t){return c=Date.now(),Rr()<=f.DEBUG&&xr("LruGarbageCollector","LRU Garbage Collection\n\tCounted targets in "+(s-l)+"ms\n\tDetermined least recently used "+i+" in "+(a-s)+"ms\n\tRemoved "+o+" targets in "+(u-a)+"ms\n\tRemoved "+t+" documents in "+(c-u)+"ms\nTotal Duration: "+(c-l)+"ms"),tu.resolve({didRun:!0,sequenceNumbersCollected:i,targetsRemoved:o,documentsRemoved:t})})},wc),vc=(bc.prototype.he=function(t){var n=this.de(t);return this.db.getTargetCache().getTargetCount(t).next(function(e){return n.next(function(t){return e+t})})},bc.prototype.de=function(t){var e=0;return this.le(t,function(t){e++}).next(function(){return e})},bc.prototype.forEachTarget=function(t,e){return this.db.getTargetCache().forEachTarget(t,e)},bc.prototype.le=function(t,n){return this.we(t,function(t,e){return n(e)})},bc.prototype.addReference=function(t,e,n){return Tc(t,n)},bc.prototype.removeReference=function(t,e,n){return Tc(t,n)},bc.prototype.removeTargets=function(t,e,n){return this.db.getTargetCache().removeTargets(t,e,n)},bc.prototype.markPotentiallyOrphaned=Tc,bc.prototype._e=function(t,e){return r=e,i=!1,oc(n=t).$t(function(t){return nc(n,t,r).next(function(t){return t&&(i=!0),tu.resolve(!t)})}).next(function(){return i});var n,r,i},bc.prototype.removeOrphanedDocuments=function(n,r){var i=this,o=this.db.getRemoteDocumentCache().newChangeBuffer(),s=[],a=0;return this.we(n,function(e,t){t<=r&&(t=i._e(n,e).next(function(t){if(!t)return a++,o.getEntry(n,e).next(function(){return o.removeEntry(e),fc(n).delete([0,Ca(e.path)])})}),s.push(t))}).next(function(){return tu.waitFor(s)}).next(function(){return o.apply(n)}).next(function(){return a})},bc.prototype.removeTarget=function(t,e){e=e.withSequenceNumber(t.currentSequenceNumber);return this.db.getTargetCache().updateTargetData(t,e)},bc.prototype.updateLimboDocument=Tc,bc.prototype.we=function(t,r){var i,t=fc(t),o=_r.o;return t.Ot({index:Ga.documentTargetsIndex},function(t,e){var n=t[0],t=(t[1],e.path),e=e.sequenceNumber;0===n?(o!==_r.o&&r(new mi(xa(i)),o),o=e,i=t):o=_r.o}).next(function(){o!==_r.o&&r(new mi(xa(i)),o)})},bc.prototype.getCacheSize=function(t){return this.db.getRemoteDocumentCache().getSize(t)},bc);function bc(t,e){this.db=t,this.garbageCollector=new mc(this,e)}function wc(t,e){this.ae=t,this.params=e}function Ic(t,e){this.garbageCollector=t,this.asyncQueue=e,this.oe=!1,this.ce=null}function Ec(t){this.ne=t,this.buffer=new Os(pc),this.se=0}function Tc(t,e){return fc(t).put((t=t.currentSequenceNumber,new Ga(0,Ca(e.path),t)))}var _c,Sc=(Rc.prototype.get=function(t){var e=this.mapKeyFn(t),e=this.inner[e];if(void 0!==e)for(var n=0,r=e;n<r.length;n++){var i=r[n],o=i[0],i=i[1];if(this.equalsFn(o,t))return i}},Rc.prototype.has=function(t){return void 0!==this.get(t)},Rc.prototype.set=function(t,e){var n=this.mapKeyFn(t),r=this.inner[n];if(void 0!==r){for(var i=0;i<r.length;i++)if(this.equalsFn(r[i][0],t))return void(r[i]=[t,e]);r.push([t,e])}else this.inner[n]=[[t,e]]},Rc.prototype.delete=function(t){var e=this.mapKeyFn(t),n=this.inner[e];if(void 0===n)return!1;for(var r=0;r<n.length;r++)if(this.equalsFn(n[r][0],t))return 1===n.length?delete this.inner[e]:n.splice(r,1),!0;return!1},Rc.prototype.forEach=function(s){Wr(this.inner,function(t,e){for(var n=0,r=e;n<r.length;n++){var i=r[n],o=i[0],i=i[1];s(o,i)}})},Rc.prototype.isEmpty=function(){return Yr(this.inner)},Rc),I=(Cc.prototype.getReadTime=function(t){t=this.changes.get(t);return t?t.readTime:Gr.min()},Cc.prototype.addEntry=function(t,e){this.assertNotApplied(),this.changes.set(t.key,{document:t,readTime:e})},Cc.prototype.removeEntry=function(t,e){void 0===e&&(e=null),this.assertNotApplied(),this.changes.set(t,{document:Oi.newInvalidDocument(t),readTime:e})},Cc.prototype.getEntry=function(t,e){this.assertNotApplied();var n=this.changes.get(e);return void 0!==n?tu.resolve(n.document):this.getFromCache(t,e)},Cc.prototype.getEntries=function(t,e){return this.getAllFromCache(t,e)},Cc.prototype.apply=function(t){return this.assertNotApplied(),this.changesApplied=!0,this.applyChanges(t)},Cc.prototype.assertNotApplied=function(){},Cc),Nc=(kc.prototype.addEntry=function(t,e,n){return Oc(t).put(Lc(e),n)},kc.prototype.removeEntry=function(t,e){t=Oc(t),e=Lc(e);return t.delete(e)},kc.prototype.updateMetadata=function(e,n){var r=this;return this.getMetadata(e).next(function(t){return t.byteSize+=n,r.me(e,t)})},kc.prototype.getEntry=function(t,e){var n=this;return Oc(t).get(Lc(e)).next(function(t){return n.ye(e,t)})},kc.prototype.ge=function(t,e){var n=this;return Oc(t).get(Lc(e)).next(function(t){return{document:n.ye(e,t),size:Zu(t)}})},kc.prototype.getEntries=function(t,e){var n=this,r=Ps;return this.pe(t,e,function(t,e){e=n.ye(t,e);r=r.insert(t,e)}).next(function(){return r})},kc.prototype.Ee=function(t,e){var r=this,i=Ps,o=new Ns(mi.comparator);return this.pe(t,e,function(t,e){var n=r.ye(t,e);i=i.insert(t,n),o=o.insert(t,Zu(e))}).next(function(){return{documents:i,Te:o}})},kc.prototype.pe=function(t,e,i){if(e.isEmpty())return tu.resolve();var n=IDBKeyRange.bound(e.first().path.toArray(),e.last().path.toArray()),o=e.getIterator(),s=o.getNext();return Oc(t).Ot({range:n},function(t,e,n){for(var r=mi.fromSegments(t);s&&mi.comparator(s,r)<0;)i(s,null),s=o.getNext();s&&s.isEqual(r)&&(i(s,e),s=o.hasNext()?o.getNext():null),s?n.Ct(s.path.toArray()):n.done()}).next(function(){for(;s;)i(s,null),s=o.hasNext()?o.getNext():null})},kc.prototype.getDocumentsMatchingQuery=function(t,r,e){var n,i=this,o=Ps,s=r.path.length+1,a={};return e.isEqual(Gr.min())?(n=r.path.toArray(),a.range=IDBKeyRange.lowerBound(n)):(n=r.path.toArray(),e=Cu(e),a.range=IDBKeyRange.lowerBound([n,e],!0),a.index=Ba.collectionReadTimeIndex),Oc(t).Ot(a,function(t,e,n){t.length===s&&(e=Au(i.R,e),r.path.isPrefixOf(e.key.path)?Ro(r,e)&&(o=o.insert(e.key,e)):n.done())}).next(function(){return o})},kc.prototype.newChangeBuffer=function(t){return new Dc(this,!!t&&t.trackRemovals)},kc.prototype.getSize=function(t){return this.getMetadata(t).next(function(t){return t.byteSize})},kc.prototype.getMetadata=function(t){return xc(t).get(ja.key).next(function(t){return Fr(!!t),t})},kc.prototype.me=function(t,e){return xc(t).put(ja.key,e)},kc.prototype.ye=function(t,e){if(e){e=Au(this.R,e);if(!e.isNoDocument()||!e.version.isEqual(Gr.min()))return e}return Oi.newInvalidDocument(t)},kc),Dc=(n(Ac,_c=I),Ac.prototype.applyChanges=function(i){var o=this,s=[],a=0,u=new Os(function(t,e){return qr(t.canonicalString(),e.canonicalString())});return this.changes.forEach(function(t,e){var n,r=o.Ae.get(t);e.document.isValidDocument()?(n=ku(o.Ie.R,e.document,o.getReadTime(t)),u=u.add(t.path.popLast()),e=Zu(n),a+=e-r,s.push(o.Ie.addEntry(i,t,n))):(a-=r,o.trackRemovals?(r=ku(o.Ie.R,Oi.newNoDocument(t,Gr.min()),o.getReadTime(t)),s.push(o.Ie.addEntry(i,t,r))):s.push(o.Ie.removeEntry(i,t)))}),u.forEach(function(t){s.push(o.Ie.Ut.addToCollectionParentIndex(i,t))}),s.push(this.Ie.updateMetadata(i,a)),tu.waitFor(s)},Ac.prototype.getFromCache=function(t,e){var n=this;return this.Ie.ge(t,e).next(function(t){return n.Ae.set(e,t.size),t.document})},Ac.prototype.getAllFromCache=function(t,e){var n=this;return this.Ie.Ee(t,e).next(function(t){var e=t.documents;return t.Te.forEach(function(t,e){n.Ae.set(t,e)}),e})},Ac);function Ac(t,e){var n=this;return(n=_c.call(this)||this).Ie=t,n.trackRemovals=e,n.Ae=new Sc(function(t){return t.toString()},function(t,e){return t.isEqual(e)}),n}function kc(t,e){this.R=t,this.Ut=e}function Cc(){this.changes=new Sc(function(t){return t.toString()},function(t,e){return t.isEqual(e)}),this.changesApplied=!1}function Rc(t,e){this.mapKeyFn=t,this.equalsFn=e,this.inner={}}function xc(t){return wu(t,ja.store)}function Oc(t){return wu(t,Ba.store)}function Lc(t){return t.path.toArray()}var Pc=(Mc.prototype.Rt=function(e,n,t,r){var i=this;Fr(t<r&&0<=t&&r<=11);var o=new eu("createOrUpgrade",n);t<1&&1<=r&&(e.createObjectStore(Oa.store),(s=e).createObjectStore(Pa.store,{keyPath:Pa.keyPath}),s.createObjectStore(Ma.store,{keyPath:Ma.keyPath,autoIncrement:!0}).createIndex(Ma.userMutationsIndex,Ma.userMutationsKeyPath,{unique:!0}),s.createObjectStore(Fa.store),Fc(e),e.createObjectStore(Ba.store));var s,a=tu.resolve();return t<3&&3<=r&&(0!==t&&((s=e).deleteObjectStore(Ga.store),s.deleteObjectStore(Ka.store),s.deleteObjectStore(Qa.store),Fc(e)),a=a.next(function(){return t=o.store(Qa.store),e=new Qa(0,0,Gr.min().toTimestamp(),0),t.put(Qa.key,e);var t,e})),t<4&&4<=r&&(a=(a=0!==t?a.next(function(){return n=e,(r=o).store(Ma.store).Nt().next(function(t){n.deleteObjectStore(Ma.store),n.createObjectStore(Ma.store,{keyPath:Ma.keyPath,autoIncrement:!0}).createIndex(Ma.userMutationsIndex,Ma.userMutationsKeyPath,{unique:!0});var e=r.store(Ma.store),t=t.map(function(t){return e.put(t)});return tu.waitFor(t)});var n,r}):a).next(function(){e.createObjectStore(Ha.store,{keyPath:Ha.keyPath})})),t<5&&5<=r&&(a=a.next(function(){return i.Re(o)})),t<6&&6<=r&&(a=a.next(function(){return e.createObjectStore(ja.store),i.be(o)})),t<7&&7<=r&&(a=a.next(function(){return i.ve(o)})),t<8&&8<=r&&(a=a.next(function(){return i.Pe(e,o)})),t<9&&9<=r&&(a=a.next(function(){var t;(t=e).objectStoreNames.contains("remoteDocumentChanges")&&t.deleteObjectStore("remoteDocumentChanges"),(t=n.objectStore(Ba.store)).createIndex(Ba.readTimeIndex,Ba.readTimeIndexPath,{unique:!1}),t.createIndex(Ba.collectionReadTimeIndex,Ba.collectionReadTimeIndexPath,{unique:!1})})),t<10&&10<=r&&(a=a.next(function(){return i.Ve(o)})),a=t<11&&11<=r?a.next(function(){e.createObjectStore(Wa.store,{keyPath:Wa.keyPath}),e.createObjectStore(Ya.store,{keyPath:Ya.keyPath})}):a},Mc.prototype.be=function(e){var n=0;return e.store(Ba.store).Ot(function(t,e){n+=Zu(e)}).next(function(){var t=new ja(n);return e.store(ja.store).put(ja.key,t)})},Mc.prototype.Re=function(n){var r=this,t=n.store(Pa.store),i=n.store(Ma.store);return t.Nt().next(function(t){return tu.forEach(t,function(e){var t=IDBKeyRange.bound([e.userId,-1],[e.userId,e.lastAcknowledgedBatchId]);return i.Nt(Ma.userMutationsIndex,t).next(function(t){return tu.forEach(t,function(t){Fr(t.userId===e.userId);t=Lu(r.R,t);return $u(n,e.userId,t).next(function(){})})})})})},Mc.prototype.ve=function(t){var o=t.store(Ga.store),e=t.store(Ba.store);return t.store(Qa.store).get(Qa.key).next(function(r){var i=[];return e.Ot(function(t,e){var n=new $r(t),t=[0,Ca(n)];i.push(o.get(t).next(function(t){return t?tu.resolve():o.put(new Ga(0,Ca(n),r.highestListenSequenceNumber))}))}).next(function(){return tu.waitFor(i)})})},Mc.prototype.Pe=function(t,e){t.createObjectStore(za.store,{keyPath:za.keyPath});function r(t){if(i.add(t)){var e=t.lastSegment(),t=t.popLast();return n.put({collectionId:e,parent:Ca(t)})}}var n=e.store(za.store),i=new Ku;return e.store(Ba.store).Ot({kt:!0},function(t,e){t=new $r(t);return r(t.popLast())}).next(function(){return e.store(Fa.store).Ot({kt:!0},function(t,e){t[0];var n=t[1],n=(t[2],xa(n));return r(n.popLast())})})},Mc.prototype.Ve=function(t){var n=this,r=t.store(Ka.store);return r.Ot(function(t,e){e=Pu(e),e=Mu(n.R,e);return r.put(e)})},Mc);function Mc(t){this.R=t}function Fc(t){t.createObjectStore(Ga.store,{keyPath:Ga.keyPath}).createIndex(Ga.documentTargetsIndex,Ga.documentTargetsKeyPath,{unique:!0}),t.createObjectStore(Ka.store,{keyPath:Ka.keyPath}).createIndex(Ka.queryTargetsIndexName,Ka.queryTargetsKeyPath,{unique:!0}),t.createObjectStore(Qa.store)}var Vc="Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.",Uc=(qc.prototype.start=function(){var e=this;return this.je().then(function(){if(!e.isPrimary&&!e.allowTabSynchronization)throw new Ar(Dr.FAILED_PRECONDITION,Vc);return e.We(),e.Ge(),e.ze(),e.runTransaction("getHighestListenSequenceNumber","readonly",function(t){return e.qe.getHighestSequenceNumber(t)})}).then(function(t){e.Ne=new _r(t,e.De)}).then(function(){e.xe=!0}).catch(function(t){return e.Be&&e.Be.close(),Promise.reject(t)})},qc.prototype.He=function(n){var t=this;return this.Me=function(e){return y(t,void 0,void 0,function(){return g(this,function(t){return this.started?[2,n(e)]:[2]})})},n(this.isPrimary)},qc.prototype.setDatabaseDeletedListener=function(n){var t=this;this.Be.vt(function(e){return y(t,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return null===e.newVersion?[4,n()]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})})})},qc.prototype.setNetworkEnabled=function(t){var e=this;this.networkEnabled!==t&&(this.networkEnabled=t,this.Se.enqueueAndForget(function(){return y(e,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return this.started?[4,this.je()]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})})}))},qc.prototype.je=function(){var n=this;return this.runTransaction("updateClientMetadataAndTryBecomePrimary","readwrite",function(e){return jc(e).put(new Ha(n.clientId,Date.now(),n.networkEnabled,n.inForeground)).next(function(){if(n.isPrimary)return n.Je(e).next(function(t){t||(n.isPrimary=!1,n.Se.enqueueRetryable(function(){return n.Me(!1)}))})}).next(function(){return n.Ye(e)}).next(function(t){return n.isPrimary&&!t?n.Xe(e).next(function(){return!1}):!!t&&n.Ze(e).next(function(){return!0})})}).catch(function(t){if(lu(t))return xr("IndexedDbPersistence","Failed to extend owner lease: ",t),n.isPrimary;if(!n.allowTabSynchronization)throw t;return xr("IndexedDbPersistence","Releasing owner lease after error during lease refresh",t),!1}).then(function(t){n.isPrimary!==t&&n.Se.enqueueRetryable(function(){return n.Me(t)}),n.isPrimary=t})},qc.prototype.Je=function(t){var e=this;return Bc(t).get(Oa.key).next(function(t){return tu.resolve(e.tn(t))})},qc.prototype.en=function(t){return jc(t).delete(this.clientId)},qc.prototype.nn=function(){return y(this,void 0,void 0,function(){var e,n,r,i,o=this;return g(this,function(t){switch(t.label){case 0:return!this.isPrimary||this.sn(this.$e,18e5)?[3,2]:(this.$e=Date.now(),[4,this.runTransaction("maybeGarbageCollectMultiClientState","readwrite-primary",function(t){var r=wu(t,Ha.store);return r.Nt().next(function(t){var e=o.rn(t,18e5),n=t.filter(function(t){return-1===e.indexOf(t)});return tu.forEach(n,function(t){return r.delete(t.clientId)}).next(function(){return n})})}).catch(function(){return[]})]);case 1:if(e=t.sent(),this.Ke)for(n=0,r=e;n<r.length;n++)i=r[n],this.Ke.removeItem(this.on(i.clientId));t.label=2;case 2:return[2]}})})},qc.prototype.ze=function(){var t=this;this.Oe=this.Se.enqueueAfterDelay("client_metadata_refresh",4e3,function(){return t.je().then(function(){return t.nn()}).then(function(){return t.ze()})})},qc.prototype.tn=function(t){return!!t&&t.ownerId===this.clientId},qc.prototype.Ye=function(e){var r=this;return this.Ce?tu.resolve(!0):Bc(e).get(Oa.key).next(function(t){if(null!==t&&r.sn(t.leaseTimestampMs,5e3)&&!r.cn(t.ownerId)){if(r.tn(t)&&r.networkEnabled)return!0;if(!r.tn(t)){if(!t.allowTabSynchronization)throw new Ar(Dr.FAILED_PRECONDITION,Vc);return!1}}return!(!r.networkEnabled||!r.inForeground)||jc(e).Nt().next(function(t){return void 0===r.rn(t,5e3).find(function(t){if(r.clientId!==t.clientId){var e=!r.networkEnabled&&t.networkEnabled,n=!r.inForeground&&t.inForeground,t=r.networkEnabled===t.networkEnabled;if(e||n&&t)return!0}return!1})})}).next(function(t){return r.isPrimary!==t&&xr("IndexedDbPersistence","Client "+(t?"is":"is not")+" eligible for a primary lease."),t})},qc.prototype.shutdown=function(){return y(this,void 0,void 0,function(){var n=this;return g(this,function(t){switch(t.label){case 0:return this.xe=!1,this.un(),this.Oe&&(this.Oe.cancel(),this.Oe=null),this.an(),this.hn(),[4,this.Be.runTransaction("shutdown","readwrite",[Oa.store,Ha.store],function(t){var e=new vu(t,_r.o);return n.Xe(e).next(function(){return n.en(e)})})];case 1:return t.sent(),this.Be.close(),this.ln(),[2]}})})},qc.prototype.rn=function(t,e){var n=this;return t.filter(function(t){return n.sn(t.updateTimeMs,e)&&!n.cn(t.clientId)})},qc.prototype.fn=function(){var e=this;return this.runTransaction("getActiveClients","readonly",function(t){return jc(t).Nt().next(function(t){return e.rn(t,18e5).map(function(t){return t.clientId})})})},Object.defineProperty(qc.prototype,"started",{get:function(){return this.xe},enumerable:!1,configurable:!0}),qc.prototype.getMutationQueue=function(t){return tc.Kt(t,this.R,this.Ut,this.referenceDelegate)},qc.prototype.getTargetCache=function(){return this.qe},qc.prototype.getRemoteDocumentCache=function(){return this.Ue},qc.prototype.getIndexManager=function(){return this.Ut},qc.prototype.getBundleCache=function(){return this.Qe},qc.prototype.runTransaction=function(e,n,r){var i=this;xr("IndexedDbPersistence","Starting transaction:",e);var o,t="readonly"===n?"readonly":"readwrite";return this.Be.runTransaction(e,t,Ja,function(t){return o=new vu(t,i.Ne?i.Ne.next():_r.o),"readwrite-primary"===n?i.Je(o).next(function(t){return!!t||i.Ye(o)}).next(function(t){if(!t)throw Or("Failed to obtain primary lease for action '"+e+"'."),i.isPrimary=!1,i.Se.enqueueRetryable(function(){return i.Me(!1)}),new Ar(Dr.FAILED_PRECONDITION,$a);return r(o)}).next(function(t){return i.Ze(o).next(function(){return t})}):i.dn(o).next(function(){return r(o)})}).then(function(t){return o.raiseOnCommittedEvent(),t})},qc.prototype.dn=function(t){var e=this;return Bc(t).get(Oa.key).next(function(t){if(null!==t&&e.sn(t.leaseTimestampMs,5e3)&&!e.cn(t.ownerId)&&!e.tn(t)&&!(e.Ce||e.allowTabSynchronization&&t.allowTabSynchronization))throw new Ar(Dr.FAILED_PRECONDITION,Vc)})},qc.prototype.Ze=function(t){var e=new Oa(this.clientId,this.allowTabSynchronization,Date.now());return Bc(t).put(Oa.key,e)},qc.yt=function(){return nu.yt()},qc.prototype.Xe=function(t){var e=this,n=Bc(t);return n.get(Oa.key).next(function(t){return e.tn(t)?(xr("IndexedDbPersistence","Releasing primary lease."),n.delete(Oa.key)):tu.resolve()})},qc.prototype.sn=function(t,e){var n=Date.now();return!(t<n-e||n<t&&(Or("Detected an update time that is in the future: "+t+" > "+n),1))},qc.prototype.We=function(){var t=this;null!==this.document&&"function"==typeof this.document.addEventListener&&(this.ke=function(){t.Se.enqueueAndForget(function(){return t.inForeground="visible"===t.document.visibilityState,t.je()})},this.document.addEventListener("visibilitychange",this.ke),this.inForeground="visible"===this.document.visibilityState)},qc.prototype.an=function(){this.ke&&(this.document.removeEventListener("visibilitychange",this.ke),this.ke=null)},qc.prototype.Ge=function(){var t,e=this;"function"==typeof(null===(t=this.window)||void 0===t?void 0:t.addEventListener)&&(this.Fe=function(){e.un(),e.Se.enqueueAndForget(function(){return e.shutdown()})},this.window.addEventListener("unload",this.Fe))},qc.prototype.hn=function(){this.Fe&&(this.window.removeEventListener("unload",this.Fe),this.Fe=null)},qc.prototype.cn=function(t){try{var e=null!==(null===(e=this.Ke)||void 0===e?void 0:e.getItem(this.on(t)));return xr("IndexedDbPersistence","Client '"+t+"' "+(e?"is":"is not")+" zombied in LocalStorage"),e}catch(t){return Or("IndexedDbPersistence","Failed to get zombied client id.",t),!1}},qc.prototype.un=function(){if(this.Ke)try{this.Ke.setItem(this.on(this.clientId),String(Date.now()))}catch(t){Or("Failed to set zombie client id.",t)}},qc.prototype.ln=function(){if(this.Ke)try{this.Ke.removeItem(this.on(this.clientId))}catch(t){}},qc.prototype.on=function(t){return"firestore_zombie_"+this.persistenceKey+"_"+t},qc);function qc(t,e,n,r,i,o,s,a,u,c){if(this.allowTabSynchronization=t,this.persistenceKey=e,this.clientId=n,this.Se=i,this.window=o,this.document=s,this.De=u,this.Ce=c,this.Ne=null,this.xe=!1,this.isPrimary=!1,this.networkEnabled=!0,this.Fe=null,this.inForeground=!1,this.ke=null,this.Oe=null,this.$e=Number.NEGATIVE_INFINITY,this.Me=function(t){return Promise.resolve()},!qc.yt())throw new Ar(Dr.UNIMPLEMENTED,"This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.");this.referenceDelegate=new vc(this,r),this.Le=e+"main",this.R=new _u(a),this.Be=new nu(this.Le,11,new Pc(this.R)),this.qe=new ac(this.referenceDelegate,this.R),this.Ut=new Gu,this.Ue=(e=this.R,a=this.Ut,new Nc(e,a)),this.Qe=new Vu,this.window&&this.window.localStorage?this.Ke=this.window.localStorage:(this.Ke=null,!1===c&&Or("IndexedDbPersistence","LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page."))}function Bc(t){return wu(t,Oa.store)}function jc(t){return wu(t,Ha.store)}function Kc(t,e){var n=t.projectId;return t.isDefaultDatabase||(n+="."+t.database),"firestore/"+e+"/"+n+"/"}function Gc(t,e){this.progress=t,this.wn=e}var Qc=($c.prototype.mn=function(e,n){var r=this;return this._n.getAllMutationBatchesAffectingDocumentKey(e,n).next(function(t){return r.yn(e,n,t)})},$c.prototype.yn=function(t,e,r){return this.Ue.getEntry(t,e).next(function(t){for(var e=0,n=r;e<n.length;e++)n[e].applyToLocalView(t);return t})},$c.prototype.gn=function(t,i){t.forEach(function(t,e){for(var n=0,r=i;n<r.length;n++)r[n].applyToLocalView(e)})},$c.prototype.pn=function(e,t){var n=this;return this.Ue.getEntries(e,t).next(function(t){return n.En(e,t).next(function(){return t})})},$c.prototype.En=function(t,e){var n=this;return this._n.getAllMutationBatchesAffectingDocumentKeys(t,e).next(function(t){return n.gn(e,t)})},$c.prototype.getDocumentsMatchingQuery=function(t,e,n){return r=e,mi.isDocumentKey(r.path)&&null===r.collectionGroup&&0===r.filters.length?this.Tn(t,e.path):_o(e)?this.In(t,e,n):this.An(t,e,n);var r},$c.prototype.Tn=function(t,e){return this.mn(t,new mi(e)).next(function(t){var e=Vs;return e=t.isFoundDocument()?e.insert(t.key,t):e})},$c.prototype.In=function(n,r,i){var o=this,s=r.collectionGroup,a=Vs;return this.Ut.getCollectionParents(n,s).next(function(t){return tu.forEach(t,function(t){var e,e=(e=r,t=t.child(s),new mo(t,null,e.explicitOrderBy.slice(),e.filters.slice(),e.limit,e.limitType,e.startAt,e.endAt));return o.An(n,e,i).next(function(t){t.forEach(function(t,e){a=a.insert(t,e)})})}).next(function(){return a})})},$c.prototype.An=function(e,n,t){var c,h,r=this;return this.Ue.getDocumentsMatchingQuery(e,n,t).next(function(t){return c=t,r._n.getAllMutationBatchesAffectingQuery(e,n)}).next(function(t){return h=t,r.Rn(e,h,c).next(function(t){c=t;for(var e=0,n=h;e<n.length;e++)for(var r=n[e],i=0,o=r.mutations;i<o.length;i++){var s=o[i],a=s.key,u=c.get(a);null==u&&(u=Oi.newInvalidDocument(a),c=c.insert(a,u)),is(s,u,r.localWriteTime),u.isFoundDocument()||(c=c.remove(a))}})}).next(function(){return c.forEach(function(t,e){Ro(n,e)||(c=c.remove(t))}),c})},$c.prototype.Rn=function(t,e,n){for(var r=Bs(),i=0,o=e;i<o.length;i++)for(var s=0,a=o[i].mutations;s<a.length;s++){var u=a[s];u instanceof hs&&null===n.get(u.key)&&(r=r.add(u.key))}var c=n;return this.Ue.getEntries(t,r).next(function(t){return t.forEach(function(t,e){e.isFoundDocument()&&(c=c.insert(t,e))}),c})},$c),zc=(Jc.Pn=function(t,e){for(var n=Bs(),r=Bs(),i=0,o=e.docChanges;i<o.length;i++){var s=o[i];switch(s.type){case 0:n=n.add(s.doc.key);break;case 1:r=r.add(s.doc.key)}}return new Jc(t,e.fromCache,n,r)},Jc),Hc=(Xc.prototype.Vn=function(t){this.Sn=t},Xc.prototype.getDocumentsMatchingQuery=function(e,r,i,o){var s=this;return 0===r.filters.length&&null===r.limit&&null==r.startAt&&null==r.endAt&&(0===r.explicitOrderBy.length||1===r.explicitOrderBy.length&&r.explicitOrderBy[0].field.isKeyField())||i.isEqual(Gr.min())?this.Dn(e,r):this.Sn.pn(e,o).next(function(t){var n=s.Cn(r,t);return(wo(r)||Io(r))&&s.Nn(r.limitType,n,o,i)?s.Dn(e,r):(Rr()<=f.DEBUG&&xr("QueryEngine","Re-using previous result from %s to execute query: %s",i.toString(),Co(r)),s.Sn.getDocumentsMatchingQuery(e,r,i).next(function(e){return n.forEach(function(t){e=e.insert(t.key,t)}),e}))})},Xc.prototype.Cn=function(n,t){var r=new Os(xo(n));return t.forEach(function(t,e){Ro(n,e)&&(r=r.add(e))}),r},Xc.prototype.Nn=function(t,e,n,r){if(n.size!==e.size)return!0;e="F"===t?e.last():e.first();return!!e&&(e.hasPendingWrites||0<e.version.compareTo(r))},Xc.prototype.Dn=function(t,e){return Rr()<=f.DEBUG&&xr("QueryEngine","Using full collection scan to execute query:",Co(e)),this.Sn.getDocumentsMatchingQuery(t,e,Gr.min())},Xc),Wc=(Yc.prototype.collectGarbage=function(e){var n=this;return this.persistence.runTransaction("Collect garbage","readwrite-primary",function(t){return e.collect(t,n.Fn)})},Yc);function Yc(t,e,n,r){this.persistence=t,this.xn=e,this.R=r,this.Fn=new Ns(qr),this.kn=new Sc(Fi,Vi),this.On=Gr.min(),this._n=t.getMutationQueue(n),this.$n=t.getRemoteDocumentCache(),this.qe=t.getTargetCache(),this.Mn=new Qc(this.$n,this._n,this.persistence.getIndexManager()),this.Qe=t.getBundleCache(),this.xn.Vn(this.Mn)}function Xc(){}function Jc(t,e,n,r){this.targetId=t,this.fromCache=e,this.bn=n,this.vn=r}function $c(t,e,n){this.Ue=t,this._n=e,this.Ut=n}function Zc(t,e,n,r){return new Wc(t,e,n,r)}function th(i,o){return y(this,void 0,void 0,function(){var e,n,v,r;return g(this,function(t){switch(t.label){case 0:return n=(e=i)._n,v=e.Mn,[4,e.persistence.runTransaction("Handle user change","readonly",function(g){var m;return e._n.getAllMutationBatches(g).next(function(t){return m=t,n=e.persistence.getMutationQueue(o),v=new Qc(e.$n,n,e.persistence.getIndexManager()),n.getAllMutationBatches(g)}).next(function(t){for(var e=[],n=[],r=Bs(),i=0,o=m;i<o.length;i++){var s=o[i];e.push(s.batchId);for(var a=0,u=s.mutations;a<u.length;a++)var c=u[a],r=r.add(c.key)}for(var h=0,l=t;h<l.length;h++){var f=l[h];n.push(f.batchId);for(var d=0,p=f.mutations;d<p.length;d++){var y=p[d];r=r.add(y.key)}}return v.pn(g,r).next(function(t){return{Ln:t,removedBatchIds:e,addedBatchIds:n}})})})];case 1:return r=t.sent(),[2,(e._n=n,e.Mn=v,e.xn.Vn(e.Mn),r)]}})})}function eh(t,h){var l=t;return l.persistence.runTransaction("Acknowledge batch","readwrite-primary",function(t){var e,r,i,o,s,n,a,u=h.batch.keys(),c=l.$n.newChangeBuffer({trackRemovals:!0});return e=l,r=t,o=c,s=(i=h).batch,n=s.keys(),a=tu.resolve(),n.forEach(function(n){a=a.next(function(){return o.getEntry(r,n)}).next(function(t){var e=i.docVersions.get(n);Fr(null!==e),t.version.compareTo(e)<0&&(s.applyToRemoteDocument(t,i),t.isValidDocument()&&o.addEntry(t,i.commitVersion))})}),a.next(function(){return e._n.removeMutationBatch(r,s)}).next(function(){return c.apply(t)}).next(function(){return l._n.performConsistencyCheck(t)}).next(function(){return l.Mn.pn(t,u)})})}function nh(t){var e=t;return e.persistence.runTransaction("Get last remote snapshot version","readonly",function(t){return e.qe.getLastRemoteSnapshotVersion(t)})}function rh(t,r){var u=t,c=r.snapshotVersion,h=u.Fn;return u.persistence.runTransaction("Apply remote event","readwrite-primary",function(s){var t=u.$n.newChangeBuffer({trackRemovals:!0});h=u.Fn;var a=[];r.targetChanges.forEach(function(t,e){var n,r,i,o=h.get(e);o&&(a.push(u.qe.removeMatchingKeys(s,t.removedDocuments,e).next(function(){return u.qe.addMatchingKeys(s,t.addedDocuments,e)})),0<(i=t.resumeToken).approximateByteSize()&&(n=o.withResumeToken(i,c).withSequenceNumber(s.currentSequenceNumber),h=h.insert(e,n),r=o,i=t,Fr(0<(o=n).resumeToken.approximateByteSize()),(0===r.resumeToken.approximateByteSize()||3e8<=o.snapshotVersion.toMicroseconds()-r.snapshotVersion.toMicroseconds()||0<i.addedDocuments.size+i.modifiedDocuments.size+i.removedDocuments.size)&&a.push(u.qe.updateTargetData(s,n))))});var e,n=Ps;return r.documentUpdates.forEach(function(t,e){r.resolvedLimboDocuments.has(t)&&a.push(u.persistence.referenceDelegate.updateLimboDocument(s,t))}),a.push(ih(s,t,r.documentUpdates,c,void 0).next(function(t){n=t})),c.isEqual(Gr.min())||(e=u.qe.getLastRemoteSnapshotVersion(s).next(function(t){return u.qe.setTargetsMetadata(s,s.currentSequenceNumber,c)}),a.push(e)),tu.waitFor(a).next(function(){return t.apply(s)}).next(function(){return u.Mn.En(s,n)}).next(function(){return n})}).then(function(t){return u.Fn=h,t})}function ih(t,s,e,a,u){var n=Bs();return e.forEach(function(t){return n=n.add(t)}),s.getEntries(t,n).next(function(i){var o=Ps;return e.forEach(function(t,e){var n=i.get(t),r=(null==u?void 0:u.get(t))||a;e.isNoDocument()&&e.version.isEqual(Gr.min())?(s.removeEntry(t,r),o=o.insert(t,e)):!n.isValidDocument()||0<e.version.compareTo(n.version)||0===e.version.compareTo(n.version)&&n.hasPendingWrites?(s.addEntry(e,r),o=o.insert(t,e)):xr("LocalStore","Ignoring outdated watch update for ",t,". Current version:",n.version," Watch version:",e.version)}),o})}function oh(t,r){var i=t;return i.persistence.runTransaction("Allocate target","readwrite",function(e){var n;return i.qe.getTargetData(e,r).next(function(t){return t?(n=t,tu.resolve(n)):i.qe.allocateTargetId(e).next(function(t){return n=new Tu(r,t,0,e.currentSequenceNumber),i.qe.addTargetData(e,n).next(function(){return n})})})}).then(function(t){var e=i.Fn.get(t.targetId);return(null===e||0<t.snapshotVersion.compareTo(e.snapshotVersion))&&(i.Fn=i.Fn.insert(t.targetId,t),i.kn.set(r,t.targetId)),t})}function sh(i,o,s){return y(this,void 0,void 0,function(){var e,n,r;return g(this,function(t){switch(t.label){case 0:n=(e=i).Fn.get(o),r=s?"readwrite":"readwrite-primary",t.label=1;case 1:return t.trys.push([1,4,,5]),s?[3,3]:[4,e.persistence.runTransaction("Release target",r,function(t){return e.persistence.referenceDelegate.removeTarget(t,n)})];case 2:t.sent(),t.label=3;case 3:return[3,5];case 4:if(!lu(r=t.sent()))throw r;return xr("LocalStore","Failed to update sequence numbers for target "+o+": "+r),[3,5];case 5:return e.Fn=e.Fn.remove(o),e.kn.delete(n.target),[2]}})})}function ah(t,o,s){var a=t,u=Gr.min(),c=Bs();return a.persistence.runTransaction("Execute query","readonly",function(e){return t=a,n=e,r=No(o),(void 0!==(t=(i=t).kn.get(r))?tu.resolve(i.Fn.get(t)):i.qe.getTargetData(n,r)).next(function(t){if(t)return u=t.lastLimboFreeSnapshotVersion,a.qe.getMatchingKeysForTargetId(e,t.targetId).next(function(t){c=t})}).next(function(){return a.xn.getDocumentsMatchingQuery(e,o,s?u:Gr.min(),s?c:Bs())}).next(function(t){return{documents:t,Bn:c}});var t,n,r,i})}function uh(t,e){var n=t,r=n.qe,t=n.Fn.get(e);return t?Promise.resolve(t.target):n.persistence.runTransaction("Get target data","readonly",function(t){return r.lt(t,e).next(function(t){return t?t.target:null})})}function ch(t){var s=t;return s.persistence.runTransaction("Get new document changes","readonly",function(t){return e=s.$n,n=t,t=s.On,r=e,i=Ps,o=Cu(t),t=Oc(n),n=IDBKeyRange.lowerBound(o,!0),t.Ot({index:Ba.readTimeIndex,range:n},function(t,e){var n=Au(r.R,e);i=i.insert(n.key,n),o=e.readTime}).next(function(){return{wn:i,readTime:Ru(o)}});var e,n,r,i,o}).then(function(t){var e=t.wn,t=t.readTime;return s.On=t,e})}function hh(n){return y(this,void 0,void 0,function(){var e;return g(this,function(t){return[2,(e=n).persistence.runTransaction("Synchronize last document change read time","readonly",function(t){return t=Oc(t),r=Gr.min(),t.Ot({index:Ba.readTimeIndex,reverse:!0},function(t,e,n){e.readTime&&(r=Ru(e.readTime)),n.done()}).next(function(){return r});var r}).then(function(t){e.On=t})]})})}var lh,fh,dh=(Lh.prototype.getBundleMetadata=function(t,e){return tu.resolve(this.Kn.get(e))},Lh.prototype.saveBundleMetadata=function(t,e){return this.Kn.set(e.id,{id:e.id,version:e.version,createTime:aa(e.createTime)}),tu.resolve()},Lh.prototype.getNamedQuery=function(t,e){return tu.resolve(this.jn.get(e))},Lh.prototype.saveNamedQuery=function(t,e){return this.jn.set(e.name,{name:(e=e).name,query:Fu(e.bundledQuery),readTime:aa(e.readTime)}),tu.resolve()},Lh),ph=(Oh.prototype.isEmpty=function(){return this.Wn.isEmpty()},Oh.prototype.addReference=function(t,e){e=new yh(t,e);this.Wn=this.Wn.add(e),this.zn=this.zn.add(e)},Oh.prototype.Jn=function(t,e){var n=this;t.forEach(function(t){return n.addReference(t,e)})},Oh.prototype.removeReference=function(t,e){this.Yn(new yh(t,e))},Oh.prototype.Xn=function(t,e){var n=this;t.forEach(function(t){return n.removeReference(t,e)})},Oh.prototype.Zn=function(t){var e=this,n=new mi(new $r([])),r=new yh(n,t),t=new yh(n,t+1),i=[];return this.zn.forEachInRange([r,t],function(t){e.Yn(t),i.push(t.key)}),i},Oh.prototype.ts=function(){var e=this;this.Wn.forEach(function(t){return e.Yn(t)})},Oh.prototype.Yn=function(t){this.Wn=this.Wn.delete(t),this.zn=this.zn.delete(t)},Oh.prototype.es=function(t){var e=new mi(new $r([])),n=new yh(e,t),t=new yh(e,t+1),r=Bs();return this.zn.forEachInRange([n,t],function(t){r=r.add(t.key)}),r},Oh.prototype.containsKey=function(t){var e=new yh(t,0),e=this.Wn.firstAfterOrEqual(e);return null!==e&&t.isEqual(e.key)},Oh),yh=(xh.Gn=function(t,e){return mi.comparator(t.key,e.key)||qr(t.ns,e.ns)},xh.Hn=function(t,e){return qr(t.ns,e.ns)||mi.comparator(t.key,e.key)},xh),gh=(Rh.prototype.checkEmpty=function(t){return tu.resolve(0===this._n.length)},Rh.prototype.addMutationBatch=function(t,e,n,r){var i=this.ss;this.ss++,0<this._n.length&&this._n[this._n.length-1];n=new Iu(i,e,n,r);this._n.push(n);for(var o=0,s=r;o<s.length;o++){var a=s[o];this.rs=this.rs.add(new yh(a.key,i)),this.Ut.addToCollectionParentIndex(t,a.key.path.popLast())}return tu.resolve(n)},Rh.prototype.lookupMutationBatch=function(t,e){return tu.resolve(this.os(e))},Rh.prototype.getNextMutationBatchAfterBatchId=function(t,e){e+=1,e=this.cs(e),e=e<0?0:e;return tu.resolve(this._n.length>e?this._n[e]:null)},Rh.prototype.getHighestUnacknowledgedBatchId=function(){return tu.resolve(0===this._n.length?-1:this.ss-1)},Rh.prototype.getAllMutationBatches=function(t){return tu.resolve(this._n.slice())},Rh.prototype.getAllMutationBatchesAffectingDocumentKey=function(t,e){var n=this,r=new yh(e,0),e=new yh(e,Number.POSITIVE_INFINITY),i=[];return this.rs.forEachInRange([r,e],function(t){t=n.os(t.ns);i.push(t)}),tu.resolve(i)},Rh.prototype.getAllMutationBatchesAffectingDocumentKeys=function(t,e){var n=this,r=new Os(qr);return e.forEach(function(t){var e=new yh(t,0),t=new yh(t,Number.POSITIVE_INFINITY);n.rs.forEachInRange([e,t],function(t){r=r.add(t.ns)})}),tu.resolve(this.us(r))},Rh.prototype.getAllMutationBatchesAffectingQuery=function(t,e){var n=e.path,r=n.length+1,e=n;mi.isDocumentKey(e)||(e=e.child(""));var e=new yh(new mi(e),0),i=new Os(qr);return this.rs.forEachWhile(function(t){var e=t.key.path;return!!n.isPrefixOf(e)&&(e.length===r&&(i=i.add(t.ns)),!0)},e),tu.resolve(this.us(i))},Rh.prototype.us=function(t){var e=this,n=[];return t.forEach(function(t){t=e.os(t);null!==t&&n.push(t)}),n},Rh.prototype.removeMutationBatch=function(n,r){var i=this;Fr(0===this.hs(r.batchId,"removed")),this._n.shift();var o=this.rs;return tu.forEach(r.mutations,function(t){var e=new yh(t.key,r.batchId);return o=o.delete(e),i.referenceDelegate.markPotentiallyOrphaned(n,t.key)}).next(function(){i.rs=o})},Rh.prototype.Gt=function(t){},Rh.prototype.containsKey=function(t,e){var n=new yh(e,0),n=this.rs.firstAfterOrEqual(n);return tu.resolve(e.isEqual(n&&n.key))},Rh.prototype.performConsistencyCheck=function(t){return this._n.length,tu.resolve()},Rh.prototype.hs=function(t,e){return this.cs(t)},Rh.prototype.cs=function(t){return 0===this._n.length?0:t-this._n[0].batchId},Rh.prototype.os=function(t){t=this.cs(t);return t<0||t>=this._n.length?null:this._n[t]},Rh),mh=(Ch.prototype.addEntry=function(t,e,n){var r=e.key,i=this.docs.get(r),o=i?i.size:0,i=this.ls(e);return this.docs=this.docs.insert(r,{document:e.clone(),size:i,readTime:n}),this.size+=i-o,this.Ut.addToCollectionParentIndex(t,r.path.popLast())},Ch.prototype.removeEntry=function(t){var e=this.docs.get(t);e&&(this.docs=this.docs.remove(t),this.size-=e.size)},Ch.prototype.getEntry=function(t,e){var n=this.docs.get(e);return tu.resolve(n?n.document.clone():Oi.newInvalidDocument(e))},Ch.prototype.getEntries=function(t,e){var n=this,r=Ps;return e.forEach(function(t){var e=n.docs.get(t);r=r.insert(t,e?e.document.clone():Oi.newInvalidDocument(t))}),tu.resolve(r)},Ch.prototype.getDocumentsMatchingQuery=function(t,e,n){for(var r=Ps,i=new mi(e.path.child("")),o=this.docs.getIteratorFrom(i);o.hasNext();){var s=o.getNext(),a=s.key,u=s.value,s=u.document,u=u.readTime;if(!e.path.isPrefixOf(a.path))break;u.compareTo(n)<=0||Ro(e,s)&&(r=r.insert(s.key,s.clone()))}return tu.resolve(r)},Ch.prototype.fs=function(t,e){return tu.forEach(this.docs,function(t){return e(t)})},Ch.prototype.newChangeBuffer=function(t){return new vh(this)},Ch.prototype.getSize=function(t){return tu.resolve(this.size)},Ch),vh=(n(kh,fh=I),kh.prototype.applyChanges=function(n){var r=this,i=[];return this.changes.forEach(function(t,e){e.document.isValidDocument()?i.push(r.Ie.addEntry(n,e.document,r.getReadTime(t))):r.Ie.removeEntry(t)}),tu.waitFor(i)},kh.prototype.getFromCache=function(t,e){return this.Ie.getEntry(t,e)},kh.prototype.getAllFromCache=function(t,e){return this.Ie.getEntries(t,e)},kh),bh=(Ah.prototype.forEachTarget=function(t,n){return this.ds.forEach(function(t,e){return n(e)}),tu.resolve()},Ah.prototype.getLastRemoteSnapshotVersion=function(t){return tu.resolve(this.lastRemoteSnapshotVersion)},Ah.prototype.getHighestSequenceNumber=function(t){return tu.resolve(this.ws)},Ah.prototype.allocateTargetId=function(t){return this.highestTargetId=this.ys.next(),tu.resolve(this.highestTargetId)},Ah.prototype.setTargetsMetadata=function(t,e,n){return n&&(this.lastRemoteSnapshotVersion=n),e>this.ws&&(this.ws=e),tu.resolve()},Ah.prototype.te=function(t){this.ds.set(t.target,t);var e=t.targetId;e>this.highestTargetId&&(this.ys=new sc(e),this.highestTargetId=e),t.sequenceNumber>this.ws&&(this.ws=t.sequenceNumber)},Ah.prototype.addTargetData=function(t,e){return this.te(e),this.targetCount+=1,tu.resolve()},Ah.prototype.updateTargetData=function(t,e){return this.te(e),tu.resolve()},Ah.prototype.removeTargetData=function(t,e){return this.ds.delete(e.target),this._s.Zn(e.targetId),--this.targetCount,tu.resolve()},Ah.prototype.removeTargets=function(n,r,i){var o=this,s=0,a=[];return this.ds.forEach(function(t,e){e.sequenceNumber<=r&&null===i.get(e.targetId)&&(o.ds.delete(t),a.push(o.removeMatchingKeysForTargetId(n,e.targetId)),s++)}),tu.waitFor(a).next(function(){return s})},Ah.prototype.getTargetCount=function(t){return tu.resolve(this.targetCount)},Ah.prototype.getTargetData=function(t,e){e=this.ds.get(e)||null;return tu.resolve(e)},Ah.prototype.addMatchingKeys=function(t,e,n){return this._s.Jn(e,n),tu.resolve()},Ah.prototype.removeMatchingKeys=function(e,t,n){this._s.Xn(t,n);var r=this.persistence.referenceDelegate,i=[];return r&&t.forEach(function(t){i.push(r.markPotentiallyOrphaned(e,t))}),tu.waitFor(i)},Ah.prototype.removeMatchingKeysForTargetId=function(t,e){return this._s.Zn(e),tu.resolve()},Ah.prototype.getMatchingKeysForTargetId=function(t,e){e=this._s.es(e);return tu.resolve(e)},Ah.prototype.containsKey=function(t,e){return tu.resolve(this._s.containsKey(e))},Ah),wh=(Dh.prototype.start=function(){return Promise.resolve()},Dh.prototype.shutdown=function(){return this.xe=!1,Promise.resolve()},Object.defineProperty(Dh.prototype,"started",{get:function(){return this.xe},enumerable:!1,configurable:!0}),Dh.prototype.setDatabaseDeletedListener=function(){},Dh.prototype.setNetworkEnabled=function(){},Dh.prototype.getIndexManager=function(){return this.Ut},Dh.prototype.getMutationQueue=function(t){var e=this.gs[t.toKey()];return e||(e=new gh(this.Ut,this.referenceDelegate),this.gs[t.toKey()]=e),e},Dh.prototype.getTargetCache=function(){return this.qe},Dh.prototype.getRemoteDocumentCache=function(){return this.Ue},Dh.prototype.getBundleCache=function(){return this.Qe},Dh.prototype.runTransaction=function(t,e,n){var r=this;xr("MemoryPersistence","Starting transaction:",t);var i=new Ih(this.Ne.next());return this.referenceDelegate.Es(),n(i).next(function(t){return r.referenceDelegate.Ts(i).next(function(){return t})}).toPromise().then(function(t){return i.raiseOnCommittedEvent(),t})},Dh.prototype.Is=function(e,n){return tu.or(Object.values(this.gs).map(function(t){return function(){return t.containsKey(e,n)}}))},Dh),Ih=(n(Nh,lh=Te),Nh),Eh=(Sh.bs=function(t){return new Sh(t)},Object.defineProperty(Sh.prototype,"vs",{get:function(){if(this.Rs)return this.Rs;throw Mr()},enumerable:!1,configurable:!0}),Sh.prototype.addReference=function(t,e,n){return this.As.addReference(n,e),this.vs.delete(n.toString()),tu.resolve()},Sh.prototype.removeReference=function(t,e,n){return this.As.removeReference(n,e),this.vs.add(n.toString()),tu.resolve()},Sh.prototype.markPotentiallyOrphaned=function(t,e){return this.vs.add(e.toString()),tu.resolve()},Sh.prototype.removeTarget=function(t,e){var n=this;this.As.Zn(e.targetId).forEach(function(t){return n.vs.add(t.toString())});var r=this.persistence.getTargetCache();return r.getMatchingKeysForTargetId(t,e.targetId).next(function(t){t.forEach(function(t){return n.vs.add(t.toString())})}).next(function(){return r.removeTargetData(t,e)})},Sh.prototype.Es=function(){this.Rs=new Set},Sh.prototype.Ts=function(n){var r=this,i=this.persistence.getRemoteDocumentCache().newChangeBuffer();return tu.forEach(this.vs,function(t){var e=mi.fromPath(t);return r.Ps(n,e).next(function(t){t||i.removeEntry(e)})}).next(function(){return r.Rs=null,i.apply(n)})},Sh.prototype.updateLimboDocument=function(t,e){var n=this;return this.Ps(t,e).next(function(t){t?n.vs.delete(e.toString()):n.vs.add(e.toString())})},Sh.prototype.ps=function(t){return 0},Sh.prototype.Ps=function(t,e){var n=this;return tu.or([function(){return tu.resolve(n.As.containsKey(e))},function(){return n.persistence.getTargetCache().containsKey(t,e)},function(){return n.persistence.Is(t,e)}])},Sh),Th=(_h.prototype.isAuthenticated=function(){return null!=this.uid},_h.prototype.toKey=function(){return this.isAuthenticated()?"uid:"+this.uid:"anonymous-user"},_h.prototype.isEqual=function(t){return t.uid===this.uid},_h);function _h(t){this.uid=t}function Sh(t){this.persistence=t,this.As=new ph,this.Rs=null}function Nh(t){var e=this;return(e=lh.call(this)||this).currentSequenceNumber=t,e}function Dh(t,e){var n=this;this.gs={},this.Ne=new _r(0),this.xe=!1,this.xe=!0,this.referenceDelegate=t(this),this.qe=new bh(this),this.Ut=new ju,this.Ue=(t=this.Ut,new mh(t,function(t){return n.referenceDelegate.ps(t)})),this.R=new _u(e),this.Qe=new dh(this.R)}function Ah(t){this.persistence=t,this.ds=new Sc(Fi,Vi),this.lastRemoteSnapshotVersion=Gr.min(),this.highestTargetId=0,this.ws=0,this._s=new ph,this.targetCount=0,this.ys=sc.Jt()}function kh(t){var e=this;return(e=fh.call(this)||this).Ie=t,e}function Ch(t,e){this.Ut=t,this.ls=e,this.docs=new Ns(mi.comparator),this.size=0}function Rh(t,e){this.Ut=t,this.referenceDelegate=e,this._n=[],this.ss=1,this.rs=new Os(yh.Gn)}function xh(t,e){this.key=t,this.ns=e}function Oh(){this.Wn=new Os(yh.Gn),this.zn=new Os(yh.Hn)}function Lh(t){this.R=t,this.Kn=new Map,this.jn=new Map}function Ph(t,e){return"firestore_clients_"+t+"_"+e}function Mh(t,e,n){n="firestore_mutations_"+t+"_"+n;return e.isAuthenticated()&&(n+="_"+e.uid),n}function Fh(t,e){return"firestore_targets_"+t+"_"+e}Th.UNAUTHENTICATED=new Th(null),Th.GOOGLE_CREDENTIALS=new Th("google-credentials-uid"),Th.FIRST_PARTY=new Th("first-party-uid");var Vh,Uh=(ul.Vs=function(t,e,n){var r,i=JSON.parse(n),o="object"==typeof i&&-1!==["pending","acknowledged","rejected"].indexOf(i.state)&&(void 0===i.error||"object"==typeof i.error);return o&&i.error&&(o="string"==typeof i.error.message&&"string"==typeof i.error.code)&&(r=new Ar(i.error.code,i.error.message)),o?new ul(t,e,i.state,r):(Or("SharedClientState","Failed to parse mutation state for ID '"+e+"': "+n),null)},ul.prototype.Ss=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t)},ul),qh=(al.Vs=function(t,e){var n,r=JSON.parse(e),i="object"==typeof r&&-1!==["not-current","current","rejected"].indexOf(r.state)&&(void 0===r.error||"object"==typeof r.error);return i&&r.error&&(i="string"==typeof r.error.message&&"string"==typeof r.error.code)&&(n=new Ar(r.error.code,r.error.message)),i?new al(t,r.state,n):(Or("SharedClientState","Failed to parse target state for ID '"+t+"': "+e),null)},al.prototype.Ss=function(){var t={state:this.state,updateTimeMs:Date.now()};return this.error&&(t.error={code:this.error.code,message:this.error.message}),JSON.stringify(t)},al),Bh=(sl.Vs=function(t,e){for(var n=JSON.parse(e),r="object"==typeof n&&n.activeTargetIds instanceof Array,i=js,o=0;r&&o<n.activeTargetIds.length;++o)r=gi(n.activeTargetIds[o]),i=i.add(n.activeTargetIds[o]);return r?new sl(t,i):(Or("SharedClientState","Failed to parse client data for instance '"+t+"': "+e),null)},sl),jh=(ol.Vs=function(t){var e=JSON.parse(t);return"object"==typeof e&&-1!==["Unknown","Online","Offline"].indexOf(e.onlineState)&&"string"==typeof e.clientId?new ol(e.clientId,e.onlineState):(Or("SharedClientState","Failed to parse online state: "+t),null)},ol),Kh=(il.prototype.Ds=function(t){this.activeTargetIds=this.activeTargetIds.add(t)},il.prototype.Cs=function(t){this.activeTargetIds=this.activeTargetIds.delete(t)},il.prototype.Ss=function(){var t={activeTargetIds:this.activeTargetIds.toArray(),updateTimeMs:Date.now()};return JSON.stringify(t)},il),Gh=(rl.yt=function(t){return!(!t||!t.localStorage)},rl.prototype.start=function(){return y(this,void 0,void 0,function(){var e,n,r,i,o,s,a,u,c,h,l=this;return g(this,function(t){switch(t.label){case 0:return[4,this.syncEngine.fn()];case 1:for(s=t.sent(),e=0,n=s;e<n.length;e++)(r=n[e])!==this.Ns&&(i=this.getItem(Ph(this.persistenceKey,r)))&&(o=Bh.Vs(r,i))&&(this.ks=this.ks.insert(o.clientId,o));for(this.Ks(),(s=this.storage.getItem(this.Us))&&(a=this.js(s))&&this.Ws(a),u=0,c=this.Os;u<c.length;u++)h=c[u],this.Fs(h);return this.Os=[],this.window.addEventListener("unload",function(){return l.shutdown()}),this.started=!0,[2]}})})},rl.prototype.writeSequenceNumber=function(t){this.setItem(this.Ms,JSON.stringify(t))},rl.prototype.getAllActiveQueryTargets=function(){return this.Gs(this.ks)},rl.prototype.isActiveQueryTarget=function(n){var r=!1;return this.ks.forEach(function(t,e){e.activeTargetIds.has(n)&&(r=!0)}),r},rl.prototype.addPendingMutation=function(t){this.zs(t,"pending")},rl.prototype.updateMutationState=function(t,e,n){this.zs(t,e,n),this.Hs(t)},rl.prototype.addLocalQueryTarget=function(t){var e,n="not-current";return this.isActiveQueryTarget(t)&&(!(e=this.storage.getItem(Fh(this.persistenceKey,t)))||(e=qh.Vs(t,e))&&(n=e.state)),this.Js.Ds(t),this.Ks(),n},rl.prototype.removeLocalQueryTarget=function(t){this.Js.Cs(t),this.Ks()},rl.prototype.isLocalQueryTarget=function(t){return this.Js.activeTargetIds.has(t)},rl.prototype.clearQueryState=function(t){this.removeItem(Fh(this.persistenceKey,t))},rl.prototype.updateQueryState=function(t,e,n){this.Ys(t,e,n)},rl.prototype.handleUserChange=function(t,e,n){var r=this;e.forEach(function(t){r.Hs(t)}),this.currentUser=t,n.forEach(function(t){r.addPendingMutation(t)})},rl.prototype.setOnlineState=function(t){this.Xs(t)},rl.prototype.notifyBundleLoaded=function(){this.Zs()},rl.prototype.shutdown=function(){this.started&&(this.window.removeEventListener("storage",this.xs),this.removeItem(this.$s),this.started=!1)},rl.prototype.getItem=function(t){var e=this.storage.getItem(t);return xr("SharedClientState","READ",t,e),e},rl.prototype.setItem=function(t,e){xr("SharedClientState","SET",t,e),this.storage.setItem(t,e)},rl.prototype.removeItem=function(t){xr("SharedClientState","REMOVE",t),this.storage.removeItem(t)},rl.prototype.Fs=function(t){var e=this,o=t;o.storageArea===this.storage&&(xr("SharedClientState","EVENT",o.key,o.newValue),o.key!==this.$s?this.Se.enqueueRetryable(function(){return y(e,void 0,void 0,function(){var e,n,r,i;return g(this,function(t){if(this.started){if(null!==o.key)if(this.Ls.test(o.key)){if(null==o.newValue)return e=this.ti(o.key),[2,this.ei(e,null)];if(e=this.ni(o.key,o.newValue))return[2,this.ei(e.clientId,e)]}else if(this.Bs.test(o.key)){if(null!==o.newValue&&(n=this.si(o.key,o.newValue)))return[2,this.ii(n)]}else if(this.qs.test(o.key)){if(null!==o.newValue&&(r=this.ri(o.key,o.newValue)))return[2,this.oi(r)]}else if(o.key===this.Us){if(null!==o.newValue&&(i=this.js(o.newValue)))return[2,this.Ws(i)]}else if(o.key===this.Ms)(i=function(t){var e=_r.o;if(null!=t)try{var n=JSON.parse(t);Fr("number"==typeof n),e=n}catch(t){Or("SharedClientState","Failed to read sequence number from WebStorage",t)}return e}(o.newValue))!==_r.o&&this.sequenceNumberHandler(i);else if(o.key===this.Qs)return[2,this.syncEngine.ci()]}else this.Os.push(o);return[2]})})}):Or("Received WebStorage notification for local change. Another client might have garbage-collected our state"))},Object.defineProperty(rl.prototype,"Js",{get:function(){return this.ks.get(this.Ns)},enumerable:!1,configurable:!0}),rl.prototype.Ks=function(){this.setItem(this.$s,this.Js.Ss())},rl.prototype.zs=function(t,e,n){n=new Uh(this.currentUser,t,e,n),t=Mh(this.persistenceKey,this.currentUser,t);this.setItem(t,n.Ss())},rl.prototype.Hs=function(t){t=Mh(this.persistenceKey,this.currentUser,t);this.removeItem(t)},rl.prototype.Xs=function(t){t={clientId:this.Ns,onlineState:t};this.storage.setItem(this.Us,JSON.stringify(t))},rl.prototype.Ys=function(t,e,n){var r=Fh(this.persistenceKey,t),n=new qh(t,e,n);this.setItem(r,n.Ss())},rl.prototype.Zs=function(){this.setItem(this.Qs,"value-not-used")},rl.prototype.ti=function(t){t=this.Ls.exec(t);return t?t[1]:null},rl.prototype.ni=function(t,e){t=this.ti(t);return Bh.Vs(t,e)},rl.prototype.si=function(t,e){var n=this.Bs.exec(t),t=Number(n[1]),n=void 0!==n[2]?n[2]:null;return Uh.Vs(new Th(n),t,e)},rl.prototype.ri=function(t,e){t=this.qs.exec(t),t=Number(t[1]);return qh.Vs(t,e)},rl.prototype.js=function(t){return jh.Vs(t)},rl.prototype.ii=function(e){return y(this,void 0,void 0,function(){return g(this,function(t){return e.user.uid===this.currentUser.uid?[2,this.syncEngine.ui(e.batchId,e.state,e.error)]:(xr("SharedClientState","Ignoring mutation for non-active user "+e.user.uid),[2])})})},rl.prototype.oi=function(t){return this.syncEngine.ai(t.targetId,t.state,t.error)},rl.prototype.ei=function(t,e){var n=this,r=e?this.ks.insert(t,e):this.ks.remove(t),i=this.Gs(this.ks),o=this.Gs(r),s=[],a=[];return o.forEach(function(t){i.has(t)||s.push(t)}),i.forEach(function(t){o.has(t)||a.push(t)}),this.syncEngine.hi(s,a).then(function(){n.ks=r})},rl.prototype.Ws=function(t){this.ks.get(t.clientId)&&this.onlineStateHandler(t.onlineState)},rl.prototype.Gs=function(t){var n=js;return t.forEach(function(t,e){n=n.unionWith(e.activeTargetIds)}),n},rl),Qh=(nl.prototype.addPendingMutation=function(t){},nl.prototype.updateMutationState=function(t,e,n){},nl.prototype.addLocalQueryTarget=function(t){return this.li.Ds(t),this.fi[t]||"not-current"},nl.prototype.updateQueryState=function(t,e,n){this.fi[t]=e},nl.prototype.removeLocalQueryTarget=function(t){this.li.Cs(t)},nl.prototype.isLocalQueryTarget=function(t){return this.li.activeTargetIds.has(t)},nl.prototype.clearQueryState=function(t){delete this.fi[t]},nl.prototype.getAllActiveQueryTargets=function(){return this.li.activeTargetIds},nl.prototype.isActiveQueryTarget=function(t){return this.li.activeTargetIds.has(t)},nl.prototype.start=function(){return this.li=new Kh,Promise.resolve()},nl.prototype.handleUserChange=function(t,e,n){},nl.prototype.setOnlineState=function(t){},nl.prototype.shutdown=function(){},nl.prototype.writeSequenceNumber=function(t){},nl.prototype.notifyBundleLoaded=function(){},nl),zh=(el.prototype.di=function(t){},el.prototype.shutdown=function(){},el),Hh=(tl.prototype.di=function(t){this.gi.push(t)},tl.prototype.shutdown=function(){window.removeEventListener("online",this.wi),window.removeEventListener("offline",this.mi)},tl.prototype.pi=function(){window.addEventListener("online",this.wi),window.addEventListener("offline",this.mi)},tl.prototype._i=function(){xr("ConnectivityMonitor","Network connectivity changed: AVAILABLE");for(var t=0,e=this.gi;t<e.length;t++)(0,e[t])(0)},tl.prototype.yi=function(){xr("ConnectivityMonitor","Network connectivity changed: UNAVAILABLE");for(var t=0,e=this.gi;t<e.length;t++)(0,e[t])(1)},tl.yt=function(){return"undefined"!=typeof window&&void 0!==window.addEventListener&&void 0!==window.removeEventListener},tl),Wh={BatchGetDocuments:"batchGet",Commit:"commit",RunQuery:"runQuery"},Yh=(Zh.prototype.Ii=function(t){this.Ai=t},Zh.prototype.Ri=function(t){this.bi=t},Zh.prototype.onMessage=function(t){this.vi=t},Zh.prototype.close=function(){this.Ti()},Zh.prototype.send=function(t){this.Ei(t)},Zh.prototype.Pi=function(){this.Ai()},Zh.prototype.Vi=function(t){this.bi(t)},Zh.prototype.Si=function(t){this.vi(t)},Zh),Xh=($h.prototype.Ni=function(e,t,n,r){var i=this.xi(e,t);xr("RestConnection","Sending: ",i,n);t={};return this.Fi(t,r),this.ki(e,i,t,n).then(function(t){return xr("RestConnection","Received: ",t),t},function(t){throw Lr("RestConnection",e+" failed with error: ",t,"url: ",i,"request:",n),t})},$h.prototype.Oi=function(t,e,n,r){return this.Ni(t,e,n,r)},$h.prototype.Fi=function(t,e){if(t["X-Goog-Api-Client"]="gl-js/ fire/8.4.2",t["Content-Type"]="text/plain",this.databaseInfo.appId&&(t["X-Firebase-GMPID"]=this.databaseInfo.appId),e)for(var n in e.authHeaders)e.authHeaders.hasOwnProperty(n)&&(t[n]=e.authHeaders[n])},$h.prototype.xi=function(t,e){t=Wh[t];return this.Di+"/v1/"+e+":"+t},n(Jh,Vh=$h),Jh.prototype.ki=function(o,e,s,a){return new Promise(function(n,r){var i=new Tr;i.listenOnce(vr.COMPLETE,function(){try{switch(i.getLastErrorCode()){case mr.NO_ERROR:var t=i.getResponseJson();xr("Connection","XHR received:",JSON.stringify(t)),n(t);break;case mr.TIMEOUT:xr("Connection",'RPC "'+o+'" timed out'),r(new Ar(Dr.DEADLINE_EXCEEDED,"Request time out"));break;case mr.HTTP_ERROR:var e=i.getStatus();xr("Connection",'RPC "'+o+'" failed with status:',e,"response text:",i.getResponseText()),0<e?(t=i.getResponseJson().error)&&t.status&&t.message?(e=t.status.toLowerCase().replace(/_/g,"-"),e=0<=Object.values(Dr).indexOf(e)?e:Dr.UNKNOWN,r(new Ar(e,t.message))):r(new Ar(Dr.UNKNOWN,"Server responded with status "+i.getStatus())):r(new Ar(Dr.UNAVAILABLE,"Connection failed."));break;default:Mr()}}finally{xr("Connection",'RPC "'+o+'" completed.')}});var t=JSON.stringify(a);i.send(e,"POST",t,s,15)})},Jh.prototype.$i=function(t,e){var n,r=[this.Di,"/","google.firestore.v1.Firestore","/",t,"/channel"],i=new lr,o=gr(),t={httpSessionIdParam:"gsessionid",initMessageHeaders:{},messageUrlParams:{database:"projects/"+this.databaseId.projectId+"/databases/"+this.databaseId.database},sendRawJson:!0,supportsCrossDomainXhr:!0,internalChannelParams:{forwardChannelRequestTimeoutMs:6e5},forceLongPolling:this.forceLongPolling,detectBufferingProxy:this.autoDetectLongPolling};this.Fi(t.initMessageHeaders,e),"undefined"!=typeof window&&(window.cordova||window.phonegap||window.PhoneGap)&&/ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(h())||"object"==typeof navigator&&"ReactNative"===navigator.product||0<=h().indexOf("Electron/")||(0<=(n=h()).indexOf("MSIE ")||0<=n.indexOf("Trident/"))||0<=h().indexOf("MSAppHost/")||"object"==typeof(n="object"==typeof chrome?chrome.runtime:"object"==typeof browser?browser.runtime:void 0)&&void 0!==n.id||(t.httpHeadersOverwriteParam="$httpHeaders");r=r.join("");xr("Connection","Creating WebChannel: "+r,t);var s=i.createWebChannel(r,t),a=!1,u=!1,c=new Yh({Ei:function(t){u?xr("Connection","Not sending because WebChannel is closed:",t):(a||(xr("Connection","Opening WebChannel transport."),s.open(),a=!0),xr("Connection","WebChannel sending:",t),s.send(t))},Ti:function(){return s.close()}}),t=function(t,e,n){t.listen(e,function(t){try{n(t)}catch(t){setTimeout(function(){throw t},0)}})};return t(s,Er.EventType.OPEN,function(){u||xr("Connection","WebChannel transport opened.")}),t(s,Er.EventType.CLOSE,function(){u||(u=!0,xr("Connection","WebChannel transport closed"),c.Vi())}),t(s,Er.EventType.ERROR,function(t){u||(u=!0,Lr("Connection","WebChannel transport errored:",t),c.Vi(new Ar(Dr.UNAVAILABLE,"The operation could not be completed")))}),t(s,Er.EventType.MESSAGE,function(t){var e,n,r,i;u||(Fr(!!(e=t.data[0])),(n=e.error||(null===(i=e[0])||void 0===i?void 0:i.error))?(xr("Connection","WebChannel received error:",n),r=n.status,t=function(){var t=ms[r];if(void 0!==t)return Ss(t)}(),i=n.message,void 0===t&&(t=Dr.INTERNAL,i="Unknown error status: "+r+" with message "+n.message),u=!0,c.Vi(new Ar(t,i)),s.close()):(xr("Connection","WebChannel received:",e),c.Si(e)))}),t(o,br.STAT_EVENT,function(t){t.stat===wr?xr("Connection","Detected buffering proxy"):t.stat===Ir&&xr("Connection","Detected no buffering proxy")}),setTimeout(function(){c.Pi()},0),c},Jh);function Jh(t){var e=this;return(e=Vh.call(this,t)||this).forceLongPolling=t.forceLongPolling,e.autoDetectLongPolling=t.autoDetectLongPolling,e}function $h(t){this.databaseInfo=t,this.databaseId=t.databaseId;var e=t.ssl?"https":"http";this.Di=e+"://"+t.host,this.Ci="projects/"+this.databaseId.projectId+"/databases/"+this.databaseId.database+"/documents"}function Zh(t){this.Ei=t.Ei,this.Ti=t.Ti}function tl(){var t=this;this.wi=function(){return t._i()},this.mi=function(){return t.yi()},this.gi=[],this.pi()}function el(){}function nl(){this.li=new Kh,this.fi={},this.onlineStateHandler=null,this.sequenceNumberHandler=null}function rl(t,e,n,r,i){this.window=t,this.Se=e,this.persistenceKey=n,this.Ns=r,this.syncEngine=null,this.onlineStateHandler=null,this.sequenceNumberHandler=null,this.xs=this.Fs.bind(this),this.ks=new Ns(qr),this.started=!1,this.Os=[];n=n.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");this.storage=this.window.localStorage,this.currentUser=i,this.$s=Ph(this.persistenceKey,this.Ns),this.Ms="firestore_sequence_number_"+this.persistenceKey,this.ks=this.ks.insert(this.Ns,new Kh),this.Ls=new RegExp("^firestore_clients_"+n+"_([^_]*)$"),this.Bs=new RegExp("^firestore_mutations_"+n+"_(\\d+)(?:_(.*))?$"),this.qs=new RegExp("^firestore_targets_"+n+"_(\\d+)$"),this.Us="firestore_online_state_"+this.persistenceKey,this.Qs="firestore_bundle_loaded_"+this.persistenceKey,this.window.addEventListener("storage",this.xs)}function il(){this.activeTargetIds=js}function ol(t,e){this.clientId=t,this.onlineState=e}function sl(t,e){this.clientId=t,this.activeTargetIds=e}function al(t,e,n){this.targetId=t,this.state=e,this.error=n}function ul(t,e,n,r){this.user=t,this.batchId=e,this.state=n,this.error=r}function cl(){return"undefined"!=typeof window?window:null}function hl(){return"undefined"!=typeof document?document:null}function ll(t){return new ia(t,!0)}function fl(t,e,n,r,i){var o=this;this.localStore=t,this.datastore=e,this.asyncQueue=n,this.remoteSyncer={},this.kr=[],this.Or=new Map,this.$r=new Set,this.Mr=[],this.Lr=i,this.Lr.di(function(t){n.enqueueAndForget(function(){return y(o,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return Pl(this)?(xr("RemoteStore","Restarting streams for network reachability change."),[4,function(n){return y(this,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return(e=n).$r.add(4),[4,Al(e)];case 1:return t.sent(),e.Br.set("Unknown"),e.$r.delete(4),[4,Dl(e)];case 2:return t.sent(),[2]}})})}(this)]):[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})})})}),this.Br=new wl(n,r)}var dl,pl,yl,gl=(Nl.prototype.reset=function(){this.qi=0},Nl.prototype.Ki=function(){this.qi=this.Bi},Nl.prototype.ji=function(t){var e=this;this.cancel();var n=Math.floor(this.qi+this.Wi()),r=Math.max(0,Date.now()-this.Qi),i=Math.max(0,n-r);0<i&&xr("ExponentialBackoff","Backing off for "+i+" ms (base delay: "+this.qi+" ms, delay with jitter: "+n+" ms, last attempt: "+r+" ms ago)"),this.Ui=this.Se.enqueueAfterDelay(this.timerId,i,function(){return e.Qi=Date.now(),t()}),this.qi*=this.Li,this.qi<this.Mi&&(this.qi=this.Mi),this.qi>this.Bi&&(this.qi=this.Bi)},Nl.prototype.Gi=function(){null!==this.Ui&&(this.Ui.skipDelay(),this.Ui=null)},Nl.prototype.cancel=function(){null!==this.Ui&&(this.Ui.cancel(),this.Ui=null)},Nl.prototype.Wi=function(){return(Math.random()-.5)*this.qi},Nl),I=(Sl.prototype.tr=function(){return 1===this.state||2===this.state||4===this.state},Sl.prototype.er=function(){return 2===this.state},Sl.prototype.start=function(){3!==this.state?this.auth():this.nr()},Sl.prototype.stop=function(){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return this.tr()?[4,this.close(0)]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})})},Sl.prototype.sr=function(){this.state=0,this.Zi.reset()},Sl.prototype.ir=function(){var t=this;this.er()&&null===this.Xi&&(this.Xi=this.Se.enqueueAfterDelay(this.zi,6e4,function(){return t.rr()}))},Sl.prototype.cr=function(t){this.ur(),this.stream.send(t)},Sl.prototype.rr=function(){return y(this,void 0,void 0,function(){return g(this,function(t){return this.er()?[2,this.close(0)]:[2]})})},Sl.prototype.ur=function(){this.Xi&&(this.Xi.cancel(),this.Xi=null)},Sl.prototype.close=function(e,n){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return this.ur(),this.Zi.cancel(),this.Yi++,3!==e?this.Zi.reset():n&&n.code===Dr.RESOURCE_EXHAUSTED?(Or(n.toString()),Or("Using maximum backoff delay to prevent overloading the backend."),this.Zi.Ki()):n&&n.code===Dr.UNAUTHENTICATED&&this.Ji.invalidateToken(),null!==this.stream&&(this.ar(),this.stream.close(),this.stream=null),this.state=e,[4,this.listener.Ri(n)];case 1:return t.sent(),[2]}})})},Sl.prototype.ar=function(){},Sl.prototype.auth=function(){var n=this;this.state=1;var t=this.hr(this.Yi),e=this.Yi;this.Ji.getToken().then(function(t){n.Yi===e&&n.lr(t)},function(e){t(function(){var t=new Ar(Dr.UNKNOWN,"Fetching auth token failed: "+e.message);return n.dr(t)})})},Sl.prototype.lr=function(t){var e=this,n=this.hr(this.Yi);this.stream=this.wr(t),this.stream.Ii(function(){n(function(){return e.state=2,e.listener.Ii()})}),this.stream.Ri(function(t){n(function(){return e.dr(t)})}),this.stream.onMessage(function(t){n(function(){return e.onMessage(t)})})},Sl.prototype.nr=function(){var t=this;this.state=4,this.Zi.ji(function(){return y(t,void 0,void 0,function(){return g(this,function(t){return this.state=0,this.start(),[2]})})})},Sl.prototype.dr=function(t){return xr("PersistentStream","close with error: "+t),this.stream=null,this.close(3,t)},Sl.prototype.hr=function(e){var n=this;return function(t){n.Se.enqueueAndForget(function(){return n.Yi===e?t():(xr("PersistentStream","stream callback skipped by getCloseGuardedDispatcher."),Promise.resolve())})}},Sl),ml=(n(_l,yl=I),_l.prototype.wr=function(t){return this.Hi.$i("Listen",t)},_l.prototype.onMessage=function(t){this.Zi.reset();var e=function(t,e){if("targetChange"in e){e.targetChange;var n="NO_CHANGE"===(o=e.targetChange.targetChangeType||"NO_CHANGE")?0:"ADD"===o?1:"REMOVE"===o?2:"CURRENT"===o?3:"RESET"===o?4:Mr(),r=e.targetChange.targetIds||[],i=(s=e.targetChange.resumeToken,t.I?(Fr(void 0===s||"string"==typeof s),ni.fromBase64String(s||"")):(Fr(void 0===s||s instanceof Uint8Array),ni.fromUint8Array(s||new Uint8Array))),o=(a=e.targetChange.cause)&&(u=void 0===(c=a).code?Dr.UNKNOWN:Ss(c.code),new Ar(u,c.message||"")),s=new Hs(n,r,i,o||null)}else if("documentChange"in e){e.documentChange,(n=e.documentChange).document,n.document.name,n.document.updateTime;var r=la(t,n.document.name),i=aa(n.document.updateTime),a=new Ri({mapValue:{fields:n.document.fields}}),u=(o=Oi.newFoundDocument(r,i,a),n.targetIds||[]),c=n.removedTargetIds||[];s=new Qs(u,c,o.key,o)}else if("documentDelete"in e)e.documentDelete,(n=e.documentDelete).document,r=la(t,n.document),i=n.readTime?aa(n.readTime):Gr.min(),a=Oi.newNoDocument(r,i),o=n.removedTargetIds||[],s=new Qs([],o,a.key,a);else if("documentRemove"in e)e.documentRemove,(n=e.documentRemove).document,r=la(t,n.document),i=n.removedTargetIds||[],s=new Qs([],i,r,null);else{if(!("filter"in e))return Mr();e.filter;e=e.filter;e.targetId,n=e.count||0,r=new gs(n),i=e.targetId,s=new zs(i,r)}return s}(this.R,t),t=function(t){if(!("targetChange"in t))return Gr.min();t=t.targetChange;return(!t.targetIds||!t.targetIds.length)&&t.readTime?aa(t.readTime):Gr.min()}(t);return this.listener._r(e,t)},_l.prototype.mr=function(t){var e,n,r,i={};i.database=pa(this.R),i.addTarget=(e=this.R,(r=Ui(r=(n=t).target)?{documents:wa(e,r)}:{query:Ia(e,r)}).targetId=n.targetId,0<n.resumeToken.approximateByteSize()?r.resumeToken=sa(e,n.resumeToken):0<n.snapshotVersion.compareTo(Gr.min())&&(r.readTime=oa(e,n.snapshotVersion.toTimestamp())),r);var o,t=(this.R,o=t,null==(t=function(){switch(o.purpose){case 0:return null;case 1:return"existence-filter-mismatch";case 2:return"limbo-document";default:return Mr()}}())?null:{"goog-listen-tags":t});t&&(i.labels=t),this.cr(i)},_l.prototype.yr=function(t){var e={};e.database=pa(this.R),e.removeTarget=t,this.cr(e)},_l),vl=(n(Tl,pl=I),Object.defineProperty(Tl.prototype,"pr",{get:function(){return this.gr},enumerable:!1,configurable:!0}),Tl.prototype.start=function(){this.gr=!1,this.lastStreamToken=void 0,pl.prototype.start.call(this)},Tl.prototype.ar=function(){this.gr&&this.Er([])},Tl.prototype.wr=function(t){return this.Hi.$i("Write",t)},Tl.prototype.onMessage=function(t){if(Fr(!!t.streamToken),this.lastStreamToken=t.streamToken,this.gr){this.Zi.reset();var e=(n=t.writeResults,r=t.commitTime,n&&0<n.length?(Fr(void 0!==r),n.map(function(t){return n=r,(t=(e=t).updateTime?aa(e.updateTime):aa(n)).isEqual(Gr.min())&&(t=aa(n)),new Zo(t,e.transformResults||[]);var e,n})):[]),n=aa(t.commitTime);return this.listener.Tr(n,e)}var n,r;return Fr(!t.writeResults||0===t.writeResults.length),this.gr=!0,this.listener.Ir()},Tl.prototype.Ar=function(){var t={};t.database=pa(this.R),this.cr(t)},Tl.prototype.Er=function(t){var e=this,t={streamToken:this.lastStreamToken,writes:t.map(function(t){return va(e.R,t)})};this.cr(t)},Tl),bl=(n(El,dl=function(){}),El.prototype.br=function(){if(this.Rr)throw new Ar(Dr.FAILED_PRECONDITION,"The client has already been terminated.")},El.prototype.Ni=function(e,n,r){var i=this;return this.br(),this.credentials.getToken().then(function(t){return i.Hi.Ni(e,n,r,t)}).catch(function(t){throw"FirebaseError"===t.name?(t.code===Dr.UNAUTHENTICATED&&i.credentials.invalidateToken(),t):new Ar(Dr.UNKNOWN,t.toString())})},El.prototype.Oi=function(e,n,r){var i=this;return this.br(),this.credentials.getToken().then(function(t){return i.Hi.Oi(e,n,r,t)}).catch(function(t){throw"FirebaseError"===t.name?(t.code===Dr.UNAUTHENTICATED&&i.credentials.invalidateToken(),t):new Ar(Dr.UNKNOWN,t.toString())})},El.prototype.terminate=function(){this.Rr=!0},El),wl=(Il.prototype.Sr=function(){var t=this;0===this.vr&&(this.Dr("Unknown"),this.Pr=this.asyncQueue.enqueueAfterDelay("online_state_timeout",1e4,function(){return t.Pr=null,t.Cr("Backend didn't respond within 10 seconds."),t.Dr("Offline"),Promise.resolve()}))},Il.prototype.Nr=function(t){"Online"===this.state?this.Dr("Unknown"):(this.vr++,1<=this.vr&&(this.Fr(),this.Cr("Connection failed 1 times. Most recent error: "+t.toString()),this.Dr("Offline")))},Il.prototype.set=function(t){this.Fr(),this.vr=0,"Online"===t&&(this.Vr=!1),this.Dr(t)},Il.prototype.Dr=function(t){t!==this.state&&(this.state=t,this.onlineStateHandler(t))},Il.prototype.Cr=function(t){t="Could not reach Cloud Firestore backend. "+t+"\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.";this.Vr?(Or(t),this.Vr=!1):xr("OnlineStateTracker",t)},Il.prototype.Fr=function(){null!==this.Pr&&(this.Pr.cancel(),this.Pr=null)},Il);function Il(t,e){this.asyncQueue=t,this.onlineStateHandler=e,this.state="Unknown",this.vr=0,this.Pr=null,this.Vr=!0}function El(t,e,n){var r=this;return(r=dl.call(this)||this).credentials=t,r.Hi=e,r.R=n,r.Rr=!1,r}function Tl(t,e,n,r,i){var o=this;return(o=pl.call(this,t,"write_stream_connection_backoff","write_stream_idle",e,n,i)||this).R=r,o.gr=!1,o}function _l(t,e,n,r,i){var o=this;return(o=yl.call(this,t,"listen_stream_connection_backoff","listen_stream_idle",e,n,i)||this).R=r,o}function Sl(t,e,n,r,i,o){this.Se=t,this.zi=n,this.Hi=r,this.Ji=i,this.listener=o,this.state=0,this.Yi=0,this.Xi=null,this.stream=null,this.Zi=new gl(t,e)}function Nl(t,e,n,r,i){void 0===n&&(n=1e3),void 0===r&&(r=1.5),void 0===i&&(i=6e4),this.Se=t,this.timerId=e,this.Mi=n,this.Li=r,this.Bi=i,this.qi=0,this.Ui=null,this.Qi=Date.now(),this.reset()}function Dl(r){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:if(!Pl(r))return[3,4];e=0,n=r.Mr,t.label=1;case 1:return e<n.length?[4,(0,n[e])(!0)]:[3,4];case 2:t.sent(),t.label=3;case 3:return e++,[3,1];case 4:return[2]}})})}function Al(r){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:e=0,n=r.Mr,t.label=1;case 1:return e<n.length?[4,(0,n[e])(!1)]:[3,4];case 2:t.sent(),t.label=3;case 3:return e++,[3,1];case 4:return[2]}})})}function kl(t,e){t.Or.has(e.targetId)||(t.Or.set(e.targetId,e),Ll(t)?Ol(t):Gl(t).er()&&Rl(t,e))}function Cl(t,e){var n=t,t=Gl(n);n.Or.delete(e),t.er()&&xl(n,e),0===n.Or.size&&(t.er()?t.ir():Pl(n)&&n.Br.set("Unknown"))}function Rl(t,e){t.qr.U(e.targetId),Gl(t).mr(e)}function xl(t,e){t.qr.U(e),Gl(t).yr(e)}function Ol(e){e.qr=new Ys({getRemoteKeysForTarget:function(t){return e.remoteSyncer.getRemoteKeysForTarget(t)},lt:function(t){return e.Or.get(t)||null}}),Gl(e).start(),e.Br.Sr()}function Ll(t){return Pl(t)&&!Gl(t).tr()&&0<t.Or.size}function Pl(t){return 0===t.$r.size}function Ml(t){t.qr=void 0}function Fl(s,a,u){return y(this,void 0,void 0,function(){var n,o;return g(this,function(t){switch(t.label){case 0:if(s.Br.set("Online"),!(a instanceof Hs&&2===a.state&&a.cause))return[3,6];t.label=1;case 1:return t.trys.push([1,3,,5]),[4,function(o,s){return y(this,void 0,void 0,function(){var e,n,r,i;return g(this,function(t){switch(t.label){case 0:e=s.cause,n=0,r=s.targetIds,t.label=1;case 1:return n<r.length?(i=r[n],o.Or.has(i)?[4,o.remoteSyncer.rejectListen(i,e)]:[3,3]):[3,5];case 2:t.sent(),o.Or.delete(i),o.qr.removeTarget(i),t.label=3;case 3:t.label=4;case 4:return n++,[3,1];case 5:return[2]}})})}(s,a)];case 2:return t.sent(),[3,5];case 3:return n=t.sent(),xr("RemoteStore","Failed to remove targets %s: %s ",a.targetIds.join(","),n),[4,Vl(s,n)];case 4:return t.sent(),[3,5];case 5:return[3,13];case 6:if(a instanceof Qs?s.qr.X(a):a instanceof zs?s.qr.rt(a):s.qr.et(a),u.isEqual(Gr.min()))return[3,13];t.label=7;case 7:return t.trys.push([7,11,,13]),[4,nh(s.localStore)];case 8:return o=t.sent(),0<=u.compareTo(o)?[4,(i=u,(e=(r=s).qr.ut(i)).targetChanges.forEach(function(t,e){var n;0<t.resumeToken.approximateByteSize()&&((n=r.Or.get(e))&&r.Or.set(e,n.withResumeToken(t.resumeToken,i)))}),e.targetMismatches.forEach(function(t){var e=r.Or.get(t);e&&(r.Or.set(t,e.withResumeToken(ni.EMPTY_BYTE_STRING,e.snapshotVersion)),xl(r,t),e=new Tu(e.target,t,1,e.sequenceNumber),Rl(r,e))}),r.remoteSyncer.applyRemoteEvent(e))]:[3,10];case 9:t.sent(),t.label=10;case 10:return[3,13];case 11:return xr("RemoteStore","Failed to raise snapshot:",o=t.sent()),[4,Vl(s,o)];case 12:return t.sent(),[3,13];case 13:return[2]}var r,i,e})})}function Vl(n,r,i){return y(this,void 0,void 0,function(){var e=this;return g(this,function(t){switch(t.label){case 0:if(!lu(r))throw r;return n.$r.add(1),[4,Al(n)];case 1:return t.sent(),n.Br.set("Offline"),i=i||function(){return nh(n.localStore)},n.asyncQueue.enqueueRetryable(function(){return y(e,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return xr("RemoteStore","Retrying IndexedDB access"),[4,i()];case 1:return t.sent(),n.$r.delete(1),[4,Dl(n)];case 2:return t.sent(),[2]}})})}),[2]}})})}function Ul(e,n){return n().catch(function(t){return Vl(e,t,n)})}function ql(u){return y(this,void 0,void 0,function(){var i,o,s,a;return g(this,function(t){switch(t.label){case 0:o=Ql(i=u),s=0<i.kr.length?i.kr[i.kr.length-1].batchId:-1,t.label=1;case 1:if(!(Pl(i)&&i.kr.length<10))return[3,7];t.label=2;case 2:return t.trys.push([2,4,,6]),[4,(e=i.localStore,n=s,(r=e).persistence.runTransaction("Get next mutation batch","readonly",function(t){return void 0===n&&(n=-1),r._n.getNextMutationBatchAfterBatchId(t,n)}))];case 3:return null===(a=t.sent())?(0===i.kr.length&&o.ir(),[3,7]):(s=a.batchId,function(t,e){t.kr.push(e);t=Ql(t);t.er()&&t.pr&&t.Er(e.mutations)}(i,a),[3,6]);case 4:return a=t.sent(),[4,Vl(i,a)];case 5:return t.sent(),[3,6];case 6:return[3,1];case 7:return Bl(i)&&jl(i),[2]}var e,n,r})})}function Bl(t){return Pl(t)&&!Ql(t).tr()&&0<t.kr.length}function jl(t){Ql(t).start()}function Kl(n,r){return y(this,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=n,r?(e.$r.delete(2),[4,Dl(e)]):[3,2];case 1:return t.sent(),[3,5];case 2:return r?[3,4]:(e.$r.add(2),[4,Al(e)]);case 3:t.sent(),e.Br.set("Unknown"),t.label=4;case 4:t.label=5;case 5:return[2]}})})}function Gl(n){var t,e,r,i=this;return n.Ur||(n.Ur=(t=n.datastore,e=n.asyncQueue,r={Ii:function(n){return y(this,void 0,void 0,function(){return g(this,function(t){return n.Or.forEach(function(t,e){Rl(n,t)}),[2]})})}.bind(null,n),Ri:function(e,n){return y(this,void 0,void 0,function(){return g(this,function(t){return Ml(e),Ll(e)?(e.Br.Nr(n),Ol(e)):e.Br.set("Unknown"),[2]})})}.bind(null,n),_r:Fl.bind(null,n)},t.br(),new ml(e,t.Hi,t.credentials,t.R,r)),n.Mr.push(function(e){return y(i,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return e?(n.Ur.sr(),Ll(n)?Ol(n):n.Br.set("Unknown"),[3,3]):[3,1];case 1:return[4,n.Ur.stop()];case 2:t.sent(),Ml(n),t.label=3;case 3:return[2]}})})})),n.Ur}function Ql(n){var t,e,r,i=this;return n.Qr||(n.Qr=(t=n.datastore,e=n.asyncQueue,r={Ii:function(e){return y(this,void 0,void 0,function(){return g(this,function(t){return Ql(e).Ar(),[2]})})}.bind(null,n),Ri:function(e,n){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return n&&Ql(e).pr?[4,function(r,i){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return _s(n=i.code)&&n!==Dr.ABORTED?(e=r.kr.shift(),Ql(r).sr(),[4,Ul(r,function(){return r.remoteSyncer.rejectFailedWrite(e.batchId,i)})]):[3,3];case 1:return t.sent(),[4,ql(r)];case 2:t.sent(),t.label=3;case 3:return[2]}})})}(e,n)]:[3,2];case 1:t.sent(),t.label=2;case 2:return Bl(e)&&jl(e),[2]}})})}.bind(null,n),Ir:function(o){return y(this,void 0,void 0,function(){var e,n,r,i;return g(this,function(t){for(e=Ql(o),n=0,r=o.kr;n<r.length;n++)i=r[n],e.Er(i.mutations);return[2]})})}.bind(null,n),Tr:function(r,i,o){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return e=r.kr.shift(),n=Eu.from(e,i,o),[4,Ul(r,function(){return r.remoteSyncer.applySuccessfulWrite(n)})];case 1:return t.sent(),[4,ql(r)];case 2:return t.sent(),[2]}})})}.bind(null,n)},t.br(),new vl(e,t.Hi,t.credentials,t.R,r)),n.Mr.push(function(e){return y(i,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return e?(n.Qr.sr(),[4,ql(n)]):[3,2];case 1:return t.sent(),[3,4];case 2:return[4,n.Qr.stop()];case 3:t.sent(),0<n.kr.length&&(xr("RemoteStore","Stopping write stream with "+n.kr.length+" pending writes"),n.kr=[]),t.label=4;case 4:return[2]}})})})),n.Qr}var zl=(Hl.createAndSchedule=function(t,e,n,r,i){i=new Hl(t,e,Date.now()+n,r,i);return i.start(n),i},Hl.prototype.start=function(t){var e=this;this.timerHandle=setTimeout(function(){return e.handleDelayElapsed()},t)},Hl.prototype.skipDelay=function(){return this.handleDelayElapsed()},Hl.prototype.cancel=function(t){null!==this.timerHandle&&(this.clearTimeout(),this.deferred.reject(new Ar(Dr.CANCELLED,"Operation cancelled"+(t?": "+t:""))))},Hl.prototype.handleDelayElapsed=function(){var e=this;this.asyncQueue.enqueueAndForget(function(){return null!==e.timerHandle?(e.clearTimeout(),e.op().then(function(t){return e.deferred.resolve(t)})):Promise.resolve()})},Hl.prototype.clearTimeout=function(){null!==this.timerHandle&&(this.removalCallback(this),clearTimeout(this.timerHandle),this.timerHandle=null)},Hl);function Hl(t,e,n,r,i){this.asyncQueue=t,this.timerId=e,this.targetTimeMs=n,this.op=r,this.removalCallback=i,this.deferred=new Za,this.then=this.deferred.promise.then.bind(this.deferred.promise),this.deferred.promise.catch(function(t){})}function Wl(t,e){if(Or("AsyncQueue",e+": "+t),lu(t))return new Ar(Dr.UNAVAILABLE,e+": "+t);throw t}function Yl(){this.queries=new Sc(ko,Ao),this.onlineState="Unknown",this.Gr=new Set}var Xl=(nf.emptySet=function(t){return new nf(t.comparator)},nf.prototype.has=function(t){return null!=this.keyedMap.get(t)},nf.prototype.get=function(t){return this.keyedMap.get(t)},nf.prototype.first=function(){return this.sortedSet.minKey()},nf.prototype.last=function(){return this.sortedSet.maxKey()},nf.prototype.isEmpty=function(){return this.sortedSet.isEmpty()},nf.prototype.indexOf=function(t){t=this.keyedMap.get(t);return t?this.sortedSet.indexOf(t):-1},Object.defineProperty(nf.prototype,"size",{get:function(){return this.sortedSet.size},enumerable:!1,configurable:!0}),nf.prototype.forEach=function(n){this.sortedSet.inorderTraversal(function(t,e){return n(t),!1})},nf.prototype.add=function(t){var e=this.delete(t.key);return e.copy(e.keyedMap.insert(t.key,t),e.sortedSet.insert(t,null))},nf.prototype.delete=function(t){var e=this.get(t);return e?this.copy(this.keyedMap.remove(t),this.sortedSet.remove(e)):this},nf.prototype.isEqual=function(t){if(!(t instanceof nf))return!1;if(this.size!==t.size)return!1;for(var e=this.sortedSet.getIterator(),n=t.sortedSet.getIterator();e.hasNext();){var r=e.getNext().key,i=n.getNext().key;if(!r.isEqual(i))return!1}return!0},nf.prototype.toString=function(){var e=[];return this.forEach(function(t){e.push(t.toString())}),0===e.length?"DocumentSet ()":"DocumentSet (\n  "+e.join("  \n")+"\n)"},nf.prototype.copy=function(t,e){var n=new nf;return n.comparator=this.comparator,n.keyedMap=t,n.sortedSet=e,n},nf),Jl=(ef.prototype.track=function(t){var e=t.doc.key,n=this.Kr.get(e);!n||0!==t.type&&3===n.type?this.Kr=this.Kr.insert(e,t):3===t.type&&1!==n.type?this.Kr=this.Kr.insert(e,{type:n.type,doc:t.doc}):2===t.type&&2===n.type?this.Kr=this.Kr.insert(e,{type:2,doc:t.doc}):2===t.type&&0===n.type?this.Kr=this.Kr.insert(e,{type:0,doc:t.doc}):1===t.type&&0===n.type?this.Kr=this.Kr.remove(e):1===t.type&&2===n.type?this.Kr=this.Kr.insert(e,{type:1,doc:n.doc}):0===t.type&&1===n.type?this.Kr=this.Kr.insert(e,{type:2,doc:t.doc}):Mr()},ef.prototype.jr=function(){var n=[];return this.Kr.inorderTraversal(function(t,e){n.push(e)}),n},ef),$l=(tf.fromInitialDocuments=function(t,e,n,r){var i=[];return e.forEach(function(t){i.push({type:0,doc:t})}),new tf(t,e,Xl.emptySet(e),i,n,r,!0,!1)},Object.defineProperty(tf.prototype,"hasPendingWrites",{get:function(){return!this.mutatedKeys.isEmpty()},enumerable:!1,configurable:!0}),tf.prototype.isEqual=function(t){if(!(this.fromCache===t.fromCache&&this.syncStateChanged===t.syncStateChanged&&this.mutatedKeys.isEqual(t.mutatedKeys)&&Ao(this.query,t.query)&&this.docs.isEqual(t.docs)&&this.oldDocs.isEqual(t.oldDocs)))return!1;var e=this.docChanges,n=t.docChanges;if(e.length!==n.length)return!1;for(var r=0;r<e.length;r++)if(e[r].type!==n[r].type||!e[r].doc.isEqual(n[r].doc))return!1;return!0},tf),Zl=function(){this.Wr=void 0,this.listeners=[]};function tf(t,e,n,r,i,o,s,a){this.query=t,this.docs=e,this.oldDocs=n,this.docChanges=r,this.mutatedKeys=i,this.fromCache=o,this.syncStateChanged=s,this.excludesMetadataChanges=a}function ef(){this.Kr=new Ns(mi.comparator)}function nf(n){this.comparator=n?function(t,e){return n(t,e)||mi.comparator(t.key,e.key)}:function(t,e){return mi.comparator(t.key,e.key)},this.keyedMap=Vs,this.sortedSet=new Ns(this.comparator)}function rf(s,a){return y(this,void 0,void 0,function(){var e,n,r,i,o;return g(this,function(t){switch(t.label){case 0:if(e=s,n=a.query,r=!1,(i=e.queries.get(n))||(r=!0,i=new Zl),!r)return[3,4];t.label=1;case 1:return t.trys.push([1,3,,4]),o=i,[4,e.onListen(n)];case 2:return o.Wr=t.sent(),[3,4];case 3:return o=t.sent(),o=Wl(o,"Initialization of query '"+Co(a.query)+"' failed"),[2,void a.onError(o)];case 4:return e.queries.set(n,i),i.listeners.push(a),a.zr(e.onlineState),i.Wr&&a.Hr(i.Wr)&&sf(e),[2]}})})}function of(s,a){return y(this,void 0,void 0,function(){var e,n,r,i,o;return g(this,function(t){return e=s,n=a.query,r=!1,(i=e.queries.get(n))&&0<=(o=i.listeners.indexOf(a))&&(i.listeners.splice(o,1),r=0===i.listeners.length),r?[2,(e.queries.delete(n),e.onUnlisten(n))]:[2]})})}function sf(t){t.Gr.forEach(function(t){t.next()})}var af=(pf.prototype.Hr=function(t){if(!this.options.includeMetadataChanges){for(var e=[],n=0,r=t.docChanges;n<r.length;n++){var i=r[n];3!==i.type&&e.push(i)}t=new $l(t.query,t.docs,t.oldDocs,e,t.mutatedKeys,t.fromCache,t.syncStateChanged,!0)}var o=!1;return this.Yr?this.Zr(t)&&(this.Jr.next(t),o=!0):this.eo(t,this.onlineState)&&(this.no(t),o=!0),this.Xr=t,o},pf.prototype.onError=function(t){this.Jr.error(t)},pf.prototype.zr=function(t){this.onlineState=t;var e=!1;return this.Xr&&!this.Yr&&this.eo(this.Xr,t)&&(this.no(this.Xr),e=!0),e},pf.prototype.eo=function(t,e){if(!t.fromCache)return!0;var n="Offline"!==e;return!(this.options.so&&n||t.docs.isEmpty()&&"Offline"!==e)},pf.prototype.Zr=function(t){if(0<t.docChanges.length)return!0;var e=this.Xr&&this.Xr.hasPendingWrites!==t.hasPendingWrites;return!(!t.syncStateChanged&&!e)&&!0===this.options.includeMetadataChanges},pf.prototype.no=function(t){t=$l.fromInitialDocuments(t.query,t.docs,t.mutatedKeys,t.fromCache),this.Yr=!0,this.Jr.next(t)},pf),uf=(df.prototype.io=function(){return"metadata"in this.payload},df),cf=(ff.prototype.qn=function(t){return la(this.R,t)},ff.prototype.Un=function(t){return t.metadata.exists?ma(this.R,t.document,!1):Oi.newNoDocument(this.qn(t.metadata.name),this.Qn(t.metadata.readTime))},ff.prototype.Qn=aa,ff),hf=(lf.prototype.oo=function(t){this.progress.bytesLoaded+=t.byteLength;var e=this.progress.documentsLoaded;return t.payload.namedQuery?this.queries.push(t.payload.namedQuery):t.payload.documentMetadata?(this.documents.push({metadata:t.payload.documentMetadata}),t.payload.documentMetadata.exists||++e):t.payload.document&&(this.documents[this.documents.length-1].document=t.payload.document,++e),e!==this.progress.documentsLoaded?(this.progress.documentsLoaded=e,Object.assign({},this.progress)):null},lf.prototype.co=function(t){for(var e=new Map,n=new cf(this.R),r=0,i=t;r<i.length;r++){var o=i[r];if(o.metadata.queries)for(var s=n.qn(o.metadata.name),a=0,u=o.metadata.queries;a<u.length;a++){var c=u[a],h=(e.get(c)||Bs()).add(s);e.set(c,h)}}return e},lf.prototype.complete=function(){return y(this,void 0,void 0,function(){var e,n,r,i;return g(this,function(t){switch(t.label){case 0:return[4,function(l,f,d,p){return y(this,void 0,void 0,function(){var n,r,i,o,e,s,a,u,c,h;return g(this,function(t){switch(t.label){case 0:for(n=l,r=Bs(),i=Ps,o=Us,e=0,s=d;e<s.length;e++)a=s[e],u=f.qn(a.metadata.name),a.document&&(r=r.add(u)),i=i.insert(u,f.Un(a)),o=o.insert(u,f.Qn(a.metadata.readTime));return c=n.$n.newChangeBuffer({trackRemovals:!0}),[4,oh(n,No(bo($r.fromString("__bundle__/docs/"+p))))];case 1:return h=t.sent(),[2,n.persistence.runTransaction("Apply bundle documents","readwrite",function(e){return ih(e,c,i,Gr.min(),o).next(function(t){return c.apply(e),t}).next(function(t){return n.qe.removeMatchingKeysForTargetId(e,h.targetId).next(function(){return n.qe.addMatchingKeys(e,r,h.targetId)}).next(function(){return n.Mn.En(e,t)}).next(function(){return t})})})]}})})}(this.localStore,new cf(this.R),this.documents,this.ro.id)];case 1:e=t.sent(),n=this.co(this.documents),r=0,i=this.queries,t.label=2;case 2:return r<i.length?(i=i[r],[4,function(e,i,o){return void 0===o&&(o=Bs()),y(this,void 0,void 0,function(){var n,r;return g(this,function(t){switch(t.label){case 0:return[4,oh(e,No(Fu(i.bundledQuery)))];case 1:return n=t.sent(),[2,(r=e).persistence.runTransaction("Save named query","readwrite",function(t){var e=aa(i.readTime);if(0<=n.snapshotVersion.compareTo(e))return r.Qe.saveNamedQuery(t,i);e=n.withResumeToken(ni.EMPTY_BYTE_STRING,e);return r.Fn=r.Fn.insert(e.targetId,e),r.qe.updateTargetData(t,e).next(function(){return r.qe.removeMatchingKeysForTargetId(t,n.targetId)}).next(function(){return r.qe.addMatchingKeys(t,o,n.targetId)}).next(function(){return r.Qe.saveNamedQuery(t,i)})})]}})})}(this.localStore,i,n.get(i.name))]):[3,5];case 3:t.sent(),t.label=4;case 4:return r++,[3,2];case 5:return[2,(this.progress.taskState="Success",new Gc(Object.assign({},this.progress),e))]}})})},lf);function lf(t,e,n){this.ro=t,this.localStore=e,this.R=n,this.queries=[],this.documents=[],this.progress=yf(t)}function ff(t){this.R=t}function df(t,e){this.payload=t,this.byteLength=e}function pf(t,e,n){this.query=t,this.Jr=e,this.Yr=!1,this.Xr=null,this.onlineState="Unknown",this.options=n||{}}function yf(t){return{taskState:"Running",documentsLoaded:0,bytesLoaded:0,totalDocuments:t.totalDocuments,totalBytes:t.totalBytes}}var gf=function(t){this.key=t},mf=function(t){this.key=t},vf=(Object.defineProperty(Tf.prototype,"wo",{get:function(){return this.uo},enumerable:!1,configurable:!0}),Tf.prototype._o=function(t,e){var s=this,a=e?e.mo:new Jl,u=(e||this).fo,c=(e||this).mutatedKeys,h=u,l=!1,f=wo(this.query)&&u.size===this.query.limit?u.last():null,d=Io(this.query)&&u.size===this.query.limit?u.first():null;if(t.inorderTraversal(function(t,e){var n=u.get(t),r=Ro(s.query,e)?e:null,i=!!n&&s.mutatedKeys.has(n.key),o=!!r&&(r.hasLocalMutations||s.mutatedKeys.has(r.key)&&r.hasCommittedMutations),e=!1;n&&r?n.data.isEqual(r.data)?i!==o&&(a.track({type:3,doc:r}),e=!0):s.yo(n,r)||(a.track({type:2,doc:r}),e=!0,(f&&0<s.lo(r,f)||d&&s.lo(r,d)<0)&&(l=!0)):!n&&r?(a.track({type:0,doc:r}),e=!0):n&&!r&&(a.track({type:1,doc:n}),e=!0,(f||d)&&(l=!0)),e&&(c=r?(h=h.add(r),o?c.add(t):c.delete(t)):(h=h.delete(t),c.delete(t)))}),wo(this.query)||Io(this.query))for(;h.size>this.query.limit;){var n=wo(this.query)?h.last():h.first(),h=h.delete(n.key),c=c.delete(n.key);a.track({type:1,doc:n})}return{fo:h,mo:a,Nn:l,mutatedKeys:c}},Tf.prototype.yo=function(t,e){return t.hasLocalMutations&&e.hasCommittedMutations&&!e.hasLocalMutations},Tf.prototype.applyChanges=function(t,e,n){var o=this,r=this.fo;this.fo=t.fo,this.mutatedKeys=t.mutatedKeys;var i=t.mo.jr();i.sort(function(t,e){return r=t.type,i=e.type,n(r)-n(i)||o.lo(t.doc,e.doc);function n(t){switch(t){case 0:return 1;case 2:case 3:return 2;case 1:return 0;default:return Mr()}}var r,i}),this.po(n);var s=e?this.Eo():[],n=0===this.ho.size&&this.current?1:0,e=n!==this.ao;return this.ao=n,0!==i.length||e?{snapshot:new $l(this.query,t.fo,r,i,t.mutatedKeys,0==n,e,!1),To:s}:{To:s}},Tf.prototype.zr=function(t){return this.current&&"Offline"===t?(this.current=!1,this.applyChanges({fo:this.fo,mo:new Jl,mutatedKeys:this.mutatedKeys,Nn:!1},!1)):{To:[]}},Tf.prototype.Io=function(t){return!this.uo.has(t)&&!!this.fo.has(t)&&!this.fo.get(t).hasLocalMutations},Tf.prototype.po=function(t){var e=this;t&&(t.addedDocuments.forEach(function(t){return e.uo=e.uo.add(t)}),t.modifiedDocuments.forEach(function(t){}),t.removedDocuments.forEach(function(t){return e.uo=e.uo.delete(t)}),this.current=t.current)},Tf.prototype.Eo=function(){var e=this;if(!this.current)return[];var n=this.ho;this.ho=Bs(),this.fo.forEach(function(t){e.Io(t.key)&&(e.ho=e.ho.add(t.key))});var r=[];return n.forEach(function(t){e.ho.has(t)||r.push(new mf(t))}),this.ho.forEach(function(t){n.has(t)||r.push(new gf(t))}),r},Tf.prototype.Ao=function(t){this.uo=t.Bn,this.ho=Bs();t=this._o(t.documents);return this.applyChanges(t,!0)},Tf.prototype.Ro=function(){return $l.fromInitialDocuments(this.query,this.fo,this.mutatedKeys,0===this.ao)},Tf),bf=function(t,e,n){this.query=t,this.targetId=e,this.view=n},wf=function(t){this.key=t,this.bo=!1},If=(Object.defineProperty(Ef.prototype,"isPrimaryClient",{get:function(){return!0===this.Oo},enumerable:!1,configurable:!0}),Ef);function Ef(t,e,n,r,i,o){this.localStore=t,this.remoteStore=e,this.eventManager=n,this.sharedClientState=r,this.currentUser=i,this.maxConcurrentLimboResolutions=o,this.vo={},this.Po=new Sc(ko,Ao),this.Vo=new Map,this.So=new Set,this.Do=new Ns(mi.comparator),this.Co=new Map,this.No=new ph,this.xo={},this.Fo=new Map,this.ko=sc.Yt(),this.onlineState="Unknown",this.Oo=void 0}function Tf(t,e){this.query=t,this.uo=e,this.ao=null,this.current=!1,this.ho=Bs(),this.mutatedKeys=Bs(),this.lo=xo(t),this.fo=new Xl(this.lo)}function _f(i,o,s,a){return y(this,void 0,void 0,function(){var e,n,r;return g(this,function(t){switch(t.label){case 0:return i.$o=function(t,e,n){return function(r,i,o,s){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return(e=i.view._o(o)).Nn?[4,ah(r.localStore,i.query,!1).then(function(t){t=t.documents;return i.view._o(t,e)})]:[3,2];case 1:e=t.sent(),t.label=2;case 2:return n=s&&s.targetChanges.get(i.targetId),n=i.view.applyChanges(e,r.isPrimaryClient,n),[2,(Lf(r,i.targetId,n.To),n.snapshot)]}})})}(i,t,e,n)},[4,ah(i.localStore,o,!0)];case 1:return n=t.sent(),r=new vf(o,n.Bn),e=r._o(n.documents),n=Gs.createSynthesizedTargetChangeForCurrentChange(s,a&&"Offline"!==i.onlineState),n=r.applyChanges(e,i.isPrimaryClient,n),Lf(i,s,n.To),r=new bf(o,s,r),[2,(i.Po.set(o,r),i.Vo.has(s)?i.Vo.get(s).push(o):i.Vo.set(s,[o]),n.snapshot)]}})})}function Sf(f,d,p){return y(this,void 0,void 0,function(){var s,l;return g(this,function(t){switch(t.label){case 0:l=Kf(f),t.label=1;case 1:return t.trys.push([1,5,,6]),[4,(i=l.localStore,a=d,c=i,h=Kr.now(),o=a.reduce(function(t,e){return t.add(e.key)},Bs()),c.persistence.runTransaction("Locally write mutations","readwrite",function(s){return c.Mn.pn(s,o).next(function(t){u=t;for(var e=[],n=0,r=a;n<r.length;n++){var i=r[n],o=function(t,e){for(var n=null,r=0,i=t.fieldTransforms;r<i.length;r++){var o=i[r],s=e.data.field(o.field),s=Mo(o.transform,s||null);null!=s&&(n=null==n?Ri.empty():n).set(o.field,s)}return n||null}(i,u.get(i.key));null!=o&&e.push(new hs(i.key,o,function s(t){var a=[];return Wr(t.fields||{},function(t,e){var n=new ti([t]);if(Ci(e))if(0===(e=s(e.mapValue).fields).length)a.push(n);else for(var r=0,i=e;r<i.length;r++){var o=i[r];a.push(n.child(o))}else a.push(n)}),new ei(a)}(o.toProto().mapValue),es.exists(!0)))}return c._n.addMutationBatch(s,h,e,a)})}).then(function(t){return t.applyToLocalDocumentSet(u),{batchId:t.batchId,changes:u}}))];case 2:return s=t.sent(),l.sharedClientState.addPendingMutation(s.batchId),e=l,n=s.batchId,r=p,i=(i=(i=e.xo[e.currentUser.toKey()])||new Ns(qr)).insert(n,r),e.xo[e.currentUser.toKey()]=i,[4,Mf(l,s.changes)];case 3:return t.sent(),[4,ql(l.remoteStore)];case 4:return t.sent(),[3,6];case 5:return l=t.sent(),l=Wl(l,"Failed to persist write"),p.reject(l),[3,6];case 6:return[2]}var e,n,r,i,a,u,c,h,o})})}function Nf(r,i){return y(this,void 0,void 0,function(){var n,e;return g(this,function(t){switch(t.label){case 0:n=r,t.label=1;case 1:return t.trys.push([1,4,,6]),[4,rh(n.localStore,i)];case 2:return e=t.sent(),i.targetChanges.forEach(function(t,e){e=n.Co.get(e);e&&(Fr(t.addedDocuments.size+t.modifiedDocuments.size+t.removedDocuments.size<=1),0<t.addedDocuments.size?e.bo=!0:0<t.modifiedDocuments.size?Fr(e.bo):0<t.removedDocuments.size&&(Fr(e.bo),e.bo=!1))}),[4,Mf(n,e,i)];case 3:return t.sent(),[3,6];case 4:return[4,dc(t.sent())];case 5:return t.sent(),[3,6];case 6:return[2]}})})}function Df(t,n,e){var r,t=t;(t.isPrimaryClient&&0===e||!t.isPrimaryClient&&1===e)&&(r=[],t.Po.forEach(function(t,e){e=e.view.zr(n);e.snapshot&&r.push(e.snapshot)}),function(t,i){t.onlineState=i;var o=!1;t.queries.forEach(function(t,e){for(var n=0,r=e.listeners;n<r.length;n++)r[n].zr(i)&&(o=!0)}),o&&sf(t)}(t.eventManager,n),r.length&&t.vo._r(r),t.onlineState=n,t.isPrimaryClient&&t.sharedClientState.setOnlineState(n))}function Af(s,a,u){return y(this,void 0,void 0,function(){var n,o;return g(this,function(t){switch(t.label){case 0:n=s,t.label=1;case 1:return t.trys.push([1,4,,6]),[4,(e=n.localStore,r=a,(i=e).persistence.runTransaction("Reject batch","readwrite-primary",function(e){var n;return i._n.lookupMutationBatch(e,r).next(function(t){return Fr(null!==t),n=t.keys(),i._n.removeMutationBatch(e,t)}).next(function(){return i._n.performConsistencyCheck(e)}).next(function(){return i.Mn.pn(e,n)})}))];case 2:return o=t.sent(),Rf(n,a,u),Cf(n,a),n.sharedClientState.updateMutationState(a,"rejected",u),[4,Mf(n,o)];case 3:return t.sent(),[3,6];case 4:return[4,dc(t.sent())];case 5:return t.sent(),[3,6];case 6:return[2]}var e,r,i})})}function kf(o,s){return y(this,void 0,void 0,function(){var n,r,i;return g(this,function(t){switch(t.label){case 0:Pl((n=o).remoteStore)||xr("SyncEngine","The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."),t.label=1;case 1:return t.trys.push([1,3,,4]),[4,(e=n.localStore).persistence.runTransaction("Get highest unacknowledged batch id","readonly",function(t){return e._n.getHighestUnacknowledgedBatchId(t)})];case 2:return-1===(r=t.sent())?[2,void s.resolve()]:((i=n.Fo.get(r)||[]).push(s),n.Fo.set(r,i),[3,4]);case 3:return i=t.sent(),i=Wl(i,"Initialization of waitForPendingWrites() operation failed"),s.reject(i),[3,4];case 4:return[2]}var e})})}function Cf(t,e){(t.Fo.get(e)||[]).forEach(function(t){t.resolve()}),t.Fo.delete(e)}function Rf(t,e,n){var r=t,i=r.xo[r.currentUser.toKey()];i&&((t=i.get(e))&&(n?t.reject(n):t.resolve(),i=i.remove(e)),r.xo[r.currentUser.toKey()]=i)}function xf(e,t,n){void 0===n&&(n=null),e.sharedClientState.removeLocalQueryTarget(t);for(var r=0,i=e.Vo.get(t);r<i.length;r++){var o=i[r];e.Po.delete(o),n&&e.vo.Mo(o,n)}e.Vo.delete(t),e.isPrimaryClient&&e.No.Zn(t).forEach(function(t){e.No.containsKey(t)||Of(e,t)})}function Of(t,e){t.So.delete(e.path.canonicalString());var n=t.Do.get(e);null!==n&&(Cl(t.remoteStore,n),t.Do=t.Do.remove(e),t.Co.delete(n),Pf(t))}function Lf(t,e,n){for(var r,i,o,s=0,a=n;s<a.length;s++){var u=a[s];u instanceof gf?(t.No.addReference(u.key,e),r=t,o=void 0,i=(o=(i=u).key).path.canonicalString(),r.Do.get(o)||r.So.has(i)||(xr("SyncEngine","New document in limbo: "+o),r.So.add(i),Pf(r))):u instanceof mf?(xr("SyncEngine","Document no longer in limbo: "+u.key),t.No.removeReference(u.key,e),t.No.containsKey(u.key)||Of(t,u.key)):Mr()}}function Pf(t){for(;0<t.So.size&&t.Do.size<t.maxConcurrentLimboResolutions;){var e=t.So.values().next().value;t.So.delete(e);var n=new mi($r.fromString(e)),e=t.ko.next();t.Co.set(e,new wf(n)),t.Do=t.Do.insert(n,e),kl(t.remoteStore,new Tu(No(bo(n.path)),e,2,_r.o))}}function Mf(e,s,a){return y(this,void 0,void 0,function(){var n,r,i,o;return g(this,function(t){switch(t.label){case 0:return r=[],i=[],o=[],(n=e).Po.isEmpty()?[3,3]:(n.Po.forEach(function(t,e){o.push(n.$o(e,s,a).then(function(t){t&&(n.isPrimaryClient&&n.sharedClientState.updateQueryState(e.targetId,t.fromCache?"not-current":"current"),r.push(t),t=zc.Pn(e.targetId,t),i.push(t))}))}),[4,Promise.all(o)]);case 1:return t.sent(),n.vo._r(r),[4,function(u,c){return y(this,void 0,void 0,function(){var r,e,n,i,o,s,a;return g(this,function(t){switch(t.label){case 0:r=u,t.label=1;case 1:return t.trys.push([1,3,,4]),[4,r.persistence.runTransaction("notifyLocalViewChanges","readwrite",function(n){return tu.forEach(c,function(e){return tu.forEach(e.bn,function(t){return r.persistence.referenceDelegate.addReference(n,e.targetId,t)}).next(function(){return tu.forEach(e.vn,function(t){return r.persistence.referenceDelegate.removeReference(n,e.targetId,t)})})})})];case 2:return t.sent(),[3,4];case 3:if(!lu(e=t.sent()))throw e;return xr("LocalStore","Failed to update sequence numbers: "+e),[3,4];case 4:for(n=0,i=c;n<i.length;n++)a=i[n],o=a.targetId,a.fromCache||(s=r.Fn.get(o),a=s.snapshotVersion,a=s.withLastLimboFreeSnapshotVersion(a),r.Fn=r.Fn.insert(o,a));return[2]}})})}(n.localStore,i)];case 2:t.sent(),t.label=3;case 3:return[2]}})})}function Ff(i,o){return y(this,void 0,void 0,function(){var n,r;return g(this,function(t){switch(t.label){case 0:return(n=i).currentUser.isEqual(o)?[3,3]:(xr("SyncEngine","User change. New user:",o.toKey()),[4,th(n.localStore,o)]);case 1:return r=t.sent(),n.currentUser=o,(e=n).Fo.forEach(function(t){t.forEach(function(t){t.reject(new Ar(Dr.CANCELLED,"'waitForPendingWrites' promise is rejected due to a user change."))})}),e.Fo.clear(),n.sharedClientState.handleUserChange(o,r.removedBatchIds,r.addedBatchIds),[4,Mf(n,r.Ln)];case 2:t.sent(),t.label=3;case 3:return[2]}var e})})}function Vf(a,u,c,h){return y(this,void 0,void 0,function(){var o,s;return g(this,function(t){switch(t.label){case 0:return[4,(e=(o=a).localStore,n=u,i=(r=e)._n,r.persistence.runTransaction("Lookup mutation documents","readonly",function(e){return i.jt(e,n).next(function(t){return t?r.Mn.pn(e,t):tu.resolve(null)})}))];case 1:return null===(s=t.sent())?[3,6]:"pending"!==c?[3,3]:[4,ql(o.remoteStore)];case 2:return t.sent(),[3,4];case 3:"acknowledged"===c||"rejected"===c?(Rf(o,u,h||null),Cf(o,u),o.localStore._n.Gt(u)):Mr(),t.label=4;case 4:return[4,Mf(o,s)];case 5:return t.sent(),[3,7];case 6:xr("SyncEngine","Cannot apply mutation batch with id: "+u),t.label=7;case 7:return[2]}var e,n,r,i})})}function Uf(h,l){return y(this,void 0,void 0,function(){var r,e,i,o,s,a,u,c;return g(this,function(t){switch(t.label){case 0:return jf(r=h),Kf(r),!0!==l||!0===r.Oo?[3,3]:(e=r.sharedClientState.getAllActiveQueryTargets(),[4,qf(r,e.toArray())]);case 1:return i=t.sent(),r.Oo=!0,[4,Kl(r.remoteStore,!0)];case 2:for(t.sent(),o=0,s=i;o<s.length;o++)a=s[o],kl(r.remoteStore,a);return[3,7];case 3:return!1!==l||!1===r.Oo?[3,7]:(u=[],c=Promise.resolve(),r.Vo.forEach(function(t,e){r.sharedClientState.isLocalQueryTarget(e)?u.push(e):c=c.then(function(){return xf(r,e),sh(r.localStore,e,!0)}),Cl(r.remoteStore,e)}),[4,c]);case 4:return t.sent(),[4,qf(r,u)];case 5:return t.sent(),(n=r).Co.forEach(function(t,e){Cl(n.remoteStore,e)}),n.No.ts(),n.Co=new Map,n.Do=new Ns(mi.comparator),r.Oo=!1,[4,Kl(r.remoteStore,!1)];case 6:t.sent(),t.label=7;case 7:return[2]}var n})})}function qf(d,p){return y(this,void 0,void 0,function(){var e,n,r,i,o,s,a,u,c,h,l,f;return g(this,function(t){switch(t.label){case 0:e=d,n=[],r=[],i=0,o=p,t.label=1;case 1:return i<o.length?(s=o[i],a=void 0,(u=e.Vo.get(s))&&0!==u.length?[4,oh(e.localStore,No(u[0]))]:[3,7]):[3,13];case 2:a=t.sent(),c=0,h=u,t.label=3;case 3:return c<h.length?(l=h[c],l=e.Po.get(l),[4,function(r,i){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return[4,ah((e=r).localStore,i.query,!0)];case 1:return n=t.sent(),n=i.view.Ao(n),[2,(e.isPrimaryClient&&Lf(e,i.targetId,n.To),n)]}})})}(e,l)]):[3,6];case 4:(l=t.sent()).snapshot&&r.push(l.snapshot),t.label=5;case 5:return c++,[3,3];case 6:return[3,11];case 7:return[4,uh(e.localStore,s)];case 8:return f=t.sent(),[4,oh(e.localStore,f)];case 9:return a=t.sent(),[4,_f(e,Bf(f),s,!1)];case 10:t.sent(),t.label=11;case 11:n.push(a),t.label=12;case 12:return i++,[3,1];case 13:return[2,(e.vo._r(r),n)]}})})}function Bf(t){return vo(t.path,t.collectionGroup,t.orderBy,t.filters,t.limit,"F",t.startAt,t.endAt)}function jf(t){return t.remoteStore.remoteSyncer.applyRemoteEvent=Nf.bind(null,t),t.remoteStore.remoteSyncer.getRemoteKeysForTarget=function(t,e){var n=t;if((t=n.Co.get(e))&&t.bo)return Bs().add(t.key);var r=Bs();if(!(e=n.Vo.get(e)))return r;for(var i=0,o=e;i<o.length;i++)var s=o[i],s=n.Po.get(s),r=r.unionWith(s.view.wo);return r}.bind(null,t),t.remoteStore.remoteSyncer.rejectListen=function(o,s,a){return y(this,void 0,void 0,function(){var e,n,r,i;return g(this,function(t){switch(t.label){case 0:return(e=o).sharedClientState.updateQueryState(s,"rejected",a),i=e.Co.get(s),(n=i&&i.key)?(r=(r=new Ns(mi.comparator)).insert(n,Oi.newNoDocument(n,Gr.min())),i=Bs().add(n),i=new Ks(Gr.min(),new Map,new Os(qr),r,i),[4,Nf(e,i)]):[3,2];case 1:return t.sent(),e.Do=e.Do.remove(n),e.Co.delete(s),Pf(e),[3,4];case 2:return[4,sh(e.localStore,s,!1).then(function(){return xf(e,s,a)}).catch(dc)];case 3:t.sent(),t.label=4;case 4:return[2]}})})}.bind(null,t),t.vo._r=function(t,e){for(var n=t,r=!1,i=0,o=e;i<o.length;i++){var s=o[i],a=s.query,a=n.queries.get(a);if(a){for(var u=0,c=a.listeners;u<c.length;u++)c[u].Hr(s)&&(r=!0);a.Wr=s}}r&&sf(n)}.bind(null,t.eventManager),t.vo.Mo=function(t,e,n){var r=t;if(t=r.queries.get(e))for(var i=0,o=t.listeners;i<o.length;i++)o[i].onError(n);r.queries.delete(e)}.bind(null,t.eventManager),t}function Kf(t){return t.remoteStore.remoteSyncer.applySuccessfulWrite=function(i,o){return y(this,void 0,void 0,function(){var e,n,r;return g(this,function(t){switch(t.label){case 0:e=i,n=o.batch.batchId,t.label=1;case 1:return t.trys.push([1,4,,6]),[4,eh(e.localStore,o)];case 2:return r=t.sent(),Rf(e,n,null),Cf(e,n),e.sharedClientState.updateMutationState(n,"acknowledged"),[4,Mf(e,r)];case 3:return t.sent(),[3,6];case 4:return[4,dc(t.sent())];case 5:return t.sent(),[3,6];case 6:return[2]}})})}.bind(null,t),t.remoteStore.remoteSyncer.rejectFailedWrite=Af.bind(null,t),t}function Gf(t,e,n){var r=t;!function(f,d,p){return y(this,void 0,void 0,function(){var a,u,c,h,l;return g(this,function(t){switch(t.label){case 0:return t.trys.push([0,14,,15]),[4,d.getMetadata()];case 1:return a=t.sent(),[4,(r=f.localStore,o=r,s=aa((i=a).createTime),o.persistence.runTransaction("hasNewerBundle","readonly",function(t){return o.Qe.getBundleMetadata(t,i.id)}).then(function(t){return!!t&&0<=t.createTime.compareTo(s)}))];case 2:return t.sent()?[4,d.close()]:[3,4];case 3:return[2,(t.sent(),void p._completeWith({taskState:"Success",documentsLoaded:a.totalDocuments,bytesLoaded:a.totalBytes,totalDocuments:a.totalDocuments,totalBytes:a.totalBytes}))];case 4:return p._updateProgress(yf(a)),u=new hf(a,f.localStore,d.R),[4,d.Lo()];case 5:c=t.sent(),t.label=6;case 6:return c?[4,u.oo(c)]:[3,10];case 7:return(h=t.sent())&&p._updateProgress(h),[4,d.Lo()];case 8:c=t.sent(),t.label=9;case 9:return[3,6];case 10:return[4,u.complete()];case 11:return l=t.sent(),[4,Mf(f,l.wn,void 0)];case 12:return t.sent(),[4,(r=f.localStore,e=a,(n=r).persistence.runTransaction("Save bundle","readwrite",function(t){return n.Qe.saveBundleMetadata(t,e)}))];case 13:return t.sent(),p._completeWith(l.progress),[3,15];case 14:return Lr("SyncEngine","Loading bundle failed with "+(l=t.sent())),p._failWith(l),[3,15];case 15:return[2]}var e,n,r,i,o,s})})}(r,e,n).then(function(){r.sharedClientState.notifyBundleLoaded()})}var Qf,zf,Hf=(td.prototype.initialize=function(e){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return this.R=ll(e.databaseInfo.databaseId),this.sharedClientState=this.Bo(e),this.persistence=this.qo(e),[4,this.persistence.start()];case 1:return t.sent(),this.gcScheduler=this.Uo(e),this.localStore=this.Qo(e),[2]}})})},td.prototype.Uo=function(t){return null},td.prototype.Qo=function(t){return Zc(this.persistence,new Hc,t.initialUser,this.R)},td.prototype.qo=function(t){return new wh(Eh.bs,this.R)},td.prototype.Bo=function(t){return new Qh},td.prototype.terminate=function(){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return this.gcScheduler&&this.gcScheduler.stop(),[4,this.sharedClientState.shutdown()];case 1:return t.sent(),[4,this.persistence.shutdown()];case 2:return t.sent(),[2]}})})},td),Wf=(n(Zf,zf=Hf),Zf.prototype.initialize=function(e){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return[4,zf.prototype.initialize.call(this,e)];case 1:return t.sent(),[4,hh(this.localStore)];case 2:return t.sent(),[4,this.Ko.initialize(this,e)];case 3:return t.sent(),[4,Kf(this.Ko.syncEngine)];case 4:return t.sent(),[4,ql(this.Ko.remoteStore)];case 5:return t.sent(),[2]}})})},Zf.prototype.Qo=function(t){return Zc(this.persistence,new Hc,t.initialUser,this.R)},Zf.prototype.Uo=function(t){var e=this.persistence.referenceDelegate.garbageCollector;return new gc(e,t.asyncQueue)},Zf.prototype.qo=function(t){var e=Kc(t.databaseInfo.databaseId,t.databaseInfo.persistenceKey),n=void 0!==this.cacheSizeBytes?Xu.withCacheSize(this.cacheSizeBytes):Xu.DEFAULT;return new Uc(this.synchronizeTabs,e,t.clientId,n,t.asyncQueue,cl(),hl(),this.R,this.sharedClientState,!!this.forceOwnership)},Zf.prototype.Bo=function(t){return new Qh},Zf),Yf=(n($f,Qf=Wf),$f.prototype.initialize=function(r){return y(this,void 0,void 0,function(){var e,n=this;return g(this,function(t){switch(t.label){case 0:return[4,Qf.prototype.initialize.call(this,r)];case 1:return t.sent(),e=this.Ko.syncEngine,this.sharedClientState instanceof Gh?(this.sharedClientState.syncEngine={ui:Vf.bind(null,e),ai:function(i,o,s,a){return y(this,void 0,void 0,function(){var e,n,r;return g(this,function(t){switch(t.label){case 0:return(e=i).Oo?(xr("SyncEngine","Ignoring unexpected query state notification."),[3,8]):[3,1];case 1:if(!e.Vo.has(o))return[3,8];switch(s){case"current":case"not-current":return[3,2];case"rejected":return[3,5]}return[3,7];case 2:return[4,ch(e.localStore)];case 3:return n=t.sent(),r=Ks.createSynthesizedRemoteEventForCurrentChange(o,"current"===s),[4,Mf(e,n,r)];case 4:return t.sent(),[3,8];case 5:return[4,sh(e.localStore,o,!0)];case 6:return t.sent(),xf(e,o,a),[3,8];case 7:Mr(),t.label=8;case 8:return[2]}})})}.bind(null,e),hi:function(c,h,l){return y(this,void 0,void 0,function(){var n,e,r,i,o,s,a,u;return g(this,function(t){switch(t.label){case 0:if(!(n=jf(c)).Oo)return[3,10];e=0,r=h,t.label=1;case 1:return e<r.length?(r=r[e],n.Vo.has(r)?(xr("SyncEngine","Adding an already active target "+r),[3,5]):[4,uh(n.localStore,r)]):[3,6];case 2:return i=t.sent(),[4,oh(n.localStore,i)];case 3:return o=t.sent(),[4,_f(n,Bf(i),o.targetId,!1)];case 4:t.sent(),kl(n.remoteStore,o),t.label=5;case 5:return e++,[3,1];case 6:s=function(e){return g(this,function(t){switch(t.label){case 0:return n.Vo.has(e)?[4,sh(n.localStore,e,!1).then(function(){Cl(n.remoteStore,e),xf(n,e)}).catch(dc)]:[3,2];case 1:t.sent(),t.label=2;case 2:return[2]}})},a=0,u=l,t.label=7;case 7:return a<u.length?(u=u[a],[5,s(u)]):[3,10];case 8:t.sent(),t.label=9;case 9:return a++,[3,7];case 10:return[2]}})})}.bind(null,e),fn:function(t){return t.localStore.persistence.fn()}.bind(null,e),ci:function(n){return y(this,void 0,void 0,function(){var e;return g(this,function(t){return[2,ch((e=n).localStore).then(function(t){return Mf(e,t)})]})})}.bind(null,e)},[4,this.sharedClientState.start()]):[3,3];case 2:t.sent(),t.label=3;case 3:return[4,this.persistence.He(function(e){return y(n,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return[4,Uf(this.Ko.syncEngine,e)];case 1:return t.sent(),this.gcScheduler&&(e&&!this.gcScheduler.started?this.gcScheduler.start(this.localStore):e||this.gcScheduler.stop()),[2]}})})})];case 4:return t.sent(),[2]}})})},$f.prototype.Bo=function(t){var e=cl();if(!Gh.yt(e))throw new Ar(Dr.UNIMPLEMENTED,"IndexedDB persistence is only available on platforms that support LocalStorage.");var n=Kc(t.databaseInfo.databaseId,t.databaseInfo.persistenceKey);return new Gh(e,t.asyncQueue,n,t.clientId,t.initialUser)},$f),Xf=(Jf.prototype.initialize=function(n,r){return y(this,void 0,void 0,function(){var e=this;return g(this,function(t){switch(t.label){case 0:return this.localStore?[3,2]:(this.localStore=n.localStore,this.sharedClientState=n.sharedClientState,this.datastore=this.createDatastore(r),this.remoteStore=this.createRemoteStore(r),this.eventManager=this.createEventManager(r),this.syncEngine=this.createSyncEngine(r,!n.synchronizeTabs),this.sharedClientState.onlineStateHandler=function(t){return Df(e.syncEngine,t,1)},this.remoteStore.remoteSyncer.handleCredentialChange=Ff.bind(null,this.syncEngine),[4,Kl(this.remoteStore,this.syncEngine.isPrimaryClient)]);case 1:t.sent(),t.label=2;case 2:return[2]}})})},Jf.prototype.createEventManager=function(t){return new Yl},Jf.prototype.createDatastore=function(t){var e=ll(t.databaseInfo.databaseId),n=(n=t.databaseInfo,new Xh(n));return t=t.credentials,new bl(t,n,e)},Jf.prototype.createRemoteStore=function(t){var e=this,n=this.localStore,r=this.datastore,i=t.asyncQueue,o=function(t){return Df(e.syncEngine,t,0)},t=new(Hh.yt()?Hh:zh);return new fl(n,r,i,o,t)},Jf.prototype.createSyncEngine=function(t,e){return function(t,e,n,r,i,o,s){o=new If(t,e,n,r,i,o);return s&&(o.Oo=!0),o}(this.localStore,this.remoteStore,this.eventManager,this.sharedClientState,t.initialUser,t.maxConcurrentLimboResolutions,e)},Jf.prototype.terminate=function(){return function(n){return y(this,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=n,xr("RemoteStore","RemoteStore shutting down."),e.$r.add(5),[4,Al(e)];case 1:return t.sent(),e.Lr.shutdown(),e.Br.set("Unknown"),[2]}})})}(this.remoteStore)},Jf);function Jf(){}function $f(t,e){var n=this;return(n=Qf.call(this,t,e,!1)||this).Ko=t,n.cacheSizeBytes=e,n.synchronizeTabs=!0,n}function Zf(t,e,n){var r=this;return(r=zf.call(this)||this).Ko=t,r.cacheSizeBytes=e,r.forceOwnership=n,r.synchronizeTabs=!1,r}function td(){this.synchronizeTabs=!1}function ed(n,r){void 0===r&&(r=10240);var i=0;return{read:function(){return y(this,void 0,void 0,function(){var e;return g(this,function(t){return i<n.byteLength?(e={value:n.slice(i,i+r),done:!1},[2,(i+=r,e)]):[2,{done:!0}]})})},cancel:function(){return y(this,void 0,void 0,function(){return g(this,function(t){return[2]})})},releaseLock:function(){},closed:Promise.reject("unimplemented")}}var nd=(ld.prototype.next=function(t){this.observer.next&&this.jo(this.observer.next,t)},ld.prototype.error=function(t){this.observer.error?this.jo(this.observer.error,t):console.error("Uncaught Error in snapshot listener:",t)},ld.prototype.Wo=function(){this.muted=!0},ld.prototype.jo=function(t,e){var n=this;this.muted||setTimeout(function(){n.muted||t(e)},0)},ld),rd=(hd.prototype.close=function(){return this.Go.cancel()},hd.prototype.getMetadata=function(){return y(this,void 0,void 0,function(){return g(this,function(t){return[2,this.metadata.promise]})})},hd.prototype.Lo=function(){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return[4,this.getMetadata()];case 1:return[2,(t.sent(),this.Ho())]}})})},hd.prototype.Ho=function(){return y(this,void 0,void 0,function(){var e,n,r;return g(this,function(t){switch(t.label){case 0:return[4,this.Jo()];case 1:return null===(e=t.sent())?[2,null]:(r=this.zo.decode(e),n=Number(r),isNaN(n)&&this.Yo("length string ("+r+") is not valid number"),[4,this.Xo(n)]);case 2:return r=t.sent(),[2,new uf(JSON.parse(r),e.length+n)]}})})},hd.prototype.Zo=function(){return this.buffer.findIndex(function(t){return t==="{".charCodeAt(0)})},hd.prototype.Jo=function(){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return this.Zo()<0?[4,this.tc()]:[3,3];case 1:if(t.sent())return[3,3];t.label=2;case 2:return[3,0];case 3:return 0===this.buffer.length?[2,null]:((e=this.Zo())<0&&this.Yo("Reached the end of bundle when a length string is expected."),n=this.buffer.slice(0,e),[2,(this.buffer=this.buffer.slice(e),n)])}})})},hd.prototype.Xo=function(n){return y(this,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return this.buffer.length<n?[4,this.tc()]:[3,3];case 1:t.sent()&&this.Yo("Reached the end of bundle when more is expected."),t.label=2;case 2:return[3,0];case 3:return e=this.zo.decode(this.buffer.slice(0,n)),[2,(this.buffer=this.buffer.slice(n),e)]}})})},hd.prototype.Yo=function(t){throw this.Go.cancel(),new Error("Invalid bundle format: "+t)},hd.prototype.tc=function(){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return[4,this.Go.read()];case 1:return(e=t.sent()).done||((n=new Uint8Array(this.buffer.length+e.value.length)).set(this.buffer),n.set(e.value,this.buffer.length),this.buffer=n),[2,e.done]}})})},hd),id=(cd.prototype.lookup=function(r){return y(this,void 0,void 0,function(){var e,n=this;return g(this,function(t){switch(t.label){case 0:if(this.ensureCommitNotCalled(),0<this.mutations.length)throw new Ar(Dr.INVALID_ARGUMENT,"Firestore transactions require all reads to be executed before all writes.");return[4,function(s,a){return y(this,void 0,void 0,function(){var n,e,r,i,o;return g(this,function(t){switch(t.label){case 0:return e=pa((n=s).R)+"/documents",r={documents:a.map(function(t){return ha(n.R,t)})},[4,n.Oi("BatchGetDocuments",e,r)];case 1:return r=t.sent(),i=new Map,r.forEach(function(t){var e,t=(e=n.R,"found"in(t=t)?function(t,e){Fr(!!e.found),e.found.name,e.found.updateTime;var n=la(t,e.found.name),t=aa(e.found.updateTime),e=new Ri({mapValue:{fields:e.found.fields}});return Oi.newFoundDocument(n,t,e)}(e,t):"missing"in t?function(t,e){Fr(!!e.missing),Fr(!!e.readTime);t=la(t,e.missing),e=aa(e.readTime);return Oi.newNoDocument(t,e)}(e,t):Mr());i.set(t.key.toString(),t)}),o=[],[2,(a.forEach(function(t){t=i.get(t.toString());Fr(!!t),o.push(t)}),o)]}})})}(this.datastore,r)];case 1:return[2,((e=t.sent()).forEach(function(t){return n.recordVersion(t)}),e)]}})})},cd.prototype.set=function(t,e){this.write(e.toMutation(t,this.precondition(t))),this.writtenDocs.add(t.toString())},cd.prototype.update=function(t,e){try{this.write(e.toMutation(t,this.preconditionForUpdate(t)))}catch(t){this.lastWriteError=t}this.writtenDocs.add(t.toString())},cd.prototype.delete=function(t){this.write(new ws(t,this.precondition(t))),this.writtenDocs.add(t.toString())},cd.prototype.commit=function(){return y(this,void 0,void 0,function(){var e,n=this;return g(this,function(t){switch(t.label){case 0:if(this.ensureCommitNotCalled(),this.lastWriteError)throw this.lastWriteError;return e=this.readVersions,this.mutations.forEach(function(t){e.delete(t.key.toString())}),e.forEach(function(t,e){e=mi.fromPath(e);n.mutations.push(new Is(e,n.precondition(e)))}),[4,function(i,o){return y(this,void 0,void 0,function(){var e,n,r;return g(this,function(t){switch(t.label){case 0:return n=pa((e=i).R)+"/documents",r={writes:o.map(function(t){return va(e.R,t)})},[4,e.Ni("Commit",n,r)];case 1:return t.sent(),[2]}})})}(this.datastore,this.mutations)];case 1:return t.sent(),this.committed=!0,[2]}})})},cd.prototype.recordVersion=function(t){var e;if(t.isFoundDocument())e=t.version;else{if(!t.isNoDocument())throw Mr();e=Gr.min()}var n=this.readVersions.get(t.key.toString());if(n){if(!e.isEqual(n))throw new Ar(Dr.ABORTED,"Document version changed between two reads.")}else this.readVersions.set(t.key.toString(),e)},cd.prototype.precondition=function(t){var e=this.readVersions.get(t.toString());return!this.writtenDocs.has(t.toString())&&e?es.updateTime(e):es.none()},cd.prototype.preconditionForUpdate=function(t){var e=this.readVersions.get(t.toString());if(this.writtenDocs.has(t.toString())||!e)return es.exists(!0);if(e.isEqual(Gr.min()))throw new Ar(Dr.INVALID_ARGUMENT,"Can't update a document that doesn't exist.");return es.updateTime(e)},cd.prototype.write=function(t){this.ensureCommitNotCalled(),this.mutations.push(t)},cd.prototype.ensureCommitNotCalled=function(){},cd),od=(ud.prototype.run=function(){this.nc()},ud.prototype.nc=function(){var t=this;this.Zi.ji(function(){return y(t,void 0,void 0,function(){var e,n,r=this;return g(this,function(t){return e=new id(this.datastore),(n=this.sc(e))&&n.then(function(t){r.asyncQueue.enqueueAndForget(function(){return e.commit().then(function(){r.deferred.resolve(t)}).catch(function(t){r.ic(t)})})}).catch(function(t){r.ic(t)}),[2]})})})},ud.prototype.sc=function(t){try{var e=this.updateFunction(t);return!pi(e)&&e.catch&&e.then?e:(this.deferred.reject(Error("Transaction callback must return a Promise")),null)}catch(t){return this.deferred.reject(t),null}},ud.prototype.ic=function(t){var e=this;0<this.ec&&this.rc(t)?(--this.ec,this.asyncQueue.enqueueAndForget(function(){return e.nc(),Promise.resolve()})):this.deferred.reject(t)},ud.prototype.rc=function(t){if("FirebaseError"!==t.name)return!1;t=t.code;return"aborted"===t||"failed-precondition"===t||!_s(t)},ud),sd=(ad.prototype.getConfiguration=function(){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return[4,this.receivedInitialUser.promise];case 1:return[2,(t.sent(),{asyncQueue:this.asyncQueue,databaseInfo:this.databaseInfo,clientId:this.clientId,credentials:this.credentials,initialUser:this.user,maxConcurrentLimboResolutions:100})]}})})},ad.prototype.setCredentialChangeListener=function(t){var e=this;this.credentialListener=t,this.receivedInitialUser.promise.then(function(){return e.credentialListener(e.user)})},ad.prototype.verifyNotTerminated=function(){if(this.asyncQueue.isShuttingDown)throw new Ar(Dr.FAILED_PRECONDITION,"The client has already been terminated.")},ad.prototype.terminate=function(){var t=this;this.asyncQueue.enterRestrictedMode();var n=new Za;return this.asyncQueue.enqueueAndForgetEvenWhileRestricted(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return t.trys.push([0,5,,6]),this.onlineComponents?[4,this.onlineComponents.terminate()]:[3,2];case 1:t.sent(),t.label=2;case 2:return this.offlineComponents?[4,this.offlineComponents.terminate()]:[3,4];case 3:t.sent(),t.label=4;case 4:return this.credentials.removeChangeListener(),n.resolve(),[3,6];case 5:return e=t.sent(),e=Wl(e,"Failed to shutdown persistence"),n.reject(e),[3,6];case 6:return[2]}})})}),n.promise},ad);function ad(t,e,n){var r=this;this.credentials=t,this.asyncQueue=e,this.databaseInfo=n,this.user=Th.UNAUTHENTICATED,this.clientId=Vr.u(),this.credentialListener=function(){},this.receivedInitialUser=new Za,this.credentials.setChangeListener(function(t){xr("FirestoreClient","Received user=",t.uid),r.user=t,r.credentialListener(t),r.receivedInitialUser.resolve()})}function ud(t,e,n,r){this.asyncQueue=t,this.datastore=e,this.updateFunction=n,this.deferred=r,this.ec=5,this.Zi=new gl(this.asyncQueue,"transaction_retry")}function cd(t){this.datastore=t,this.readVersions=new Map,this.mutations=[],this.committed=!1,this.lastWriteError=null,this.writtenDocs=new Set}function hd(t,e){var n=this;this.Go=t,this.R=e,this.metadata=new Za,this.buffer=new Uint8Array,this.zo=new TextDecoder("utf-8"),this.Ho().then(function(t){t&&t.io()?n.metadata.resolve(t.payload.metadata):n.metadata.reject(new Error("The first element of the bundle is not a metadata, it is\n             "+JSON.stringify(null==t?void 0:t.payload)))},function(t){return n.metadata.reject(t)})}function ld(t){this.observer=t,this.muted=!1}function fd(i,o){return y(this,void 0,void 0,function(){var e,n,r=this;return g(this,function(t){switch(t.label){case 0:return i.asyncQueue.verifyOperationInProgress(),xr("FirestoreClient","Initializing OfflineComponentProvider"),[4,i.getConfiguration()];case 1:return e=t.sent(),[4,o.initialize(e)];case 2:return t.sent(),n=e.initialUser,i.setCredentialChangeListener(function(e){n.isEqual(e)||(n=e,i.asyncQueue.enqueueRetryable(function(){return y(r,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return[4,th(o.localStore,e)];case 1:return t.sent(),[2]}})})}))}),o.persistence.setDatabaseDeletedListener(function(){return i.terminate()}),i.offlineComponents=o,[2]}})})}function dd(r,i){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return r.asyncQueue.verifyOperationInProgress(),[4,pd(r)];case 1:return e=t.sent(),xr("FirestoreClient","Initializing OnlineComponentProvider"),[4,r.getConfiguration()];case 2:return n=t.sent(),[4,i.initialize(e,n)];case 3:return t.sent(),r.setCredentialChangeListener(function(t){return r.asyncQueue.enqueueRetryable(function(){return function(r,i){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return(e=r).asyncQueue.verifyOperationInProgress(),xr("RemoteStore","RemoteStore received new credentials"),n=Pl(e),e.$r.add(3),[4,Al(e)];case 1:return t.sent(),n&&e.Br.set("Unknown"),[4,e.remoteSyncer.handleCredentialChange(i)];case 2:return t.sent(),e.$r.delete(3),[4,Dl(e)];case 3:return t.sent(),[2]}})})}(i.remoteStore,t)})}),r.onlineComponents=i,[2]}})})}function pd(e){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return e.offlineComponents?[3,2]:(xr("FirestoreClient","Using default OfflineComponentProvider"),[4,fd(e,new Hf)]);case 1:t.sent(),t.label=2;case 2:return[2,e.offlineComponents]}})})}function yd(e){return y(this,void 0,void 0,function(){return g(this,function(t){switch(t.label){case 0:return e.onlineComponents?[3,2]:(xr("FirestoreClient","Using default OnlineComponentProvider"),[4,dd(e,new Xf)]);case 1:t.sent(),t.label=2;case 2:return[2,e.onlineComponents]}})})}function gd(t){return pd(t).then(function(t){return t.persistence})}function md(t){return pd(t).then(function(t){return t.localStore})}function vd(t){return yd(t).then(function(t){return t.remoteStore})}function bd(t){return yd(t).then(function(t){return t.syncEngine})}function wd(r){return y(this,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return[4,yd(r)];case 1:return e=t.sent(),[2,((n=e.eventManager).onListen=function(s,a){return y(this,void 0,void 0,function(){var e,n,r,i,o;return g(this,function(t){switch(t.label){case 0:return e=jf(s),(o=e.Po.get(a))?(n=o.targetId,e.sharedClientState.addLocalQueryTarget(n),r=o.view.Ro(),[3,4]):[3,1];case 1:return[4,oh(e.localStore,No(a))];case 2:return i=t.sent(),o=e.sharedClientState.addLocalQueryTarget(i.targetId),n=i.targetId,[4,_f(e,a,n,"current"===o)];case 3:r=t.sent(),e.isPrimaryClient&&kl(e.remoteStore,i),t.label=4;case 4:return[2,r]}})})}.bind(null,e.syncEngine),n.onUnlisten=function(i,o){return y(this,void 0,void 0,function(){var e,n,r;return g(this,function(t){switch(t.label){case 0:return n=(e=i).Po.get(o),1<(r=e.Vo.get(n.targetId)).length?[2,(e.Vo.set(n.targetId,r.filter(function(t){return!Ao(t,o)})),void e.Po.delete(o))]:e.isPrimaryClient?(e.sharedClientState.removeLocalQueryTarget(n.targetId),e.sharedClientState.isActiveQueryTarget(n.targetId)?[3,2]:[4,sh(e.localStore,n.targetId,!1).then(function(){e.sharedClientState.clearQueryState(n.targetId),Cl(e.remoteStore,n.targetId),xf(e,n.targetId)}).catch(dc)]):[3,3];case 1:t.sent(),t.label=2;case 2:return[3,5];case 3:return xf(e,n.targetId),[4,sh(e.localStore,n.targetId,!0)];case 4:t.sent(),t.label=5;case 5:return[2]}})})}.bind(null,e.syncEngine),n)]}})})}function Id(n,r,i){var t=this;void 0===i&&(i={});var o=new Za;return n.asyncQueue.enqueueAndForget(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=function(n,r,i,o,s){var t=new nd({next:function(t){r.enqueueAndForget(function(){return of(n,a)});var e=t.docs.has(i);!e&&t.fromCache?s.reject(new Ar(Dr.UNAVAILABLE,"Failed to get document because the client is offline.")):e&&t.fromCache&&o&&"server"===o.source?s.reject(new Ar(Dr.UNAVAILABLE,'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')):s.resolve(t)},error:function(t){return s.reject(t)}}),a=new af(bo(i.path),t,{includeMetadataChanges:!0,so:!0});return rf(n,a)},[4,wd(n)];case 1:return[2,e.apply(void 0,[t.sent(),n.asyncQueue,r,i,o])]}})})}),o.promise}function Ed(n,r,i){var t=this;void 0===i&&(i={});var o=new Za;return n.asyncQueue.enqueueAndForget(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=function(e,n,t,r,i){var o=new nd({next:function(t){n.enqueueAndForget(function(){return of(e,s)}),t.fromCache&&"server"===r.source?i.reject(new Ar(Dr.UNAVAILABLE,'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)')):i.resolve(t)},error:function(t){return i.reject(t)}}),s=new af(t,o,{includeMetadataChanges:!0,so:!0});return rf(e,s)},[4,wd(n)];case 1:return[2,e.apply(void 0,[t.sent(),n.asyncQueue,r,i,o])]}})})}),o.promise}function Td(t,e){this.user=e,this.type="OAuth",this.authHeaders={},this.authHeaders.Authorization="Bearer "+t}var _d=function(t,e,n,r,i,o,s){this.databaseId=t,this.appId=e,this.persistenceKey=n,this.host=r,this.ssl=i,this.forceLongPolling=o,this.autoDetectLongPolling=s},Sd=(Object.defineProperty(Pd.prototype,"isDefaultDatabase",{get:function(){return"(default)"===this.database},enumerable:!1,configurable:!0}),Pd.prototype.isEqual=function(t){return t instanceof Pd&&t.projectId===this.projectId&&t.database===this.database},Pd),Nd=new Map,Dd=(Ld.prototype.getToken=function(){return Promise.resolve(null)},Ld.prototype.invalidateToken=function(){},Ld.prototype.setChangeListener=function(t){(this.changeListener=t)(Th.UNAUTHENTICATED)},Ld.prototype.removeChangeListener=function(){this.changeListener=null},Ld),Ad=(Od.prototype.getToken=function(){var e=this,n=this.cc,t=this.forceRefresh;return this.forceRefresh=!1,this.auth?this.auth.getToken(t).then(function(t){return e.cc!==n?(xr("FirebaseCredentialsProvider","getToken aborted due to token change."),e.getToken()):t?(Fr("string"==typeof t.accessToken),new Td(t.accessToken,e.currentUser)):null}):Promise.resolve(null)},Od.prototype.invalidateToken=function(){this.forceRefresh=!0},Od.prototype.setChangeListener=function(t){this.changeListener=t,this.receivedInitialUser&&t(this.currentUser)},Od.prototype.removeChangeListener=function(){this.auth&&this.auth.removeAuthTokenListener(this.oc),this.oc=null,this.changeListener=null},Od.prototype.uc=function(){var t=this.auth&&this.auth.getUid();return Fr(null===t||"string"==typeof t),new Th(t)},Od),kd=(Object.defineProperty(xd.prototype,"authHeaders",{get:function(){var t={"X-Goog-AuthUser":this.hc},e=this.ac.auth.getAuthHeaderValueForFirstParty([]);return e&&(t.Authorization=e),this.lc&&(t["X-Goog-Iam-Authorization-Token"]=this.lc),t},enumerable:!1,configurable:!0}),xd),Cd=(Rd.prototype.getToken=function(){return Promise.resolve(new kd(this.ac,this.hc,this.lc))},Rd.prototype.setChangeListener=function(t){t(Th.FIRST_PARTY)},Rd.prototype.removeChangeListener=function(){},Rd.prototype.invalidateToken=function(){},Rd);function Rd(t,e,n){this.ac=t,this.hc=e,this.lc=n}function xd(t,e,n){this.ac=t,this.hc=e,this.lc=n,this.type="FirstParty",this.user=Th.FIRST_PARTY}function Od(t){var e=this;this.oc=null,this.currentUser=Th.UNAUTHENTICATED,this.receivedInitialUser=!1,this.cc=0,this.changeListener=null,this.forceRefresh=!1,this.oc=function(){e.cc++,e.currentUser=e.uc(),e.receivedInitialUser=!0,e.changeListener&&e.changeListener(e.currentUser)},this.cc=0,this.auth=t.getImmediate({optional:!0}),this.auth?this.auth.addAuthTokenListener(this.oc):(this.oc(null),t.get().then(function(t){e.auth=t,e.oc&&e.auth.addAuthTokenListener(e.oc)},function(){}))}function Ld(){this.changeListener=null}function Pd(t,e){this.projectId=t,this.database=e||"(default)"}function Md(t,e,n){if(!n)throw new Ar(Dr.INVALID_ARGUMENT,"Function "+t+"() cannot be called with an empty "+e+".")}function Fd(t,e){if(void 0===e)return{merge:!1};if(void 0!==e.mergeFields&&void 0!==e.merge)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid options passed to function "+t+'(): You cannot specify both "merge" and "mergeFields".');return e}function Vd(t,e,n,r){if(!0===e&&!0===r)throw new Ar(Dr.INVALID_ARGUMENT,t+" and "+n+" cannot be used together.")}function Ud(t){if(!mi.isDocumentKey(t))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid document reference. Document references must have an even number of segments, but "+t+" has "+t.length+".")}function qd(t){if(mi.isDocumentKey(t))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid collection reference. Collection references must have an odd number of segments, but "+t+" has "+t.length+".")}function Bd(e){if(void 0===e)return"undefined";if(null===e)return"null";if("string"==typeof e)return 20<e.length&&(e=e.substring(0,20)+"..."),JSON.stringify(e);if("number"==typeof e||"boolean"==typeof e)return""+e;if("object"!=typeof e)return"function"==typeof e?"a function":Mr();if(e instanceof Array)return"an array";var t=function(){if(e.constructor){var t=/function\s+([^\s(]+)\s*\(/.exec(e.constructor.toString());if(t&&1<t.length)return t[1]}return null}();return t?"a custom "+t+" object":"an object"}function jd(t,e){if((t="_delegate"in t?t._delegate:t)instanceof e)return t;if(e.name===t.constructor.name)throw new Ar(Dr.INVALID_ARGUMENT,"Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?");t=Bd(t);throw new Ar(Dr.INVALID_ARGUMENT,"Expected type '"+e.name+"', but it was: "+t)}function Kd(t,e){if(e<=0)throw new Ar(Dr.INVALID_ARGUMENT,"Function "+t+"() requires a positive number, but it was: "+e+".")}var Gd,Qd=(tp.prototype.isEqual=function(t){return this.host===t.host&&this.ssl===t.ssl&&this.credentials===t.credentials&&this.cacheSizeBytes===t.cacheSizeBytes&&this.experimentalForceLongPolling===t.experimentalForceLongPolling&&this.experimentalAutoDetectLongPolling===t.experimentalAutoDetectLongPolling&&this.ignoreUndefinedProperties===t.ignoreUndefinedProperties},tp),zd=(Object.defineProperty(Zd.prototype,"app",{get:function(){if(!this._app)throw new Ar(Dr.FAILED_PRECONDITION,"Firestore was not initialized using the Firebase SDK. 'app' is not available");return this._app},enumerable:!1,configurable:!0}),Object.defineProperty(Zd.prototype,"_initialized",{get:function(){return this._settingsFrozen},enumerable:!1,configurable:!0}),Object.defineProperty(Zd.prototype,"_terminated",{get:function(){return void 0!==this._terminateTask},enumerable:!1,configurable:!0}),Zd.prototype._setSettings=function(t){if(this._settingsFrozen)throw new Ar(Dr.FAILED_PRECONDITION,"Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.");this._settings=new Qd(t),void 0!==t.credentials&&(this._credentials=function(t){if(!t)return new Dd;switch(t.type){case"gapi":var e=t.client;return Fr(!("object"!=typeof e||null===e||!e.auth||!e.auth.getAuthHeaderValueForFirstParty)),new Cd(e,t.sessionIndex||"0",t.iamToken||null);case"provider":return t.client;default:throw new Ar(Dr.INVALID_ARGUMENT,"makeCredentialsProvider failed due to invalid credential type")}}(t.credentials))},Zd.prototype._getSettings=function(){return this._settings},Zd.prototype._freezeSettings=function(){return this._settingsFrozen=!0,this._settings},Zd.prototype._delete=function(){return this._terminateTask||(this._terminateTask=this._terminate()),this._terminateTask},Zd.prototype.toJSON=function(){return{app:this._app,databaseId:this._databaseId,settings:this._settings}},Zd.prototype._terminate=function(){return(t=Nd.get(this))&&(xr("ComponentProvider","Removing Datastore"),Nd.delete(this),t.terminate()),Promise.resolve();var t},Zd),Hd=(Object.defineProperty($d.prototype,"_path",{get:function(){return this._key.path},enumerable:!1,configurable:!0}),Object.defineProperty($d.prototype,"id",{get:function(){return this._key.path.lastSegment()},enumerable:!1,configurable:!0}),Object.defineProperty($d.prototype,"path",{get:function(){return this._key.path.canonicalString()},enumerable:!1,configurable:!0}),Object.defineProperty($d.prototype,"parent",{get:function(){return new Yd(this.firestore,this._converter,this._key.path.popLast())},enumerable:!1,configurable:!0}),$d.prototype.withConverter=function(t){return new $d(this.firestore,t,this._key)},$d),Wd=(Jd.prototype.withConverter=function(t){return new Jd(this.firestore,t,this._query)},Jd),Yd=(n(Xd,Gd=Wd),Object.defineProperty(Xd.prototype,"id",{get:function(){return this._query.path.lastSegment()},enumerable:!1,configurable:!0}),Object.defineProperty(Xd.prototype,"path",{get:function(){return this._query.path.canonicalString()},enumerable:!1,configurable:!0}),Object.defineProperty(Xd.prototype,"parent",{get:function(){var t=this._path.popLast();return t.isEmpty()?null:new Hd(this.firestore,null,new mi(t))},enumerable:!1,configurable:!0}),Xd.prototype.withConverter=function(t){return new Xd(this.firestore,t,this._path)},Xd);function Xd(t,e,n){var r=this;return(r=Gd.call(this,t,e,bo(n))||this)._path=n,r.type="collection",r}function Jd(t,e,n){this._converter=e,this._query=n,this.type="query",this.firestore=t}function $d(t,e,n){this._converter=e,this._key=n,this.type="document",this.firestore=t}function Zd(t,e){this._persistenceKey="(lite)",this._settings=new Qd({}),this._settingsFrozen=!1,t instanceof Sd?(this._databaseId=t,this._credentials=new Dd):(this._app=t,this._databaseId=function(t){if(!Object.prototype.hasOwnProperty.apply(t.options,["projectId"]))throw new Ar(Dr.INVALID_ARGUMENT,'"projectId" not provided in firebase.initializeApp.');return new Sd(t.options.projectId)}(t),this._credentials=new Ad(e))}function tp(t){var e;if(void 0===t.host){if(void 0!==t.ssl)throw new Ar(Dr.INVALID_ARGUMENT,"Can't provide ssl option if host option is not set");this.host="firestore.googleapis.com",this.ssl=!0}else this.host=t.host,this.ssl=null===(e=t.ssl)||void 0===e||e;if(this.credentials=t.credentials,this.ignoreUndefinedProperties=!!t.ignoreUndefinedProperties,void 0===t.cacheSizeBytes)this.cacheSizeBytes=41943040;else{if(-1!==t.cacheSizeBytes&&t.cacheSizeBytes<1048576)throw new Ar(Dr.INVALID_ARGUMENT,"cacheSizeBytes must be at least 1048576");this.cacheSizeBytes=t.cacheSizeBytes}this.experimentalForceLongPolling=!!t.experimentalForceLongPolling,this.experimentalAutoDetectLongPolling=!!t.experimentalAutoDetectLongPolling,Vd("experimentalForceLongPolling",t.experimentalForceLongPolling,"experimentalAutoDetectLongPolling",t.experimentalAutoDetectLongPolling)}function ep(t,e){for(var n,r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];if(t=m(t),Md("collection","path",e),t instanceof zd)return qd(n=$r.fromString.apply($r,s([e],r))),new Yd(t,null,n);if(!(t instanceof Hd||t instanceof Yd))throw new Ar(Dr.INVALID_ARGUMENT,"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");return qd(n=$r.fromString.apply($r,s([t.path],r)).child($r.fromString(e))),new Yd(t.firestore,null,n)}function np(t,e){for(var n,r=[],i=2;i<arguments.length;i++)r[i-2]=arguments[i];if(t=m(t),Md("doc","path",e=1===arguments.length?Vr.u():e),t instanceof zd)return Ud(n=$r.fromString.apply($r,s([e],r))),new Hd(t,null,new mi(n));if(!(t instanceof Hd||t instanceof Yd))throw new Ar(Dr.INVALID_ARGUMENT,"Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");return Ud(n=t._path.child($r.fromString.apply($r,s([e],r)))),new Hd(t.firestore,t instanceof Yd?t._converter:null,new mi(n))}function rp(t,e){return t=m(t),e=m(e),(t instanceof Hd||t instanceof Yd)&&(e instanceof Hd||e instanceof Yd)&&t.firestore===e.firestore&&t.path===e.path&&t._converter===e._converter}function ip(t,e){return t=m(t),e=m(e),t instanceof Wd&&e instanceof Wd&&t.firestore===e.firestore&&Ao(t._query,e._query)&&t._converter===e._converter}var op=(Object.defineProperty(sp.prototype,"isShuttingDown",{get:function(){return this.wc},enumerable:!1,configurable:!0}),sp.prototype.enqueueAndForget=function(t){this.enqueue(t)},sp.prototype.enqueueAndForgetEvenWhileRestricted=function(t){this.Tc(),this.Ic(t)},sp.prototype.enterRestrictedMode=function(){var t;this.wc||(this.wc=!0,(t=hl())&&"function"==typeof t.removeEventListener&&t.removeEventListener("visibilitychange",this.Ec))},sp.prototype.enqueue=function(t){return this.Tc(),this.wc?new Promise(function(t){}):this.Ic(t)},sp.prototype.enqueueRetryable=function(t){var e=this;this.enqueueAndForget(function(){return e.dc.push(t),e.Ac()})},sp.prototype.Ac=function(){return y(this,void 0,void 0,function(){var e,n=this;return g(this,function(t){switch(t.label){case 0:if(0===this.dc.length)return[3,5];t.label=1;case 1:return t.trys.push([1,3,,4]),[4,this.dc[0]()];case 2:return t.sent(),this.dc.shift(),this.Zi.reset(),[3,4];case 3:if(!lu(e=t.sent()))throw e;return xr("AsyncQueue","Operation failed with retryable error: "+e),[3,4];case 4:0<this.dc.length&&this.Zi.ji(function(){return n.Ac()}),t.label=5;case 5:return[2]}})})},sp.prototype.Ic=function(t){var r=this,e=this.fc.then(function(){return r.yc=!0,t().catch(function(t){throw r.mc=t,r.yc=!1,Or("INTERNAL UNHANDLED ERROR: ",(n=(e=t).message||"",n=e.stack?e.stack.includes(e.message)?e.stack:e.message+"\n"+e.stack:n)),t;var e,n}).then(function(t){return r.yc=!1,t})});return this.fc=e},sp.prototype.enqueueAfterDelay=function(t,e,n){var r=this;this.Tc(),-1<this.gc.indexOf(t)&&(e=0);n=zl.createAndSchedule(this,t,e,n,function(t){return r.Rc(t)});return this._c.push(n),n},sp.prototype.Tc=function(){this.mc&&Mr()},sp.prototype.verifyOperationInProgress=function(){},sp.prototype.bc=function(){return y(this,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return[4,e=this.fc];case 1:t.sent(),t.label=2;case 2:if(e!==this.fc)return[3,0];t.label=3;case 3:return[2]}})})},sp.prototype.vc=function(t){for(var e=0,n=this._c;e<n.length;e++)if(n[e].timerId===t)return!0;return!1},sp.prototype.Pc=function(r){var i=this;return this.bc().then(function(){i._c.sort(function(t,e){return t.targetTimeMs-e.targetTimeMs});for(var t=0,e=i._c;t<e.length;t++){var n=e[t];if(n.skipDelay(),"all"!==r&&n.timerId===r)break}return i.bc()})},sp.prototype.Vc=function(t){this.gc.push(t)},sp.prototype.Rc=function(t){t=this._c.indexOf(t);this._c.splice(t,1)},sp);function sp(){var e=this;this.fc=Promise.resolve(),this.dc=[],this.wc=!1,this._c=[],this.mc=null,this.yc=!1,this.gc=[],this.Zi=new gl(this,"async_queue_retry"),this.Ec=function(){var t=hl();t&&xr("AsyncQueue","Visibility state changed to "+t.visibilityState),e.Zi.Gi()};var t=hl();t&&"function"==typeof t.addEventListener&&t.addEventListener("visibilitychange",this.Ec)}function ap(i){return function(){if("object"==typeof i&&null!==i)for(var t=i,e=0,n=["next","error","complete"];e<n.length;e++){var r=n[e];if(r in t&&"function"==typeof t[r])return 1}}()}var up,cp=(fp.prototype.onProgress=function(t,e,n){this._progressObserver={next:t,error:e,complete:n}},fp.prototype.catch=function(t){return this._taskCompletionResolver.promise.catch(t)},fp.prototype.then=function(t,e){return this._taskCompletionResolver.promise.then(t,e)},fp.prototype._completeWith=function(t){this._updateProgress(t),this._progressObserver.complete&&this._progressObserver.complete(),this._taskCompletionResolver.resolve(t)},fp.prototype._failWith=function(t){this._lastProgress.taskState="Error",this._progressObserver.next&&this._progressObserver.next(this._lastProgress),this._progressObserver.error&&this._progressObserver.error(t),this._taskCompletionResolver.reject(t)},fp.prototype._updateProgress=function(t){this._lastProgress=t,this._progressObserver.next&&this._progressObserver.next(t)},fp),hp=(n(lp,up=zd),lp.prototype._terminate=function(){return this._firestoreClient||pp(this),this._firestoreClient.terminate()},lp);function lp(t,e){var n=this;return(n=up.call(this,t,e)||this)._queue=new op,n._persistenceKey="name"in t?t.name:"[DEFAULT]",n}function fp(){this._progressObserver={},this._taskCompletionResolver=new Za,this._lastProgress={taskState:"Running",totalBytes:0,totalDocuments:0,bytesLoaded:0,documentsLoaded:0}}function dp(t){return t._firestoreClient||pp(t),t._firestoreClient.verifyNotTerminated(),t._firestoreClient}function pp(t){var e,n,r,i=t._freezeSettings(),i=(e=t._databaseId,n=(null===(r=t._app)||void 0===r?void 0:r.options.appId)||"",r=t._persistenceKey,new _d(e,n,r,i.host,i.ssl,i.experimentalForceLongPolling,i.experimentalAutoDetectLongPolling));t._firestoreClient=new sd(t._credentials,t._queue,i)}function yp(r,i,o){var t=this,s=new Za;return r.asyncQueue.enqueue(function(){return y(t,void 0,void 0,function(){var n;return g(this,function(t){switch(t.label){case 0:return t.trys.push([0,3,,4]),[4,fd(r,o)];case 1:return t.sent(),[4,dd(r,i)];case 2:return t.sent(),s.resolve(),[3,4];case 3:if(!("FirebaseError"===(e=n=t.sent()).name?e.code===Dr.FAILED_PRECONDITION||e.code===Dr.UNIMPLEMENTED:!("undefined"!=typeof DOMException&&e instanceof DOMException)||22===e.code||20===e.code||11===e.code))throw n;return console.warn("Error enabling offline persistence. Falling back to persistence disabled: "+n),s.reject(n),[3,4];case 4:return[2]}var e})})}).then(function(){return s.promise})}function gp(t){if(t._initialized||t._terminated)throw new Ar(Dr.FAILED_PRECONDITION,"Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.")}var mp=(Ap.prototype.isEqual=function(t){return this._internalPath.isEqual(t._internalPath)},Ap),vp=(Dp.fromBase64String=function(t){try{return new Dp(ni.fromBase64String(t))}catch(t){throw new Ar(Dr.INVALID_ARGUMENT,"Failed to construct data from Base64 string: "+t)}},Dp.fromUint8Array=function(t){return new Dp(ni.fromUint8Array(t))},Dp.prototype.toBase64=function(){return this._byteString.toBase64()},Dp.prototype.toUint8Array=function(){return this._byteString.toUint8Array()},Dp.prototype.toString=function(){return"Bytes(base64: "+this.toBase64()+")"},Dp.prototype.isEqual=function(t){return this._byteString.isEqual(t._byteString)},Dp),bp=function(t){this._methodName=t},wp=(Object.defineProperty(Np.prototype,"latitude",{get:function(){return this._lat},enumerable:!1,configurable:!0}),Object.defineProperty(Np.prototype,"longitude",{get:function(){return this._long},enumerable:!1,configurable:!0}),Np.prototype.isEqual=function(t){return this._lat===t._lat&&this._long===t._long},Np.prototype.toJSON=function(){return{latitude:this._lat,longitude:this._long}},Np.prototype._compareTo=function(t){return qr(this._lat,t._lat)||qr(this._long,t._long)},Np),Ip=/^__.*__$/,Ep=(Sp.prototype.toMutation=function(t,e){return null!==this.fieldMask?new hs(t,this.data,this.fieldMask,e,this.fieldTransforms):new cs(t,this.data,e,this.fieldTransforms)},Sp),Tp=(_p.prototype.toMutation=function(t,e){return new hs(t,this.data,this.fieldMask,e,this.fieldTransforms)},_p);function _p(t,e,n){this.data=t,this.fieldMask=e,this.fieldTransforms=n}function Sp(t,e,n){this.data=t,this.fieldMask=e,this.fieldTransforms=n}function Np(t,e){if(!isFinite(t)||t<-90||90<t)throw new Ar(Dr.INVALID_ARGUMENT,"Latitude must be a number between -90 and 90, but was: "+t);if(!isFinite(e)||e<-180||180<e)throw new Ar(Dr.INVALID_ARGUMENT,"Longitude must be a number between -180 and 180, but was: "+e);this._lat=t,this._long=e}function Dp(t){this._byteString=t}function Ap(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var n=0;n<t.length;++n)if(0===t[n].length)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid field name at argument $(i + 1). Field names must not be empty.");this._internalPath=new ti(t)}function kp(t){switch(t){case 0:case 2:case 1:return 1;case 3:case 4:return;default:throw Mr()}}var Cp=(Object.defineProperty(Op.prototype,"path",{get:function(){return this.settings.path},enumerable:!1,configurable:!0}),Object.defineProperty(Op.prototype,"Dc",{get:function(){return this.settings.Dc},enumerable:!1,configurable:!0}),Op.prototype.Cc=function(t){return new Op(Object.assign(Object.assign({},this.settings),t),this.databaseId,this.R,this.ignoreUndefinedProperties,this.fieldTransforms,this.fieldMask)},Op.prototype.Nc=function(t){var e=null===(e=this.path)||void 0===e?void 0:e.child(t),e=this.Cc({path:e,xc:!1});return e.Fc(t),e},Op.prototype.kc=function(t){var e,t=null===(e=this.path)||void 0===e?void 0:e.child(t),t=this.Cc({path:t,xc:!1});return t.Sc(),t},Op.prototype.Oc=function(t){return this.Cc({path:void 0,xc:!0})},Op.prototype.$c=function(t){return uy(t,this.settings.methodName,this.settings.Mc||!1,this.path,this.settings.Lc)},Op.prototype.contains=function(e){return void 0!==this.fieldMask.find(function(t){return e.isPrefixOf(t)})||void 0!==this.fieldTransforms.find(function(t){return e.isPrefixOf(t.field)})},Op.prototype.Sc=function(){if(this.path)for(var t=0;t<this.path.length;t++)this.Fc(this.path.get(t))},Op.prototype.Fc=function(t){if(0===t.length)throw this.$c("Document fields must not be empty");if(kp(this.Dc)&&Ip.test(t))throw this.$c('Document fields cannot begin and end with "__"')},Op),Rp=(xp.prototype.Bc=function(t,e,n,r){return void 0===r&&(r=!1),new Cp({Dc:t,methodName:e,Lc:n,path:ti.emptyPath(),xc:!1,Mc:r},this.databaseId,this.R,this.ignoreUndefinedProperties)},xp);function xp(t,e,n){this.databaseId=t,this.ignoreUndefinedProperties=e,this.R=n||ll(t)}function Op(t,e,n,r,i,o){this.settings=t,this.databaseId=e,this.R=n,this.ignoreUndefinedProperties=r,void 0===i&&this.Sc(),this.fieldTransforms=i||[],this.fieldMask=o||[]}function Lp(t){var e=t._freezeSettings(),n=ll(t._databaseId);return new Rp(t._databaseId,!!e.ignoreUndefinedProperties,n)}function Pp(t,e,n,r,i,o){void 0===o&&(o={});var s=t.Bc(o.merge||o.mergeFields?2:0,e,n,i);iy("Data must be an object, but it was:",s,r);var a,u,r=ny(r,s);if(o.merge)a=new ei(s.fieldMask),u=s.fieldTransforms;else if(o.mergeFields){for(var c=[],h=0,l=o.mergeFields;h<l.length;h++){var f=oy(e,l[h],n);if(!s.contains(f))throw new Ar(Dr.INVALID_ARGUMENT,"Field '"+f+"' is specified in your field mask but missing from your input data.");cy(c,f)||c.push(f)}a=new ei(c),u=s.fieldTransforms.filter(function(t){return a.covers(t.field)})}else a=null,u=s.fieldTransforms;return new Ep(new Ri(r),a,u)}var Mp,Fp=(n(Vp,Mp=bp),Vp.prototype._toFieldTransform=function(t){if(2!==t.Dc)throw 1===t.Dc?t.$c(this._methodName+"() can only appear at the top level of your update data"):t.$c(this._methodName+"() cannot be used with set() unless you pass {merge:true}");return t.fieldMask.push(t.path),null},Vp.prototype.isEqual=function(t){return t instanceof Vp},Vp);function Vp(){return null!==Mp&&Mp.apply(this,arguments)||this}function Up(t,e,n){return new Cp({Dc:3,Lc:e.settings.Lc,methodName:t._methodName,xc:n},e.databaseId,e.R,e.ignoreUndefinedProperties)}var qp,Bp,jp,Kp,Gp=(n(Jp,Kp=bp),Jp.prototype._toFieldTransform=function(t){return new ts(t.path,new Uo)},Jp.prototype.isEqual=function(t){return t instanceof Jp},Jp),Qp=(n(Xp,jp=bp),Xp.prototype._toFieldTransform=function(t){var e=Up(this,t,!0),n=this.qc.map(function(t){return ey(t,e)}),n=new qo(n);return new ts(t.path,n)},Xp.prototype.isEqual=function(t){return this===t},Xp),zp=(n(Yp,Bp=bp),Yp.prototype._toFieldTransform=function(t){var e=Up(this,t,!0),n=this.qc.map(function(t){return ey(t,e)}),n=new Qo(n);return new ts(t.path,n)},Yp.prototype.isEqual=function(t){return this===t},Yp),Hp=(n(Wp,qp=bp),Wp.prototype._toFieldTransform=function(t){var e=new Yo(t.R,Po(t.R,this.Uc));return new ts(t.path,e)},Wp.prototype.isEqual=function(t){return this===t},Wp);function Wp(t,e){var n=this;return(n=qp.call(this,t)||this).Uc=e,n}function Yp(t,e){var n=this;return(n=Bp.call(this,t)||this).qc=e,n}function Xp(t,e){var n=this;return(n=jp.call(this,t)||this).qc=e,n}function Jp(){return null!==Kp&&Kp.apply(this,arguments)||this}function $p(t,r,i,e){var o=t.Bc(1,r,i);iy("Data must be an object, but it was:",o,e);var s=[],a=Ri.empty();Wr(e,function(t,e){var n=ay(r,t,i);e=m(e);t=o.kc(n);e instanceof Fp?s.push(n):null!=(t=ey(e,t))&&(s.push(n),a.set(n,t))});e=new ei(s);return new Tp(a,e,o.fieldTransforms)}function Zp(t,e,n,r,i,o){var s=t.Bc(1,e,n),a=[oy(e,r,n)],u=[i];if(o.length%2!=0)throw new Ar(Dr.INVALID_ARGUMENT,"Function "+e+"() needs to be called with an even number of arguments that alternate between field names and values.");for(var c=0;c<o.length;c+=2)a.push(oy(e,o[c])),u.push(o[c+1]);for(var h,l,f,d=[],p=Ri.empty(),y=a.length-1;0<=y;--y)cy(d,a[y])||(h=a[y],l=m(l=u[y]),f=s.kc(h),l instanceof Fp?d.push(h):null!=(f=ey(l,f))&&(d.push(h),p.set(h,f)));i=new ei(d);return new Tp(p,i,s.fieldTransforms)}function ty(t,e,n,r){return void 0===r&&(r=!1),ey(n,t.Bc(r?4:3,e))}function ey(s,t){if(ry(s=m(s)))return iy("Unsupported field value:",t,s),ny(s,t);if(s instanceof bp)return function(t,e){if(!kp(e.Dc))throw e.$c(t._methodName+"() can only be used with update() and set()");if(!e.path)throw e.$c(t._methodName+"() is not currently supported inside arrays");t=t._toFieldTransform(e);t&&e.fieldTransforms.push(t)}(s,t),null;if(void 0===s&&t.ignoreUndefinedProperties)return null;if(t.path&&t.fieldMask.push(t.path),s instanceof Array){if(t.settings.xc&&4!==t.Dc)throw t.$c("Nested arrays are not supported");return function(t){for(var e=[],n=0,r=0,i=s;r<i.length;r++){var o=ey(i[r],t.Oc(n));null==o&&(o={nullValue:"NULL_VALUE"}),e.push(o),n++}return{arrayValue:{values:e}}}(t)}return function(t,e){if(null===(t=m(t)))return{nullValue:"NULL_VALUE"};if("number"==typeof t)return Po(e.R,t);if("boolean"==typeof t)return{booleanValue:t};if("string"==typeof t)return{stringValue:t};if(t instanceof Date){var n=Kr.fromDate(t);return{timestampValue:oa(e.R,n)}}if(t instanceof Kr)return n=new Kr(t.seconds,1e3*Math.floor(t.nanoseconds/1e3)),{timestampValue:oa(e.R,n)};if(t instanceof wp)return{geoPointValue:{latitude:t.latitude,longitude:t.longitude}};if(t instanceof vp)return{bytesValue:sa(e.R,t._byteString)};if(t instanceof Hd){var n=e.databaseId,r=t.firestore._databaseId;if(!r.isEqual(n))throw e.$c("Document reference is for database "+r.projectId+"/"+r.database+" but should be for database "+n.projectId+"/"+n.database);return{referenceValue:ua(t.firestore._databaseId||e.databaseId,t._key.path)}}throw e.$c("Unsupported field value: "+Bd(t))}(s,t)}function ny(t,n){var r={};return Yr(t)?n.path&&0<n.path.length&&n.fieldMask.push(n.path):Wr(t,function(t,e){e=ey(e,n.Nc(t));null!=e&&(r[t]=e)}),{mapValue:{fields:r}}}function ry(t){return!("object"!=typeof t||null===t||t instanceof Array||t instanceof Date||t instanceof Kr||t instanceof wp||t instanceof vp||t instanceof Hd||t instanceof bp)}function iy(t,e,n){if(!ry(n)||("object"!=typeof(r=n)||null===r||Object.getPrototypeOf(r)!==Object.prototype&&null!==Object.getPrototypeOf(r))){n=Bd(n);throw"an object"===n?e.$c(t+" a custom object"):e.$c(t+" "+n)}var r}function oy(t,e,n){if((e=m(e))instanceof mp)return e._internalPath;if("string"==typeof e)return ay(t,e);throw uy("Field path arguments must be of type string or FieldPath.",t,!1,void 0,n)}var sy=new RegExp("[~\\*/\\[\\]]");function ay(e,n,r){if(0<=n.search(sy))throw uy("Invalid field path ("+n+"). Paths must not contain '~', '*', '/', '[', or ']'",e,!1,void 0,r);try{return(new(mp.bind.apply(mp,s([void 0],n.split(".")))))._internalPath}catch(t){throw uy("Invalid field path ("+n+"). Paths must not be empty, begin with '.', end with '.', or contain '..'",e,!1,void 0,r)}}function uy(t,e,n,r,i){var o=r&&!r.isEmpty(),s=void 0!==i,e="Function "+e+"() called with invalid data";n&&(e+=" (via `toFirestore()`)");n="";return(o||s)&&(n+=" (found",o&&(n+=" in field "+r),s&&(n+=" in document "+i),n+=")"),new Ar(Dr.INVALID_ARGUMENT,(e+=". ")+t+n)}function cy(t,e){return t.some(function(t){return t.isEqual(e)})}var hy,ly=(Object.defineProperty(py.prototype,"id",{get:function(){return this._key.path.lastSegment()},enumerable:!1,configurable:!0}),Object.defineProperty(py.prototype,"ref",{get:function(){return new Hd(this._firestore,this._converter,this._key)},enumerable:!1,configurable:!0}),py.prototype.exists=function(){return null!==this._document},py.prototype.data=function(){if(this._document){if(this._converter){var t=new fy(this._firestore,this._userDataWriter,this._key,this._document,null);return this._converter.fromFirestore(t)}return this._userDataWriter.convertValue(this._document.data.toProto())}},py.prototype.get=function(t){if(this._document){t=this._document.data.field(yy("DocumentSnapshot.get",t));if(null!==t)return this._userDataWriter.convertValue(t)}},py),fy=(n(dy,hy=ly),dy.prototype.data=function(){return hy.prototype.data.call(this)},dy);function dy(){return null!==hy&&hy.apply(this,arguments)||this}function py(t,e,n,r,i){this._firestore=t,this._userDataWriter=e,this._key=n,this._document=r,this._converter=i}function yy(t,e){return"string"==typeof e?ay(t,e):(e instanceof mp?e:e._delegate)._internalPath}var gy,my,vy=(Sy.prototype.isEqual=function(t){return this.hasPendingWrites===t.hasPendingWrites&&this.fromCache===t.fromCache},Sy),by=(n(_y,my=ly),_y.prototype.exists=function(){return my.prototype.exists.call(this)},_y.prototype.data=function(t){if(void 0===t&&(t={}),this._document){if(this._converter){var e=new wy(this._firestore,this._userDataWriter,this._key,this._document,this.metadata,null);return this._converter.fromFirestore(e,t)}return this._userDataWriter.convertValue(this._document.data.toProto(),t.serverTimestamps)}},_y.prototype.get=function(t,e){if(void 0===e&&(e={}),this._document){t=this._document.data.field(yy("DocumentSnapshot.get",t));if(null!==t)return this._userDataWriter.convertValue(t,e.serverTimestamps)}},_y),wy=(n(Ty,gy=by),Ty.prototype.data=function(t){return void 0===t&&(t={}),gy.prototype.data.call(this,t)},Ty),Iy=(Object.defineProperty(Ey.prototype,"docs",{get:function(){var e=[];return this.forEach(function(t){return e.push(t)}),e},enumerable:!1,configurable:!0}),Object.defineProperty(Ey.prototype,"size",{get:function(){return this._snapshot.docs.size},enumerable:!1,configurable:!0}),Object.defineProperty(Ey.prototype,"empty",{get:function(){return 0===this.size},enumerable:!1,configurable:!0}),Ey.prototype.forEach=function(e,n){var r=this;this._snapshot.docs.forEach(function(t){e.call(n,new wy(r._firestore,r._userDataWriter,t.key,t,new vy(r._snapshot.mutatedKeys.has(t.key),r._snapshot.fromCache),r.query._converter))})},Ey.prototype.docChanges=function(t){t=!!(t=void 0===t?{}:t).includeMetadataChanges;if(t&&this._snapshot.excludesMetadataChanges)throw new Ar(Dr.INVALID_ARGUMENT,"To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().");return this._cachedChanges&&this._cachedChangesIncludeMetadataChanges===t||(this._cachedChanges=function(i,e){if(i._snapshot.oldDocs.isEmpty()){var n=0;return i._snapshot.docChanges.map(function(t){var e=new wy(i._firestore,i._userDataWriter,t.doc.key,t.doc,new vy(i._snapshot.mutatedKeys.has(t.doc.key),i._snapshot.fromCache),i.query._converter);return t.doc,{type:"added",doc:e,oldIndex:-1,newIndex:n++}})}var o=i._snapshot.oldDocs;return i._snapshot.docChanges.filter(function(t){return e||3!==t.type}).map(function(t){var e=new wy(i._firestore,i._userDataWriter,t.doc.key,t.doc,new vy(i._snapshot.mutatedKeys.has(t.doc.key),i._snapshot.fromCache),i.query._converter),n=-1,r=-1;return 0!==t.type&&(n=o.indexOf(t.doc.key),o=o.delete(t.doc.key)),1!==t.type&&(r=(o=o.add(t.doc)).indexOf(t.doc.key)),{type:function(t){switch(t){case 0:return"added";case 2:case 3:return"modified";case 1:return"removed";default:return Mr()}}(t.type),doc:e,oldIndex:n,newIndex:r}})}(this,t),this._cachedChangesIncludeMetadataChanges=t),this._cachedChanges},Ey);function Ey(t,e,n,r){this._firestore=t,this._userDataWriter=e,this._snapshot=r,this.metadata=new vy(r.hasPendingWrites,r.fromCache),this.query=n}function Ty(){return null!==gy&&gy.apply(this,arguments)||this}function _y(t,e,n,r,i,o){var s=this;return(s=my.call(this,t,e,n,r,o)||this)._firestore=t,s._firestoreImpl=t,s.metadata=i,s}function Sy(t,e){this.hasPendingWrites=t,this.fromCache=e}function Ny(t,e){return t instanceof by&&e instanceof by?t._firestore===e._firestore&&t._key.isEqual(e._key)&&(null===t._document?null===e._document:t._document.isEqual(e._document))&&t._converter===e._converter:t instanceof Iy&&e instanceof Iy&&t._firestore===e._firestore&&ip(t.query,e.query)&&t.metadata.isEqual(e.metadata)&&t._snapshot.isEqual(e._snapshot)}function Dy(t){if(Io(t)&&0===t.explicitOrderBy.length)throw new Ar(Dr.UNIMPLEMENTED,"limitToLast() queries require specifying at least one orderBy() clause")}Te=function(){};function Ay(t){for(var e=[],n=1;n<arguments.length;n++)e[n-1]=arguments[n];for(var r=0,i=e;r<i.length;r++)t=i[r]._apply(t);return t}var ky,Cy,Ry,xy,Oy,Ly=(n(Ky,Oy=Te),Ky.prototype._apply=function(t){var e=Lp(t.firestore),e=function(t,e,n,r,i,o){if(r.isKeyField()){if("array-contains"===i||"array-contains-any"===i)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid Query. You can't perform '"+i+"' queries on FieldPath.documentId().");if("in"===i||"not-in"===i){zy(o,i);for(var s=[],a=0,u=o;a<u.length;a++){var c=u[a];s.push(Qy(n,t,c))}h={arrayValue:{values:s}}}else h=Qy(n,t,o)}else"in"!==i&&"not-in"!==i&&"array-contains-any"!==i||zy(o,i),h=ty(e,"where",o,"in"===i||"not-in"===i);var h=Bi.create(r,i,h);return function(t,e){if(e.g()){var n=To(t);if(null!==n&&!n.isEqual(e.field))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '"+n.toString()+"' and '"+e.field.toString()+"'");n=Eo(t);null!==n&&Hy(0,e.field,n)}t=function(t,e){for(var n=0,r=t.filters;n<r.length;n++){var i=r[n];if(0<=e.indexOf(i.op))return i.op}return null}(t,function(){switch(e.op){case"!=":return["!=","not-in"];case"array-contains":return["array-contains","array-contains-any","not-in"];case"in":return["array-contains-any","in","not-in"];case"array-contains-any":return["array-contains","array-contains-any","in","not-in"];case"not-in":return["array-contains","array-contains-any","in","not-in","!="];default:return[]}}());if(null!==t)throw t===e.op?new Ar(Dr.INVALID_ARGUMENT,"Invalid query. You cannot use more than one '"+e.op.toString()+"' filter."):new Ar(Dr.INVALID_ARGUMENT,"Invalid query. You cannot use '"+e.op.toString()+"' filters with '"+t.toString()+"' filters.")}(t,h),h}(t._query,e,t.firestore._databaseId,this.Qc,this.Kc,this.jc);return new Wd(t.firestore,t._converter,(t=t._query,e=t.filters.concat([e]),new mo(t.path,t.collectionGroup,t.explicitOrderBy.slice(),e,t.limit,t.limitType,t.startAt,t.endAt)))},Ky),Py=(n(jy,xy=Te),jy.prototype._apply=function(t){var e=function(t,e,n){if(null!==t.startAt)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. You must not call startAt() or startAfter() before calling orderBy().");if(null!==t.endAt)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. You must not call endAt() or endBefore() before calling orderBy().");var r=new po(e,n);return e=r,null!==Eo(n=t)||null!==(t=To(n))&&Hy(0,t,e.field),r}(t._query,this.Qc,this.Wc);return new Wd(t.firestore,t._converter,(t=t._query,e=t.explicitOrderBy.concat([e]),new mo(t.path,t.collectionGroup,e,t.filters.slice(),t.limit,t.limitType,t.startAt,t.endAt)))},jy),My=(n(By,Ry=Te),By.prototype._apply=function(t){return new Wd(t.firestore,t._converter,Do(t._query,this.Gc,this.zc))},By),Fy=(n(qy,Cy=Te),qy.prototype._apply=function(t){var e=Gy(t,this.type,this.Hc,this.Jc);return new Wd(t.firestore,t._converter,(t=t._query,e=e,new mo(t.path,t.collectionGroup,t.explicitOrderBy.slice(),t.filters.slice(),t.limit,t.limitType,e,t.endAt)))},qy),Vy=(n(Uy,ky=Te),Uy.prototype._apply=function(t){var e=Gy(t,this.type,this.Hc,this.Jc);return new Wd(t.firestore,t._converter,(t=t._query,e=e,new mo(t.path,t.collectionGroup,t.explicitOrderBy.slice(),t.filters.slice(),t.limit,t.limitType,t.startAt,e)))},Uy);function Uy(t,e,n){var r=this;return(r=ky.call(this)||this).type=t,r.Hc=e,r.Jc=n,r}function qy(t,e,n){var r=this;return(r=Cy.call(this)||this).type=t,r.Hc=e,r.Jc=n,r}function By(t,e,n){var r=this;return(r=Ry.call(this)||this).type=t,r.Gc=e,r.zc=n,r}function jy(t,e){var n=this;return(n=xy.call(this)||this).Qc=t,n.Wc=e,n.type="orderBy",n}function Ky(t,e,n){var r=this;return(r=Oy.call(this)||this).Qc=t,r.Kc=e,r.jc=n,r.type="where",r}function Gy(t,c,e,n){if(e[0]=m(e[0]),e[0]instanceof ly)return function(t,e,n,r){if(!n)throw new Ar(Dr.NOT_FOUND,"Can't use a DocumentSnapshot that doesn't exist for "+c+"().");for(var i=[],o=0,s=So(t);o<s.length;o++){var a=s[o];if(a.field.isKeyField())i.push(Si(e,n.key));else{var u=n.data.field(a.field);if(fi(u))throw new Ar(Dr.INVALID_ARGUMENT,'Invalid query. You are trying to start or end a query using a document for which the field "'+a.field+'" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');if(null===u){a=a.field.canonicalString();throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. You are trying to start or end a query using a document for which the field '"+a+"' (used as the orderBy) does not exist.")}i.push(u)}}return new ao(i,r)}(t._query,t.firestore._databaseId,e[0]._document,n);var r=Lp(t.firestore);return function(t,e,n,r,i,o){var s=t.explicitOrderBy;if(i.length>s.length)throw new Ar(Dr.INVALID_ARGUMENT,"Too many arguments provided to "+r+"(). The number of arguments must be less than or equal to the number of orderBy() clauses");for(var a=[],u=0;u<i.length;u++){var c=i[u];if(s[u].field.isKeyField()){if("string"!=typeof c)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. Expected a string for document ID in "+r+"(), but got a "+typeof c);if(!_o(t)&&-1!==c.indexOf("/"))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to "+r+"() must be a plain document ID, but '"+c+"' contains a slash.");var h=t.path.child($r.fromString(c));if(!mi.isDocumentKey(h))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to "+r+"() must result in a valid document path, but '"+h+"' is not because it contains an odd number of segments.");h=new mi(h);a.push(Si(e,h))}else{c=ty(n,r,c);a.push(c)}}return new ao(a,o)}(t._query,t.firestore._databaseId,r,c,e,n)}function Qy(t,e,n){if("string"==typeof(n=m(n))){if(""===n)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.");if(!_o(e)&&-1!==n.indexOf("/"))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '"+n+"' contains a '/' character.");e=e.path.child($r.fromString(n));if(!mi.isDocumentKey(e))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '"+e+"' is not because it has an odd number of segments ("+e.length+").");return Si(t,new mi(e))}if(n instanceof Hd)return Si(t,n._key);throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: "+Bd(n)+".")}function zy(t,e){if(!Array.isArray(t)||0===t.length)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid Query. A non-empty array is required for '"+e.toString()+"' filters.");if(10<t.length)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid Query. '"+e.toString()+"' filters support a maximum of 10 elements in the value array.")}function Hy(t,e,n){if(!n.isEqual(e))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '"+e.toString()+"' and so you must also use '"+e.toString()+"' as your first argument to orderBy(), but your first orderBy() is on field '"+n.toString()+"' instead.")}Wy.prototype.convertValue=function(t,e){switch(void 0===e&&(e="none"),bi(t)){case 0:return null;case 1:return t.booleanValue;case 2:return hi(t.integerValue||t.doubleValue);case 3:return this.convertTimestamp(t.timestampValue);case 4:return this.convertServerTimestamp(t,e);case 5:return t.stringValue;case 6:return this.convertBytes(li(t.bytesValue));case 7:return this.convertReference(t.referenceValue);case 8:return this.convertGeoPoint(t.geoPointValue);case 9:return this.convertArray(t.arrayValue,e);case 10:return this.convertObject(t.mapValue,e);default:throw Mr()}},Wy.prototype.convertObject=function(t,n){var r=this,i={};return Wr(t.fields||{},function(t,e){i[t]=r.convertValue(e,n)}),i},Wy.prototype.convertGeoPoint=function(t){return new wp(hi(t.latitude),hi(t.longitude))},Wy.prototype.convertArray=function(t,e){var n=this;return(t.values||[]).map(function(t){return n.convertValue(t,e)})},Wy.prototype.convertServerTimestamp=function(t,e){switch(e){case"previous":var n=function t(e){e=e.mapValue.fields.__previous_value__;return fi(e)?t(e):e}(t);return null==n?null:this.convertValue(n,e);case"estimate":return this.convertTimestamp(di(t));default:return null}},Wy.prototype.convertTimestamp=function(t){t=ci(t);return new Kr(t.seconds,t.nanos)},Wy.prototype.convertDocumentKey=function(t,e){var n=$r.fromString(t);Fr(ka(n));t=new Sd(n.get(1),n.get(3)),n=new mi(n.popFirst(5));return t.isEqual(e)||Or("Document "+n+" contains a document reference within a different database ("+t.projectId+"/"+t.database+") which is not supported. It will be treated as a reference in the current database ("+e.projectId+"/"+e.database+") instead."),n},I=Wy;function Wy(){}function Yy(t,e,n){return t?n&&(n.merge||n.mergeFields)?t.toFirestore(e,n):t.toFirestore(e):e}var Xy,Jy=(n(tg,Xy=I),tg.prototype.convertBytes=function(t){return new vp(t)},tg.prototype.convertReference=function(t){t=this.convertDocumentKey(t,this.firestore._databaseId);return new Hd(this.firestore,null,t)},tg),$y=(Zy.prototype.set=function(t,e,n){this._verifyNotCommitted();t=eg(t,this._firestore),e=Yy(t._converter,e,n),n=Pp(this._dataReader,"WriteBatch.set",t._key,e,null!==t._converter,n);return this._mutations.push(n.toMutation(t._key,es.none())),this},Zy.prototype.update=function(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];this._verifyNotCommitted();t=eg(t,this._firestore),e="string"==typeof(e=m(e))||e instanceof mp?Zp(this._dataReader,"WriteBatch.update",t._key,e,n,r):$p(this._dataReader,"WriteBatch.update",t._key,e);return this._mutations.push(e.toMutation(t._key,es.exists(!0))),this},Zy.prototype.delete=function(t){this._verifyNotCommitted();t=eg(t,this._firestore);return this._mutations=this._mutations.concat(new ws(t._key,es.none())),this},Zy.prototype.commit=function(){return this._verifyNotCommitted(),this._committed=!0,0<this._mutations.length?this._commitHandler(this._mutations):Promise.resolve()},Zy.prototype._verifyNotCommitted=function(){if(this._committed)throw new Ar(Dr.FAILED_PRECONDITION,"A write batch can no longer be used after commit() has been called.")},Zy);function Zy(t,e){this._firestore=t,this._commitHandler=e,this._mutations=[],this._committed=!1,this._dataReader=Lp(t)}function tg(t){var e=this;return(e=Xy.call(this)||this).firestore=t,e}function eg(t,e){if((t=m(t)).firestore!==e)throw new Ar(Dr.INVALID_ARGUMENT,"Provided document reference is from a different Firestore instance.");return t}var ng,rg=(n(ig,ng=I),ig.prototype.convertBytes=function(t){return new vp(t)},ig.prototype.convertReference=function(t){t=this.convertDocumentKey(t,this.firestore._databaseId);return new Hd(this.firestore,null,t)},ig);function ig(t){var e=this;return(e=ng.call(this)||this).firestore=t,e}function og(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];t=jd(t,Hd);var o=jd(t.firestore,hp),s=Lp(o);return ag(o,[("string"==typeof(e=m(e))||e instanceof mp?Zp(s,"updateDoc",t._key,e,n,r):$p(s,"updateDoc",t._key,e)).toMutation(t._key,es.exists(!0))])}function sg(e){for(var n=[],t=1;t<arguments.length;t++)n[t-1]=arguments[t];e=m(e);var r={includeMetadataChanges:!1},i=0;"object"!=typeof n[i]||ap(n[i])||(r=n[i],i++);var o,s,a,u,c,h,l={includeMetadataChanges:r.includeMetadataChanges};return ap(n[i])&&(o=n[i],n[i]=null===(r=o.next)||void 0===r?void 0:r.bind(o),n[i+1]=null===(r=o.error)||void 0===r?void 0:r.bind(o),n[i+2]=null===(r=o.complete)||void 0===r?void 0:r.bind(o)),e instanceof Hd?(a=jd(e.firestore,hp),u=bo(e._key.path),h={next:function(t){n[i]&&n[i](ug(a,e,t))},error:n[i+1],complete:n[i+2]}):(s=jd(e,Wd),a=jd(s.firestore,hp),u=s._query,c=new rg(a),h={next:function(t){n[i]&&n[i](new Iy(a,c,s,t))},error:n[i+1],complete:n[i+2]},Dy(e._query)),function(n,t,e){var r=this,i=new nd(h),o=new af(t,i,e);return n.asyncQueue.enqueueAndForget(function(){return y(r,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=rf,[4,wd(n)];case 1:return[2,e.apply(void 0,[t.sent(),o])]}})})}),function(){i.Wo(),n.asyncQueue.enqueueAndForget(function(){return y(r,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=of,[4,wd(n)];case 1:return[2,e.apply(void 0,[t.sent(),o])]}})})})}}(dp(a),u,l)}function ag(t,e){return function(n,r){var t=this,i=new Za;return n.asyncQueue.enqueueAndForget(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=Sf,[4,bd(n)];case 1:return[2,e.apply(void 0,[t.sent(),r,i])]}})})}),i.promise}(dp(t),e)}function ug(t,e,n){var r=n.docs.get(e._key),i=new rg(t);return new by(t,i,e._key,r,new vy(n.hasPendingWrites,n.fromCache),e._converter)}var cg,hg=(fg.prototype.get=function(t){var e=this,n=eg(t,this._firestore),r=new Jy(this._firestore);return this._transaction.lookup([n._key]).then(function(t){if(!t||1!==t.length)return Mr();t=t[0];if(t.isFoundDocument())return new ly(e._firestore,r,t.key,t,n._converter);if(t.isNoDocument())return new ly(e._firestore,r,n._key,null,n._converter);throw Mr()})},fg.prototype.set=function(t,e,n){t=eg(t,this._firestore),e=Yy(t._converter,e,n),n=Pp(this._dataReader,"Transaction.set",t._key,e,null!==t._converter,n);return this._transaction.set(t._key,n),this},fg.prototype.update=function(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];t=eg(t,this._firestore),e="string"==typeof(e=m(e))||e instanceof mp?Zp(this._dataReader,"Transaction.update",t._key,e,n,r):$p(this._dataReader,"Transaction.update",t._key,e);return this._transaction.update(t._key,e),this},fg.prototype.delete=function(t){t=eg(t,this._firestore);return this._transaction.delete(t._key),this},n(lg,cg=fg),lg.prototype.get=function(t){var e=this,n=eg(t,this._firestore),r=new rg(this._firestore);return cg.prototype.get.call(this,t).then(function(t){return new by(e._firestore,r,n._key,t._document,new vy(!1,!1),n._converter)})},lg);function lg(t,e){var n=this;return(n=cg.call(this,t,e)||this)._firestore=t,n}function fg(t,e){this._firestore=t,this._transaction=e,this._dataReader=Lp(t)}function dg(){if("undefined"==typeof Uint8Array)throw new Ar(Dr.UNIMPLEMENTED,"Uint8Arrays are not available in this environment.")}function pg(){if("undefined"==typeof atob)throw new Ar(Dr.UNIMPLEMENTED,"Blobs are unavailable in Firestore in this environment.")}var yg,gg=(Tg.fromBase64String=function(t){return pg(),new Tg(vp.fromBase64String(t))},Tg.fromUint8Array=function(t){return dg(),new Tg(vp.fromUint8Array(t))},Tg.prototype.toBase64=function(){return pg(),this._delegate.toBase64()},Tg.prototype.toUint8Array=function(){return dg(),this._delegate.toUint8Array()},Tg.prototype.isEqual=function(t){return this._delegate.isEqual(t._delegate)},Tg.prototype.toString=function(){return"Blob(base64: "+this.toBase64()+")"},Tg),mg=(Eg.prototype.enableIndexedDbPersistence=function(t,e){return function(t,e){gp(t=jd(t,hp));var n=dp(t),r=t._freezeSettings(),t=new Xf;return yp(n,t,new Wf(t,r.cacheSizeBytes,null==e?void 0:e.forceOwnership))}(t._delegate,{forceOwnership:e})},Eg.prototype.enableMultiTabIndexedDbPersistence=function(t){return function(t){gp(t=jd(t,hp));var e=dp(t),n=t._freezeSettings(),t=new Xf;return yp(e,t,new Yf(t,n.cacheSizeBytes))}(t._delegate)},Eg.prototype.clearIndexedDbPersistence=function(t){return function(n){var t=this;if(n._initialized&&!n._terminated)throw new Ar(Dr.FAILED_PRECONDITION,"Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.");var r=new Za;return n._queue.enqueueAndForgetEvenWhileRestricted(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,function(n){return y(this,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return nu.yt()?(e=n+"main",[4,nu.delete(e)]):[2,Promise.resolve()];case 1:return t.sent(),[2]}})})}(Kc(n._databaseId,n._persistenceKey))];case 1:return t.sent(),r.resolve(),[3,3];case 2:return e=t.sent(),r.reject(e),[3,3];case 3:return[2]}})})}),r.promise}(t._delegate)},Eg),vg=(Object.defineProperty(Ig.prototype,"_databaseId",{get:function(){return this._delegate._databaseId},enumerable:!1,configurable:!0}),Ig.prototype.settings=function(t){t.merge&&delete(t=Object.assign(Object.assign({},this._delegate._getSettings()),t)).merge,this._delegate._setSettings(t)},Ig.prototype.useEmulator=function(t,e){var n,r;n=this._delegate,r=t,t=e,"firestore.googleapis.com"!==(e=(n=jd(n,zd))._getSettings()).host&&e.host!==r&&Lr("Host has been set in both settings() and useEmulator(), emulator host will be used"),n._setSettings(Object.assign(Object.assign({},e),{host:r+":"+t,ssl:!1}))},Ig.prototype.enableNetwork=function(){return function(i){var t=this;return i.asyncQueue.enqueue(function(){return y(t,void 0,void 0,function(){var n,r;return g(this,function(t){switch(t.label){case 0:return[4,gd(i)];case 1:return n=t.sent(),[4,vd(i)];case 2:return r=t.sent(),[2,(n.setNetworkEnabled(!0),(e=r).$r.delete(0),Dl(e))]}var e})})})}(dp(jd(this._delegate,hp)))},Ig.prototype.disableNetwork=function(){return function(r){var t=this;return r.asyncQueue.enqueue(function(){return y(t,void 0,void 0,function(){var e,n;return g(this,function(t){switch(t.label){case 0:return[4,gd(r)];case 1:return e=t.sent(),[4,vd(r)];case 2:return n=t.sent(),[2,(e.setNetworkEnabled(!1),function(n){return y(this,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return(e=n).$r.add(0),[4,Al(e)];case 1:return t.sent(),e.Br.set("Offline"),[2]}})})}(n))]}})})})}(dp(jd(this._delegate,hp)))},Ig.prototype.enablePersistence=function(t){var e=!1,n=!1;return t&&Vd("synchronizeTabs",e=!!t.synchronizeTabs,"experimentalForceOwningTab",n=!!t.experimentalForceOwningTab),e?this.Yc.enableMultiTabIndexedDbPersistence(this):this.Yc.enableIndexedDbPersistence(this,n)},Ig.prototype.clearPersistence=function(){return this.Yc.clearIndexedDbPersistence(this)},Ig.prototype.terminate=function(){return this.Xc&&(this.Xc._removeServiceInstance("firestore"),this.Xc._removeServiceInstance("firestore-exp")),this._delegate._delete()},Ig.prototype.waitForPendingWrites=function(){return function(n){var t=this,r=new Za;return n.asyncQueue.enqueueAndForget(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=kf,[4,bd(n)];case 1:return[2,e.apply(void 0,[t.sent(),r])]}})})}),r.promise}(dp(jd(this._delegate,hp)))},Ig.prototype.onSnapshotsInSync=function(t){return e=this._delegate,t=t,function(n,t){var e=this,r=new nd(t);return n.asyncQueue.enqueueAndForget(function(){return y(e,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=function(t,e){t.Gr.add(e),e.next()},[4,wd(n)];case 1:return[2,e.apply(void 0,[t.sent(),r])]}})})}),function(){r.Wo(),n.asyncQueue.enqueueAndForget(function(){return y(e,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=function(t,e){t.Gr.delete(e)},[4,wd(n)];case 1:return[2,e.apply(void 0,[t.sent(),r])]}})})})}}(dp(jd(e,hp)),ap(t)?t:{next:t});var e},Object.defineProperty(Ig.prototype,"app",{get:function(){if(!this.Xc)throw new Ar(Dr.FAILED_PRECONDITION,"Firestore was not initialized using the Firebase SDK. 'app' is not available");return this.Xc},enumerable:!1,configurable:!0}),Ig.prototype.collection=function(t){try{return new jg(this,ep(this._delegate,t))}catch(t){throw xg(t,"collection()","Firestore.collection()")}},Ig.prototype.doc=function(t){try{return new Cg(this,np(this._delegate,t))}catch(t){throw xg(t,"doc()","Firestore.doc()")}},Ig.prototype.collectionGroup=function(t){try{return new Ug(this,function(t,e){if(t=jd(t,zd),Md("collectionGroup","collection id",e),0<=e.indexOf("/"))throw new Ar(Dr.INVALID_ARGUMENT,"Invalid collection ID '"+e+"' passed to function collectionGroup(). Collection IDs must not contain '/'.");return new Wd(t,null,(e=e,new mo($r.emptyPath(),e)))}(this._delegate,t))}catch(t){throw xg(t,"collectionGroup()","Firestore.collectionGroup()")}},Ig.prototype.runTransaction=function(e){var n,r=this;return function(n,r){var t=this,i=new Za;return n.asyncQueue.enqueueAndForget(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return[4,yd(n).then(function(t){return t.datastore})];case 1:return e=t.sent(),new od(n.asyncQueue,e,r,i).run(),[2]}})})}),i.promise}(dp(n=this._delegate),function(t){return t=new hg(n,t),e(new _g(r,t))})},Ig.prototype.batch=function(){var e=this;return dp(this._delegate),new Sg(new $y(this._delegate,function(t){return ag(e._delegate,t)}))},Ig.prototype.loadBundle=function(t){throw new Ar(Dr.FAILED_PRECONDITION,'"loadBundle()" does not exist, have you imported "firebase/firestore/bundle"?')},Ig.prototype.namedQuery=function(t){throw new Ar(Dr.FAILED_PRECONDITION,'"namedQuery()" does not exist, have you imported "firebase/firestore/bundle"?')},Ig),bg=(n(wg,yg=I),wg.prototype.convertBytes=function(t){return new gg(new vp(t))},wg.prototype.convertReference=function(t){t=this.convertDocumentKey(t,this.firestore._databaseId);return Cg.Zc(t,this.firestore,null)},wg);function wg(t){var e=this;return(e=yg.call(this)||this).firestore=t,e}function Ig(t,e,n){var r=this;this._delegate=e,this.Yc=n,this.INTERNAL={delete:function(){return r.terminate()}},t instanceof Sd||(this.Xc=t)}function Eg(){}function Tg(t){this._delegate=t}var _g=(kg.prototype.get=function(t){var e=this,n=Yg(t);return this._delegate.get(n).then(function(t){return new Fg(e._firestore,new by(e._firestore._delegate,e._userDataWriter,t._key,t._document,t.metadata,n._converter))})},kg.prototype.set=function(t,e,n){t=Yg(t);return n?(Fd("Transaction.set",n),this._delegate.set(t,e,n)):this._delegate.set(t,e),this},kg.prototype.update=function(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];var o=Yg(t);return 2===arguments.length?this._delegate.update(o,e):(t=this._delegate).update.apply(t,s([o,e,n],r)),this},kg.prototype.delete=function(t){t=Yg(t);return this._delegate.delete(t),this},kg),Sg=(Ag.prototype.set=function(t,e,n){t=Yg(t);return n?(Fd("WriteBatch.set",n),this._delegate.set(t,e,n)):this._delegate.set(t,e),this},Ag.prototype.update=function(t,e,n){for(var r=[],i=3;i<arguments.length;i++)r[i-3]=arguments[i];var o=Yg(t);return 2===arguments.length?this._delegate.update(o,e):(t=this._delegate).update.apply(t,s([o,e,n],r)),this},Ag.prototype.delete=function(t){t=Yg(t);return this._delegate.delete(t),this},Ag.prototype.commit=function(){return this._delegate.commit()},Ag),Ng=(Dg.prototype.fromFirestore=function(t,e){t=new wy(this._firestore._delegate,this._userDataWriter,t._key,t._document,t.metadata,null);return this._delegate.fromFirestore(new Vg(this._firestore,t),null!=e?e:{})},Dg.prototype.toFirestore=function(t,e){return e?this._delegate.toFirestore(t,e):this._delegate.toFirestore(t)},Dg.tu=function(t,e){var n=Dg.eu,r=n.get(t);r||(r=new WeakMap,n.set(t,r));n=r.get(e);return n||(n=new Dg(t,new bg(t),e),r.set(e,n)),n},Dg);function Dg(t,e,n){this._firestore=t,this._userDataWriter=e,this._delegate=n}function Ag(t){this._delegate=t}function kg(t,e){this._firestore=t,this._delegate=e,this._userDataWriter=new bg(t)}Ng.eu=new WeakMap;var Cg=(Rg.nu=function(t,e,n){if(t.length%2!=0)throw new Ar(Dr.INVALID_ARGUMENT,"Invalid document reference. Document references must have an even number of segments, but "+t.canonicalString()+" has "+t.length);return new Rg(e,new Hd(e._delegate,n,new mi(t)))},Rg.Zc=function(t,e,n){return new Rg(e,new Hd(e._delegate,n,t))},Object.defineProperty(Rg.prototype,"id",{get:function(){return this._delegate.id},enumerable:!1,configurable:!0}),Object.defineProperty(Rg.prototype,"parent",{get:function(){return new jg(this.firestore,this._delegate.parent)},enumerable:!1,configurable:!0}),Object.defineProperty(Rg.prototype,"path",{get:function(){return this._delegate.path},enumerable:!1,configurable:!0}),Rg.prototype.collection=function(t){try{return new jg(this.firestore,ep(this._delegate,t))}catch(t){throw xg(t,"collection()","DocumentReference.collection()")}},Rg.prototype.isEqual=function(t){return(t=m(t))instanceof Hd&&rp(this._delegate,t)},Rg.prototype.set=function(t,e){e=Fd("DocumentReference.set",e);try{return function(t,e,n){t=jd(t,Hd);var r=jd(t.firestore,hp),e=Yy(t._converter,e,n);return ag(r,[Pp(Lp(r),"setDoc",t._key,e,null!==t._converter,n).toMutation(t._key,es.none())])}(this._delegate,t,e)}catch(t){throw xg(t,"setDoc()","DocumentReference.set()")}},Rg.prototype.update=function(t,e){for(var n=[],r=2;r<arguments.length;r++)n[r-2]=arguments[r];try{return 1===arguments.length?og(this._delegate,t):og.apply(void 0,s([this._delegate,t,e],n))}catch(t){throw xg(t,"updateDoc()","DocumentReference.update()")}},Rg.prototype.delete=function(){return ag(jd((t=this._delegate).firestore,hp),[new ws(t._key,es.none())]);var t},Rg.prototype.onSnapshot=function(){for(var e=this,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var r=Og(t),i=Lg(t,function(t){return new Fg(e.firestore,new by(e.firestore._delegate,e._userDataWriter,t._key,t._document,t.metadata,e._delegate._converter))});return sg(this._delegate,r,i)},Rg.prototype.get=function(t){var e=this;return("cache"===(null==t?void 0:t.source)?function(e){e=jd(e,Hd);var n=jd(e.firestore,hp),t=dp(n),r=new rg(n);return function(n,r){var t=this,i=new Za;return n.asyncQueue.enqueueAndForget(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=function(o,s,a){return y(this,void 0,void 0,function(){var r,i;return g(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,(e=s,(n=o).persistence.runTransaction("read document","readonly",function(t){return n.Mn.mn(t,e)}))];case 1:return(i=t.sent()).isFoundDocument()?a.resolve(i):i.isNoDocument()?a.resolve(null):a.reject(new Ar(Dr.UNAVAILABLE,"Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)")),[3,3];case 2:return r=t.sent(),i=Wl(r,"Failed to get document '"+s+" from cache"),a.reject(i),[3,3];case 3:return[2]}var e,n})})},[4,md(n)];case 1:return[2,e.apply(void 0,[t.sent(),r,i])]}})})}),i.promise}(t,e._key).then(function(t){return new by(n,r,e._key,t,new vy(null!==t&&t.hasLocalMutations,!0),e._converter)})}:"server"===(null==t?void 0:t.source)?function(e){e=jd(e,Hd);var n=jd(e.firestore,hp);return Id(dp(n),e._key,{source:"server"}).then(function(t){return ug(n,e,t)})}:function(e){e=jd(e,Hd);var n=jd(e.firestore,hp);return Id(dp(n),e._key).then(function(t){return ug(n,e,t)})})(this._delegate).then(function(t){return new Fg(e.firestore,new by(e.firestore._delegate,e._userDataWriter,t._key,t._document,t.metadata,e._delegate._converter))})},Rg.prototype.withConverter=function(t){return new Rg(this.firestore,t?this._delegate.withConverter(Ng.tu(this.firestore,t)):this._delegate.withConverter(null))},Rg);function Rg(t,e){this.firestore=t,this._delegate=e,this._userDataWriter=new bg(t)}function xg(t,e,n){return t.message=t.message.replace(e,n),t}function Og(t){for(var e=0,n=t;e<n.length;e++){var r=n[e];if("object"==typeof r&&!ap(r))return r}return{}}function Lg(t,e){var n;return{next:function(t){n.next&&n.next(e(t))},error:null===(t=(n=ap(t[0])?t[0]:ap(t[1])?t[1]:"function"==typeof t[0]?{next:t[0],error:t[1],complete:t[2]}:{next:t[1],error:t[2],complete:t[3]}).error)||void 0===t?void 0:t.bind(n),complete:null===(t=n.complete)||void 0===t?void 0:t.bind(n)}}var Pg,Mg,Fg=(Object.defineProperty(Wg.prototype,"ref",{get:function(){return new Cg(this._firestore,this._delegate.ref)},enumerable:!1,configurable:!0}),Object.defineProperty(Wg.prototype,"id",{get:function(){return this._delegate.id},enumerable:!1,configurable:!0}),Object.defineProperty(Wg.prototype,"metadata",{get:function(){return this._delegate.metadata},enumerable:!1,configurable:!0}),Object.defineProperty(Wg.prototype,"exists",{get:function(){return this._delegate.exists()},enumerable:!1,configurable:!0}),Wg.prototype.data=function(t){return this._delegate.data(t)},Wg.prototype.get=function(t,e){return this._delegate.get(t,e)},Wg.prototype.isEqual=function(t){return Ny(this._delegate,t._delegate)},Wg),Vg=(n(Hg,Mg=Fg),Hg.prototype.data=function(t){return this._delegate.data(t)},Hg),Ug=(zg.prototype.where=function(t,e,n){try{return new zg(this.firestore,Ay(this._delegate,(r=n,i=e,o=yy("where",t),new Ly(o,i,r))))}catch(t){throw xg(t,/(orderBy|where)\(\)/,"Query.$1()")}var r,i,o},zg.prototype.orderBy=function(t,e){try{return new zg(this.firestore,Ay(this._delegate,(n=void 0===e?"asc":e,r=yy("orderBy",t),new Py(r,n))))}catch(t){throw xg(t,/(orderBy|where)\(\)/,"Query.$1()")}var n,r},zg.prototype.limit=function(t){try{return new zg(this.firestore,Ay(this._delegate,(Kd("limit",e=t),new My("limit",e,"F"))))}catch(t){throw xg(t,"limit()","Query.limit()")}var e},zg.prototype.limitToLast=function(t){try{return new zg(this.firestore,Ay(this._delegate,(Kd("limitToLast",e=t),new My("limitToLast",e,"L"))))}catch(t){throw xg(t,"limitToLast()","Query.limitToLast()")}var e},zg.prototype.startAt=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];try{return new zg(this.firestore,Ay(this._delegate,function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Fy("startAt",t,!0)}.apply(void 0,t)))}catch(t){throw xg(t,"startAt()","Query.startAt()")}},zg.prototype.startAfter=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];try{return new zg(this.firestore,Ay(this._delegate,function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Fy("startAfter",t,!1)}.apply(void 0,t)))}catch(t){throw xg(t,"startAfter()","Query.startAfter()")}},zg.prototype.endBefore=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];try{return new zg(this.firestore,Ay(this._delegate,function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Vy("endBefore",t,!0)}.apply(void 0,t)))}catch(t){throw xg(t,"endBefore()","Query.endBefore()")}},zg.prototype.endAt=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];try{return new zg(this.firestore,Ay(this._delegate,function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Vy("endAt",t,!1)}.apply(void 0,t)))}catch(t){throw xg(t,"endAt()","Query.endAt()")}},zg.prototype.isEqual=function(t){return ip(this._delegate,t._delegate)},zg.prototype.get=function(t){var e=this;return("cache"===(null==t?void 0:t.source)?function(e){e=jd(e,Wd);var n=jd(e.firestore,hp),t=dp(n),r=new rg(n);return function(n,r){var t=this,i=new Za;return n.asyncQueue.enqueueAndForget(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=function(i,o,s){return y(this,void 0,void 0,function(){var e,n,r;return g(this,function(t){switch(t.label){case 0:return t.trys.push([0,2,,3]),[4,ah(i,o,!0)];case 1:return r=t.sent(),e=new vf(o,r.Bn),n=e._o(r.documents),n=e.applyChanges(n,!1),s.resolve(n.snapshot),[3,3];case 2:return n=t.sent(),r=Wl(n,"Failed to execute query '"+o+" against cache"),s.reject(r),[3,3];case 3:return[2]}})})},[4,md(n)];case 1:return[2,e.apply(void 0,[t.sent(),r,i])]}})})}),i.promise}(t,e._query).then(function(t){return new Iy(n,r,e,t)})}:"server"===(null==t?void 0:t.source)?function(e){e=jd(e,Wd);var n=jd(e.firestore,hp),t=dp(n),r=new rg(n);return Ed(t,e._query,{source:"server"}).then(function(t){return new Iy(n,r,e,t)})}:function(e){e=jd(e,Wd);var n=jd(e.firestore,hp),t=dp(n),r=new rg(n);return Dy(e._query),Ed(t,e._query).then(function(t){return new Iy(n,r,e,t)})})(this._delegate).then(function(t){return new Bg(e.firestore,new Iy(e.firestore._delegate,e._userDataWriter,e._delegate,t._snapshot))})},zg.prototype.onSnapshot=function(){for(var e=this,t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var r=Og(t),i=Lg(t,function(t){return new Bg(e.firestore,new Iy(e.firestore._delegate,e._userDataWriter,e._delegate,t._snapshot))});return sg(this._delegate,r,i)},zg.prototype.withConverter=function(t){return new zg(this.firestore,t?this._delegate.withConverter(Ng.tu(this.firestore,t)):this._delegate.withConverter(null))},zg),qg=(Object.defineProperty(Qg.prototype,"type",{get:function(){return this._delegate.type},enumerable:!1,configurable:!0}),Object.defineProperty(Qg.prototype,"doc",{get:function(){return new Vg(this._firestore,this._delegate.doc)},enumerable:!1,configurable:!0}),Object.defineProperty(Qg.prototype,"oldIndex",{get:function(){return this._delegate.oldIndex},enumerable:!1,configurable:!0}),Object.defineProperty(Qg.prototype,"newIndex",{get:function(){return this._delegate.newIndex},enumerable:!1,configurable:!0}),Qg),Bg=(Object.defineProperty(Gg.prototype,"query",{get:function(){return new Ug(this._firestore,this._delegate.query)},enumerable:!1,configurable:!0}),Object.defineProperty(Gg.prototype,"metadata",{get:function(){return this._delegate.metadata},enumerable:!1,configurable:!0}),Object.defineProperty(Gg.prototype,"size",{get:function(){return this._delegate.size},enumerable:!1,configurable:!0}),Object.defineProperty(Gg.prototype,"empty",{get:function(){return this._delegate.empty},enumerable:!1,configurable:!0}),Object.defineProperty(Gg.prototype,"docs",{get:function(){var e=this;return this._delegate.docs.map(function(t){return new Vg(e._firestore,t)})},enumerable:!1,configurable:!0}),Gg.prototype.docChanges=function(t){var e=this;return this._delegate.docChanges(t).map(function(t){return new qg(e._firestore,t)})},Gg.prototype.forEach=function(e,n){var r=this;this._delegate.forEach(function(t){e.call(n,new Vg(r._firestore,t))})},Gg.prototype.isEqual=function(t){return Ny(this._delegate,t._delegate)},Gg),jg=(n(Kg,Pg=Ug),Object.defineProperty(Kg.prototype,"id",{get:function(){return this._delegate.id},enumerable:!1,configurable:!0}),Object.defineProperty(Kg.prototype,"path",{get:function(){return this._delegate.path},enumerable:!1,configurable:!0}),Object.defineProperty(Kg.prototype,"parent",{get:function(){var t=this._delegate.parent;return t?new Cg(this.firestore,t):null},enumerable:!1,configurable:!0}),Kg.prototype.doc=function(t){try{return new Cg(this.firestore,void 0===t?np(this._delegate):np(this._delegate,t))}catch(t){throw xg(t,"doc()","CollectionReference.doc()")}},Kg.prototype.add=function(t){var e,n,r,i=this;return e=this._delegate,n=t,t=jd(e.firestore,hp),r=np(e),n=Yy(e._converter,n),ag(t,[Pp(Lp(e.firestore),"addDoc",r._key,n,null!==e._converter,{}).toMutation(r._key,es.exists(!1))]).then(function(){return r}).then(function(t){return new Cg(i.firestore,t)})},Kg.prototype.isEqual=function(t){return rp(this._delegate,t._delegate)},Kg.prototype.withConverter=function(t){return new Kg(this.firestore,t?this._delegate.withConverter(Ng.tu(this.firestore,t)):this._delegate.withConverter(null))},Kg);function Kg(t,e){var n=this;return(n=Pg.call(this,t,e)||this).firestore=t,n._delegate=e,n}function Gg(t,e){this._firestore=t,this._delegate=e}function Qg(t,e){this._firestore=t,this._delegate=e}function zg(t,e){this.firestore=t,this._delegate=e,this._userDataWriter=new bg(t)}function Hg(){return null!==Mg&&Mg.apply(this,arguments)||this}function Wg(t,e){this._firestore=t,this._delegate=e}function Yg(t){return jd(t,Hd)}Jg.documentId=function(){return new Jg(ti.keyField().canonicalString())},Jg.prototype.isEqual=function(t){return(t=m(t))instanceof mp&&this._delegate._internalPath.isEqual(t._internalPath)},Te=Jg,Xg.serverTimestamp=function(){var t=new Gp("serverTimestamp");return t._methodName="FieldValue.serverTimestamp",new Xg(t)},Xg.delete=function(){var t=new Fp("deleteField");return t._methodName="FieldValue.delete",new Xg(t)},Xg.arrayUnion=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new Qp("arrayUnion",t)}.apply(void 0,t);return n._methodName="FieldValue.arrayUnion",new Xg(n)},Xg.arrayRemove=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];var n=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return new zp("arrayRemove",t)}.apply(void 0,t);return n._methodName="FieldValue.arrayRemove",new Xg(n)},Xg.increment=function(t){t=new Hp("increment",t);return t._methodName="FieldValue.increment",new Xg(t)},Xg.prototype.isEqual=function(t){return this._delegate.isEqual(t._delegate)},I=Xg;function Xg(t){this._delegate=t}function Jg(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];this._delegate=new(mp.bind.apply(mp,s([void 0],t)))}function $g(t){return e=this._delegate,s=t,n=dp(e=jd(e,hp)),t=new cp,function(n,t,r){var e,i=this,o=(e=s,t=ll(t),e=function(t){if(t instanceof Uint8Array)return ed(t,void 0);if(t instanceof ArrayBuffer)return ed(new Uint8Array(t),void 0);if(t instanceof ReadableStream)return t.getReader();throw new Error("Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream")}("string"==typeof e?(new TextEncoder).encode(e):e),new rd(e,t));n.asyncQueue.enqueueAndForget(function(){return y(i,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=Gf,[4,bd(n)];case 1:return e.apply(void 0,[t.sent(),o,r]),[2]}})})})}(n,e._databaseId,t),t;var e,s,n}function Zg(t){var e=this,n=this._delegate,t=t;return function(n,r){var t=this;return n.asyncQueue.enqueue(function(){return y(t,void 0,void 0,function(){var e;return g(this,function(t){switch(t.label){case 0:return e=function(t,e){var n=t;return n.persistence.runTransaction("Get named query","readonly",function(t){return n.Qe.getNamedQuery(t,e)})},[4,md(n)];case 1:return[2,e.apply(void 0,[t.sent(),r])]}})})})}(dp(n=jd(n,hp)),t).then(function(t){return t?new Wd(n,null,t.query):null}).then(function(t){return t?new Ug(e,t):null})}var tm=(em.prototype.setInstantiationMode=function(t){return this.instantiationMode=t,this},em.prototype.setMultipleInstances=function(t){return this.multipleInstances=t,this},em.prototype.setServiceProps=function(t){return this.serviceProps=t,this},em.prototype.setInstanceCreatedCallback=function(t){return this.onInstanceCreated=t,this},em);function em(t,e,n){this.name=t,this.instanceFactory=e,this.type=n,this.multipleInstances=!1,this.serviceProps={},this.instantiationMode="LAZY",this.onInstanceCreated=null}var nm,rm,im={Firestore:vg,GeoPoint:wp,Timestamp:Kr,Blob:gg,Transaction:_g,WriteBatch:Sg,DocumentReference:Cg,DocumentSnapshot:Fg,Query:Ug,QueryDocumentSnapshot:Vg,QuerySnapshot:Bg,CollectionReference:jg,FieldPath:Te,FieldValue:I,setLogLevel:function(t){kr.setLogLevel(t)},CACHE_SIZE_UNLIMITED:-1};(nm=e.default).INTERNAL.registerComponent(new tm("firestore",function(t){var e=t.getProvider("app").getImmediate();return e=e,t=t.getProvider("auth-internal"),new vg(e,new hp(e,t),new mg)},"PUBLIC").setServiceProps(Object.assign({},im))),nm.registerVersion("@firebase/firestore","2.2.5"),(rm=vg).prototype.loadBundle=$g,rm.prototype.namedQuery=Zg}.apply(this,arguments)}catch(t){throw console.error(t),new Error("Cannot instantiate firebase-firestore.js - be sure to load firebase-app.js first.")}});
//# sourceMappingURL=firebase-firestore.js.map


/***/ }),

/***/ "./src/styles/reset.css":
/*!******************************!*\
  !*** ./src/styles/reset.css ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./reset.css */ "./node_modules/css-loader/dist/cjs.js!./src/styles/reset.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_reset_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "./src/styles/style.css":
/*!******************************!*\
  !*** ./src/styles/style.css ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js");
/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./style.css */ "./node_modules/css-loader/dist/cjs.js!./src/styles/style.css");

            

var options = {};

options.insert = "head";
options.singleton = false;

var update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__.default, options);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

var stylesInDom = [];

function getIndexByIdentifier(identifier) {
  var result = -1;

  for (var i = 0; i < stylesInDom.length; i++) {
    if (stylesInDom[i].identifier === identifier) {
      result = i;
      break;
    }
  }

  return result;
}

function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var index = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3]
    };

    if (index !== -1) {
      stylesInDom[index].references++;
      stylesInDom[index].updater(obj);
    } else {
      stylesInDom.push({
        identifier: identifier,
        updater: addStyle(obj, options),
        references: 1
      });
    }

    identifiers.push(identifier);
  }

  return identifiers;
}

function insertStyleElement(options) {
  var style = document.createElement('style');
  var attributes = options.attributes || {};

  if (typeof attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : 0;

    if (nonce) {
      attributes.nonce = nonce;
    }
  }

  Object.keys(attributes).forEach(function (key) {
    style.setAttribute(key, attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.media ? "@media ".concat(obj.media, " {").concat(obj.css, "}") : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  } else {
    style.removeAttribute('media');
  }

  if (sourceMap && typeof btoa !== 'undefined') {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];

    if (Object.prototype.toString.call(newList) !== '[object Array]') {
      return;
    }

    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDom[index].references--;
    }

    var newLastIdentifiers = modulesToDom(newList, options);

    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];

      var _index = getIndexByIdentifier(_identifier);

      if (stylesInDom[_index].references === 0) {
        stylesInDom[_index].updater();

        stylesInDom.splice(_index, 1);
      }
    }

    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__spreadArray": () => (/* binding */ __spreadArray),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

/** @deprecated */
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

/** @deprecated */
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function __spreadArray(to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}


/***/ }),

/***/ "./src/imgs/x-icon.svg":
/*!*****************************!*\
  !*** ./src/imgs/x-icon.svg ***!
  \*****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
module.exports = __webpack_require__.p + "15b3c085a3a44605a8b6.svg";

/***/ }),

/***/ "./src/scripts/book.js":
/*!*****************************!*\
  !*** ./src/scripts/book.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Book)
/* harmony export */ });
function Book(title, author, pageCount, isRead) {
  this.title = title;
  this.author = author;
  this.pageCount = pageCount;
  this.isRead = isRead;
}
Book.prototype.setIsRead = function setIsRead(b) {
  this.isRead = b;
};


/***/ }),

/***/ "./src/scripts/firebase-config.js":
/*!****************************************!*\
  !*** ./src/scripts/firebase-config.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _env__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../env */ "./env.js");


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  apiKey: _env__WEBPACK_IMPORTED_MODULE_0__.default.API_KEY,
  authDomain: _env__WEBPACK_IMPORTED_MODULE_0__.default.AUTH_DOMAIN,
  projectId: _env__WEBPACK_IMPORTED_MODULE_0__.default.PROJECT_ID,
  storageBucket: _env__WEBPACK_IMPORTED_MODULE_0__.default.STORAGE_BUCKET,
  messagingSenderId: _env__WEBPACK_IMPORTED_MODULE_0__.default.MESSAGING_SENDER_ID,
  appId: _env__WEBPACK_IMPORTED_MODULE_0__.default.APP_ID,
});


/***/ }),

/***/ "./src/scripts/library.js":
/*!********************************!*\
  !*** ./src/scripts/library.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ initializeLibrary)
/* harmony export */ });
/* harmony import */ var _styles_reset_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/reset.css */ "./src/styles/reset.css");
/* harmony import */ var _styles_style_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/style.css */ "./src/styles/style.css");
/* harmony import */ var _book__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./book */ "./src/scripts/book.js");
// TODO: refactor styles into a "preload" js bundle





// TODO: refactor so that there's a true "RENDER" function
// which clears all the dynamic content & rerenders it
// TODO: create a library object, which has an addBooks([]) method
// TODO: create a libraryRenderer function, which can take a Library &
// generate DOMelements for it
const library = [];

const bookCntr = document.querySelector(".library");
const modalAddBookCntr = document.querySelector("#modal-container-addbook");
const bookStats = {
  totalBooks: document.querySelector("#total-books"),
  booksRead: document.querySelector("#books-read"),
  pagesRead: document.querySelector("#pages-read"),
};

// * Element generators

function initModalAddBook() {
  // ADD FORM ELEMENTS
  modalAddBookCntr.querySelector(".modal").appendChild(
    getCloseButton(() => {
      modalAddBookCntr.classList.add("hidden");
      Array.from(modalAddBookCntr.querySelectorAll("input")).forEach(
        (input) => {
          input.value = "";
          input.checked = false;
        }
      );
    })
  );

  const modalFormBtn = modalAddBookCntr
    .querySelector("form")
    .querySelector("button");

  modalFormBtn.addEventListener("click", () => {
    if (!validateForm(modalAddBookCntr)) {
      return;
    }

    const bookArgs = [];
    Array.from(modalAddBookCntr.querySelectorAll("input")).forEach((input) => {
      bookArgs.push(input.type === "checkbox" ? input.checked : input.value);
      input.value = "";
      input.checked = false;
    });

    const book = new _book__WEBPACK_IMPORTED_MODULE_2__.default(...bookArgs);
    library.push(book);
    bookCntr.appendChild(getBookElm(book));
    modalAddBookCntr.classList.toggle("hidden");
    updateLibrary();
  });
}

function getBookElm(book) {
  const bookElm = document.createElement("div");

  const bookTitle = getBookPropertyElm(book, "title");
  const bookAuthor = getBookPropertyElm(book, "author");
  const bookPageCount = getBookPropertyElm(book, "pageCount");

  const bookIsRead = getSwitch("is read:", "isRead", book.isRead);
  bookIsRead.addEventListener("change", () => {
    const status = bookIsRead.querySelector("input").checked;
    console.log(`checked status: ${status}`);
    library[library.indexOf(book)].setIsRead(status);
    if (status) {
      bookElm.classList.add("semi-transparent");
    } else {
      bookElm.classList.remove("semi-transparent");
    }
    updateLibrary();
  });

  const bookPropElms = [bookTitle, bookAuthor, bookPageCount, bookIsRead];
  bookPropElms.forEach((bookPropElm) => {
    bookElm.appendChild(bookPropElm);
  });

  const deleteBookBtn = getCloseButton(() => {
    library.splice(
      library.findIndex((b) => b.title === book.title),
      1
    );
    bookCntr.removeChild(bookElm);
    updateLibrary();
  });
  deleteBookBtn.classList.add("hidden");
  bookElm.appendChild(deleteBookBtn);

  ["mouseenter", "mouseleave"].forEach((cardEvent) => {
    bookElm.addEventListener(cardEvent, () => {
      deleteBookBtn.classList.toggle("hidden");
    });
  });

  bookElm.classList.add("book");
  bookElm.classList.add("card");
  if (book.isRead) {
    bookElm.classList.add("semi-transparent");
  }

  return bookElm;
}

function getBookPropertyElm(book, property) {
  const bookPropertyElm = document.createElement("div");
  bookPropertyElm.textContent = book[property];
  bookPropertyElm.classList.add("book-prop");
  bookPropertyElm.classList.add(`book-${property}`);

  return bookPropertyElm;
}

function getSwitch(label, name, isChecked) {
  const inputElm = document.createElement("label");
  inputElm.classList.add("switch");

  const textElm = document.createElement("span");
  textElm.textContent = label;
  textElm.classList.add("switch-label");
  inputElm.appendChild(textElm);

  const inputCheckbox = document.createElement("input");
  inputCheckbox.type = "checkbox";
  inputCheckbox.name = name;
  inputCheckbox.checked = isChecked;
  inputElm.appendChild(inputCheckbox);

  const inputSpanElm = document.createElement("span");
  inputSpanElm.classList.add("switch-span");
  inputElm.appendChild(inputSpanElm);

  return inputElm;
}

// TODO: don't use div as button
// TODO: pass class in as param
// TODO: once above are fixed, give generic name
function getCloseButton(onClick) {
  const closeBtn = document.createElement("div");
  closeBtn.classList.add("close-btn");
  closeBtn.addEventListener("click", onClick);
  return closeBtn;
}

// * FORM VALIDATION
function validateForm(formContainer) {
  const inputs = formContainer.querySelectorAll("input[required]");

  for (let i = 0; i < inputs.length; i++) {
    if (inputs[i].value === "") {
      console.log(`validation failed on input ${inputs[i].name}`);
      validationFailDisplay(inputs[i], "Please fill out this field!", 1);
      return false;
    }

    if (
      inputs[i].name === "title" &&
      library.some((book) => book.title === inputs[i].value)
    ) {
      console.log(
        `validation failed on input ${inputs[i].name} (Can't have multiple books with the same title!)`
      );
      validationFailDisplay(inputs[i], "Title must be unique!", 1);
      return false;
    }
    if (inputs[i].type === "number" && inputs[i].value < 1) {
      console.log(
        `validation failed on input ${inputs[i].name} (you can't have negative pages, silly!)`
      );
      validationFailDisplay(inputs[i], "Page count can't be negative!", 1);
      return false;
    }
  }

  return true;
}

function validationFailDisplay(element, msg, decay) {
  element.classList.remove("validation-failed");
  window.clearTimeout(timeout);
  element.classList.add("validation-failed");
  element.style.animationDuration = `${decay}s`;

  const popup = document.createElement("div");
  popup.classList.add("card");
  popup.classList.add("form-validation-error");
  popup.textContent = msg;
  element.parentElement.appendChild(popup);
  window.setTimeout(timeout, decay * 1000);

  function timeout() {
    element.classList.remove("validation-failed");
    popup.remove();
  }
}

// * LIBRARY STATS
function updateFooterData() {
  bookStats.totalBooks.textContent = library.length;
  bookStats.booksRead.textContent = getBooksRead(library);
  bookStats.pagesRead.textContent = getPagesRead(library);
}

function getBooksRead(libArray) {
  return libArray.reduce((sum, book) => (book.isRead ? sum + 1 : sum), 0);
}
function getPagesRead(libArray) {
  return libArray.reduce(
    (sum, book) => (book.isRead ? sum + +book.pageCount : sum),
    0
  );
}

// * LocalStorage Handling
function saveLibrary() {
  const libJSON = JSON.stringify(library);
  window.localStorage.setItem("libraryRecord", libJSON);
}

function loadLibrary() {
  const libraryRecord = window.localStorage.getItem("libraryRecord");

  // eslint-disable-next-line eqeqeq
  if (!libraryRecord || libraryRecord == {}) {
    loadDemoBooks();
  } else {
    JSON.parse(libraryRecord).forEach((book) => {
      const fullBook = new _book__WEBPACK_IMPORTED_MODULE_2__.default(
        book.title,
        book.author,
        book.pageCount,
        book.isRead
      );
      library.push(fullBook);
    });
    library.forEach((book) => bookCntr.appendChild(getBookElm(book)));
  }
}

function loadDemoBooks() {
  const demoBooks = [
    new _book__WEBPACK_IMPORTED_MODULE_2__.default("Learning JavaScript Design Patterns", "Addy Osmani", 246, false),
    new _book__WEBPACK_IMPORTED_MODULE_2__.default(
      "Introduction to Algorithms",
      "Thomas H. Cormen, et al.",
      1312,
      true
    ),
    new _book__WEBPACK_IMPORTED_MODULE_2__.default(
      "The Pragmatic Programmer",
      "Andrew Hunt, Dave Thomas",
      320,
      false
    ),
    new _book__WEBPACK_IMPORTED_MODULE_2__.default("Clean Code", "Robert Martin", 400, false),
    new _book__WEBPACK_IMPORTED_MODULE_2__.default("The DevOps Handbook", "Gene Kim, et al.", 480, false),
    new _book__WEBPACK_IMPORTED_MODULE_2__.default("Grokking Algorithms", "Aditya Bhargava", 256, true),
  ];
  demoBooks.forEach((book) => library.push(book));
  library.forEach((book) => bookCntr.appendChild(getBookElm(book)));
}

function updateLibrary() {
  updateFooterData();
  saveLibrary();
  console.log("library updated");
}

function initializeLibrary() {
  document.querySelector(".add-book-btn").addEventListener("click", () => {
    modalAddBookCntr.classList.toggle("hidden");
  });

  initModalAddBook();
  loadLibrary();
  updateFooterData();
}

initializeLibrary();


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!**************************************!*\
  !*** ./src/scripts/firebase-init.js ***!
  \**************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ "./node_modules/firebase/app/dist/index.esm.js");
/* harmony import */ var _firebase_config__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebase-config */ "./src/scripts/firebase-config.js");
/* harmony import */ var firebase_firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firebase-firestore */ "./node_modules/firebase/firebase-firestore.js");
/* harmony import */ var firebase_firebase_firestore__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(firebase_firebase_firestore__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var firebase_firebase_auth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firebase-auth */ "./node_modules/firebase/firebase-auth.js");
/* harmony import */ var firebase_firebase_auth__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(firebase_firebase_auth__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _library__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./library */ "./src/scripts/library.js");







firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.initializeApp(_firebase_config__WEBPACK_IMPORTED_MODULE_1__.default);

// * AUTH ---------------------------------------
const auth = firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.auth();
const provider = new firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.auth.GoogleAuthProvider();

const signedInSection = document.querySelector("#when-signed-out");
const signedOutSection = document.querySelector("#when-signed-in");
const signInBtn = document.querySelector("#sign-in-btn");
const signOutBtn = document.querySelector("#sign-out-btn");

signInBtn.addEventListener("click", () => {
  auth.signInWithPopup(provider);
});

signOutBtn.addEventListener("click", () => {
  auth.signOut();
});

const userNameElement = document.querySelector("#user-name");
const userIdElement = document.querySelector("#user-id");

auth.onAuthStateChanged((user) => {
  if (user) {
    signedInSection.classList.add("hidden");
    signedOutSection.classList.remove("hidden");
    userNameElement.textContent = user.displayName;
    userIdElement.textContent = user.uid;
  } else {
    signedOutSection.classList.add("hidden");
    signedInSection.classList.remove("hidden");
    userNameElement.textContent = "no signed in user";
    userIdElement.textContent = "N/A";
  }
});

// * FIRESTORE ---------------------------------------

const db = firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.firestore();

// need a way to listen for when the "add book" button is created,
// and then handle that here

// TODO: fetch books from database
// function getUsersBooks((user, libraryRef) => {

// });

auth.onAuthStateChanged((user) => {
  if (!user) {
    console.log("no user!");
    return;
  }

  const libraryRef = db.collection("library");
  // TODO: write this function...
  (0,_library__WEBPACK_IMPORTED_MODULE_4__.default)((bookData) => {
    const { serverTimestamp } = firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.firestore.FieldValue;

    libraryRef.add({
      uid: user.uid,
      addedTimestamp: serverTimestamp(),
      ...bookData,
    });
  });
});

})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vZGluLWxpYnJhcnkvLi9lbnYuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1saWJyYXJ5Ly4vbm9kZV9tb2R1bGVzL0BmaXJlYmFzZS9hcHAvZGlzdC9pbmRleC5lc20uanMiLCJ3ZWJwYWNrOi8vb2Rpbi1saWJyYXJ5Ly4vbm9kZV9tb2R1bGVzL0BmaXJlYmFzZS9jb21wb25lbnQvZGlzdC9pbmRleC5lc20uanMiLCJ3ZWJwYWNrOi8vb2Rpbi1saWJyYXJ5Ly4vbm9kZV9tb2R1bGVzL0BmaXJlYmFzZS9sb2dnZXIvZGlzdC9pbmRleC5lc20uanMiLCJ3ZWJwYWNrOi8vb2Rpbi1saWJyYXJ5Ly4vbm9kZV9tb2R1bGVzL0BmaXJlYmFzZS91dGlsL2Rpc3QvaW5kZXguZXNtLmpzIiwid2VicGFjazovL29kaW4tbGlicmFyeS8uL3NyYy9zdHlsZXMvcmVzZXQuY3NzIiwid2VicGFjazovL29kaW4tbGlicmFyeS8uL3NyYy9zdHlsZXMvc3R5bGUuY3NzIiwid2VicGFjazovL29kaW4tbGlicmFyeS8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1saWJyYXJ5Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1saWJyYXJ5Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9vZGluLWxpYnJhcnkvLi9ub2RlX21vZHVsZXMvZmlyZWJhc2UvYXBwL2Rpc3QvaW5kZXguZXNtLmpzIiwid2VicGFjazovL29kaW4tbGlicmFyeS8uL25vZGVfbW9kdWxlcy9maXJlYmFzZS9maXJlYmFzZS1hdXRoLmpzIiwid2VicGFjazovL29kaW4tbGlicmFyeS8uL25vZGVfbW9kdWxlcy9maXJlYmFzZS9maXJlYmFzZS1maXJlc3RvcmUuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1saWJyYXJ5Ly4vc3JjL3N0eWxlcy9yZXNldC5jc3M/NGNmYiIsIndlYnBhY2s6Ly9vZGluLWxpYnJhcnkvLi9zcmMvc3R5bGVzL3N0eWxlLmNzcz9mZjk0Iiwid2VicGFjazovL29kaW4tbGlicmFyeS8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9vZGluLWxpYnJhcnkvLi9ub2RlX21vZHVsZXMvdHNsaWIvdHNsaWIuZXM2LmpzIiwid2VicGFjazovL29kaW4tbGlicmFyeS8uL3NyYy9zY3JpcHRzL2Jvb2suanMiLCJ3ZWJwYWNrOi8vb2Rpbi1saWJyYXJ5Ly4vc3JjL3NjcmlwdHMvZmlyZWJhc2UtY29uZmlnLmpzIiwid2VicGFjazovL29kaW4tbGlicmFyeS8uL3NyYy9zY3JpcHRzL2xpYnJhcnkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi1saWJyYXJ5L3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL29kaW4tbGlicmFyeS93ZWJwYWNrL3J1bnRpbWUvY29tcGF0IGdldCBkZWZhdWx0IGV4cG9ydCIsIndlYnBhY2s6Ly9vZGluLWxpYnJhcnkvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL29kaW4tbGlicmFyeS93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL29kaW4tbGlicmFyeS93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL29kaW4tbGlicmFyeS93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL29kaW4tbGlicmFyeS93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9vZGluLWxpYnJhcnkvLi9zcmMvc2NyaXB0cy9maXJlYmFzZS1pbml0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7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O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrQkFBa0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGtCQUFrQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsOEJBQThCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELEVBQUU7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MscUJBQU07QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxnREFBUztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLGlCQUFpQixNQUFNLElBQUk7O0FBRTNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFlBQVksRUFBRTtBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsRUFBRTtBQUNiLFlBQVksT0FBTztBQUNuQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsYUFBYSxXQUFXO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUJBQXlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxnQkFBZ0I7QUFDNUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLHlCQUF5QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9CQUFvQjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLFFBQVE7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixRQUFRO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLFFBQVE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsU0FBUztBQUNqRDtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsT0FBTztBQUM5Qiw0QkFBNEIsUUFBUTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFD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LEtBQUssWUFBWSxPQUFPLEtBQUssVUFBVSxVQUFVLFlBQVksYUFBYSxPQUFPLEtBQUssVUFBVSxPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssWUFBWSxPQUFPLEtBQUssVUFBVSxZQUFZLE9BQU8sS0FBSyxVQUFVLE1BQU0sS0FBSyxZQUFZLGFBQWEsYUFBYSxhQUFhLGFBQWEsYUFBYSxhQUFhLE9BQU8sS0FBSyxZQUFZLE9BQU8sS0FBSyxzQkFBc0IsT0FBTyxLQUFLLFVBQVUsWUFBWSxPQUFPLEtBQUssWUFBWSxXQUFXLE9BQU8sS0FBSyxZQUFZLE1BQU0sS0FBSyxVQUFVLFVBQVUsWUFBWSxNQUFNLEtBQUssVUFBVSxLQUFLLEtBQUssWUFBWSxPQUFPLEtBQUssWUFBWSxPQUFPLFVBQVUsS0FBSyxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxVQUFVLFlBQVksT0FBTyxLQUFLLFVBQVUsVUFBVSxVQUFVLFVBQVUsVUFBVSxhQUFhLGFBQWEsYUFBYSxXQUFXLFVBQVUsWUFBWSxZQUFZLFVBQVUsT0FBTyxLQUFLLFlBQVksT0FBTyxLQUFLLFVBQVUsWUFBWSxhQUFhLGFBQWEsT0FBTyxLQUFLLFlBQVksT0FBTyxLQUFLLFlBQVksV0FBVyxVQUFVLFVBQVUsVUFBVSxVQUFVLFVBQVUsWUFBWSxhQUFhLGFBQWEsT0FBTyxLQUFLLFlBQVksYUFBYSxXQUFXLE9BQU8sS0FBSyxZQUFZLFdBQVcsWUFBWSxPQUFPLEtBQUssVUFBVSxNQUFNLEtBQUssWUFBWSxNQUFNLEtBQUssWUFBWSxXQUFXLFVBQVUsWUFBWSxPQUFPLEtBQUssWUFBWSxhQUFhLFdBQVcsVUFBVSxVQUFVLFlBQVksYUFBYSxhQUFhLFdBQVcsT0FBTyxLQUFLLFlBQVksYUFBYSxhQUFhLE9BQU8sS0FBSyxZQUFZLE9BQU8sS0FBSyxVQUFVLFlBQVksYUFBYSxPQUFPLEtBQUssWUFBWSxhQUFhLGFBQWEsT0FBTyxLQUFLLFVBQVUsWUFBWSxhQUFhLFdBQVcsVUFBVSxVQUFVLFlBQVksV0FBVyxPQUFPLEtBQUssc0JBQXNCLHVCQUF1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QUFXLDJEQUFrQjs7QUFFN0I7QUFDQTs7QUFFQTtBQUNBOztBQUVBLElBQUk7O0FBRUo7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRSxpREFBeUI7QUFDM0IsV0FBVyxrQkFBa0IsR0FBRyxzRUFBNkI7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxDQUFDIiwiZmlsZSI6ImZpcmViYXNlLmJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVudiA9IHtcbiAgQVBJX0tFWTogXCJBSXphU3lBd2VnVjd4bGJUWmxJZExpalBZay1jeU1nZXp1MF9PenNcIixcbiAgQVVUSF9ET01BSU46IFwib2RpbmxpYnJhcnktZjUuZmlyZWJhc2VhcHAuY29tXCIsXG4gIFBST0pFQ1RfSUQ6IFwib2RpbmxpYnJhcnktZjVcIixcbiAgU1RPUkFHRV9CVUNLRVQ6IFwib2RpbmxpYnJhcnktZjUuYXBwc3BvdC5jb21cIixcbiAgTUVTU0FHSU5HX1NFTkRFUl9JRDogXCIxMDkyNzM3NDEzNDQxXCIsXG4gIEFQUF9JRDogXCIxOjEwOTI3Mzc0MTM0NDE6d2ViOmE4Nzk3MDljOWU3ZjVjM2RiNjcxYzBcIixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGVudjtcbiIsImltcG9ydCB7IF9fYXNzaWduIH0gZnJvbSAndHNsaWInO1xuaW1wb3J0IHsgRXJyb3JGYWN0b3J5LCBkZWVwQ29weSwgY29udGFpbnMsIGRlZXBFeHRlbmQsIGNyZWF0ZVN1YnNjcmliZSwgaXNCcm93c2VyLCBpc05vZGUgfSBmcm9tICdAZmlyZWJhc2UvdXRpbCc7XG5pbXBvcnQgeyBDb21wb25lbnRDb250YWluZXIsIENvbXBvbmVudCB9IGZyb20gJ0BmaXJlYmFzZS9jb21wb25lbnQnO1xuaW1wb3J0IHsgTG9nZ2VyLCBzZXRMb2dMZXZlbCwgc2V0VXNlckxvZ0hhbmRsZXIgfSBmcm9tICdAZmlyZWJhc2UvbG9nZ2VyJztcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxudmFyIF9hO1xyXG52YXIgRVJST1JTID0gKF9hID0ge30sXHJcbiAgICBfYVtcIm5vLWFwcFwiIC8qIE5PX0FQUCAqL10gPSBcIk5vIEZpcmViYXNlIEFwcCAneyRhcHBOYW1lfScgaGFzIGJlZW4gY3JlYXRlZCAtIFwiICtcclxuICAgICAgICAnY2FsbCBGaXJlYmFzZSBBcHAuaW5pdGlhbGl6ZUFwcCgpJyxcclxuICAgIF9hW1wiYmFkLWFwcC1uYW1lXCIgLyogQkFEX0FQUF9OQU1FICovXSA9IFwiSWxsZWdhbCBBcHAgbmFtZTogJ3skYXBwTmFtZX1cIixcclxuICAgIF9hW1wiZHVwbGljYXRlLWFwcFwiIC8qIERVUExJQ0FURV9BUFAgKi9dID0gXCJGaXJlYmFzZSBBcHAgbmFtZWQgJ3skYXBwTmFtZX0nIGFscmVhZHkgZXhpc3RzXCIsXHJcbiAgICBfYVtcImFwcC1kZWxldGVkXCIgLyogQVBQX0RFTEVURUQgKi9dID0gXCJGaXJlYmFzZSBBcHAgbmFtZWQgJ3skYXBwTmFtZX0nIGFscmVhZHkgZGVsZXRlZFwiLFxyXG4gICAgX2FbXCJpbnZhbGlkLWFwcC1hcmd1bWVudFwiIC8qIElOVkFMSURfQVBQX0FSR1VNRU5UICovXSA9ICdmaXJlYmFzZS57JGFwcE5hbWV9KCkgdGFrZXMgZWl0aGVyIG5vIGFyZ3VtZW50IG9yIGEgJyArXHJcbiAgICAgICAgJ0ZpcmViYXNlIEFwcCBpbnN0YW5jZS4nLFxyXG4gICAgX2FbXCJpbnZhbGlkLWxvZy1hcmd1bWVudFwiIC8qIElOVkFMSURfTE9HX0FSR1VNRU5UICovXSA9ICdGaXJzdCBhcmd1bWVudCB0byBgb25Mb2dgIG11c3QgYmUgbnVsbCBvciBhIGZ1bmN0aW9uLicsXHJcbiAgICBfYSk7XHJcbnZhciBFUlJPUl9GQUNUT1JZID0gbmV3IEVycm9yRmFjdG9yeSgnYXBwJywgJ0ZpcmViYXNlJywgRVJST1JTKTtcblxudmFyIG5hbWUgPSBcIkBmaXJlYmFzZS9hcHBcIjtcbnZhciB2ZXJzaW9uID0gXCIwLjYuMjBcIjtcblxudmFyIG5hbWUkMSA9IFwiQGZpcmViYXNlL2FuYWx5dGljc1wiO1xuXG52YXIgbmFtZSQyID0gXCJAZmlyZWJhc2UvYXV0aFwiO1xuXG52YXIgbmFtZSQzID0gXCJAZmlyZWJhc2UvZGF0YWJhc2VcIjtcblxudmFyIG5hbWUkNCA9IFwiQGZpcmViYXNlL2Z1bmN0aW9uc1wiO1xuXG52YXIgbmFtZSQ1ID0gXCJAZmlyZWJhc2UvaW5zdGFsbGF0aW9uc1wiO1xuXG52YXIgbmFtZSQ2ID0gXCJAZmlyZWJhc2UvbWVzc2FnaW5nXCI7XG5cbnZhciBuYW1lJDcgPSBcIkBmaXJlYmFzZS9wZXJmb3JtYW5jZVwiO1xuXG52YXIgbmFtZSQ4ID0gXCJAZmlyZWJhc2UvcmVtb3RlLWNvbmZpZ1wiO1xuXG52YXIgbmFtZSQ5ID0gXCJAZmlyZWJhc2Uvc3RvcmFnZVwiO1xuXG52YXIgbmFtZSRhID0gXCJAZmlyZWJhc2UvZmlyZXN0b3JlXCI7XG5cbnZhciBuYW1lJGIgPSBcImZpcmViYXNlLXdyYXBwZXJcIjtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxudmFyIF9hJDE7XHJcbnZhciBERUZBVUxUX0VOVFJZX05BTUUgPSAnW0RFRkFVTFRdJztcclxudmFyIFBMQVRGT1JNX0xPR19TVFJJTkcgPSAoX2EkMSA9IHt9LFxyXG4gICAgX2EkMVtuYW1lXSA9ICdmaXJlLWNvcmUnLFxyXG4gICAgX2EkMVtuYW1lJDFdID0gJ2ZpcmUtYW5hbHl0aWNzJyxcclxuICAgIF9hJDFbbmFtZSQyXSA9ICdmaXJlLWF1dGgnLFxyXG4gICAgX2EkMVtuYW1lJDNdID0gJ2ZpcmUtcnRkYicsXHJcbiAgICBfYSQxW25hbWUkNF0gPSAnZmlyZS1mbicsXHJcbiAgICBfYSQxW25hbWUkNV0gPSAnZmlyZS1paWQnLFxyXG4gICAgX2EkMVtuYW1lJDZdID0gJ2ZpcmUtZmNtJyxcclxuICAgIF9hJDFbbmFtZSQ3XSA9ICdmaXJlLXBlcmYnLFxyXG4gICAgX2EkMVtuYW1lJDhdID0gJ2ZpcmUtcmMnLFxyXG4gICAgX2EkMVtuYW1lJDldID0gJ2ZpcmUtZ2NzJyxcclxuICAgIF9hJDFbbmFtZSRhXSA9ICdmaXJlLWZzdCcsXHJcbiAgICBfYSQxWydmaXJlLWpzJ10gPSAnZmlyZS1qcycsXHJcbiAgICBfYSQxW25hbWUkYl0gPSAnZmlyZS1qcy1hbGwnLFxyXG4gICAgX2EkMSk7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbnZhciBsb2dnZXIgPSBuZXcgTG9nZ2VyKCdAZmlyZWJhc2UvYXBwJyk7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBHbG9iYWwgY29udGV4dCBvYmplY3QgZm9yIGEgY29sbGVjdGlvbiBvZiBzZXJ2aWNlcyB1c2luZ1xyXG4gKiBhIHNoYXJlZCBhdXRoZW50aWNhdGlvbiBzdGF0ZS5cclxuICovXHJcbnZhciBGaXJlYmFzZUFwcEltcGwgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBGaXJlYmFzZUFwcEltcGwob3B0aW9ucywgY29uZmlnLCBmaXJlYmFzZV8pIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuZmlyZWJhc2VfID0gZmlyZWJhc2VfO1xyXG4gICAgICAgIHRoaXMuaXNEZWxldGVkXyA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMubmFtZV8gPSBjb25maWcubmFtZTtcclxuICAgICAgICB0aGlzLmF1dG9tYXRpY0RhdGFDb2xsZWN0aW9uRW5hYmxlZF8gPVxyXG4gICAgICAgICAgICBjb25maWcuYXV0b21hdGljRGF0YUNvbGxlY3Rpb25FbmFibGVkIHx8IGZhbHNlO1xyXG4gICAgICAgIHRoaXMub3B0aW9uc18gPSBkZWVwQ29weShvcHRpb25zKTtcclxuICAgICAgICB0aGlzLmNvbnRhaW5lciA9IG5ldyBDb21wb25lbnRDb250YWluZXIoY29uZmlnLm5hbWUpO1xyXG4gICAgICAgIC8vIGFkZCBpdHNlbGYgdG8gY29udGFpbmVyXHJcbiAgICAgICAgdGhpcy5fYWRkQ29tcG9uZW50KG5ldyBDb21wb25lbnQoJ2FwcCcsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzOyB9LCBcIlBVQkxJQ1wiIC8qIFBVQkxJQyAqLykpO1xyXG4gICAgICAgIC8vIHBvcHVsYXRlIENvbXBvbmVudENvbnRhaW5lciB3aXRoIGV4aXN0aW5nIGNvbXBvbmVudHNcclxuICAgICAgICB0aGlzLmZpcmViYXNlXy5JTlRFUk5BTC5jb21wb25lbnRzLmZvckVhY2goZnVuY3Rpb24gKGNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICByZXR1cm4gX3RoaXMuX2FkZENvbXBvbmVudChjb21wb25lbnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZpcmViYXNlQXBwSW1wbC5wcm90b3R5cGUsIFwiYXV0b21hdGljRGF0YUNvbGxlY3Rpb25FbmFibGVkXCIsIHtcclxuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgdGhpcy5jaGVja0Rlc3Ryb3llZF8oKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuYXV0b21hdGljRGF0YUNvbGxlY3Rpb25FbmFibGVkXztcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLmNoZWNrRGVzdHJveWVkXygpO1xyXG4gICAgICAgICAgICB0aGlzLmF1dG9tYXRpY0RhdGFDb2xsZWN0aW9uRW5hYmxlZF8gPSB2YWw7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KEZpcmViYXNlQXBwSW1wbC5wcm90b3R5cGUsIFwibmFtZVwiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2hlY2tEZXN0cm95ZWRfKCk7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm5hbWVfO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlXHJcbiAgICB9KTtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShGaXJlYmFzZUFwcEltcGwucHJvdG90eXBlLCBcIm9wdGlvbnNcIiwge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB0aGlzLmNoZWNrRGVzdHJveWVkXygpO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5vcHRpb25zXztcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBGaXJlYmFzZUFwcEltcGwucHJvdG90eXBlLmRlbGV0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkge1xyXG4gICAgICAgICAgICBfdGhpcy5jaGVja0Rlc3Ryb3llZF8oKTtcclxuICAgICAgICAgICAgcmVzb2x2ZSgpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgX3RoaXMuZmlyZWJhc2VfLklOVEVSTkFMLnJlbW92ZUFwcChfdGhpcy5uYW1lXyk7XHJcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChfdGhpcy5jb250YWluZXIuZ2V0UHJvdmlkZXJzKCkubWFwKGZ1bmN0aW9uIChwcm92aWRlcikgeyByZXR1cm4gcHJvdmlkZXIuZGVsZXRlKCk7IH0pKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIF90aGlzLmlzRGVsZXRlZF8gPSB0cnVlO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogUmV0dXJuIGEgc2VydmljZSBpbnN0YW5jZSBhc3NvY2lhdGVkIHdpdGggdGhpcyBhcHAgKGNyZWF0aW5nIGl0XHJcbiAgICAgKiBvbiBkZW1hbmQpLCBpZGVudGlmaWVkIGJ5IHRoZSBwYXNzZWQgaW5zdGFuY2VJZGVudGlmaWVyLlxyXG4gICAgICpcclxuICAgICAqIE5PVEU6IEN1cnJlbnRseSBzdG9yYWdlIGFuZCBmdW5jdGlvbnMgYXJlIHRoZSBvbmx5IG9uZXMgdGhhdCBhcmUgbGV2ZXJhZ2luZyB0aGlzXHJcbiAgICAgKiBmdW5jdGlvbmFsaXR5LiBUaGV5IGludm9rZSBpdCBieSBjYWxsaW5nOlxyXG4gICAgICpcclxuICAgICAqIGBgYGphdmFzY3JpcHRcclxuICAgICAqIGZpcmViYXNlLmFwcCgpLnN0b3JhZ2UoJ1NUT1JBR0UgQlVDS0VUIElEJylcclxuICAgICAqIGBgYFxyXG4gICAgICpcclxuICAgICAqIFRoZSBzZXJ2aWNlIG5hbWUgaXMgcGFzc2VkIHRvIHRoaXMgYWxyZWFkeVxyXG4gICAgICogQGludGVybmFsXHJcbiAgICAgKi9cclxuICAgIEZpcmViYXNlQXBwSW1wbC5wcm90b3R5cGUuX2dldFNlcnZpY2UgPSBmdW5jdGlvbiAobmFtZSwgaW5zdGFuY2VJZGVudGlmaWVyKSB7XHJcbiAgICAgICAgaWYgKGluc3RhbmNlSWRlbnRpZmllciA9PT0gdm9pZCAwKSB7IGluc3RhbmNlSWRlbnRpZmllciA9IERFRkFVTFRfRU5UUllfTkFNRTsgfVxyXG4gICAgICAgIHRoaXMuY2hlY2tEZXN0cm95ZWRfKCk7XHJcbiAgICAgICAgLy8gZ2V0SW1tZWRpYXRlIHdpbGwgYWx3YXlzIHN1Y2NlZWQgYmVjYXVzZSBfZ2V0U2VydmljZSBpcyBvbmx5IGNhbGxlZCBmb3IgcmVnaXN0ZXJlZCBjb21wb25lbnRzLlxyXG4gICAgICAgIHJldHVybiB0aGlzLmNvbnRhaW5lci5nZXRQcm92aWRlcihuYW1lKS5nZXRJbW1lZGlhdGUoe1xyXG4gICAgICAgICAgICBpZGVudGlmaWVyOiBpbnN0YW5jZUlkZW50aWZpZXJcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFJlbW92ZSBhIHNlcnZpY2UgaW5zdGFuY2UgZnJvbSB0aGUgY2FjaGUsIHNvIHdlIHdpbGwgY3JlYXRlIGEgbmV3IGluc3RhbmNlIGZvciB0aGlzIHNlcnZpY2VcclxuICAgICAqIHdoZW4gcGVvcGxlIHRyeSB0byBnZXQgdGhpcyBzZXJ2aWNlIGFnYWluLlxyXG4gICAgICpcclxuICAgICAqIE5PVEU6IGN1cnJlbnRseSBvbmx5IGZpcmVzdG9yZSBpcyB1c2luZyB0aGlzIGZ1bmN0aW9uYWxpdHkgdG8gc3VwcG9ydCBmaXJlc3RvcmUgc2h1dGRvd24uXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG5hbWUgVGhlIHNlcnZpY2UgbmFtZVxyXG4gICAgICogQHBhcmFtIGluc3RhbmNlSWRlbnRpZmllciBpbnN0YW5jZSBpZGVudGlmaWVyIGluIGNhc2UgbXVsdGlwbGUgaW5zdGFuY2VzIGFyZSBhbGxvd2VkXHJcbiAgICAgKiBAaW50ZXJuYWxcclxuICAgICAqL1xyXG4gICAgRmlyZWJhc2VBcHBJbXBsLnByb3RvdHlwZS5fcmVtb3ZlU2VydmljZUluc3RhbmNlID0gZnVuY3Rpb24gKG5hbWUsIGluc3RhbmNlSWRlbnRpZmllcikge1xyXG4gICAgICAgIGlmIChpbnN0YW5jZUlkZW50aWZpZXIgPT09IHZvaWQgMCkgeyBpbnN0YW5jZUlkZW50aWZpZXIgPSBERUZBVUxUX0VOVFJZX05BTUU7IH1cclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgIHRoaXMuY29udGFpbmVyLmdldFByb3ZpZGVyKG5hbWUpLmNsZWFySW5zdGFuY2UoaW5zdGFuY2VJZGVudGlmaWVyKTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSBjb21wb25lbnQgdGhlIGNvbXBvbmVudCBiZWluZyBhZGRlZCB0byB0aGlzIGFwcCdzIGNvbnRhaW5lclxyXG4gICAgICovXHJcbiAgICBGaXJlYmFzZUFwcEltcGwucHJvdG90eXBlLl9hZGRDb21wb25lbnQgPSBmdW5jdGlvbiAoY29tcG9uZW50KSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgdGhpcy5jb250YWluZXIuYWRkQ29tcG9uZW50KGNvbXBvbmVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhcIkNvbXBvbmVudCBcIiArIGNvbXBvbmVudC5uYW1lICsgXCIgZmFpbGVkIHRvIHJlZ2lzdGVyIHdpdGggRmlyZWJhc2VBcHAgXCIgKyB0aGlzLm5hbWUsIGUpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICBGaXJlYmFzZUFwcEltcGwucHJvdG90eXBlLl9hZGRPck92ZXJ3cml0ZUNvbXBvbmVudCA9IGZ1bmN0aW9uIChjb21wb25lbnQpIHtcclxuICAgICAgICB0aGlzLmNvbnRhaW5lci5hZGRPck92ZXJ3cml0ZUNvbXBvbmVudChjb21wb25lbnQpO1xyXG4gICAgfTtcclxuICAgIEZpcmViYXNlQXBwSW1wbC5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcclxuICAgICAgICAgICAgYXV0b21hdGljRGF0YUNvbGxlY3Rpb25FbmFibGVkOiB0aGlzLmF1dG9tYXRpY0RhdGFDb2xsZWN0aW9uRW5hYmxlZCxcclxuICAgICAgICAgICAgb3B0aW9uczogdGhpcy5vcHRpb25zXHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIFRoaXMgZnVuY3Rpb24gd2lsbCB0aHJvdyBhbiBFcnJvciBpZiB0aGUgQXBwIGhhcyBhbHJlYWR5IGJlZW4gZGVsZXRlZCAtXHJcbiAgICAgKiB1c2UgYmVmb3JlIHBlcmZvcm1pbmcgQVBJIGFjdGlvbnMgb24gdGhlIEFwcC5cclxuICAgICAqL1xyXG4gICAgRmlyZWJhc2VBcHBJbXBsLnByb3RvdHlwZS5jaGVja0Rlc3Ryb3llZF8gPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuaXNEZWxldGVkXykge1xyXG4gICAgICAgICAgICB0aHJvdyBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcImFwcC1kZWxldGVkXCIgLyogQVBQX0RFTEVURUQgKi8sIHsgYXBwTmFtZTogdGhpcy5uYW1lXyB9KTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIEZpcmViYXNlQXBwSW1wbDtcclxufSgpKTtcclxuLy8gUHJldmVudCBkZWFkLWNvZGUgZWxpbWluYXRpb24gb2YgdGhlc2UgbWV0aG9kcyB3L28gaW52YWxpZCBwcm9wZXJ0eVxyXG4vLyBjb3B5aW5nLlxyXG4oRmlyZWJhc2VBcHBJbXBsLnByb3RvdHlwZS5uYW1lICYmIEZpcmViYXNlQXBwSW1wbC5wcm90b3R5cGUub3B0aW9ucykgfHxcclxuICAgIEZpcmViYXNlQXBwSW1wbC5wcm90b3R5cGUuZGVsZXRlIHx8XHJcbiAgICBjb25zb2xlLmxvZygnZGMnKTtcblxudmFyIHZlcnNpb24kMSA9IFwiOC40LjBcIjtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIEJlY2F1c2UgYXV0aCBjYW4ndCBzaGFyZSBjb2RlIHdpdGggb3RoZXIgY29tcG9uZW50cywgd2UgYXR0YWNoIHRoZSB1dGlsaXR5IGZ1bmN0aW9uc1xyXG4gKiBpbiBhbiBpbnRlcm5hbCBuYW1lc3BhY2UgdG8gc2hhcmUgY29kZS5cclxuICogVGhpcyBmdW5jdGlvbiByZXR1cm4gYSBmaXJlYmFzZSBuYW1lc3BhY2Ugb2JqZWN0IHdpdGhvdXRcclxuICogYW55IHV0aWxpdHkgZnVuY3Rpb25zLCBzbyBpdCBjYW4gYmUgc2hhcmVkIGJldHdlZW4gdGhlIHJlZ3VsYXIgZmlyZWJhc2VOYW1lc3BhY2UgYW5kXHJcbiAqIHRoZSBsaXRlIHZlcnNpb24uXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVGaXJlYmFzZU5hbWVzcGFjZUNvcmUoZmlyZWJhc2VBcHBJbXBsKSB7XHJcbiAgICB2YXIgYXBwcyA9IHt9O1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuICAgIHZhciBjb21wb25lbnRzID0gbmV3IE1hcCgpO1xyXG4gICAgLy8gQSBuYW1lc3BhY2UgaXMgYSBwbGFpbiBKYXZhU2NyaXB0IE9iamVjdC5cclxuICAgIHZhciBuYW1lc3BhY2UgPSB7XHJcbiAgICAgICAgLy8gSGFjayB0byBwcmV2ZW50IEJhYmVsIGZyb20gbW9kaWZ5aW5nIHRoZSBvYmplY3QgcmV0dXJuZWRcclxuICAgICAgICAvLyBhcyB0aGUgZmlyZWJhc2UgbmFtZXNwYWNlLlxyXG4gICAgICAgIC8vIEB0cy1pZ25vcmVcclxuICAgICAgICBfX2VzTW9kdWxlOiB0cnVlLFxyXG4gICAgICAgIGluaXRpYWxpemVBcHA6IGluaXRpYWxpemVBcHAsXHJcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgIGFwcDogYXBwLFxyXG4gICAgICAgIHJlZ2lzdGVyVmVyc2lvbjogcmVnaXN0ZXJWZXJzaW9uLFxyXG4gICAgICAgIHNldExvZ0xldmVsOiBzZXRMb2dMZXZlbCxcclxuICAgICAgICBvbkxvZzogb25Mb2csXHJcbiAgICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICAgIGFwcHM6IG51bGwsXHJcbiAgICAgICAgU0RLX1ZFUlNJT046IHZlcnNpb24kMSxcclxuICAgICAgICBJTlRFUk5BTDoge1xyXG4gICAgICAgICAgICByZWdpc3RlckNvbXBvbmVudDogcmVnaXN0ZXJDb21wb25lbnQsXHJcbiAgICAgICAgICAgIHJlbW92ZUFwcDogcmVtb3ZlQXBwLFxyXG4gICAgICAgICAgICBjb21wb25lbnRzOiBjb21wb25lbnRzLFxyXG4gICAgICAgICAgICB1c2VBc1NlcnZpY2U6IHVzZUFzU2VydmljZVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvLyBJbmplY3QgYSBjaXJjdWxhciBkZWZhdWx0IGV4cG9ydCB0byBhbGxvdyBCYWJlbCB1c2VycyB3aG8gd2VyZSBwcmV2aW91c2x5XHJcbiAgICAvLyB1c2luZzpcclxuICAgIC8vXHJcbiAgICAvLyAgIGltcG9ydCBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZSc7XHJcbiAgICAvLyAgIHdoaWNoIGJlY29tZXM6IHZhciBmaXJlYmFzZSA9IHJlcXVpcmUoJ2ZpcmViYXNlJykuZGVmYXVsdDtcclxuICAgIC8vXHJcbiAgICAvLyBpbnN0ZWFkIG9mXHJcbiAgICAvL1xyXG4gICAgLy8gICBpbXBvcnQgKiBhcyBmaXJlYmFzZSBmcm9tICdmaXJlYmFzZSc7XHJcbiAgICAvLyAgIHdoaWNoIGJlY29tZXM6IHZhciBmaXJlYmFzZSA9IHJlcXVpcmUoJ2ZpcmViYXNlJyk7XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgbmFtZXNwYWNlWydkZWZhdWx0J10gPSBuYW1lc3BhY2U7XHJcbiAgICAvLyBmaXJlYmFzZS5hcHBzIGlzIGEgcmVhZC1vbmx5IGdldHRlci5cclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuYW1lc3BhY2UsICdhcHBzJywge1xyXG4gICAgICAgIGdldDogZ2V0QXBwc1xyXG4gICAgfSk7XHJcbiAgICAvKipcclxuICAgICAqIENhbGxlZCBieSBBcHAuZGVsZXRlKCkgLSBidXQgYmVmb3JlIGFueSBzZXJ2aWNlcyBhc3NvY2lhdGVkIHdpdGggdGhlIEFwcFxyXG4gICAgICogYXJlIGRlbGV0ZWQuXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIHJlbW92ZUFwcChuYW1lKSB7XHJcbiAgICAgICAgZGVsZXRlIGFwcHNbbmFtZV07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIEdldCB0aGUgQXBwIG9iamVjdCBmb3IgYSBnaXZlbiBuYW1lIChvciBERUZBVUxUKS5cclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gYXBwKG5hbWUpIHtcclxuICAgICAgICBuYW1lID0gbmFtZSB8fCBERUZBVUxUX0VOVFJZX05BTUU7XHJcbiAgICAgICAgaWYgKCFjb250YWlucyhhcHBzLCBuYW1lKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcIm5vLWFwcFwiIC8qIE5PX0FQUCAqLywgeyBhcHBOYW1lOiBuYW1lIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gYXBwc1tuYW1lXTtcclxuICAgIH1cclxuICAgIC8vIEB0cy1pZ25vcmVcclxuICAgIGFwcFsnQXBwJ10gPSBmaXJlYmFzZUFwcEltcGw7XHJcbiAgICBmdW5jdGlvbiBpbml0aWFsaXplQXBwKG9wdGlvbnMsIHJhd0NvbmZpZykge1xyXG4gICAgICAgIGlmIChyYXdDb25maWcgPT09IHZvaWQgMCkgeyByYXdDb25maWcgPSB7fTsgfVxyXG4gICAgICAgIGlmICh0eXBlb2YgcmF3Q29uZmlnICE9PSAnb2JqZWN0JyB8fCByYXdDb25maWcgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgdmFyIG5hbWVfMSA9IHJhd0NvbmZpZztcclxuICAgICAgICAgICAgcmF3Q29uZmlnID0geyBuYW1lOiBuYW1lXzEgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGNvbmZpZyA9IHJhd0NvbmZpZztcclxuICAgICAgICBpZiAoY29uZmlnLm5hbWUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBjb25maWcubmFtZSA9IERFRkFVTFRfRU5UUllfTkFNRTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIG5hbWUgPSBjb25maWcubmFtZTtcclxuICAgICAgICBpZiAodHlwZW9mIG5hbWUgIT09ICdzdHJpbmcnIHx8ICFuYW1lKSB7XHJcbiAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiYmFkLWFwcC1uYW1lXCIgLyogQkFEX0FQUF9OQU1FICovLCB7XHJcbiAgICAgICAgICAgICAgICBhcHBOYW1lOiBTdHJpbmcobmFtZSlcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjb250YWlucyhhcHBzLCBuYW1lKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBFUlJPUl9GQUNUT1JZLmNyZWF0ZShcImR1cGxpY2F0ZS1hcHBcIiAvKiBEVVBMSUNBVEVfQVBQICovLCB7IGFwcE5hbWU6IG5hbWUgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBhcHAgPSBuZXcgZmlyZWJhc2VBcHBJbXBsKG9wdGlvbnMsIGNvbmZpZywgbmFtZXNwYWNlKTtcclxuICAgICAgICBhcHBzW25hbWVdID0gYXBwO1xyXG4gICAgICAgIHJldHVybiBhcHA7XHJcbiAgICB9XHJcbiAgICAvKlxyXG4gICAgICogUmV0dXJuIGFuIGFycmF5IG9mIGFsbCB0aGUgbm9uLWRlbGV0ZWQgRmlyZWJhc2VBcHBzLlxyXG4gICAgICovXHJcbiAgICBmdW5jdGlvbiBnZXRBcHBzKCkge1xyXG4gICAgICAgIC8vIE1ha2UgYSBjb3B5IHNvIGNhbGxlciBjYW5ub3QgbXV0YXRlIHRoZSBhcHBzIGxpc3QuXHJcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKGFwcHMpLm1hcChmdW5jdGlvbiAobmFtZSkgeyByZXR1cm4gYXBwc1tuYW1lXTsgfSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiByZWdpc3RlckNvbXBvbmVudChjb21wb25lbnQpIHtcclxuICAgICAgICB2YXIgY29tcG9uZW50TmFtZSA9IGNvbXBvbmVudC5uYW1lO1xyXG4gICAgICAgIGlmIChjb21wb25lbnRzLmhhcyhjb21wb25lbnROYW1lKSkge1xyXG4gICAgICAgICAgICBsb2dnZXIuZGVidWcoXCJUaGVyZSB3ZXJlIG11bHRpcGxlIGF0dGVtcHRzIHRvIHJlZ2lzdGVyIGNvbXBvbmVudCBcIiArIGNvbXBvbmVudE5hbWUgKyBcIi5cIik7XHJcbiAgICAgICAgICAgIHJldHVybiBjb21wb25lbnQudHlwZSA9PT0gXCJQVUJMSUNcIiAvKiBQVUJMSUMgKi9cclxuICAgICAgICAgICAgICAgID8gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuICAgICAgICAgICAgICAgICAgICBuYW1lc3BhY2VbY29tcG9uZW50TmFtZV1cclxuICAgICAgICAgICAgICAgIDogbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29tcG9uZW50cy5zZXQoY29tcG9uZW50TmFtZSwgY29tcG9uZW50KTtcclxuICAgICAgICAvLyBjcmVhdGUgc2VydmljZSBuYW1lc3BhY2UgZm9yIHB1YmxpYyBjb21wb25lbnRzXHJcbiAgICAgICAgaWYgKGNvbXBvbmVudC50eXBlID09PSBcIlBVQkxJQ1wiIC8qIFBVQkxJQyAqLykge1xyXG4gICAgICAgICAgICAvLyBUaGUgU2VydmljZSBuYW1lc3BhY2UgaXMgYW4gYWNjZXNzb3IgZnVuY3Rpb24gLi4uXHJcbiAgICAgICAgICAgIHZhciBzZXJ2aWNlTmFtZXNwYWNlID0gZnVuY3Rpb24gKGFwcEFyZykge1xyXG4gICAgICAgICAgICAgICAgaWYgKGFwcEFyZyA9PT0gdm9pZCAwKSB7IGFwcEFyZyA9IGFwcCgpOyB9XHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBhcHBBcmdbY29tcG9uZW50TmFtZV0gIT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBJbnZhbGlkIGFyZ3VtZW50LlxyXG4gICAgICAgICAgICAgICAgICAgIC8vIFRoaXMgaGFwcGVucyBpbiB0aGUgZm9sbG93aW5nIGNhc2U6IGZpcmViYXNlLnN0b3JhZ2UoJ2dzOi8nKVxyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IEVSUk9SX0ZBQ1RPUlkuY3JlYXRlKFwiaW52YWxpZC1hcHAtYXJndW1lbnRcIiAvKiBJTlZBTElEX0FQUF9BUkdVTUVOVCAqLywge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBhcHBOYW1lOiBjb21wb25lbnROYW1lXHJcbiAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyBGb3J3YXJkIHNlcnZpY2UgaW5zdGFuY2UgbG9va3VwIHRvIHRoZSBGaXJlYmFzZUFwcC5cclxuICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gYXBwQXJnW2NvbXBvbmVudE5hbWVdKCk7XHJcbiAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgIC8vIC4uLiBhbmQgYSBjb250YWluZXIgZm9yIHNlcnZpY2UtbGV2ZWwgcHJvcGVydGllcy5cclxuICAgICAgICAgICAgaWYgKGNvbXBvbmVudC5zZXJ2aWNlUHJvcHMgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgZGVlcEV4dGVuZChzZXJ2aWNlTmFtZXNwYWNlLCBjb21wb25lbnQuc2VydmljZVByb3BzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgICAgICBuYW1lc3BhY2VbY29tcG9uZW50TmFtZV0gPSBzZXJ2aWNlTmFtZXNwYWNlO1xyXG4gICAgICAgICAgICAvLyBQYXRjaCB0aGUgRmlyZWJhc2VBcHBJbXBsIHByb3RvdHlwZVxyXG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgICAgICBmaXJlYmFzZUFwcEltcGwucHJvdG90eXBlW2NvbXBvbmVudE5hbWVdID1cclxuICAgICAgICAgICAgICAgIC8vIFRPRE86IFRoZSBlc2xpbnQgZGlzYWJsZSBjYW4gYmUgcmVtb3ZlZCBhbmQgdGhlICdpZ25vcmVSZXN0QXJncydcclxuICAgICAgICAgICAgICAgIC8vIG9wdGlvbiBhZGRlZCB0byB0aGUgbm8tZXhwbGljaXQtYW55IHJ1bGUgd2hlbiBFU2xpbnQgcmVsZWFzZXMgaXQuXHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhcmdzID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgc2VydmljZUZ4biA9IHRoaXMuX2dldFNlcnZpY2UuYmluZCh0aGlzLCBjb21wb25lbnROYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gc2VydmljZUZ4bi5hcHBseSh0aGlzLCBjb21wb25lbnQubXVsdGlwbGVJbnN0YW5jZXMgPyBhcmdzIDogW10pO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gYWRkIHRoZSBjb21wb25lbnQgdG8gZXhpc3RpbmcgYXBwIGluc3RhbmNlc1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMCwgX2EgPSBPYmplY3Qua2V5cyhhcHBzKTsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgdmFyIGFwcE5hbWUgPSBfYVtfaV07XHJcbiAgICAgICAgICAgIGFwcHNbYXBwTmFtZV0uX2FkZENvbXBvbmVudChjb21wb25lbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gY29tcG9uZW50LnR5cGUgPT09IFwiUFVCTElDXCIgLyogUFVCTElDICovXHJcbiAgICAgICAgICAgID8gLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuICAgICAgICAgICAgICAgIG5hbWVzcGFjZVtjb21wb25lbnROYW1lXVxyXG4gICAgICAgICAgICA6IG51bGw7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiByZWdpc3RlclZlcnNpb24obGlicmFyeUtleU9yTmFtZSwgdmVyc2lvbiwgdmFyaWFudCkge1xyXG4gICAgICAgIHZhciBfYTtcclxuICAgICAgICAvLyBUT0RPOiBXZSBjYW4gdXNlIHRoaXMgY2hlY2sgdG8gd2hpdGVsaXN0IHN0cmluZ3Mgd2hlbi9pZiB3ZSBzZXQgdXBcclxuICAgICAgICAvLyBhIGdvb2Qgd2hpdGVsaXN0IHN5c3RlbS5cclxuICAgICAgICB2YXIgbGlicmFyeSA9IChfYSA9IFBMQVRGT1JNX0xPR19TVFJJTkdbbGlicmFyeUtleU9yTmFtZV0pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGxpYnJhcnlLZXlPck5hbWU7XHJcbiAgICAgICAgaWYgKHZhcmlhbnQpIHtcclxuICAgICAgICAgICAgbGlicmFyeSArPSBcIi1cIiArIHZhcmlhbnQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBsaWJyYXJ5TWlzbWF0Y2ggPSBsaWJyYXJ5Lm1hdGNoKC9cXHN8XFwvLyk7XHJcbiAgICAgICAgdmFyIHZlcnNpb25NaXNtYXRjaCA9IHZlcnNpb24ubWF0Y2goL1xcc3xcXC8vKTtcclxuICAgICAgICBpZiAobGlicmFyeU1pc21hdGNoIHx8IHZlcnNpb25NaXNtYXRjaCkge1xyXG4gICAgICAgICAgICB2YXIgd2FybmluZyA9IFtcclxuICAgICAgICAgICAgICAgIFwiVW5hYmxlIHRvIHJlZ2lzdGVyIGxpYnJhcnkgXFxcIlwiICsgbGlicmFyeSArIFwiXFxcIiB3aXRoIHZlcnNpb24gXFxcIlwiICsgdmVyc2lvbiArIFwiXFxcIjpcIlxyXG4gICAgICAgICAgICBdO1xyXG4gICAgICAgICAgICBpZiAobGlicmFyeU1pc21hdGNoKSB7XHJcbiAgICAgICAgICAgICAgICB3YXJuaW5nLnB1c2goXCJsaWJyYXJ5IG5hbWUgXFxcIlwiICsgbGlicmFyeSArIFwiXFxcIiBjb250YWlucyBpbGxlZ2FsIGNoYXJhY3RlcnMgKHdoaXRlc3BhY2Ugb3IgXFxcIi9cXFwiKVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAobGlicmFyeU1pc21hdGNoICYmIHZlcnNpb25NaXNtYXRjaCkge1xyXG4gICAgICAgICAgICAgICAgd2FybmluZy5wdXNoKCdhbmQnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodmVyc2lvbk1pc21hdGNoKSB7XHJcbiAgICAgICAgICAgICAgICB3YXJuaW5nLnB1c2goXCJ2ZXJzaW9uIG5hbWUgXFxcIlwiICsgdmVyc2lvbiArIFwiXFxcIiBjb250YWlucyBpbGxlZ2FsIGNoYXJhY3RlcnMgKHdoaXRlc3BhY2Ugb3IgXFxcIi9cXFwiKVwiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsb2dnZXIud2Fybih3YXJuaW5nLmpvaW4oJyAnKSk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmVnaXN0ZXJDb21wb25lbnQobmV3IENvbXBvbmVudChsaWJyYXJ5ICsgXCItdmVyc2lvblwiLCBmdW5jdGlvbiAoKSB7IHJldHVybiAoeyBsaWJyYXJ5OiBsaWJyYXJ5LCB2ZXJzaW9uOiB2ZXJzaW9uIH0pOyB9LCBcIlZFUlNJT05cIiAvKiBWRVJTSU9OICovKSk7XHJcbiAgICB9XHJcbiAgICBmdW5jdGlvbiBvbkxvZyhsb2dDYWxsYmFjaywgb3B0aW9ucykge1xyXG4gICAgICAgIGlmIChsb2dDYWxsYmFjayAhPT0gbnVsbCAmJiB0eXBlb2YgbG9nQ2FsbGJhY2sgIT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgdGhyb3cgRVJST1JfRkFDVE9SWS5jcmVhdGUoXCJpbnZhbGlkLWxvZy1hcmd1bWVudFwiIC8qIElOVkFMSURfTE9HX0FSR1VNRU5UICovKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgc2V0VXNlckxvZ0hhbmRsZXIobG9nQ2FsbGJhY2ssIG9wdGlvbnMpO1xyXG4gICAgfVxyXG4gICAgLy8gTWFwIHRoZSByZXF1ZXN0ZWQgc2VydmljZSB0byBhIHJlZ2lzdGVyZWQgc2VydmljZSBuYW1lXHJcbiAgICAvLyAodXNlZCB0byBtYXAgYXV0aCB0byBzZXJ2ZXJBdXRoIHNlcnZpY2Ugd2hlbiBuZWVkZWQpLlxyXG4gICAgZnVuY3Rpb24gdXNlQXNTZXJ2aWNlKGFwcCwgbmFtZSkge1xyXG4gICAgICAgIGlmIChuYW1lID09PSAnc2VydmVyQXV0aCcpIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciB1c2VTZXJ2aWNlID0gbmFtZTtcclxuICAgICAgICByZXR1cm4gdXNlU2VydmljZTtcclxuICAgIH1cclxuICAgIHJldHVybiBuYW1lc3BhY2U7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybiBhIGZpcmViYXNlIG5hbWVzcGFjZSBvYmplY3QuXHJcbiAqXHJcbiAqIEluIHByb2R1Y3Rpb24sIHRoaXMgd2lsbCBiZSBjYWxsZWQgZXhhY3RseSBvbmNlIGFuZCB0aGUgcmVzdWx0XHJcbiAqIGFzc2lnbmVkIHRvIHRoZSAnZmlyZWJhc2UnIGdsb2JhbC4gIEl0IG1heSBiZSBjYWxsZWQgbXVsdGlwbGUgdGltZXNcclxuICogaW4gdW5pdCB0ZXN0cy5cclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZUZpcmViYXNlTmFtZXNwYWNlKCkge1xyXG4gICAgdmFyIG5hbWVzcGFjZSA9IGNyZWF0ZUZpcmViYXNlTmFtZXNwYWNlQ29yZShGaXJlYmFzZUFwcEltcGwpO1xyXG4gICAgbmFtZXNwYWNlLklOVEVSTkFMID0gX19hc3NpZ24oX19hc3NpZ24oe30sIG5hbWVzcGFjZS5JTlRFUk5BTCksIHsgY3JlYXRlRmlyZWJhc2VOYW1lc3BhY2U6IGNyZWF0ZUZpcmViYXNlTmFtZXNwYWNlLFxyXG4gICAgICAgIGV4dGVuZE5hbWVzcGFjZTogZXh0ZW5kTmFtZXNwYWNlLFxyXG4gICAgICAgIGNyZWF0ZVN1YnNjcmliZTogY3JlYXRlU3Vic2NyaWJlLFxyXG4gICAgICAgIEVycm9yRmFjdG9yeTogRXJyb3JGYWN0b3J5LFxyXG4gICAgICAgIGRlZXBFeHRlbmQ6IGRlZXBFeHRlbmQgfSk7XHJcbiAgICAvKipcclxuICAgICAqIFBhdGNoIHRoZSB0b3AtbGV2ZWwgZmlyZWJhc2UgbmFtZXNwYWNlIHdpdGggYWRkaXRpb25hbCBwcm9wZXJ0aWVzLlxyXG4gICAgICpcclxuICAgICAqIGZpcmViYXNlLklOVEVSTkFMLmV4dGVuZE5hbWVzcGFjZSgpXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIGV4dGVuZE5hbWVzcGFjZShwcm9wcykge1xyXG4gICAgICAgIGRlZXBFeHRlbmQobmFtZXNwYWNlLCBwcm9wcyk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbmFtZXNwYWNlO1xyXG59XHJcbnZhciBmaXJlYmFzZSA9IGNyZWF0ZUZpcmViYXNlTmFtZXNwYWNlKCk7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbnZhciBQbGF0Zm9ybUxvZ2dlclNlcnZpY2UgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBQbGF0Zm9ybUxvZ2dlclNlcnZpY2UoY29udGFpbmVyKSB7XHJcbiAgICAgICAgdGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XHJcbiAgICB9XHJcbiAgICAvLyBJbiBpbml0aWFsIGltcGxlbWVudGF0aW9uLCB0aGlzIHdpbGwgYmUgY2FsbGVkIGJ5IGluc3RhbGxhdGlvbnMgb25cclxuICAgIC8vIGF1dGggdG9rZW4gcmVmcmVzaCwgYW5kIGluc3RhbGxhdGlvbnMgd2lsbCBzZW5kIHRoaXMgc3RyaW5nLlxyXG4gICAgUGxhdGZvcm1Mb2dnZXJTZXJ2aWNlLnByb3RvdHlwZS5nZXRQbGF0Zm9ybUluZm9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIHByb3ZpZGVycyA9IHRoaXMuY29udGFpbmVyLmdldFByb3ZpZGVycygpO1xyXG4gICAgICAgIC8vIExvb3AgdGhyb3VnaCBwcm92aWRlcnMgYW5kIGdldCBsaWJyYXJ5L3ZlcnNpb24gcGFpcnMgZnJvbSBhbnkgdGhhdCBhcmVcclxuICAgICAgICAvLyB2ZXJzaW9uIGNvbXBvbmVudHMuXHJcbiAgICAgICAgcmV0dXJuIHByb3ZpZGVyc1xyXG4gICAgICAgICAgICAubWFwKGZ1bmN0aW9uIChwcm92aWRlcikge1xyXG4gICAgICAgICAgICBpZiAoaXNWZXJzaW9uU2VydmljZVByb3ZpZGVyKHByb3ZpZGVyKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHNlcnZpY2UgPSBwcm92aWRlci5nZXRJbW1lZGlhdGUoKTtcclxuICAgICAgICAgICAgICAgIHJldHVybiBzZXJ2aWNlLmxpYnJhcnkgKyBcIi9cIiArIHNlcnZpY2UudmVyc2lvbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAobG9nU3RyaW5nKSB7IHJldHVybiBsb2dTdHJpbmc7IH0pXHJcbiAgICAgICAgICAgIC5qb2luKCcgJyk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIFBsYXRmb3JtTG9nZ2VyU2VydmljZTtcclxufSgpKTtcclxuLyoqXHJcbiAqXHJcbiAqIEBwYXJhbSBwcm92aWRlciBjaGVjayBpZiB0aGlzIHByb3ZpZGVyIHByb3ZpZGVzIGEgVmVyc2lvblNlcnZpY2VcclxuICpcclxuICogTk9URTogVXNpbmcgUHJvdmlkZXI8J2FwcC12ZXJzaW9uJz4gaXMgYSBoYWNrIHRvIGluZGljYXRlIHRoYXQgdGhlIHByb3ZpZGVyXHJcbiAqIHByb3ZpZGVzIFZlcnNpb25TZXJ2aWNlLiBUaGUgcHJvdmlkZXIgaXMgbm90IG5lY2Vzc2FyaWx5IGEgJ2FwcC12ZXJzaW9uJ1xyXG4gKiBwcm92aWRlci5cclxuICovXHJcbmZ1bmN0aW9uIGlzVmVyc2lvblNlcnZpY2VQcm92aWRlcihwcm92aWRlcikge1xyXG4gICAgdmFyIGNvbXBvbmVudCA9IHByb3ZpZGVyLmdldENvbXBvbmVudCgpO1xyXG4gICAgcmV0dXJuIChjb21wb25lbnQgPT09IG51bGwgfHwgY29tcG9uZW50ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb21wb25lbnQudHlwZSkgPT09IFwiVkVSU0lPTlwiIC8qIFZFUlNJT04gKi87XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE5IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gcmVnaXN0ZXJDb3JlQ29tcG9uZW50cyhmaXJlYmFzZSwgdmFyaWFudCkge1xyXG4gICAgZmlyZWJhc2UuSU5URVJOQUwucmVnaXN0ZXJDb21wb25lbnQobmV3IENvbXBvbmVudCgncGxhdGZvcm0tbG9nZ2VyJywgZnVuY3Rpb24gKGNvbnRhaW5lcikgeyByZXR1cm4gbmV3IFBsYXRmb3JtTG9nZ2VyU2VydmljZShjb250YWluZXIpOyB9LCBcIlBSSVZBVEVcIiAvKiBQUklWQVRFICovKSk7XHJcbiAgICAvLyBSZWdpc3RlciBgYXBwYCBwYWNrYWdlLlxyXG4gICAgZmlyZWJhc2UucmVnaXN0ZXJWZXJzaW9uKG5hbWUsIHZlcnNpb24sIHZhcmlhbnQpO1xyXG4gICAgLy8gUmVnaXN0ZXIgcGxhdGZvcm0gU0RLIGlkZW50aWZpZXIgKG5vIHZlcnNpb24pLlxyXG4gICAgZmlyZWJhc2UucmVnaXN0ZXJWZXJzaW9uKCdmaXJlLWpzJywgJycpO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8vIEZpcmViYXNlIExpdGUgZGV0ZWN0aW9uIHRlc3RcclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcclxuaWYgKGlzQnJvd3NlcigpICYmIHNlbGYuZmlyZWJhc2UgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgbG9nZ2VyLndhcm4oXCJcXG4gICAgV2FybmluZzogRmlyZWJhc2UgaXMgYWxyZWFkeSBkZWZpbmVkIGluIHRoZSBnbG9iYWwgc2NvcGUuIFBsZWFzZSBtYWtlIHN1cmVcXG4gICAgRmlyZWJhc2UgbGlicmFyeSBpcyBvbmx5IGxvYWRlZCBvbmNlLlxcbiAgXCIpO1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXHJcbiAgICB2YXIgc2RrVmVyc2lvbiA9IHNlbGYuZmlyZWJhc2UuU0RLX1ZFUlNJT047XHJcbiAgICBpZiAoc2RrVmVyc2lvbiAmJiBzZGtWZXJzaW9uLmluZGV4T2YoJ0xJVEUnKSA+PSAwKSB7XHJcbiAgICAgICAgbG9nZ2VyLndhcm4oXCJcXG4gICAgV2FybmluZzogWW91IGFyZSB0cnlpbmcgdG8gbG9hZCBGaXJlYmFzZSB3aGlsZSB1c2luZyBGaXJlYmFzZSBQZXJmb3JtYW5jZSBzdGFuZGFsb25lIHNjcmlwdC5cXG4gICAgWW91IHNob3VsZCBsb2FkIEZpcmViYXNlIFBlcmZvcm1hbmNlIHdpdGggdGhpcyBpbnN0YW5jZSBvZiBGaXJlYmFzZSB0byBhdm9pZCBsb2FkaW5nIGR1cGxpY2F0ZSBjb2RlLlxcbiAgICBcIik7XHJcbiAgICB9XHJcbn1cclxudmFyIGluaXRpYWxpemVBcHAgPSBmaXJlYmFzZS5pbml0aWFsaXplQXBwO1xyXG4vLyBUT0RPOiBUaGlzIGRpc2FibGUgY2FuIGJlIHJlbW92ZWQgYW5kIHRoZSAnaWdub3JlUmVzdEFyZ3MnIG9wdGlvbiBhZGRlZCB0b1xyXG4vLyB0aGUgbm8tZXhwbGljaXQtYW55IHJ1bGUgd2hlbiBFU2xpbnQgcmVsZWFzZXMgaXQuXHJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XHJcbmZpcmViYXNlLmluaXRpYWxpemVBcHAgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICB9XHJcbiAgICAvLyBFbnZpcm9ubWVudCBjaGVjayBiZWZvcmUgaW5pdGlhbGl6aW5nIGFwcFxyXG4gICAgLy8gRG8gdGhlIGNoZWNrIGluIGluaXRpYWxpemVBcHAsIHNvIHBlb3BsZSBoYXZlIGEgY2hhbmNlIHRvIGRpc2FibGUgaXQgYnkgc2V0dGluZyBsb2dMZXZlbFxyXG4gICAgLy8gaW4gQGZpcmViYXNlL2xvZ2dlclxyXG4gICAgaWYgKGlzTm9kZSgpKSB7XHJcbiAgICAgICAgbG9nZ2VyLndhcm4oXCJcXG4gICAgICBXYXJuaW5nOiBUaGlzIGlzIGEgYnJvd3Nlci10YXJnZXRlZCBGaXJlYmFzZSBidW5kbGUgYnV0IGl0IGFwcGVhcnMgaXQgaXMgYmVpbmdcXG4gICAgICBydW4gaW4gYSBOb2RlIGVudmlyb25tZW50LiAgSWYgcnVubmluZyBpbiBhIE5vZGUgZW52aXJvbm1lbnQsIG1ha2Ugc3VyZSB5b3VcXG4gICAgICBhcmUgdXNpbmcgdGhlIGJ1bmRsZSBzcGVjaWZpZWQgYnkgdGhlIFxcXCJtYWluXFxcIiBmaWVsZCBpbiBwYWNrYWdlLmpzb24uXFxuICAgICAgXFxuICAgICAgSWYgeW91IGFyZSB1c2luZyBXZWJwYWNrLCB5b3UgY2FuIHNwZWNpZnkgXFxcIm1haW5cXFwiIGFzIHRoZSBmaXJzdCBpdGVtIGluXFxuICAgICAgXFxcInJlc29sdmUubWFpbkZpZWxkc1xcXCI6XFxuICAgICAgaHR0cHM6Ly93ZWJwYWNrLmpzLm9yZy9jb25maWd1cmF0aW9uL3Jlc29sdmUvI3Jlc29sdmVtYWluZmllbGRzXFxuICAgICAgXFxuICAgICAgSWYgdXNpbmcgUm9sbHVwLCB1c2UgdGhlIEByb2xsdXAvcGx1Z2luLW5vZGUtcmVzb2x2ZSBwbHVnaW4gYW5kIHNwZWNpZnkgXFxcIm1haW5cXFwiXFxuICAgICAgYXMgdGhlIGZpcnN0IGl0ZW0gaW4gXFxcIm1haW5GaWVsZHNcXFwiLCBlLmcuIFsnbWFpbicsICdtb2R1bGUnXS5cXG4gICAgICBodHRwczovL2dpdGh1Yi5jb20vcm9sbHVwL0Byb2xsdXAvcGx1Z2luLW5vZGUtcmVzb2x2ZVxcbiAgICAgIFwiKTtcclxuICAgIH1cclxuICAgIHJldHVybiBpbml0aWFsaXplQXBwLmFwcGx5KHVuZGVmaW5lZCwgYXJncyk7XHJcbn07XHJcbnZhciBmaXJlYmFzZSQxID0gZmlyZWJhc2U7XHJcbnJlZ2lzdGVyQ29yZUNvbXBvbmVudHMoZmlyZWJhc2UkMSk7XG5cbmV4cG9ydCBkZWZhdWx0IGZpcmViYXNlJDE7XG5leHBvcnQgeyBmaXJlYmFzZSQxIGFzIGZpcmViYXNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lc20uanMubWFwXG4iLCJpbXBvcnQgeyBfX2Fzc2lnbiwgX192YWx1ZXMsIF9fcmVhZCwgX19hd2FpdGVyLCBfX2dlbmVyYXRvciwgX19zcHJlYWRBcnJheSB9IGZyb20gJ3RzbGliJztcbmltcG9ydCB7IERlZmVycmVkIH0gZnJvbSAnQGZpcmViYXNlL3V0aWwnO1xuXG4vKipcclxuICogQ29tcG9uZW50IGZvciBzZXJ2aWNlIG5hbWUgVCwgZS5nLiBgYXV0aGAsIGBhdXRoLWludGVybmFsYFxyXG4gKi9cclxudmFyIENvbXBvbmVudCA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBuYW1lIFRoZSBwdWJsaWMgc2VydmljZSBuYW1lLCBlLmcuIGFwcCwgYXV0aCwgZmlyZXN0b3JlLCBkYXRhYmFzZVxyXG4gICAgICogQHBhcmFtIGluc3RhbmNlRmFjdG9yeSBTZXJ2aWNlIGZhY3RvcnkgcmVzcG9uc2libGUgZm9yIGNyZWF0aW5nIHRoZSBwdWJsaWMgaW50ZXJmYWNlXHJcbiAgICAgKiBAcGFyYW0gdHlwZSB3aGV0aGVyIHRoZSBzZXJ2aWNlIHByb3ZpZGVkIGJ5IHRoZSBjb21wb25lbnQgaXMgcHVibGljIG9yIHByaXZhdGVcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gQ29tcG9uZW50KG5hbWUsIGluc3RhbmNlRmFjdG9yeSwgdHlwZSkge1xyXG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5pbnN0YW5jZUZhY3RvcnkgPSBpbnN0YW5jZUZhY3Rvcnk7XHJcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcclxuICAgICAgICB0aGlzLm11bHRpcGxlSW5zdGFuY2VzID0gZmFsc2U7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogUHJvcGVydGllcyB0byBiZSBhZGRlZCB0byB0aGUgc2VydmljZSBuYW1lc3BhY2VcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLnNlcnZpY2VQcm9wcyA9IHt9O1xyXG4gICAgICAgIHRoaXMuaW5zdGFudGlhdGlvbk1vZGUgPSBcIkxBWllcIiAvKiBMQVpZICovO1xyXG4gICAgICAgIHRoaXMub25JbnN0YW5jZUNyZWF0ZWQgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgQ29tcG9uZW50LnByb3RvdHlwZS5zZXRJbnN0YW50aWF0aW9uTW9kZSA9IGZ1bmN0aW9uIChtb2RlKSB7XHJcbiAgICAgICAgdGhpcy5pbnN0YW50aWF0aW9uTW9kZSA9IG1vZGU7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9O1xyXG4gICAgQ29tcG9uZW50LnByb3RvdHlwZS5zZXRNdWx0aXBsZUluc3RhbmNlcyA9IGZ1bmN0aW9uIChtdWx0aXBsZUluc3RhbmNlcykge1xyXG4gICAgICAgIHRoaXMubXVsdGlwbGVJbnN0YW5jZXMgPSBtdWx0aXBsZUluc3RhbmNlcztcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH07XHJcbiAgICBDb21wb25lbnQucHJvdG90eXBlLnNldFNlcnZpY2VQcm9wcyA9IGZ1bmN0aW9uIChwcm9wcykge1xyXG4gICAgICAgIHRoaXMuc2VydmljZVByb3BzID0gcHJvcHM7XHJcbiAgICAgICAgcmV0dXJuIHRoaXM7XHJcbiAgICB9O1xyXG4gICAgQ29tcG9uZW50LnByb3RvdHlwZS5zZXRJbnN0YW5jZUNyZWF0ZWRDYWxsYmFjayA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xyXG4gICAgICAgIHRoaXMub25JbnN0YW5jZUNyZWF0ZWQgPSBjYWxsYmFjaztcclxuICAgICAgICByZXR1cm4gdGhpcztcclxuICAgIH07XHJcbiAgICByZXR1cm4gQ29tcG9uZW50O1xyXG59KCkpO1xuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTkgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG52YXIgREVGQVVMVF9FTlRSWV9OQU1FID0gJ1tERUZBVUxUXSc7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBQcm92aWRlciBmb3IgaW5zdGFuY2UgZm9yIHNlcnZpY2UgbmFtZSBULCBlLmcuICdhdXRoJywgJ2F1dGgtaW50ZXJuYWwnXHJcbiAqIE5hbWVTZXJ2aWNlTWFwcGluZ1tUXSBpcyBhbiBhbGlhcyBmb3IgdGhlIHR5cGUgb2YgdGhlIGluc3RhbmNlXHJcbiAqL1xyXG52YXIgUHJvdmlkZXIgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBQcm92aWRlcihuYW1lLCBjb250YWluZXIpIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMuY29udGFpbmVyID0gY29udGFpbmVyO1xyXG4gICAgICAgIHRoaXMuY29tcG9uZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmluc3RhbmNlcyA9IG5ldyBNYXAoKTtcclxuICAgICAgICB0aGlzLmluc3RhbmNlc0RlZmVycmVkID0gbmV3IE1hcCgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKiBAcGFyYW0gaWRlbnRpZmllciBBIHByb3ZpZGVyIGNhbiBwcm92aWRlIG11bGl0cGxlIGluc3RhbmNlcyBvZiBhIHNlcnZpY2VcclxuICAgICAqIGlmIHRoaXMuY29tcG9uZW50Lm11bHRpcGxlSW5zdGFuY2VzIGlzIHRydWUuXHJcbiAgICAgKi9cclxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoaWRlbnRpZmllcikge1xyXG4gICAgICAgIGlmIChpZGVudGlmaWVyID09PSB2b2lkIDApIHsgaWRlbnRpZmllciA9IERFRkFVTFRfRU5UUllfTkFNRTsgfVxyXG4gICAgICAgIC8vIGlmIG11bHRpcGxlSW5zdGFuY2VzIGlzIG5vdCBzdXBwb3J0ZWQsIHVzZSB0aGUgZGVmYXVsdCBuYW1lXHJcbiAgICAgICAgdmFyIG5vcm1hbGl6ZWRJZGVudGlmaWVyID0gdGhpcy5ub3JtYWxpemVJbnN0YW5jZUlkZW50aWZpZXIoaWRlbnRpZmllcik7XHJcbiAgICAgICAgaWYgKCF0aGlzLmluc3RhbmNlc0RlZmVycmVkLmhhcyhub3JtYWxpemVkSWRlbnRpZmllcikpIHtcclxuICAgICAgICAgICAgdmFyIGRlZmVycmVkID0gbmV3IERlZmVycmVkKCk7XHJcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2VzRGVmZXJyZWQuc2V0KG5vcm1hbGl6ZWRJZGVudGlmaWVyLCBkZWZlcnJlZCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmlzSW5pdGlhbGl6ZWQobm9ybWFsaXplZElkZW50aWZpZXIpIHx8XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNob3VsZEF1dG9Jbml0aWFsaXplKCkpIHtcclxuICAgICAgICAgICAgICAgIC8vIGluaXRpYWxpemUgdGhlIHNlcnZpY2UgaWYgaXQgY2FuIGJlIGF1dG8taW5pdGlhbGl6ZWRcclxuICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGluc3RhbmNlID0gdGhpcy5nZXRPckluaXRpYWxpemVTZXJ2aWNlKHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2VJZGVudGlmaWVyOiBub3JtYWxpemVkSWRlbnRpZmllclxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbnN0YW5jZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGluc3RhbmNlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHdoZW4gdGhlIGluc3RhbmNlIGZhY3RvcnkgdGhyb3dzIGFuIGV4Y2VwdGlvbiBkdXJpbmcgZ2V0KCksIGl0IHNob3VsZCBub3QgY2F1c2VcclxuICAgICAgICAgICAgICAgICAgICAvLyBhIGZhdGFsIGVycm9yLiBXZSBqdXN0IHJldHVybiB0aGUgdW5yZXNvbHZlZCBwcm9taXNlIGluIHRoaXMgY2FzZS5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdGhpcy5pbnN0YW5jZXNEZWZlcnJlZC5nZXQobm9ybWFsaXplZElkZW50aWZpZXIpLnByb21pc2U7XHJcbiAgICB9O1xyXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLmdldEltbWVkaWF0ZSA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XHJcbiAgICAgICAgdmFyIF9hID0gX19hc3NpZ24oeyBpZGVudGlmaWVyOiBERUZBVUxUX0VOVFJZX05BTUUsIG9wdGlvbmFsOiBmYWxzZSB9LCBvcHRpb25zKSwgaWRlbnRpZmllciA9IF9hLmlkZW50aWZpZXIsIG9wdGlvbmFsID0gX2Eub3B0aW9uYWw7XHJcbiAgICAgICAgLy8gaWYgbXVsdGlwbGVJbnN0YW5jZXMgaXMgbm90IHN1cHBvcnRlZCwgdXNlIHRoZSBkZWZhdWx0IG5hbWVcclxuICAgICAgICB2YXIgbm9ybWFsaXplZElkZW50aWZpZXIgPSB0aGlzLm5vcm1hbGl6ZUluc3RhbmNlSWRlbnRpZmllcihpZGVudGlmaWVyKTtcclxuICAgICAgICBpZiAodGhpcy5pc0luaXRpYWxpemVkKG5vcm1hbGl6ZWRJZGVudGlmaWVyKSB8fFxyXG4gICAgICAgICAgICB0aGlzLnNob3VsZEF1dG9Jbml0aWFsaXplKCkpIHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmdldE9ySW5pdGlhbGl6ZVNlcnZpY2Uoe1xyXG4gICAgICAgICAgICAgICAgICAgIGluc3RhbmNlSWRlbnRpZmllcjogbm9ybWFsaXplZElkZW50aWZpZXJcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAob3B0aW9uYWwpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRocm93IGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vIEluIGNhc2UgYSBjb21wb25lbnQgaXMgbm90IGluaXRpYWxpemVkIGFuZCBzaG91bGQvY2FuIG5vdCBiZSBhdXRvLWluaXRpYWxpemVkIGF0IHRoZSBtb21lbnQsIHJldHVybiBudWxsIGlmIHRoZSBvcHRpb25hbCBmbGFnIGlzIHNldCwgb3IgdGhyb3dcclxuICAgICAgICAgICAgaWYgKG9wdGlvbmFsKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRocm93IEVycm9yKFwiU2VydmljZSBcIiArIHRoaXMubmFtZSArIFwiIGlzIG5vdCBhdmFpbGFibGVcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLmdldENvbXBvbmVudCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb21wb25lbnQ7XHJcbiAgICB9O1xyXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLnNldENvbXBvbmVudCA9IGZ1bmN0aW9uIChjb21wb25lbnQpIHtcclxuICAgICAgICB2YXIgZV8xLCBfYTtcclxuICAgICAgICBpZiAoY29tcG9uZW50Lm5hbWUgIT09IHRoaXMubmFtZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcihcIk1pc21hdGNoaW5nIENvbXBvbmVudCBcIiArIGNvbXBvbmVudC5uYW1lICsgXCIgZm9yIFByb3ZpZGVyIFwiICsgdGhpcy5uYW1lICsgXCIuXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5jb21wb25lbnQpIHtcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJDb21wb25lbnQgZm9yIFwiICsgdGhpcy5uYW1lICsgXCIgaGFzIGFscmVhZHkgYmVlbiBwcm92aWRlZFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jb21wb25lbnQgPSBjb21wb25lbnQ7XHJcbiAgICAgICAgLy8gcmV0dXJuIGVhcmx5IHdpdGhvdXQgYXR0ZW1wdGluZyB0byBpbml0aWFsaXplIHRoZSBjb21wb25lbnQgaWYgdGhlIGNvbXBvbmVudCByZXF1aXJlcyBleHBsaWNpdCBpbml0aWFsaXphdGlvbiAoY2FsbGluZyBgUHJvdmlkZXIuaW5pdGlhbGl6ZSgpYClcclxuICAgICAgICBpZiAoIXRoaXMuc2hvdWxkQXV0b0luaXRpYWxpemUoKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGlmIHRoZSBzZXJ2aWNlIGlzIGVhZ2VyLCBpbml0aWFsaXplIHRoZSBkZWZhdWx0IGluc3RhbmNlXHJcbiAgICAgICAgaWYgKGlzQ29tcG9uZW50RWFnZXIoY29tcG9uZW50KSkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5nZXRPckluaXRpYWxpemVTZXJ2aWNlKHsgaW5zdGFuY2VJZGVudGlmaWVyOiBERUZBVUxUX0VOVFJZX05BTUUgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgIC8vIHdoZW4gdGhlIGluc3RhbmNlIGZhY3RvcnkgZm9yIGFuIGVhZ2VyIENvbXBvbmVudCB0aHJvd3MgYW4gZXhjZXB0aW9uIGR1cmluZyB0aGUgZWFnZXJcclxuICAgICAgICAgICAgICAgIC8vIGluaXRpYWxpemF0aW9uLCBpdCBzaG91bGQgbm90IGNhdXNlIGEgZmF0YWwgZXJyb3IuXHJcbiAgICAgICAgICAgICAgICAvLyBUT0RPOiBJbnZlc3RpZ2F0ZSBpZiB3ZSBuZWVkIHRvIG1ha2UgaXQgY29uZmlndXJhYmxlLCBiZWNhdXNlIHNvbWUgY29tcG9uZW50IG1heSB3YW50IHRvIGNhdXNlXHJcbiAgICAgICAgICAgICAgICAvLyBhIGZhdGFsIGVycm9yIGluIHRoaXMgY2FzZT9cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAvLyBDcmVhdGUgc2VydmljZSBpbnN0YW5jZXMgZm9yIHRoZSBwZW5kaW5nIHByb21pc2VzIGFuZCByZXNvbHZlIHRoZW1cclxuICAgICAgICAgICAgLy8gTk9URTogaWYgdGhpcy5tdWx0aXBsZUluc3RhbmNlcyBpcyBmYWxzZSwgb25seSB0aGUgZGVmYXVsdCBpbnN0YW5jZSB3aWxsIGJlIGNyZWF0ZWRcclxuICAgICAgICAgICAgLy8gYW5kIGFsbCBwcm9taXNlcyB3aXRoIHJlc29sdmUgd2l0aCBpdCByZWdhcmRsZXNzIG9mIHRoZSBpZGVudGlmaWVyLlxyXG4gICAgICAgICAgICBmb3IgKHZhciBfYiA9IF9fdmFsdWVzKHRoaXMuaW5zdGFuY2VzRGVmZXJyZWQuZW50cmllcygpKSwgX2MgPSBfYi5uZXh0KCk7ICFfYy5kb25lOyBfYyA9IF9iLm5leHQoKSkge1xyXG4gICAgICAgICAgICAgICAgdmFyIF9kID0gX19yZWFkKF9jLnZhbHVlLCAyKSwgaW5zdGFuY2VJZGVudGlmaWVyID0gX2RbMF0sIGluc3RhbmNlRGVmZXJyZWQgPSBfZFsxXTtcclxuICAgICAgICAgICAgICAgIHZhciBub3JtYWxpemVkSWRlbnRpZmllciA9IHRoaXMubm9ybWFsaXplSW5zdGFuY2VJZGVudGlmaWVyKGluc3RhbmNlSWRlbnRpZmllcik7XHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGBnZXRPckluaXRpYWxpemVTZXJ2aWNlKClgIHNob3VsZCBhbHdheXMgcmV0dXJuIGEgdmFsaWQgaW5zdGFuY2Ugc2luY2UgYSBjb21wb25lbnQgaXMgZ3VhcmFudGVlZC4gdXNlICEgdG8gbWFrZSB0eXBlc2NyaXB0IGhhcHB5LlxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpbnN0YW5jZSA9IHRoaXMuZ2V0T3JJbml0aWFsaXplU2VydmljZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGluc3RhbmNlSWRlbnRpZmllcjogbm9ybWFsaXplZElkZW50aWZpZXJcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICBpbnN0YW5jZURlZmVycmVkLnJlc29sdmUoaW5zdGFuY2UpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyB3aGVuIHRoZSBpbnN0YW5jZSBmYWN0b3J5IHRocm93cyBhbiBleGNlcHRpb24sIGl0IHNob3VsZCBub3QgY2F1c2VcclxuICAgICAgICAgICAgICAgICAgICAvLyBhIGZhdGFsIGVycm9yLiBXZSBqdXN0IGxlYXZlIHRoZSBwcm9taXNlIHVucmVzb2x2ZWQuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY2F0Y2ggKGVfMV8xKSB7IGVfMSA9IHsgZXJyb3I6IGVfMV8xIH07IH1cclxuICAgICAgICBmaW5hbGx5IHtcclxuICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgIGlmIChfYyAmJiAhX2MuZG9uZSAmJiAoX2EgPSBfYi5yZXR1cm4pKSBfYS5jYWxsKF9iKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBmaW5hbGx5IHsgaWYgKGVfMSkgdGhyb3cgZV8xLmVycm9yOyB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5jbGVhckluc3RhbmNlID0gZnVuY3Rpb24gKGlkZW50aWZpZXIpIHtcclxuICAgICAgICBpZiAoaWRlbnRpZmllciA9PT0gdm9pZCAwKSB7IGlkZW50aWZpZXIgPSBERUZBVUxUX0VOVFJZX05BTUU7IH1cclxuICAgICAgICB0aGlzLmluc3RhbmNlc0RlZmVycmVkLmRlbGV0ZShpZGVudGlmaWVyKTtcclxuICAgICAgICB0aGlzLmluc3RhbmNlcy5kZWxldGUoaWRlbnRpZmllcik7XHJcbiAgICB9O1xyXG4gICAgLy8gYXBwLmRlbGV0ZSgpIHdpbGwgY2FsbCB0aGlzIG1ldGhvZCBvbiBldmVyeSBwcm92aWRlciB0byBkZWxldGUgdGhlIHNlcnZpY2VzXHJcbiAgICAvLyBUT0RPOiBzaG91bGQgd2UgbWFyayB0aGUgcHJvdmlkZXIgYXMgZGVsZXRlZD9cclxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5kZWxldGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgc2VydmljZXM7XHJcbiAgICAgICAgICAgIHJldHVybiBfX2dlbmVyYXRvcih0aGlzLCBmdW5jdGlvbiAoX2EpIHtcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAoX2EubGFiZWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZpY2VzID0gQXJyYXkuZnJvbSh0aGlzLmluc3RhbmNlcy52YWx1ZXMoKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbNCAvKnlpZWxkKi8sIFByb21pc2UuYWxsKF9fc3ByZWFkQXJyYXkoX19zcHJlYWRBcnJheShbXSwgX19yZWFkKHNlcnZpY2VzXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoc2VydmljZSkgeyByZXR1cm4gJ0lOVEVSTkFMJyBpbiBzZXJ2aWNlOyB9KSAvLyBsZWdhY3kgc2VydmljZXNcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKHNlcnZpY2UpIHsgcmV0dXJuIHNlcnZpY2UuSU5URVJOQUwuZGVsZXRlKCk7IH0pKSksIF9fcmVhZChzZXJ2aWNlc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5maWx0ZXIoZnVuY3Rpb24gKHNlcnZpY2UpIHsgcmV0dXJuICdfZGVsZXRlJyBpbiBzZXJ2aWNlOyB9KSAvLyBtb2R1bGFyaXplZCBzZXJ2aWNlc1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAoc2VydmljZSkgeyByZXR1cm4gc2VydmljZS5fZGVsZXRlKCk7IH0pKSkpXTtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDE6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIF9hLnNlbnQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFsyIC8qcmV0dXJuKi9dO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBQcm92aWRlci5wcm90b3R5cGUuaXNDb21wb25lbnRTZXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcG9uZW50ICE9IG51bGw7XHJcbiAgICB9O1xyXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLmlzSW5pdGlhbGl6ZWQgPSBmdW5jdGlvbiAoaWRlbnRpZmllcikge1xyXG4gICAgICAgIGlmIChpZGVudGlmaWVyID09PSB2b2lkIDApIHsgaWRlbnRpZmllciA9IERFRkFVTFRfRU5UUllfTkFNRTsgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLmluc3RhbmNlcy5oYXMoaWRlbnRpZmllcik7XHJcbiAgICB9O1xyXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLmluaXRpYWxpemUgPSBmdW5jdGlvbiAob3B0cykge1xyXG4gICAgICAgIHZhciBlXzIsIF9hO1xyXG4gICAgICAgIGlmIChvcHRzID09PSB2b2lkIDApIHsgb3B0cyA9IHt9OyB9XHJcbiAgICAgICAgdmFyIF9iID0gb3B0cy5pbnN0YW5jZUlkZW50aWZpZXIsIGluc3RhbmNlSWRlbnRpZmllciA9IF9iID09PSB2b2lkIDAgPyBERUZBVUxUX0VOVFJZX05BTUUgOiBfYiwgX2MgPSBvcHRzLm9wdGlvbnMsIG9wdGlvbnMgPSBfYyA9PT0gdm9pZCAwID8ge30gOiBfYztcclxuICAgICAgICB2YXIgbm9ybWFsaXplZElkZW50aWZpZXIgPSB0aGlzLm5vcm1hbGl6ZUluc3RhbmNlSWRlbnRpZmllcihpbnN0YW5jZUlkZW50aWZpZXIpO1xyXG4gICAgICAgIGlmICh0aGlzLmlzSW5pdGlhbGl6ZWQobm9ybWFsaXplZElkZW50aWZpZXIpKSB7XHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKHRoaXMubmFtZSArIFwiKFwiICsgbm9ybWFsaXplZElkZW50aWZpZXIgKyBcIikgaGFzIGFscmVhZHkgYmVlbiBpbml0aWFsaXplZFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCF0aGlzLmlzQ29tcG9uZW50U2V0KCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoXCJDb21wb25lbnQgXCIgKyB0aGlzLm5hbWUgKyBcIiBoYXMgbm90IGJlZW4gcmVnaXN0ZXJlZCB5ZXRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBpbnN0YW5jZSA9IHRoaXMuZ2V0T3JJbml0aWFsaXplU2VydmljZSh7XHJcbiAgICAgICAgICAgIGluc3RhbmNlSWRlbnRpZmllcjogbm9ybWFsaXplZElkZW50aWZpZXIsXHJcbiAgICAgICAgICAgIG9wdGlvbnM6IG9wdGlvbnNcclxuICAgICAgICB9KTtcclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAvLyByZXNvbHZlIGFueSBwZW5kaW5nIHByb21pc2Ugd2FpdGluZyBmb3IgdGhlIHNlcnZpY2UgaW5zdGFuY2VcclxuICAgICAgICAgICAgZm9yICh2YXIgX2QgPSBfX3ZhbHVlcyh0aGlzLmluc3RhbmNlc0RlZmVycmVkLmVudHJpZXMoKSksIF9lID0gX2QubmV4dCgpOyAhX2UuZG9uZTsgX2UgPSBfZC5uZXh0KCkpIHtcclxuICAgICAgICAgICAgICAgIHZhciBfZiA9IF9fcmVhZChfZS52YWx1ZSwgMiksIGluc3RhbmNlSWRlbnRpZmllcl8xID0gX2ZbMF0sIGluc3RhbmNlRGVmZXJyZWQgPSBfZlsxXTtcclxuICAgICAgICAgICAgICAgIHZhciBub3JtYWxpemVkRGVmZXJyZWRJZGVudGlmaWVyID0gdGhpcy5ub3JtYWxpemVJbnN0YW5jZUlkZW50aWZpZXIoaW5zdGFuY2VJZGVudGlmaWVyXzEpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5vcm1hbGl6ZWRJZGVudGlmaWVyID09PSBub3JtYWxpemVkRGVmZXJyZWRJZGVudGlmaWVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5zdGFuY2VEZWZlcnJlZC5yZXNvbHZlKGluc3RhbmNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZV8yXzEpIHsgZV8yID0geyBlcnJvcjogZV8yXzEgfTsgfVxyXG4gICAgICAgIGZpbmFsbHkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgaWYgKF9lICYmICFfZS5kb25lICYmIChfYSA9IF9kLnJldHVybikpIF9hLmNhbGwoX2QpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGZpbmFsbHkgeyBpZiAoZV8yKSB0aHJvdyBlXzIuZXJyb3I7IH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGluc3RhbmNlO1xyXG4gICAgfTtcclxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5nZXRPckluaXRpYWxpemVTZXJ2aWNlID0gZnVuY3Rpb24gKF9hKSB7XHJcbiAgICAgICAgdmFyIGluc3RhbmNlSWRlbnRpZmllciA9IF9hLmluc3RhbmNlSWRlbnRpZmllciwgX2IgPSBfYS5vcHRpb25zLCBvcHRpb25zID0gX2IgPT09IHZvaWQgMCA/IHt9IDogX2I7XHJcbiAgICAgICAgdmFyIGluc3RhbmNlID0gdGhpcy5pbnN0YW5jZXMuZ2V0KGluc3RhbmNlSWRlbnRpZmllcik7XHJcbiAgICAgICAgaWYgKCFpbnN0YW5jZSAmJiB0aGlzLmNvbXBvbmVudCkge1xyXG4gICAgICAgICAgICBpbnN0YW5jZSA9IHRoaXMuY29tcG9uZW50Lmluc3RhbmNlRmFjdG9yeSh0aGlzLmNvbnRhaW5lciwge1xyXG4gICAgICAgICAgICAgICAgaW5zdGFuY2VJZGVudGlmaWVyOiBub3JtYWxpemVJZGVudGlmaWVyRm9yRmFjdG9yeShpbnN0YW5jZUlkZW50aWZpZXIpLFxyXG4gICAgICAgICAgICAgICAgb3B0aW9uczogb3B0aW9uc1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZXMuc2V0KGluc3RhbmNlSWRlbnRpZmllciwgaW5zdGFuY2UpO1xyXG4gICAgICAgICAgICAvKipcclxuICAgICAgICAgICAgICogT3JkZXIgaXMgaW1wb3J0YW50XHJcbiAgICAgICAgICAgICAqIG9uSW5zdGFuY2VDcmVhdGVkKCkgc2hvdWxkIGJlIGNhbGxlZCBhZnRlciB0aGlzLmluc3RhbmNlcy5zZXQoaW5zdGFuY2VJZGVudGlmaWVyLCBpbnN0YW5jZSk7IHdoaWNoXHJcbiAgICAgICAgICAgICAqIG1ha2VzIGBpc0luaXRpYWxpemVkKClgIHJldHVybiB0cnVlLlxyXG4gICAgICAgICAgICAgKi9cclxuICAgICAgICAgICAgaWYgKHRoaXMuY29tcG9uZW50Lm9uSW5zdGFuY2VDcmVhdGVkKSB7XHJcbiAgICAgICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29tcG9uZW50Lm9uSW5zdGFuY2VDcmVhdGVkKHRoaXMuY29udGFpbmVyLCBpbnN0YW5jZUlkZW50aWZpZXIsIGluc3RhbmNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhdGNoIChfYykge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGlnbm9yZSBlcnJvcnMgaW4gdGhlIG9uSW5zdGFuY2VDcmVhdGVkQ2FsbGJhY2tcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaW5zdGFuY2UgfHwgbnVsbDtcclxuICAgIH07XHJcbiAgICBQcm92aWRlci5wcm90b3R5cGUubm9ybWFsaXplSW5zdGFuY2VJZGVudGlmaWVyID0gZnVuY3Rpb24gKGlkZW50aWZpZXIpIHtcclxuICAgICAgICBpZiAodGhpcy5jb21wb25lbnQpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuY29tcG9uZW50Lm11bHRpcGxlSW5zdGFuY2VzID8gaWRlbnRpZmllciA6IERFRkFVTFRfRU5UUllfTkFNRTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBpZGVudGlmaWVyOyAvLyBhc3N1bWUgbXVsdGlwbGUgaW5zdGFuY2VzIGFyZSBzdXBwb3J0ZWQgYmVmb3JlIHRoZSBjb21wb25lbnQgaXMgcHJvdmlkZWQuXHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5zaG91bGRBdXRvSW5pdGlhbGl6ZSA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gKCEhdGhpcy5jb21wb25lbnQgJiZcclxuICAgICAgICAgICAgdGhpcy5jb21wb25lbnQuaW5zdGFudGlhdGlvbk1vZGUgIT09IFwiRVhQTElDSVRcIiAvKiBFWFBMSUNJVCAqLyk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIFByb3ZpZGVyO1xyXG59KCkpO1xyXG4vLyB1bmRlZmluZWQgc2hvdWxkIGJlIHBhc3NlZCB0byB0aGUgc2VydmljZSBmYWN0b3J5IGZvciB0aGUgZGVmYXVsdCBpbnN0YW5jZVxyXG5mdW5jdGlvbiBub3JtYWxpemVJZGVudGlmaWVyRm9yRmFjdG9yeShpZGVudGlmaWVyKSB7XHJcbiAgICByZXR1cm4gaWRlbnRpZmllciA9PT0gREVGQVVMVF9FTlRSWV9OQU1FID8gdW5kZWZpbmVkIDogaWRlbnRpZmllcjtcclxufVxyXG5mdW5jdGlvbiBpc0NvbXBvbmVudEVhZ2VyKGNvbXBvbmVudCkge1xyXG4gICAgcmV0dXJuIGNvbXBvbmVudC5pbnN0YW50aWF0aW9uTW9kZSA9PT0gXCJFQUdFUlwiIC8qIEVBR0VSICovO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBDb21wb25lbnRDb250YWluZXIgdGhhdCBwcm92aWRlcyBQcm92aWRlcnMgZm9yIHNlcnZpY2UgbmFtZSBULCBlLmcuIGBhdXRoYCwgYGF1dGgtaW50ZXJuYWxgXHJcbiAqL1xyXG52YXIgQ29tcG9uZW50Q29udGFpbmVyID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gQ29tcG9uZW50Q29udGFpbmVyKG5hbWUpIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIHRoaXMucHJvdmlkZXJzID0gbmV3IE1hcCgpO1xyXG4gICAgfVxyXG4gICAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGNvbXBvbmVudCBDb21wb25lbnQgYmVpbmcgYWRkZWRcclxuICAgICAqIEBwYXJhbSBvdmVyd3JpdGUgV2hlbiBhIGNvbXBvbmVudCB3aXRoIHRoZSBzYW1lIG5hbWUgaGFzIGFscmVhZHkgYmVlbiByZWdpc3RlcmVkLFxyXG4gICAgICogaWYgb3ZlcndyaXRlIGlzIHRydWU6IG92ZXJ3cml0ZSB0aGUgZXhpc3RpbmcgY29tcG9uZW50IHdpdGggdGhlIG5ldyBjb21wb25lbnQgYW5kIGNyZWF0ZSBhIG5ld1xyXG4gICAgICogcHJvdmlkZXIgd2l0aCB0aGUgbmV3IGNvbXBvbmVudC4gSXQgY2FuIGJlIHVzZWZ1bCBpbiB0ZXN0cyB3aGVyZSB5b3Ugd2FudCB0byB1c2UgZGlmZmVyZW50IG1vY2tzXHJcbiAgICAgKiBmb3IgZGlmZmVyZW50IHRlc3RzLlxyXG4gICAgICogaWYgb3ZlcndyaXRlIGlzIGZhbHNlOiB0aHJvdyBhbiBleGNlcHRpb25cclxuICAgICAqL1xyXG4gICAgQ29tcG9uZW50Q29udGFpbmVyLnByb3RvdHlwZS5hZGRDb21wb25lbnQgPSBmdW5jdGlvbiAoY29tcG9uZW50KSB7XHJcbiAgICAgICAgdmFyIHByb3ZpZGVyID0gdGhpcy5nZXRQcm92aWRlcihjb21wb25lbnQubmFtZSk7XHJcbiAgICAgICAgaWYgKHByb3ZpZGVyLmlzQ29tcG9uZW50U2V0KCkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ29tcG9uZW50IFwiICsgY29tcG9uZW50Lm5hbWUgKyBcIiBoYXMgYWxyZWFkeSBiZWVuIHJlZ2lzdGVyZWQgd2l0aCBcIiArIHRoaXMubmFtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHByb3ZpZGVyLnNldENvbXBvbmVudChjb21wb25lbnQpO1xyXG4gICAgfTtcclxuICAgIENvbXBvbmVudENvbnRhaW5lci5wcm90b3R5cGUuYWRkT3JPdmVyd3JpdGVDb21wb25lbnQgPSBmdW5jdGlvbiAoY29tcG9uZW50KSB7XHJcbiAgICAgICAgdmFyIHByb3ZpZGVyID0gdGhpcy5nZXRQcm92aWRlcihjb21wb25lbnQubmFtZSk7XHJcbiAgICAgICAgaWYgKHByb3ZpZGVyLmlzQ29tcG9uZW50U2V0KCkpIHtcclxuICAgICAgICAgICAgLy8gZGVsZXRlIHRoZSBleGlzdGluZyBwcm92aWRlciBmcm9tIHRoZSBjb250YWluZXIsIHNvIHdlIGNhbiByZWdpc3RlciB0aGUgbmV3IGNvbXBvbmVudFxyXG4gICAgICAgICAgICB0aGlzLnByb3ZpZGVycy5kZWxldGUoY29tcG9uZW50Lm5hbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmFkZENvbXBvbmVudChjb21wb25lbnQpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogZ2V0UHJvdmlkZXIgcHJvdmlkZXMgYSB0eXBlIHNhZmUgaW50ZXJmYWNlIHdoZXJlIGl0IGNhbiBvbmx5IGJlIGNhbGxlZCB3aXRoIGEgZmllbGQgbmFtZVxyXG4gICAgICogcHJlc2VudCBpbiBOYW1lU2VydmljZU1hcHBpbmcgaW50ZXJmYWNlLlxyXG4gICAgICpcclxuICAgICAqIEZpcmViYXNlIFNES3MgcHJvdmlkaW5nIHNlcnZpY2VzIHNob3VsZCBleHRlbmQgTmFtZVNlcnZpY2VNYXBwaW5nIGludGVyZmFjZSB0byByZWdpc3RlclxyXG4gICAgICogdGhlbXNlbHZlcy5cclxuICAgICAqL1xyXG4gICAgQ29tcG9uZW50Q29udGFpbmVyLnByb3RvdHlwZS5nZXRQcm92aWRlciA9IGZ1bmN0aW9uIChuYW1lKSB7XHJcbiAgICAgICAgaWYgKHRoaXMucHJvdmlkZXJzLmhhcyhuYW1lKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5wcm92aWRlcnMuZ2V0KG5hbWUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBjcmVhdGUgYSBQcm92aWRlciBmb3IgYSBzZXJ2aWNlIHRoYXQgaGFzbid0IHJlZ2lzdGVyZWQgd2l0aCBGaXJlYmFzZVxyXG4gICAgICAgIHZhciBwcm92aWRlciA9IG5ldyBQcm92aWRlcihuYW1lLCB0aGlzKTtcclxuICAgICAgICB0aGlzLnByb3ZpZGVycy5zZXQobmFtZSwgcHJvdmlkZXIpO1xyXG4gICAgICAgIHJldHVybiBwcm92aWRlcjtcclxuICAgIH07XHJcbiAgICBDb21wb25lbnRDb250YWluZXIucHJvdG90eXBlLmdldFByb3ZpZGVycyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICByZXR1cm4gQXJyYXkuZnJvbSh0aGlzLnByb3ZpZGVycy52YWx1ZXMoKSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIENvbXBvbmVudENvbnRhaW5lcjtcclxufSgpKTtcblxuZXhwb3J0IHsgQ29tcG9uZW50LCBDb21wb25lbnRDb250YWluZXIsIFByb3ZpZGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lc20uanMubWFwXG4iLCIvKiEgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcclxuQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbkxpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7IHlvdSBtYXkgbm90IHVzZVxyXG50aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS4gWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZVxyXG5MaWNlbnNlIGF0IGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG5cclxuVEhJUyBDT0RFIElTIFBST1ZJREVEIE9OIEFOICpBUyBJUyogQkFTSVMsIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWVxyXG5LSU5ELCBFSVRIRVIgRVhQUkVTUyBPUiBJTVBMSUVELCBJTkNMVURJTkcgV0lUSE9VVCBMSU1JVEFUSU9OIEFOWSBJTVBMSUVEXHJcbldBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBUSVRMRSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UsXHJcbk1FUkNIQU5UQUJMSVRZIE9SIE5PTi1JTkZSSU5HRU1FTlQuXHJcblxyXG5TZWUgdGhlIEFwYWNoZSBWZXJzaW9uIDIuMCBMaWNlbnNlIGZvciBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnNcclxuYW5kIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiAqL1xyXG5cclxuZnVuY3Rpb24gX19zcHJlYWRBcnJheXMoKSB7XHJcbiAgICBmb3IgKHZhciBzID0gMCwgaSA9IDAsIGlsID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IGlsOyBpKyspIHMgKz0gYXJndW1lbnRzW2ldLmxlbmd0aDtcclxuICAgIGZvciAodmFyIHIgPSBBcnJheShzKSwgayA9IDAsIGkgPSAwOyBpIDwgaWw7IGkrKylcclxuICAgICAgICBmb3IgKHZhciBhID0gYXJndW1lbnRzW2ldLCBqID0gMCwgamwgPSBhLmxlbmd0aDsgaiA8IGpsOyBqKyssIGsrKylcclxuICAgICAgICAgICAgcltrXSA9IGFbal07XHJcbiAgICByZXR1cm4gcjtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG52YXIgX2E7XHJcbi8qKlxyXG4gKiBBIGNvbnRhaW5lciBmb3IgYWxsIG9mIHRoZSBMb2dnZXIgaW5zdGFuY2VzXHJcbiAqL1xyXG52YXIgaW5zdGFuY2VzID0gW107XHJcbi8qKlxyXG4gKiBUaGUgSlMgU0RLIHN1cHBvcnRzIDUgbG9nIGxldmVscyBhbmQgYWxzbyBhbGxvd3MgYSB1c2VyIHRoZSBhYmlsaXR5IHRvXHJcbiAqIHNpbGVuY2UgdGhlIGxvZ3MgYWx0b2dldGhlci5cclxuICpcclxuICogVGhlIG9yZGVyIGlzIGEgZm9sbG93czpcclxuICogREVCVUcgPCBWRVJCT1NFIDwgSU5GTyA8IFdBUk4gPCBFUlJPUlxyXG4gKlxyXG4gKiBBbGwgb2YgdGhlIGxvZyB0eXBlcyBhYm92ZSB0aGUgY3VycmVudCBsb2cgbGV2ZWwgd2lsbCBiZSBjYXB0dXJlZCAoaS5lLiBpZlxyXG4gKiB5b3Ugc2V0IHRoZSBsb2cgbGV2ZWwgdG8gYElORk9gLCBlcnJvcnMgd2lsbCBzdGlsbCBiZSBsb2dnZWQsIGJ1dCBgREVCVUdgIGFuZFxyXG4gKiBgVkVSQk9TRWAgbG9ncyB3aWxsIG5vdClcclxuICovXHJcbnZhciBMb2dMZXZlbDtcclxuKGZ1bmN0aW9uIChMb2dMZXZlbCkge1xyXG4gICAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJERUJVR1wiXSA9IDBdID0gXCJERUJVR1wiO1xyXG4gICAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJWRVJCT1NFXCJdID0gMV0gPSBcIlZFUkJPU0VcIjtcclxuICAgIExvZ0xldmVsW0xvZ0xldmVsW1wiSU5GT1wiXSA9IDJdID0gXCJJTkZPXCI7XHJcbiAgICBMb2dMZXZlbFtMb2dMZXZlbFtcIldBUk5cIl0gPSAzXSA9IFwiV0FSTlwiO1xyXG4gICAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJFUlJPUlwiXSA9IDRdID0gXCJFUlJPUlwiO1xyXG4gICAgTG9nTGV2ZWxbTG9nTGV2ZWxbXCJTSUxFTlRcIl0gPSA1XSA9IFwiU0lMRU5UXCI7XHJcbn0pKExvZ0xldmVsIHx8IChMb2dMZXZlbCA9IHt9KSk7XHJcbnZhciBsZXZlbFN0cmluZ1RvRW51bSA9IHtcclxuICAgICdkZWJ1Zyc6IExvZ0xldmVsLkRFQlVHLFxyXG4gICAgJ3ZlcmJvc2UnOiBMb2dMZXZlbC5WRVJCT1NFLFxyXG4gICAgJ2luZm8nOiBMb2dMZXZlbC5JTkZPLFxyXG4gICAgJ3dhcm4nOiBMb2dMZXZlbC5XQVJOLFxyXG4gICAgJ2Vycm9yJzogTG9nTGV2ZWwuRVJST1IsXHJcbiAgICAnc2lsZW50JzogTG9nTGV2ZWwuU0lMRU5UXHJcbn07XHJcbi8qKlxyXG4gKiBUaGUgZGVmYXVsdCBsb2cgbGV2ZWxcclxuICovXHJcbnZhciBkZWZhdWx0TG9nTGV2ZWwgPSBMb2dMZXZlbC5JTkZPO1xyXG4vKipcclxuICogQnkgZGVmYXVsdCwgYGNvbnNvbGUuZGVidWdgIGlzIG5vdCBkaXNwbGF5ZWQgaW4gdGhlIGRldmVsb3BlciBjb25zb2xlIChpblxyXG4gKiBjaHJvbWUpLiBUbyBhdm9pZCBmb3JjaW5nIHVzZXJzIHRvIGhhdmUgdG8gb3B0LWluIHRvIHRoZXNlIGxvZ3MgdHdpY2VcclxuICogKGkuZS4gb25jZSBmb3IgZmlyZWJhc2UsIGFuZCBvbmNlIGluIHRoZSBjb25zb2xlKSwgd2UgYXJlIHNlbmRpbmcgYERFQlVHYFxyXG4gKiBsb2dzIHRvIHRoZSBgY29uc29sZS5sb2dgIGZ1bmN0aW9uLlxyXG4gKi9cclxudmFyIENvbnNvbGVNZXRob2QgPSAoX2EgPSB7fSxcclxuICAgIF9hW0xvZ0xldmVsLkRFQlVHXSA9ICdsb2cnLFxyXG4gICAgX2FbTG9nTGV2ZWwuVkVSQk9TRV0gPSAnbG9nJyxcclxuICAgIF9hW0xvZ0xldmVsLklORk9dID0gJ2luZm8nLFxyXG4gICAgX2FbTG9nTGV2ZWwuV0FSTl0gPSAnd2FybicsXHJcbiAgICBfYVtMb2dMZXZlbC5FUlJPUl0gPSAnZXJyb3InLFxyXG4gICAgX2EpO1xyXG4vKipcclxuICogVGhlIGRlZmF1bHQgbG9nIGhhbmRsZXIgd2lsbCBmb3J3YXJkIERFQlVHLCBWRVJCT1NFLCBJTkZPLCBXQVJOLCBhbmQgRVJST1JcclxuICogbWVzc2FnZXMgb24gdG8gdGhlaXIgY29ycmVzcG9uZGluZyBjb25zb2xlIGNvdW50ZXJwYXJ0cyAoaWYgdGhlIGxvZyBtZXRob2RcclxuICogaXMgc3VwcG9ydGVkIGJ5IHRoZSBjdXJyZW50IGxvZyBsZXZlbClcclxuICovXHJcbnZhciBkZWZhdWx0TG9nSGFuZGxlciA9IGZ1bmN0aW9uIChpbnN0YW5jZSwgbG9nVHlwZSkge1xyXG4gICAgdmFyIGFyZ3MgPSBbXTtcclxuICAgIGZvciAodmFyIF9pID0gMjsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgYXJnc1tfaSAtIDJdID0gYXJndW1lbnRzW19pXTtcclxuICAgIH1cclxuICAgIGlmIChsb2dUeXBlIDwgaW5zdGFuY2UubG9nTGV2ZWwpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICB2YXIgbm93ID0gbmV3IERhdGUoKS50b0lTT1N0cmluZygpO1xyXG4gICAgdmFyIG1ldGhvZCA9IENvbnNvbGVNZXRob2RbbG9nVHlwZV07XHJcbiAgICBpZiAobWV0aG9kKSB7XHJcbiAgICAgICAgY29uc29sZVttZXRob2RdLmFwcGx5KGNvbnNvbGUsIF9fc3ByZWFkQXJyYXlzKFtcIltcIiArIG5vdyArIFwiXSAgXCIgKyBpbnN0YW5jZS5uYW1lICsgXCI6XCJdLCBhcmdzKSk7XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBdHRlbXB0ZWQgdG8gbG9nIGEgbWVzc2FnZSB3aXRoIGFuIGludmFsaWQgbG9nVHlwZSAodmFsdWU6IFwiICsgbG9nVHlwZSArIFwiKVwiKTtcclxuICAgIH1cclxufTtcclxudmFyIExvZ2dlciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIC8qKlxyXG4gICAgICogR2l2ZXMgeW91IGFuIGluc3RhbmNlIG9mIGEgTG9nZ2VyIHRvIGNhcHR1cmUgbWVzc2FnZXMgYWNjb3JkaW5nIHRvXHJcbiAgICAgKiBGaXJlYmFzZSdzIGxvZ2dpbmcgc2NoZW1lLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBuYW1lIFRoZSBuYW1lIHRoYXQgdGhlIGxvZ3Mgd2lsbCBiZSBhc3NvY2lhdGVkIHdpdGhcclxuICAgICAqL1xyXG4gICAgZnVuY3Rpb24gTG9nZ2VyKG5hbWUpIHtcclxuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIFRoZSBsb2cgbGV2ZWwgb2YgdGhlIGdpdmVuIExvZ2dlciBpbnN0YW5jZS5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9sb2dMZXZlbCA9IGRlZmF1bHRMb2dMZXZlbDtcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBUaGUgbWFpbiAoaW50ZXJuYWwpIGxvZyBoYW5kbGVyIGZvciB0aGUgTG9nZ2VyIGluc3RhbmNlLlxyXG4gICAgICAgICAqIENhbiBiZSBzZXQgdG8gYSBuZXcgZnVuY3Rpb24gaW4gaW50ZXJuYWwgcGFja2FnZSBjb2RlIGJ1dCBub3QgYnkgdXNlci5cclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLl9sb2dIYW5kbGVyID0gZGVmYXVsdExvZ0hhbmRsZXI7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogVGhlIG9wdGlvbmFsLCBhZGRpdGlvbmFsLCB1c2VyLWRlZmluZWQgbG9nIGhhbmRsZXIgZm9yIHRoZSBMb2dnZXIgaW5zdGFuY2UuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5fdXNlckxvZ0hhbmRsZXIgPSBudWxsO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIENhcHR1cmUgdGhlIGN1cnJlbnQgaW5zdGFuY2UgZm9yIGxhdGVyIHVzZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIGluc3RhbmNlcy5wdXNoKHRoaXMpO1xyXG4gICAgfVxyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KExvZ2dlci5wcm90b3R5cGUsIFwibG9nTGV2ZWxcIiwge1xyXG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fbG9nTGV2ZWw7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzZXQ6IGZ1bmN0aW9uICh2YWwpIHtcclxuICAgICAgICAgICAgaWYgKCEodmFsIGluIExvZ0xldmVsKSkge1xyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgdmFsdWUgXFxcIlwiICsgdmFsICsgXCJcXFwiIGFzc2lnbmVkIHRvIGBsb2dMZXZlbGBcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5fbG9nTGV2ZWwgPSB2YWw7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcclxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgIH0pO1xyXG4gICAgLy8gV29ya2Fyb3VuZCBmb3Igc2V0dGVyL2dldHRlciBoYXZpbmcgdG8gYmUgdGhlIHNhbWUgdHlwZS5cclxuICAgIExvZ2dlci5wcm90b3R5cGUuc2V0TG9nTGV2ZWwgPSBmdW5jdGlvbiAodmFsKSB7XHJcbiAgICAgICAgdGhpcy5fbG9nTGV2ZWwgPSB0eXBlb2YgdmFsID09PSAnc3RyaW5nJyA/IGxldmVsU3RyaW5nVG9FbnVtW3ZhbF0gOiB2YWw7XHJcbiAgICB9O1xyXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KExvZ2dlci5wcm90b3R5cGUsIFwibG9nSGFuZGxlclwiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9sb2dIYW5kbGVyO1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsKSB7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsICE9PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdWYWx1ZSBhc3NpZ25lZCB0byBgbG9nSGFuZGxlcmAgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5fbG9nSGFuZGxlciA9IHZhbDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoTG9nZ2VyLnByb3RvdHlwZSwgXCJ1c2VyTG9nSGFuZGxlclwiLCB7XHJcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl91c2VyTG9nSGFuZGxlcjtcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbCkge1xyXG4gICAgICAgICAgICB0aGlzLl91c2VyTG9nSGFuZGxlciA9IHZhbDtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxyXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxyXG4gICAgfSk7XHJcbiAgICAvKipcclxuICAgICAqIFRoZSBmdW5jdGlvbnMgYmVsb3cgYXJlIGFsbCBiYXNlZCBvbiB0aGUgYGNvbnNvbGVgIGludGVyZmFjZVxyXG4gICAgICovXHJcbiAgICBMb2dnZXIucHJvdG90eXBlLmRlYnVnID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBhcmdzID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl91c2VyTG9nSGFuZGxlciAmJiB0aGlzLl91c2VyTG9nSGFuZGxlci5hcHBseSh0aGlzLCBfX3NwcmVhZEFycmF5cyhbdGhpcywgTG9nTGV2ZWwuREVCVUddLCBhcmdzKSk7XHJcbiAgICAgICAgdGhpcy5fbG9nSGFuZGxlci5hcHBseSh0aGlzLCBfX3NwcmVhZEFycmF5cyhbdGhpcywgTG9nTGV2ZWwuREVCVUddLCBhcmdzKSk7XHJcbiAgICB9O1xyXG4gICAgTG9nZ2VyLnByb3RvdHlwZS5sb2cgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGFyZ3MgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgYXJndW1lbnRzLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgICAgICBhcmdzW19pXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX3VzZXJMb2dIYW5kbGVyICYmIHRoaXMuX3VzZXJMb2dIYW5kbGVyLmFwcGx5KHRoaXMsIF9fc3ByZWFkQXJyYXlzKFt0aGlzLCBMb2dMZXZlbC5WRVJCT1NFXSwgYXJncykpO1xyXG4gICAgICAgIHRoaXMuX2xvZ0hhbmRsZXIuYXBwbHkodGhpcywgX19zcHJlYWRBcnJheXMoW3RoaXMsIExvZ0xldmVsLlZFUkJPU0VdLCBhcmdzKSk7XHJcbiAgICB9O1xyXG4gICAgTG9nZ2VyLnByb3RvdHlwZS5pbmZvID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBhcmdzID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl91c2VyTG9nSGFuZGxlciAmJiB0aGlzLl91c2VyTG9nSGFuZGxlci5hcHBseSh0aGlzLCBfX3NwcmVhZEFycmF5cyhbdGhpcywgTG9nTGV2ZWwuSU5GT10sIGFyZ3MpKTtcclxuICAgICAgICB0aGlzLl9sb2dIYW5kbGVyLmFwcGx5KHRoaXMsIF9fc3ByZWFkQXJyYXlzKFt0aGlzLCBMb2dMZXZlbC5JTkZPXSwgYXJncykpO1xyXG4gICAgfTtcclxuICAgIExvZ2dlci5wcm90b3R5cGUud2FybiA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fdXNlckxvZ0hhbmRsZXIgJiYgdGhpcy5fdXNlckxvZ0hhbmRsZXIuYXBwbHkodGhpcywgX19zcHJlYWRBcnJheXMoW3RoaXMsIExvZ0xldmVsLldBUk5dLCBhcmdzKSk7XHJcbiAgICAgICAgdGhpcy5fbG9nSGFuZGxlci5hcHBseSh0aGlzLCBfX3NwcmVhZEFycmF5cyhbdGhpcywgTG9nTGV2ZWwuV0FSTl0sIGFyZ3MpKTtcclxuICAgIH07XHJcbiAgICBMb2dnZXIucHJvdG90eXBlLmVycm9yID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBhcmdzID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IGFyZ3VtZW50cy5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICAgICAgYXJnc1tfaV0gPSBhcmd1bWVudHNbX2ldO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl91c2VyTG9nSGFuZGxlciAmJiB0aGlzLl91c2VyTG9nSGFuZGxlci5hcHBseSh0aGlzLCBfX3NwcmVhZEFycmF5cyhbdGhpcywgTG9nTGV2ZWwuRVJST1JdLCBhcmdzKSk7XHJcbiAgICAgICAgdGhpcy5fbG9nSGFuZGxlci5hcHBseSh0aGlzLCBfX3NwcmVhZEFycmF5cyhbdGhpcywgTG9nTGV2ZWwuRVJST1JdLCBhcmdzKSk7XHJcbiAgICB9O1xyXG4gICAgcmV0dXJuIExvZ2dlcjtcclxufSgpKTtcclxuZnVuY3Rpb24gc2V0TG9nTGV2ZWwobGV2ZWwpIHtcclxuICAgIGluc3RhbmNlcy5mb3JFYWNoKGZ1bmN0aW9uIChpbnN0KSB7XHJcbiAgICAgICAgaW5zdC5zZXRMb2dMZXZlbChsZXZlbCk7XHJcbiAgICB9KTtcclxufVxyXG5mdW5jdGlvbiBzZXRVc2VyTG9nSGFuZGxlcihsb2dDYWxsYmFjaywgb3B0aW9ucykge1xyXG4gICAgdmFyIF9sb29wXzEgPSBmdW5jdGlvbiAoaW5zdGFuY2UpIHtcclxuICAgICAgICB2YXIgY3VzdG9tTG9nTGV2ZWwgPSBudWxsO1xyXG4gICAgICAgIGlmIChvcHRpb25zICYmIG9wdGlvbnMubGV2ZWwpIHtcclxuICAgICAgICAgICAgY3VzdG9tTG9nTGV2ZWwgPSBsZXZlbFN0cmluZ1RvRW51bVtvcHRpb25zLmxldmVsXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGxvZ0NhbGxiYWNrID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIGluc3RhbmNlLnVzZXJMb2dIYW5kbGVyID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGluc3RhbmNlLnVzZXJMb2dIYW5kbGVyID0gZnVuY3Rpb24gKGluc3RhbmNlLCBsZXZlbCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGFyZ3MgPSBbXTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIF9pID0gMjsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXJnc1tfaSAtIDJdID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBtZXNzYWdlID0gYXJnc1xyXG4gICAgICAgICAgICAgICAgICAgIC5tYXAoZnVuY3Rpb24gKGFyZykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChhcmcgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGFyZyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFyZztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIGFyZyA9PT0gJ251bWJlcicgfHwgdHlwZW9mIGFyZyA9PT0gJ2Jvb2xlYW4nKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcmcudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYXJnIGluc3RhbmNlb2YgRXJyb3IpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFyZy5tZXNzYWdlO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShhcmcpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhdGNoIChpZ25vcmVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmZpbHRlcihmdW5jdGlvbiAoYXJnKSB7IHJldHVybiBhcmc7IH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmpvaW4oJyAnKTtcclxuICAgICAgICAgICAgICAgIGlmIChsZXZlbCA+PSAoY3VzdG9tTG9nTGV2ZWwgIT09IG51bGwgJiYgY3VzdG9tTG9nTGV2ZWwgIT09IHZvaWQgMCA/IGN1c3RvbUxvZ0xldmVsIDogaW5zdGFuY2UubG9nTGV2ZWwpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbG9nQ2FsbGJhY2soe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZXZlbDogTG9nTGV2ZWxbbGV2ZWxdLnRvTG93ZXJDYXNlKCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6IG1lc3NhZ2UsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3M6IGFyZ3MsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IGluc3RhbmNlLm5hbWVcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgZm9yICh2YXIgX2kgPSAwLCBpbnN0YW5jZXNfMSA9IGluc3RhbmNlczsgX2kgPCBpbnN0YW5jZXNfMS5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICB2YXIgaW5zdGFuY2UgPSBpbnN0YW5jZXNfMVtfaV07XHJcbiAgICAgICAgX2xvb3BfMShpbnN0YW5jZSk7XHJcbiAgICB9XHJcbn1cblxuZXhwb3J0IHsgTG9nTGV2ZWwsIExvZ2dlciwgc2V0TG9nTGV2ZWwsIHNldFVzZXJMb2dIYW5kbGVyIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lc20uanMubWFwXG4iLCJpbXBvcnQgeyBfX2V4dGVuZHMgfSBmcm9tICd0c2xpYic7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBAZmlsZW92ZXJ2aWV3IEZpcmViYXNlIGNvbnN0YW50cy4gIFNvbWUgb2YgdGhlc2UgKEBkZWZpbmVzKSBjYW4gYmUgb3ZlcnJpZGRlbiBhdCBjb21waWxlLXRpbWUuXHJcbiAqL1xyXG52YXIgQ09OU1RBTlRTID0ge1xyXG4gICAgLyoqXHJcbiAgICAgKiBAZGVmaW5lIHtib29sZWFufSBXaGV0aGVyIHRoaXMgaXMgdGhlIGNsaWVudCBOb2RlLmpzIFNESy5cclxuICAgICAqL1xyXG4gICAgTk9ERV9DTElFTlQ6IGZhbHNlLFxyXG4gICAgLyoqXHJcbiAgICAgKiBAZGVmaW5lIHtib29sZWFufSBXaGV0aGVyIHRoaXMgaXMgdGhlIEFkbWluIE5vZGUuanMgU0RLLlxyXG4gICAgICovXHJcbiAgICBOT0RFX0FETUlOOiBmYWxzZSxcclxuICAgIC8qKlxyXG4gICAgICogRmlyZWJhc2UgU0RLIFZlcnNpb25cclxuICAgICAqL1xyXG4gICAgU0RLX1ZFUlNJT046ICcke0pTQ09SRV9WRVJTSU9OfSdcclxufTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFRocm93cyBhbiBlcnJvciBpZiB0aGUgcHJvdmlkZWQgYXNzZXJ0aW9uIGlzIGZhbHN5XHJcbiAqL1xyXG52YXIgYXNzZXJ0ID0gZnVuY3Rpb24gKGFzc2VydGlvbiwgbWVzc2FnZSkge1xyXG4gICAgaWYgKCFhc3NlcnRpb24pIHtcclxuICAgICAgICB0aHJvdyBhc3NlcnRpb25FcnJvcihtZXNzYWdlKTtcclxuICAgIH1cclxufTtcclxuLyoqXHJcbiAqIFJldHVybnMgYW4gRXJyb3Igb2JqZWN0IHN1aXRhYmxlIGZvciB0aHJvd2luZy5cclxuICovXHJcbnZhciBhc3NlcnRpb25FcnJvciA9IGZ1bmN0aW9uIChtZXNzYWdlKSB7XHJcbiAgICByZXR1cm4gbmV3IEVycm9yKCdGaXJlYmFzZSBEYXRhYmFzZSAoJyArXHJcbiAgICAgICAgQ09OU1RBTlRTLlNES19WRVJTSU9OICtcclxuICAgICAgICAnKSBJTlRFUk5BTCBBU1NFUlQgRkFJTEVEOiAnICtcclxuICAgICAgICBtZXNzYWdlKTtcclxufTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxudmFyIHN0cmluZ1RvQnl0ZUFycmF5ID0gZnVuY3Rpb24gKHN0cikge1xyXG4gICAgLy8gVE9ETyh1c2VyKTogVXNlIG5hdGl2ZSBpbXBsZW1lbnRhdGlvbnMgaWYvd2hlbiBhdmFpbGFibGVcclxuICAgIHZhciBvdXQgPSBbXTtcclxuICAgIHZhciBwID0gMDtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIGMgPSBzdHIuY2hhckNvZGVBdChpKTtcclxuICAgICAgICBpZiAoYyA8IDEyOCkge1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IGM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGMgPCAyMDQ4KSB7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKGMgPj4gNikgfCAxOTI7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKGMgJiA2MykgfCAxMjg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKChjICYgMHhmYzAwKSA9PT0gMHhkODAwICYmXHJcbiAgICAgICAgICAgIGkgKyAxIDwgc3RyLmxlbmd0aCAmJlxyXG4gICAgICAgICAgICAoc3RyLmNoYXJDb2RlQXQoaSArIDEpICYgMHhmYzAwKSA9PT0gMHhkYzAwKSB7XHJcbiAgICAgICAgICAgIC8vIFN1cnJvZ2F0ZSBQYWlyXHJcbiAgICAgICAgICAgIGMgPSAweDEwMDAwICsgKChjICYgMHgwM2ZmKSA8PCAxMCkgKyAoc3RyLmNoYXJDb2RlQXQoKytpKSAmIDB4MDNmZik7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKGMgPj4gMTgpIHwgMjQwO1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9ICgoYyA+PiAxMikgJiA2MykgfCAxMjg7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKChjID4+IDYpICYgNjMpIHwgMTI4O1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgb3V0W3ArK10gPSAoYyA+PiAxMikgfCAyMjQ7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKChjID4+IDYpICYgNjMpIHwgMTI4O1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBvdXQ7XHJcbn07XHJcbi8qKlxyXG4gKiBUdXJucyBhbiBhcnJheSBvZiBudW1iZXJzIGludG8gdGhlIHN0cmluZyBnaXZlbiBieSB0aGUgY29uY2F0ZW5hdGlvbiBvZiB0aGVcclxuICogY2hhcmFjdGVycyB0byB3aGljaCB0aGUgbnVtYmVycyBjb3JyZXNwb25kLlxyXG4gKiBAcGFyYW0gYnl0ZXMgQXJyYXkgb2YgbnVtYmVycyByZXByZXNlbnRpbmcgY2hhcmFjdGVycy5cclxuICogQHJldHVybiBTdHJpbmdpZmljYXRpb24gb2YgdGhlIGFycmF5LlxyXG4gKi9cclxudmFyIGJ5dGVBcnJheVRvU3RyaW5nID0gZnVuY3Rpb24gKGJ5dGVzKSB7XHJcbiAgICAvLyBUT0RPKHVzZXIpOiBVc2UgbmF0aXZlIGltcGxlbWVudGF0aW9ucyBpZi93aGVuIGF2YWlsYWJsZVxyXG4gICAgdmFyIG91dCA9IFtdO1xyXG4gICAgdmFyIHBvcyA9IDAsIGMgPSAwO1xyXG4gICAgd2hpbGUgKHBvcyA8IGJ5dGVzLmxlbmd0aCkge1xyXG4gICAgICAgIHZhciBjMSA9IGJ5dGVzW3BvcysrXTtcclxuICAgICAgICBpZiAoYzEgPCAxMjgpIHtcclxuICAgICAgICAgICAgb3V0W2MrK10gPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGMxKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYzEgPiAxOTEgJiYgYzEgPCAyMjQpIHtcclxuICAgICAgICAgICAgdmFyIGMyID0gYnl0ZXNbcG9zKytdO1xyXG4gICAgICAgICAgICBvdXRbYysrXSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoKChjMSAmIDMxKSA8PCA2KSB8IChjMiAmIDYzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGMxID4gMjM5ICYmIGMxIDwgMzY1KSB7XHJcbiAgICAgICAgICAgIC8vIFN1cnJvZ2F0ZSBQYWlyXHJcbiAgICAgICAgICAgIHZhciBjMiA9IGJ5dGVzW3BvcysrXTtcclxuICAgICAgICAgICAgdmFyIGMzID0gYnl0ZXNbcG9zKytdO1xyXG4gICAgICAgICAgICB2YXIgYzQgPSBieXRlc1twb3MrK107XHJcbiAgICAgICAgICAgIHZhciB1ID0gKCgoYzEgJiA3KSA8PCAxOCkgfCAoKGMyICYgNjMpIDw8IDEyKSB8ICgoYzMgJiA2MykgPDwgNikgfCAoYzQgJiA2MykpIC1cclxuICAgICAgICAgICAgICAgIDB4MTAwMDA7XHJcbiAgICAgICAgICAgIG91dFtjKytdID0gU3RyaW5nLmZyb21DaGFyQ29kZSgweGQ4MDAgKyAodSA+PiAxMCkpO1xyXG4gICAgICAgICAgICBvdXRbYysrXSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoMHhkYzAwICsgKHUgJiAxMDIzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB2YXIgYzIgPSBieXRlc1twb3MrK107XHJcbiAgICAgICAgICAgIHZhciBjMyA9IGJ5dGVzW3BvcysrXTtcclxuICAgICAgICAgICAgb3V0W2MrK10gPSBTdHJpbmcuZnJvbUNoYXJDb2RlKCgoYzEgJiAxNSkgPDwgMTIpIHwgKChjMiAmIDYzKSA8PCA2KSB8IChjMyAmIDYzKSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG91dC5qb2luKCcnKTtcclxufTtcclxuLy8gV2UgZGVmaW5lIGl0IGFzIGFuIG9iamVjdCBsaXRlcmFsIGluc3RlYWQgb2YgYSBjbGFzcyBiZWNhdXNlIGEgY2xhc3MgY29tcGlsZWQgZG93biB0byBlczUgY2FuJ3RcclxuLy8gYmUgdHJlZXNoYWtlZC4gaHR0cHM6Ly9naXRodWIuY29tL3JvbGx1cC9yb2xsdXAvaXNzdWVzLzE2OTFcclxuLy8gU3RhdGljIGxvb2t1cCBtYXBzLCBsYXppbHkgcG9wdWxhdGVkIGJ5IGluaXRfKClcclxudmFyIGJhc2U2NCA9IHtcclxuICAgIC8qKlxyXG4gICAgICogTWFwcyBieXRlcyB0byBjaGFyYWN0ZXJzLlxyXG4gICAgICovXHJcbiAgICBieXRlVG9DaGFyTWFwXzogbnVsbCxcclxuICAgIC8qKlxyXG4gICAgICogTWFwcyBjaGFyYWN0ZXJzIHRvIGJ5dGVzLlxyXG4gICAgICovXHJcbiAgICBjaGFyVG9CeXRlTWFwXzogbnVsbCxcclxuICAgIC8qKlxyXG4gICAgICogTWFwcyBieXRlcyB0byB3ZWJzYWZlIGNoYXJhY3RlcnMuXHJcbiAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICovXHJcbiAgICBieXRlVG9DaGFyTWFwV2ViU2FmZV86IG51bGwsXHJcbiAgICAvKipcclxuICAgICAqIE1hcHMgd2Vic2FmZSBjaGFyYWN0ZXJzIHRvIGJ5dGVzLlxyXG4gICAgICogQHByaXZhdGVcclxuICAgICAqL1xyXG4gICAgY2hhclRvQnl0ZU1hcFdlYlNhZmVfOiBudWxsLFxyXG4gICAgLyoqXHJcbiAgICAgKiBPdXIgZGVmYXVsdCBhbHBoYWJldCwgc2hhcmVkIGJldHdlZW5cclxuICAgICAqIEVOQ09ERURfVkFMUyBhbmQgRU5DT0RFRF9WQUxTX1dFQlNBRkVcclxuICAgICAqL1xyXG4gICAgRU5DT0RFRF9WQUxTX0JBU0U6ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWicgKyAnYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXonICsgJzAxMjM0NTY3ODknLFxyXG4gICAgLyoqXHJcbiAgICAgKiBPdXIgZGVmYXVsdCBhbHBoYWJldC4gVmFsdWUgNjQgKD0pIGlzIHNwZWNpYWw7IGl0IG1lYW5zIFwibm90aGluZy5cIlxyXG4gICAgICovXHJcbiAgICBnZXQgRU5DT0RFRF9WQUxTKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLkVOQ09ERURfVkFMU19CQVNFICsgJysvPSc7XHJcbiAgICB9LFxyXG4gICAgLyoqXHJcbiAgICAgKiBPdXIgd2Vic2FmZSBhbHBoYWJldC5cclxuICAgICAqL1xyXG4gICAgZ2V0IEVOQ09ERURfVkFMU19XRUJTQUZFKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLkVOQ09ERURfVkFMU19CQVNFICsgJy1fLic7XHJcbiAgICB9LFxyXG4gICAgLyoqXHJcbiAgICAgKiBXaGV0aGVyIHRoaXMgYnJvd3NlciBzdXBwb3J0cyB0aGUgYXRvYiBhbmQgYnRvYSBmdW5jdGlvbnMuIFRoaXMgZXh0ZW5zaW9uXHJcbiAgICAgKiBzdGFydGVkIGF0IE1vemlsbGEgYnV0IGlzIG5vdyBpbXBsZW1lbnRlZCBieSBtYW55IGJyb3dzZXJzLiBXZSB1c2UgdGhlXHJcbiAgICAgKiBBU1NVTUVfKiB2YXJpYWJsZXMgdG8gYXZvaWQgcHVsbGluZyBpbiB0aGUgZnVsbCB1c2VyYWdlbnQgZGV0ZWN0aW9uIGxpYnJhcnlcclxuICAgICAqIGJ1dCBzdGlsbCBhbGxvd2luZyB0aGUgc3RhbmRhcmQgcGVyLWJyb3dzZXIgY29tcGlsYXRpb25zLlxyXG4gICAgICpcclxuICAgICAqL1xyXG4gICAgSEFTX05BVElWRV9TVVBQT1JUOiB0eXBlb2YgYXRvYiA9PT0gJ2Z1bmN0aW9uJyxcclxuICAgIC8qKlxyXG4gICAgICogQmFzZTY0LWVuY29kZSBhbiBhcnJheSBvZiBieXRlcy5cclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gaW5wdXQgQW4gYXJyYXkgb2YgYnl0ZXMgKG51bWJlcnMgd2l0aFxyXG4gICAgICogICAgIHZhbHVlIGluIFswLCAyNTVdKSB0byBlbmNvZGUuXHJcbiAgICAgKiBAcGFyYW0gd2ViU2FmZSBCb29sZWFuIGluZGljYXRpbmcgd2Ugc2hvdWxkIHVzZSB0aGVcclxuICAgICAqICAgICBhbHRlcm5hdGl2ZSBhbHBoYWJldC5cclxuICAgICAqIEByZXR1cm4gVGhlIGJhc2U2NCBlbmNvZGVkIHN0cmluZy5cclxuICAgICAqL1xyXG4gICAgZW5jb2RlQnl0ZUFycmF5OiBmdW5jdGlvbiAoaW5wdXQsIHdlYlNhZmUpIHtcclxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoaW5wdXQpKSB7XHJcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdlbmNvZGVCeXRlQXJyYXkgdGFrZXMgYW4gYXJyYXkgYXMgYSBwYXJhbWV0ZXInKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pbml0XygpO1xyXG4gICAgICAgIHZhciBieXRlVG9DaGFyTWFwID0gd2ViU2FmZVxyXG4gICAgICAgICAgICA/IHRoaXMuYnl0ZVRvQ2hhck1hcFdlYlNhZmVfXHJcbiAgICAgICAgICAgIDogdGhpcy5ieXRlVG9DaGFyTWFwXztcclxuICAgICAgICB2YXIgb3V0cHV0ID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkgKz0gMykge1xyXG4gICAgICAgICAgICB2YXIgYnl0ZTEgPSBpbnB1dFtpXTtcclxuICAgICAgICAgICAgdmFyIGhhdmVCeXRlMiA9IGkgKyAxIDwgaW5wdXQubGVuZ3RoO1xyXG4gICAgICAgICAgICB2YXIgYnl0ZTIgPSBoYXZlQnl0ZTIgPyBpbnB1dFtpICsgMV0gOiAwO1xyXG4gICAgICAgICAgICB2YXIgaGF2ZUJ5dGUzID0gaSArIDIgPCBpbnB1dC5sZW5ndGg7XHJcbiAgICAgICAgICAgIHZhciBieXRlMyA9IGhhdmVCeXRlMyA/IGlucHV0W2kgKyAyXSA6IDA7XHJcbiAgICAgICAgICAgIHZhciBvdXRCeXRlMSA9IGJ5dGUxID4+IDI7XHJcbiAgICAgICAgICAgIHZhciBvdXRCeXRlMiA9ICgoYnl0ZTEgJiAweDAzKSA8PCA0KSB8IChieXRlMiA+PiA0KTtcclxuICAgICAgICAgICAgdmFyIG91dEJ5dGUzID0gKChieXRlMiAmIDB4MGYpIDw8IDIpIHwgKGJ5dGUzID4+IDYpO1xyXG4gICAgICAgICAgICB2YXIgb3V0Qnl0ZTQgPSBieXRlMyAmIDB4M2Y7XHJcbiAgICAgICAgICAgIGlmICghaGF2ZUJ5dGUzKSB7XHJcbiAgICAgICAgICAgICAgICBvdXRCeXRlNCA9IDY0O1xyXG4gICAgICAgICAgICAgICAgaWYgKCFoYXZlQnl0ZTIpIHtcclxuICAgICAgICAgICAgICAgICAgICBvdXRCeXRlMyA9IDY0O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIG91dHB1dC5wdXNoKGJ5dGVUb0NoYXJNYXBbb3V0Qnl0ZTFdLCBieXRlVG9DaGFyTWFwW291dEJ5dGUyXSwgYnl0ZVRvQ2hhck1hcFtvdXRCeXRlM10sIGJ5dGVUb0NoYXJNYXBbb3V0Qnl0ZTRdKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG91dHB1dC5qb2luKCcnKTtcclxuICAgIH0sXHJcbiAgICAvKipcclxuICAgICAqIEJhc2U2NC1lbmNvZGUgYSBzdHJpbmcuXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGlucHV0IEEgc3RyaW5nIHRvIGVuY29kZS5cclxuICAgICAqIEBwYXJhbSB3ZWJTYWZlIElmIHRydWUsIHdlIHNob3VsZCB1c2UgdGhlXHJcbiAgICAgKiAgICAgYWx0ZXJuYXRpdmUgYWxwaGFiZXQuXHJcbiAgICAgKiBAcmV0dXJuIFRoZSBiYXNlNjQgZW5jb2RlZCBzdHJpbmcuXHJcbiAgICAgKi9cclxuICAgIGVuY29kZVN0cmluZzogZnVuY3Rpb24gKGlucHV0LCB3ZWJTYWZlKSB7XHJcbiAgICAgICAgLy8gU2hvcnRjdXQgZm9yIE1vemlsbGEgYnJvd3NlcnMgdGhhdCBpbXBsZW1lbnRcclxuICAgICAgICAvLyBhIG5hdGl2ZSBiYXNlNjQgZW5jb2RlciBpbiB0aGUgZm9ybSBvZiBcImJ0b2EvYXRvYlwiXHJcbiAgICAgICAgaWYgKHRoaXMuSEFTX05BVElWRV9TVVBQT1JUICYmICF3ZWJTYWZlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBidG9hKGlucHV0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZW5jb2RlQnl0ZUFycmF5KHN0cmluZ1RvQnl0ZUFycmF5KGlucHV0KSwgd2ViU2FmZSk7XHJcbiAgICB9LFxyXG4gICAgLyoqXHJcbiAgICAgKiBCYXNlNjQtZGVjb2RlIGEgc3RyaW5nLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBpbnB1dCB0byBkZWNvZGUuXHJcbiAgICAgKiBAcGFyYW0gd2ViU2FmZSBUcnVlIGlmIHdlIHNob3VsZCB1c2UgdGhlXHJcbiAgICAgKiAgICAgYWx0ZXJuYXRpdmUgYWxwaGFiZXQuXHJcbiAgICAgKiBAcmV0dXJuIHN0cmluZyByZXByZXNlbnRpbmcgdGhlIGRlY29kZWQgdmFsdWUuXHJcbiAgICAgKi9cclxuICAgIGRlY29kZVN0cmluZzogZnVuY3Rpb24gKGlucHV0LCB3ZWJTYWZlKSB7XHJcbiAgICAgICAgLy8gU2hvcnRjdXQgZm9yIE1vemlsbGEgYnJvd3NlcnMgdGhhdCBpbXBsZW1lbnRcclxuICAgICAgICAvLyBhIG5hdGl2ZSBiYXNlNjQgZW5jb2RlciBpbiB0aGUgZm9ybSBvZiBcImJ0b2EvYXRvYlwiXHJcbiAgICAgICAgaWYgKHRoaXMuSEFTX05BVElWRV9TVVBQT1JUICYmICF3ZWJTYWZlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBhdG9iKGlucHV0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGJ5dGVBcnJheVRvU3RyaW5nKHRoaXMuZGVjb2RlU3RyaW5nVG9CeXRlQXJyYXkoaW5wdXQsIHdlYlNhZmUpKTtcclxuICAgIH0sXHJcbiAgICAvKipcclxuICAgICAqIEJhc2U2NC1kZWNvZGUgYSBzdHJpbmcuXHJcbiAgICAgKlxyXG4gICAgICogSW4gYmFzZS02NCBkZWNvZGluZywgZ3JvdXBzIG9mIGZvdXIgY2hhcmFjdGVycyBhcmUgY29udmVydGVkIGludG8gdGhyZWVcclxuICAgICAqIGJ5dGVzLiAgSWYgdGhlIGVuY29kZXIgZGlkIG5vdCBhcHBseSBwYWRkaW5nLCB0aGUgaW5wdXQgbGVuZ3RoIG1heSBub3RcclxuICAgICAqIGJlIGEgbXVsdGlwbGUgb2YgNC5cclxuICAgICAqXHJcbiAgICAgKiBJbiB0aGlzIGNhc2UsIHRoZSBsYXN0IGdyb3VwIHdpbGwgaGF2ZSBmZXdlciB0aGFuIDQgY2hhcmFjdGVycywgYW5kXHJcbiAgICAgKiBwYWRkaW5nIHdpbGwgYmUgaW5mZXJyZWQuICBJZiB0aGUgZ3JvdXAgaGFzIG9uZSBvciB0d28gY2hhcmFjdGVycywgaXQgZGVjb2Rlc1xyXG4gICAgICogdG8gb25lIGJ5dGUuICBJZiB0aGUgZ3JvdXAgaGFzIHRocmVlIGNoYXJhY3RlcnMsIGl0IGRlY29kZXMgdG8gdHdvIGJ5dGVzLlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBpbnB1dCBJbnB1dCB0byBkZWNvZGUuXHJcbiAgICAgKiBAcGFyYW0gd2ViU2FmZSBUcnVlIGlmIHdlIHNob3VsZCB1c2UgdGhlIHdlYi1zYWZlIGFscGhhYmV0LlxyXG4gICAgICogQHJldHVybiBieXRlcyByZXByZXNlbnRpbmcgdGhlIGRlY29kZWQgdmFsdWUuXHJcbiAgICAgKi9cclxuICAgIGRlY29kZVN0cmluZ1RvQnl0ZUFycmF5OiBmdW5jdGlvbiAoaW5wdXQsIHdlYlNhZmUpIHtcclxuICAgICAgICB0aGlzLmluaXRfKCk7XHJcbiAgICAgICAgdmFyIGNoYXJUb0J5dGVNYXAgPSB3ZWJTYWZlXHJcbiAgICAgICAgICAgID8gdGhpcy5jaGFyVG9CeXRlTWFwV2ViU2FmZV9cclxuICAgICAgICAgICAgOiB0aGlzLmNoYXJUb0J5dGVNYXBfO1xyXG4gICAgICAgIHZhciBvdXRwdXQgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGlucHV0Lmxlbmd0aDspIHtcclxuICAgICAgICAgICAgdmFyIGJ5dGUxID0gY2hhclRvQnl0ZU1hcFtpbnB1dC5jaGFyQXQoaSsrKV07XHJcbiAgICAgICAgICAgIHZhciBoYXZlQnl0ZTIgPSBpIDwgaW5wdXQubGVuZ3RoO1xyXG4gICAgICAgICAgICB2YXIgYnl0ZTIgPSBoYXZlQnl0ZTIgPyBjaGFyVG9CeXRlTWFwW2lucHV0LmNoYXJBdChpKV0gOiAwO1xyXG4gICAgICAgICAgICArK2k7XHJcbiAgICAgICAgICAgIHZhciBoYXZlQnl0ZTMgPSBpIDwgaW5wdXQubGVuZ3RoO1xyXG4gICAgICAgICAgICB2YXIgYnl0ZTMgPSBoYXZlQnl0ZTMgPyBjaGFyVG9CeXRlTWFwW2lucHV0LmNoYXJBdChpKV0gOiA2NDtcclxuICAgICAgICAgICAgKytpO1xyXG4gICAgICAgICAgICB2YXIgaGF2ZUJ5dGU0ID0gaSA8IGlucHV0Lmxlbmd0aDtcclxuICAgICAgICAgICAgdmFyIGJ5dGU0ID0gaGF2ZUJ5dGU0ID8gY2hhclRvQnl0ZU1hcFtpbnB1dC5jaGFyQXQoaSldIDogNjQ7XHJcbiAgICAgICAgICAgICsraTtcclxuICAgICAgICAgICAgaWYgKGJ5dGUxID09IG51bGwgfHwgYnl0ZTIgPT0gbnVsbCB8fCBieXRlMyA9PSBudWxsIHx8IGJ5dGU0ID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IEVycm9yKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIG91dEJ5dGUxID0gKGJ5dGUxIDw8IDIpIHwgKGJ5dGUyID4+IDQpO1xyXG4gICAgICAgICAgICBvdXRwdXQucHVzaChvdXRCeXRlMSk7XHJcbiAgICAgICAgICAgIGlmIChieXRlMyAhPT0gNjQpIHtcclxuICAgICAgICAgICAgICAgIHZhciBvdXRCeXRlMiA9ICgoYnl0ZTIgPDwgNCkgJiAweGYwKSB8IChieXRlMyA+PiAyKTtcclxuICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKG91dEJ5dGUyKTtcclxuICAgICAgICAgICAgICAgIGlmIChieXRlNCAhPT0gNjQpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgb3V0Qnl0ZTMgPSAoKGJ5dGUzIDw8IDYpICYgMHhjMCkgfCBieXRlNDtcclxuICAgICAgICAgICAgICAgICAgICBvdXRwdXQucHVzaChvdXRCeXRlMyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG91dHB1dDtcclxuICAgIH0sXHJcbiAgICAvKipcclxuICAgICAqIExhenkgc3RhdGljIGluaXRpYWxpemF0aW9uIGZ1bmN0aW9uLiBDYWxsZWQgYmVmb3JlXHJcbiAgICAgKiBhY2Nlc3NpbmcgYW55IG9mIHRoZSBzdGF0aWMgbWFwIHZhcmlhYmxlcy5cclxuICAgICAqIEBwcml2YXRlXHJcbiAgICAgKi9cclxuICAgIGluaXRfOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmJ5dGVUb0NoYXJNYXBfKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYnl0ZVRvQ2hhck1hcF8gPSB7fTtcclxuICAgICAgICAgICAgdGhpcy5jaGFyVG9CeXRlTWFwXyA9IHt9O1xyXG4gICAgICAgICAgICB0aGlzLmJ5dGVUb0NoYXJNYXBXZWJTYWZlXyA9IHt9O1xyXG4gICAgICAgICAgICB0aGlzLmNoYXJUb0J5dGVNYXBXZWJTYWZlXyA9IHt9O1xyXG4gICAgICAgICAgICAvLyBXZSB3YW50IHF1aWNrIG1hcHBpbmdzIGJhY2sgYW5kIGZvcnRoLCBzbyB3ZSBwcmVjb21wdXRlIHR3byBtYXBzLlxyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuRU5DT0RFRF9WQUxTLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ5dGVUb0NoYXJNYXBfW2ldID0gdGhpcy5FTkNPREVEX1ZBTFMuY2hhckF0KGkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGFyVG9CeXRlTWFwX1t0aGlzLmJ5dGVUb0NoYXJNYXBfW2ldXSA9IGk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJ5dGVUb0NoYXJNYXBXZWJTYWZlX1tpXSA9IHRoaXMuRU5DT0RFRF9WQUxTX1dFQlNBRkUuY2hhckF0KGkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGFyVG9CeXRlTWFwV2ViU2FmZV9bdGhpcy5ieXRlVG9DaGFyTWFwV2ViU2FmZV9baV1dID0gaTtcclxuICAgICAgICAgICAgICAgIC8vIEJlIGZvcmdpdmluZyB3aGVuIGRlY29kaW5nIGFuZCBjb3JyZWN0bHkgZGVjb2RlIGJvdGggZW5jb2RpbmdzLlxyXG4gICAgICAgICAgICAgICAgaWYgKGkgPj0gdGhpcy5FTkNPREVEX1ZBTFNfQkFTRS5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmNoYXJUb0J5dGVNYXBfW3RoaXMuRU5DT0RFRF9WQUxTX1dFQlNBRkUuY2hhckF0KGkpXSA9IGk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGFyVG9CeXRlTWFwV2ViU2FmZV9bdGhpcy5FTkNPREVEX1ZBTFMuY2hhckF0KGkpXSA9IGk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn07XHJcbi8qKlxyXG4gKiBVUkwtc2FmZSBiYXNlNjQgZW5jb2RpbmdcclxuICovXHJcbnZhciBiYXNlNjRFbmNvZGUgPSBmdW5jdGlvbiAoc3RyKSB7XHJcbiAgICB2YXIgdXRmOEJ5dGVzID0gc3RyaW5nVG9CeXRlQXJyYXkoc3RyKTtcclxuICAgIHJldHVybiBiYXNlNjQuZW5jb2RlQnl0ZUFycmF5KHV0ZjhCeXRlcywgdHJ1ZSk7XHJcbn07XHJcbi8qKlxyXG4gKiBVUkwtc2FmZSBiYXNlNjQgZGVjb2RpbmdcclxuICpcclxuICogTk9URTogRE8gTk9UIHVzZSB0aGUgZ2xvYmFsIGF0b2IoKSBmdW5jdGlvbiAtIGl0IGRvZXMgTk9UIHN1cHBvcnQgdGhlXHJcbiAqIGJhc2U2NFVybCB2YXJpYW50IGVuY29kaW5nLlxyXG4gKlxyXG4gKiBAcGFyYW0gc3RyIFRvIGJlIGRlY29kZWRcclxuICogQHJldHVybiBEZWNvZGVkIHJlc3VsdCwgaWYgcG9zc2libGVcclxuICovXHJcbnZhciBiYXNlNjREZWNvZGUgPSBmdW5jdGlvbiAoc3RyKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIHJldHVybiBiYXNlNjQuZGVjb2RlU3RyaW5nKHN0ciwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgICBjYXRjaCAoZSkge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ2Jhc2U2NERlY29kZSBmYWlsZWQ6ICcsIGUpO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIG51bGw7XHJcbn07XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBEbyBhIGRlZXAtY29weSBvZiBiYXNpYyBKYXZhU2NyaXB0IE9iamVjdHMgb3IgQXJyYXlzLlxyXG4gKi9cclxuZnVuY3Rpb24gZGVlcENvcHkodmFsdWUpIHtcclxuICAgIHJldHVybiBkZWVwRXh0ZW5kKHVuZGVmaW5lZCwgdmFsdWUpO1xyXG59XHJcbi8qKlxyXG4gKiBDb3B5IHByb3BlcnRpZXMgZnJvbSBzb3VyY2UgdG8gdGFyZ2V0IChyZWN1cnNpdmVseSBhbGxvd3MgZXh0ZW5zaW9uXHJcbiAqIG9mIE9iamVjdHMgYW5kIEFycmF5cykuICBTY2FsYXIgdmFsdWVzIGluIHRoZSB0YXJnZXQgYXJlIG92ZXItd3JpdHRlbi5cclxuICogSWYgdGFyZ2V0IGlzIHVuZGVmaW5lZCwgYW4gb2JqZWN0IG9mIHRoZSBhcHByb3ByaWF0ZSB0eXBlIHdpbGwgYmUgY3JlYXRlZFxyXG4gKiAoYW5kIHJldHVybmVkKS5cclxuICpcclxuICogV2UgcmVjdXJzaXZlbHkgY29weSBhbGwgY2hpbGQgcHJvcGVydGllcyBvZiBwbGFpbiBPYmplY3RzIGluIHRoZSBzb3VyY2UtIHNvXHJcbiAqIHRoYXQgbmFtZXNwYWNlLSBsaWtlIGRpY3Rpb25hcmllcyBhcmUgbWVyZ2VkLlxyXG4gKlxyXG4gKiBOb3RlIHRoYXQgdGhlIHRhcmdldCBjYW4gYmUgYSBmdW5jdGlvbiwgaW4gd2hpY2ggY2FzZSB0aGUgcHJvcGVydGllcyBpblxyXG4gKiB0aGUgc291cmNlIE9iamVjdCBhcmUgY29waWVkIG9udG8gaXQgYXMgc3RhdGljIHByb3BlcnRpZXMgb2YgdGhlIEZ1bmN0aW9uLlxyXG4gKlxyXG4gKiBOb3RlOiB3ZSBkb24ndCBtZXJnZSBfX3Byb3RvX18gdG8gcHJldmVudCBwcm90b3R5cGUgcG9sbHV0aW9uXHJcbiAqL1xyXG5mdW5jdGlvbiBkZWVwRXh0ZW5kKHRhcmdldCwgc291cmNlKSB7XHJcbiAgICBpZiAoIShzb3VyY2UgaW5zdGFuY2VvZiBPYmplY3QpKSB7XHJcbiAgICAgICAgcmV0dXJuIHNvdXJjZTtcclxuICAgIH1cclxuICAgIHN3aXRjaCAoc291cmNlLmNvbnN0cnVjdG9yKSB7XHJcbiAgICAgICAgY2FzZSBEYXRlOlxyXG4gICAgICAgICAgICAvLyBUcmVhdCBEYXRlcyBsaWtlIHNjYWxhcnM7IGlmIHRoZSB0YXJnZXQgZGF0ZSBvYmplY3QgaGFkIGFueSBjaGlsZFxyXG4gICAgICAgICAgICAvLyBwcm9wZXJ0aWVzIC0gdGhleSB3aWxsIGJlIGxvc3QhXHJcbiAgICAgICAgICAgIHZhciBkYXRlVmFsdWUgPSBzb3VyY2U7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgRGF0ZShkYXRlVmFsdWUuZ2V0VGltZSgpKTtcclxuICAgICAgICBjYXNlIE9iamVjdDpcclxuICAgICAgICAgICAgaWYgKHRhcmdldCA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgICAgICB0YXJnZXQgPSB7fTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBicmVhaztcclxuICAgICAgICBjYXNlIEFycmF5OlxyXG4gICAgICAgICAgICAvLyBBbHdheXMgY29weSB0aGUgYXJyYXkgc291cmNlIGFuZCBvdmVyd3JpdGUgdGhlIHRhcmdldC5cclxuICAgICAgICAgICAgdGFyZ2V0ID0gW107XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgIC8vIE5vdCBhIHBsYWluIE9iamVjdCAtIHRyZWF0IGl0IGFzIGEgc2NhbGFyLlxyXG4gICAgICAgICAgICByZXR1cm4gc291cmNlO1xyXG4gICAgfVxyXG4gICAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpIHtcclxuICAgICAgICAvLyB1c2UgaXNWYWxpZEtleSB0byBndWFyZCBhZ2FpbnN0IHByb3RvdHlwZSBwb2xsdXRpb24uIFNlZSBodHRwczovL3NueWsuaW8vdnVsbi9TTllLLUpTLUxPREFTSC00NTAyMDJcclxuICAgICAgICBpZiAoIXNvdXJjZS5oYXNPd25Qcm9wZXJ0eShwcm9wKSB8fCAhaXNWYWxpZEtleShwcm9wKSkge1xyXG4gICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGFyZ2V0W3Byb3BdID0gZGVlcEV4dGVuZCh0YXJnZXRbcHJvcF0sIHNvdXJjZVtwcm9wXSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGFyZ2V0O1xyXG59XHJcbmZ1bmN0aW9uIGlzVmFsaWRLZXkoa2V5KSB7XHJcbiAgICByZXR1cm4ga2V5ICE9PSAnX19wcm90b19fJztcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG52YXIgRGVmZXJyZWQgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICBmdW5jdGlvbiBEZWZlcnJlZCgpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMucmVqZWN0ID0gZnVuY3Rpb24gKCkgeyB9O1xyXG4gICAgICAgIHRoaXMucmVzb2x2ZSA9IGZ1bmN0aW9uICgpIHsgfTtcclxuICAgICAgICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XHJcbiAgICAgICAgICAgIF90aGlzLnJlc29sdmUgPSByZXNvbHZlO1xyXG4gICAgICAgICAgICBfdGhpcy5yZWplY3QgPSByZWplY3Q7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIE91ciBBUEkgaW50ZXJuYWxzIGFyZSBub3QgcHJvbWlzZWlmaWVkIGFuZCBjYW5ub3QgYmVjYXVzZSBvdXIgY2FsbGJhY2sgQVBJcyBoYXZlIHN1YnRsZSBleHBlY3RhdGlvbnMgYXJvdW5kXHJcbiAgICAgKiBpbnZva2luZyBwcm9taXNlcyBpbmxpbmUsIHdoaWNoIFByb21pc2VzIGFyZSBmb3JiaWRkZW4gdG8gZG8uIFRoaXMgbWV0aG9kIGFjY2VwdHMgYW4gb3B0aW9uYWwgbm9kZS1zdHlsZSBjYWxsYmFja1xyXG4gICAgICogYW5kIHJldHVybnMgYSBub2RlLXN0eWxlIGNhbGxiYWNrIHdoaWNoIHdpbGwgcmVzb2x2ZSBvciByZWplY3QgdGhlIERlZmVycmVkJ3MgcHJvbWlzZS5cclxuICAgICAqL1xyXG4gICAgRGVmZXJyZWQucHJvdG90eXBlLndyYXBDYWxsYmFjayA9IGZ1bmN0aW9uIChjYWxsYmFjaykge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChlcnJvciwgdmFsdWUpIHtcclxuICAgICAgICAgICAgaWYgKGVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBfdGhpcy5yZWplY3QoZXJyb3IpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgX3RoaXMucmVzb2x2ZSh2YWx1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBjYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICAgICAgLy8gQXR0YWNoaW5nIG5vb3AgaGFuZGxlciBqdXN0IGluIGNhc2UgZGV2ZWxvcGVyIHdhc24ndCBleHBlY3RpbmdcclxuICAgICAgICAgICAgICAgIC8vIHByb21pc2VzXHJcbiAgICAgICAgICAgICAgICBfdGhpcy5wcm9taXNlLmNhdGNoKGZ1bmN0aW9uICgpIHsgfSk7XHJcbiAgICAgICAgICAgICAgICAvLyBTb21lIG9mIG91ciBjYWxsYmFja3MgZG9uJ3QgZXhwZWN0IGEgdmFsdWUgYW5kIG91ciBvd24gdGVzdHNcclxuICAgICAgICAgICAgICAgIC8vIGFzc2VydCB0aGF0IHRoZSBwYXJhbWV0ZXIgbGVuZ3RoIGlzIDFcclxuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjay5sZW5ndGggPT09IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnJvcik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnJvciwgdmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gRGVmZXJyZWQ7XHJcbn0oKSk7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBSZXR1cm5zIG5hdmlnYXRvci51c2VyQWdlbnQgc3RyaW5nIG9yICcnIGlmIGl0J3Mgbm90IGRlZmluZWQuXHJcbiAqIEByZXR1cm4gdXNlciBhZ2VudCBzdHJpbmdcclxuICovXHJcbmZ1bmN0aW9uIGdldFVBKCkge1xyXG4gICAgaWYgKHR5cGVvZiBuYXZpZ2F0b3IgIT09ICd1bmRlZmluZWQnICYmXHJcbiAgICAgICAgdHlwZW9mIG5hdmlnYXRvclsndXNlckFnZW50J10gPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgcmV0dXJuIG5hdmlnYXRvclsndXNlckFnZW50J107XHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICByZXR1cm4gJyc7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIERldGVjdCBDb3Jkb3ZhIC8gUGhvbmVHYXAgLyBJb25pYyBmcmFtZXdvcmtzIG9uIGEgbW9iaWxlIGRldmljZS5cclxuICpcclxuICogRGVsaWJlcmF0ZWx5IGRvZXMgbm90IHJlbHkgb24gY2hlY2tpbmcgYGZpbGU6Ly9gIFVSTHMgKGFzIHRoaXMgZmFpbHMgUGhvbmVHYXBcclxuICogaW4gdGhlIFJpcHBsZSBlbXVsYXRvcikgbm9yIENvcmRvdmEgYG9uRGV2aWNlUmVhZHlgLCB3aGljaCB3b3VsZCBub3JtYWxseVxyXG4gKiB3YWl0IGZvciBhIGNhbGxiYWNrLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNNb2JpbGVDb3Jkb3ZhKCkge1xyXG4gICAgcmV0dXJuICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJlxyXG4gICAgICAgIC8vIEB0cy1pZ25vcmUgU2V0dGluZyB1cCBhbiBicm9hZGx5IGFwcGxpY2FibGUgaW5kZXggc2lnbmF0dXJlIGZvciBXaW5kb3dcclxuICAgICAgICAvLyBqdXN0IHRvIGRlYWwgd2l0aCB0aGlzIGNhc2Ugd291bGQgcHJvYmFibHkgYmUgYSBiYWQgaWRlYS5cclxuICAgICAgICAhISh3aW5kb3dbJ2NvcmRvdmEnXSB8fCB3aW5kb3dbJ3Bob25lZ2FwJ10gfHwgd2luZG93WydQaG9uZUdhcCddKSAmJlxyXG4gICAgICAgIC9pb3N8aXBob25lfGlwb2R8aXBhZHxhbmRyb2lkfGJsYWNrYmVycnl8aWVtb2JpbGUvaS50ZXN0KGdldFVBKCkpKTtcclxufVxyXG4vKipcclxuICogRGV0ZWN0IE5vZGUuanMuXHJcbiAqXHJcbiAqIEByZXR1cm4gdHJ1ZSBpZiBOb2RlLmpzIGVudmlyb25tZW50IGlzIGRldGVjdGVkLlxyXG4gKi9cclxuLy8gTm9kZSBkZXRlY3Rpb24gbG9naWMgZnJvbTogaHR0cHM6Ly9naXRodWIuY29tL2lsaWFrYW4vZGV0ZWN0LW5vZGUvXHJcbmZ1bmN0aW9uIGlzTm9kZSgpIHtcclxuICAgIHRyeSB7XHJcbiAgICAgICAgcmV0dXJuIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoZ2xvYmFsLnByb2Nlc3MpID09PSAnW29iamVjdCBwcm9jZXNzXScpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbn1cclxuLyoqXHJcbiAqIERldGVjdCBCcm93c2VyIEVudmlyb25tZW50XHJcbiAqL1xyXG5mdW5jdGlvbiBpc0Jyb3dzZXIoKSB7XHJcbiAgICByZXR1cm4gdHlwZW9mIHNlbGYgPT09ICdvYmplY3QnICYmIHNlbGYuc2VsZiA9PT0gc2VsZjtcclxufVxyXG5mdW5jdGlvbiBpc0Jyb3dzZXJFeHRlbnNpb24oKSB7XHJcbiAgICB2YXIgcnVudGltZSA9IHR5cGVvZiBjaHJvbWUgPT09ICdvYmplY3QnXHJcbiAgICAgICAgPyBjaHJvbWUucnVudGltZVxyXG4gICAgICAgIDogdHlwZW9mIGJyb3dzZXIgPT09ICdvYmplY3QnXHJcbiAgICAgICAgICAgID8gYnJvd3Nlci5ydW50aW1lXHJcbiAgICAgICAgICAgIDogdW5kZWZpbmVkO1xyXG4gICAgcmV0dXJuIHR5cGVvZiBydW50aW1lID09PSAnb2JqZWN0JyAmJiBydW50aW1lLmlkICE9PSB1bmRlZmluZWQ7XHJcbn1cclxuLyoqXHJcbiAqIERldGVjdCBSZWFjdCBOYXRpdmUuXHJcbiAqXHJcbiAqIEByZXR1cm4gdHJ1ZSBpZiBSZWFjdE5hdGl2ZSBlbnZpcm9ubWVudCBpcyBkZXRlY3RlZC5cclxuICovXHJcbmZ1bmN0aW9uIGlzUmVhY3ROYXRpdmUoKSB7XHJcbiAgICByZXR1cm4gKHR5cGVvZiBuYXZpZ2F0b3IgPT09ICdvYmplY3QnICYmIG5hdmlnYXRvclsncHJvZHVjdCddID09PSAnUmVhY3ROYXRpdmUnKTtcclxufVxyXG4vKiogRGV0ZWN0cyBFbGVjdHJvbiBhcHBzLiAqL1xyXG5mdW5jdGlvbiBpc0VsZWN0cm9uKCkge1xyXG4gICAgcmV0dXJuIGdldFVBKCkuaW5kZXhPZignRWxlY3Ryb24vJykgPj0gMDtcclxufVxyXG4vKiogRGV0ZWN0cyBJbnRlcm5ldCBFeHBsb3Jlci4gKi9cclxuZnVuY3Rpb24gaXNJRSgpIHtcclxuICAgIHZhciB1YSA9IGdldFVBKCk7XHJcbiAgICByZXR1cm4gdWEuaW5kZXhPZignTVNJRSAnKSA+PSAwIHx8IHVhLmluZGV4T2YoJ1RyaWRlbnQvJykgPj0gMDtcclxufVxyXG4vKiogRGV0ZWN0cyBVbml2ZXJzYWwgV2luZG93cyBQbGF0Zm9ybSBhcHBzLiAqL1xyXG5mdW5jdGlvbiBpc1VXUCgpIHtcclxuICAgIHJldHVybiBnZXRVQSgpLmluZGV4T2YoJ01TQXBwSG9zdC8nKSA+PSAwO1xyXG59XHJcbi8qKlxyXG4gKiBEZXRlY3Qgd2hldGhlciB0aGUgY3VycmVudCBTREsgYnVpbGQgaXMgdGhlIE5vZGUgdmVyc2lvbi5cclxuICpcclxuICogQHJldHVybiB0cnVlIGlmIGl0J3MgdGhlIE5vZGUgU0RLIGJ1aWxkLlxyXG4gKi9cclxuZnVuY3Rpb24gaXNOb2RlU2RrKCkge1xyXG4gICAgcmV0dXJuIENPTlNUQU5UUy5OT0RFX0NMSUVOVCA9PT0gdHJ1ZSB8fCBDT05TVEFOVFMuTk9ERV9BRE1JTiA9PT0gdHJ1ZTtcclxufVxyXG4vKiogUmV0dXJucyB0cnVlIGlmIHdlIGFyZSBydW5uaW5nIGluIFNhZmFyaS4gKi9cclxuZnVuY3Rpb24gaXNTYWZhcmkoKSB7XHJcbiAgICByZXR1cm4gKCFpc05vZGUoKSAmJlxyXG4gICAgICAgIG5hdmlnYXRvci51c2VyQWdlbnQuaW5jbHVkZXMoJ1NhZmFyaScpICYmXHJcbiAgICAgICAgIW5hdmlnYXRvci51c2VyQWdlbnQuaW5jbHVkZXMoJ0Nocm9tZScpKTtcclxufVxyXG4vKipcclxuICogVGhpcyBtZXRob2QgY2hlY2tzIGlmIGluZGV4ZWREQiBpcyBzdXBwb3J0ZWQgYnkgY3VycmVudCBicm93c2VyL3NlcnZpY2Ugd29ya2VyIGNvbnRleHRcclxuICogQHJldHVybiB0cnVlIGlmIGluZGV4ZWREQiBpcyBzdXBwb3J0ZWQgYnkgY3VycmVudCBicm93c2VyL3NlcnZpY2Ugd29ya2VyIGNvbnRleHRcclxuICovXHJcbmZ1bmN0aW9uIGlzSW5kZXhlZERCQXZhaWxhYmxlKCkge1xyXG4gICAgcmV0dXJuICdpbmRleGVkREInIGluIHNlbGYgJiYgaW5kZXhlZERCICE9IG51bGw7XHJcbn1cclxuLyoqXHJcbiAqIFRoaXMgbWV0aG9kIHZhbGlkYXRlcyBicm93c2VyL3N3IGNvbnRleHQgZm9yIGluZGV4ZWREQiBieSBvcGVuaW5nIGEgZHVtbXkgaW5kZXhlZERCIGRhdGFiYXNlIGFuZCByZWplY3RcclxuICogaWYgZXJyb3JzIG9jY3VyIGR1cmluZyB0aGUgZGF0YWJhc2Ugb3BlbiBvcGVyYXRpb24uXHJcbiAqXHJcbiAqIEB0aHJvd3MgZXhjZXB0aW9uIGlmIGN1cnJlbnQgYnJvd3Nlci9zdyBjb250ZXh0IGNhbid0IHJ1biBpZGIub3BlbiAoZXg6IFNhZmFyaSBpZnJhbWUsIEZpcmVmb3hcclxuICogcHJpdmF0ZSBicm93c2luZylcclxuICovXHJcbmZ1bmN0aW9uIHZhbGlkYXRlSW5kZXhlZERCT3BlbmFibGUoKSB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIHZhciBwcmVFeGlzdF8xID0gdHJ1ZTtcclxuICAgICAgICAgICAgdmFyIERCX0NIRUNLX05BTUVfMSA9ICd2YWxpZGF0ZS1icm93c2VyLWNvbnRleHQtZm9yLWluZGV4ZWRkYi1hbmFseXRpY3MtbW9kdWxlJztcclxuICAgICAgICAgICAgdmFyIHJlcXVlc3RfMSA9IHNlbGYuaW5kZXhlZERCLm9wZW4oREJfQ0hFQ0tfTkFNRV8xKTtcclxuICAgICAgICAgICAgcmVxdWVzdF8xLm9uc3VjY2VzcyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJlcXVlc3RfMS5yZXN1bHQuY2xvc2UoKTtcclxuICAgICAgICAgICAgICAgIC8vIGRlbGV0ZSBkYXRhYmFzZSBvbmx5IHdoZW4gaXQgZG9lc24ndCBwcmUtZXhpc3RcclxuICAgICAgICAgICAgICAgIGlmICghcHJlRXhpc3RfMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuaW5kZXhlZERCLmRlbGV0ZURhdGFiYXNlKERCX0NIRUNLX05BTUVfMSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICByZXF1ZXN0XzEub251cGdyYWRlbmVlZGVkID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcHJlRXhpc3RfMSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICByZXF1ZXN0XzEub25lcnJvciA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBfYTtcclxuICAgICAgICAgICAgICAgIHJlamVjdCgoKF9hID0gcmVxdWVzdF8xLmVycm9yKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EubWVzc2FnZSkgfHwgJycpO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICB9KTtcclxufVxyXG4vKipcclxuICpcclxuICogVGhpcyBtZXRob2QgY2hlY2tzIHdoZXRoZXIgY29va2llIGlzIGVuYWJsZWQgd2l0aGluIGN1cnJlbnQgYnJvd3NlclxyXG4gKiBAcmV0dXJuIHRydWUgaWYgY29va2llIGlzIGVuYWJsZWQgd2l0aGluIGN1cnJlbnQgYnJvd3NlclxyXG4gKi9cclxuZnVuY3Rpb24gYXJlQ29va2llc0VuYWJsZWQoKSB7XHJcbiAgICBpZiAoIW5hdmlnYXRvciB8fCAhbmF2aWdhdG9yLmNvb2tpZUVuYWJsZWQpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG52YXIgRVJST1JfTkFNRSA9ICdGaXJlYmFzZUVycm9yJztcclxuLy8gQmFzZWQgb24gY29kZSBmcm9tOlxyXG4vLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9KYXZhU2NyaXB0L1JlZmVyZW5jZS9HbG9iYWxfT2JqZWN0cy9FcnJvciNDdXN0b21fRXJyb3JfVHlwZXNcclxudmFyIEZpcmViYXNlRXJyb3IgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XHJcbiAgICBfX2V4dGVuZHMoRmlyZWJhc2VFcnJvciwgX3N1cGVyKTtcclxuICAgIGZ1bmN0aW9uIEZpcmViYXNlRXJyb3IoY29kZSwgbWVzc2FnZSwgY3VzdG9tRGF0YSkge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIG1lc3NhZ2UpIHx8IHRoaXM7XHJcbiAgICAgICAgX3RoaXMuY29kZSA9IGNvZGU7XHJcbiAgICAgICAgX3RoaXMuY3VzdG9tRGF0YSA9IGN1c3RvbURhdGE7XHJcbiAgICAgICAgX3RoaXMubmFtZSA9IEVSUk9SX05BTUU7XHJcbiAgICAgICAgLy8gRml4IEZvciBFUzVcclxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vTWljcm9zb2Z0L1R5cGVTY3JpcHQtd2lraS9ibG9iL21hc3Rlci9CcmVha2luZy1DaGFuZ2VzLm1kI2V4dGVuZGluZy1idWlsdC1pbnMtbGlrZS1lcnJvci1hcnJheS1hbmQtbWFwLW1heS1uby1sb25nZXItd29ya1xyXG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihfdGhpcywgRmlyZWJhc2VFcnJvci5wcm90b3R5cGUpO1xyXG4gICAgICAgIC8vIE1haW50YWlucyBwcm9wZXIgc3RhY2sgdHJhY2UgZm9yIHdoZXJlIG91ciBlcnJvciB3YXMgdGhyb3duLlxyXG4gICAgICAgIC8vIE9ubHkgYXZhaWxhYmxlIG9uIFY4LlxyXG4gICAgICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xyXG4gICAgICAgICAgICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShfdGhpcywgRXJyb3JGYWN0b3J5LnByb3RvdHlwZS5jcmVhdGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gX3RoaXM7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gRmlyZWJhc2VFcnJvcjtcclxufShFcnJvcikpO1xyXG52YXIgRXJyb3JGYWN0b3J5ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xyXG4gICAgZnVuY3Rpb24gRXJyb3JGYWN0b3J5KHNlcnZpY2UsIHNlcnZpY2VOYW1lLCBlcnJvcnMpIHtcclxuICAgICAgICB0aGlzLnNlcnZpY2UgPSBzZXJ2aWNlO1xyXG4gICAgICAgIHRoaXMuc2VydmljZU5hbWUgPSBzZXJ2aWNlTmFtZTtcclxuICAgICAgICB0aGlzLmVycm9ycyA9IGVycm9ycztcclxuICAgIH1cclxuICAgIEVycm9yRmFjdG9yeS5wcm90b3R5cGUuY3JlYXRlID0gZnVuY3Rpb24gKGNvZGUpIHtcclxuICAgICAgICB2YXIgZGF0YSA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMTsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIGRhdGFbX2kgLSAxXSA9IGFyZ3VtZW50c1tfaV07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBjdXN0b21EYXRhID0gZGF0YVswXSB8fCB7fTtcclxuICAgICAgICB2YXIgZnVsbENvZGUgPSB0aGlzLnNlcnZpY2UgKyBcIi9cIiArIGNvZGU7XHJcbiAgICAgICAgdmFyIHRlbXBsYXRlID0gdGhpcy5lcnJvcnNbY29kZV07XHJcbiAgICAgICAgdmFyIG1lc3NhZ2UgPSB0ZW1wbGF0ZSA/IHJlcGxhY2VUZW1wbGF0ZSh0ZW1wbGF0ZSwgY3VzdG9tRGF0YSkgOiAnRXJyb3InO1xyXG4gICAgICAgIC8vIFNlcnZpY2UgTmFtZTogRXJyb3IgbWVzc2FnZSAoc2VydmljZS9jb2RlKS5cclxuICAgICAgICB2YXIgZnVsbE1lc3NhZ2UgPSB0aGlzLnNlcnZpY2VOYW1lICsgXCI6IFwiICsgbWVzc2FnZSArIFwiIChcIiArIGZ1bGxDb2RlICsgXCIpLlwiO1xyXG4gICAgICAgIHZhciBlcnJvciA9IG5ldyBGaXJlYmFzZUVycm9yKGZ1bGxDb2RlLCBmdWxsTWVzc2FnZSwgY3VzdG9tRGF0YSk7XHJcbiAgICAgICAgcmV0dXJuIGVycm9yO1xyXG4gICAgfTtcclxuICAgIHJldHVybiBFcnJvckZhY3Rvcnk7XHJcbn0oKSk7XHJcbmZ1bmN0aW9uIHJlcGxhY2VUZW1wbGF0ZSh0ZW1wbGF0ZSwgZGF0YSkge1xyXG4gICAgcmV0dXJuIHRlbXBsYXRlLnJlcGxhY2UoUEFUVEVSTiwgZnVuY3Rpb24gKF8sIGtleSkge1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IGRhdGFba2V5XTtcclxuICAgICAgICByZXR1cm4gdmFsdWUgIT0gbnVsbCA/IFN0cmluZyh2YWx1ZSkgOiBcIjxcIiArIGtleSArIFwiPz5cIjtcclxuICAgIH0pO1xyXG59XHJcbnZhciBQQVRURVJOID0gL1xce1xcJChbXn1dKyl9L2c7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxNyBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBFdmFsdWF0ZXMgYSBKU09OIHN0cmluZyBpbnRvIGEgamF2YXNjcmlwdCBvYmplY3QuXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHIgQSBzdHJpbmcgY29udGFpbmluZyBKU09OLlxyXG4gKiBAcmV0dXJuIHsqfSBUaGUgamF2YXNjcmlwdCBvYmplY3QgcmVwcmVzZW50aW5nIHRoZSBzcGVjaWZpZWQgSlNPTi5cclxuICovXHJcbmZ1bmN0aW9uIGpzb25FdmFsKHN0cikge1xyXG4gICAgcmV0dXJuIEpTT04ucGFyc2Uoc3RyKTtcclxufVxyXG4vKipcclxuICogUmV0dXJucyBKU09OIHJlcHJlc2VudGluZyBhIGphdmFzY3JpcHQgb2JqZWN0LlxyXG4gKiBAcGFyYW0geyp9IGRhdGEgSmF2YXNjcmlwdCBvYmplY3QgdG8gYmUgc3RyaW5naWZpZWQuXHJcbiAqIEByZXR1cm4ge3N0cmluZ30gVGhlIEpTT04gY29udGVudHMgb2YgdGhlIG9iamVjdC5cclxuICovXHJcbmZ1bmN0aW9uIHN0cmluZ2lmeShkYXRhKSB7XHJcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIERlY29kZXMgYSBGaXJlYmFzZSBhdXRoLiB0b2tlbiBpbnRvIGNvbnN0aXR1ZW50IHBhcnRzLlxyXG4gKlxyXG4gKiBOb3RlczpcclxuICogLSBNYXkgcmV0dXJuIHdpdGggaW52YWxpZCAvIGluY29tcGxldGUgY2xhaW1zIGlmIHRoZXJlJ3Mgbm8gbmF0aXZlIGJhc2U2NCBkZWNvZGluZyBzdXBwb3J0LlxyXG4gKiAtIERvZXNuJ3QgY2hlY2sgaWYgdGhlIHRva2VuIGlzIGFjdHVhbGx5IHZhbGlkLlxyXG4gKi9cclxudmFyIGRlY29kZSA9IGZ1bmN0aW9uICh0b2tlbikge1xyXG4gICAgdmFyIGhlYWRlciA9IHt9LCBjbGFpbXMgPSB7fSwgZGF0YSA9IHt9LCBzaWduYXR1cmUgPSAnJztcclxuICAgIHRyeSB7XHJcbiAgICAgICAgdmFyIHBhcnRzID0gdG9rZW4uc3BsaXQoJy4nKTtcclxuICAgICAgICBoZWFkZXIgPSBqc29uRXZhbChiYXNlNjREZWNvZGUocGFydHNbMF0pIHx8ICcnKTtcclxuICAgICAgICBjbGFpbXMgPSBqc29uRXZhbChiYXNlNjREZWNvZGUocGFydHNbMV0pIHx8ICcnKTtcclxuICAgICAgICBzaWduYXR1cmUgPSBwYXJ0c1syXTtcclxuICAgICAgICBkYXRhID0gY2xhaW1zWydkJ10gfHwge307XHJcbiAgICAgICAgZGVsZXRlIGNsYWltc1snZCddO1xyXG4gICAgfVxyXG4gICAgY2F0Y2ggKGUpIHsgfVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBoZWFkZXI6IGhlYWRlcixcclxuICAgICAgICBjbGFpbXM6IGNsYWltcyxcclxuICAgICAgICBkYXRhOiBkYXRhLFxyXG4gICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlXHJcbiAgICB9O1xyXG59O1xyXG4vKipcclxuICogRGVjb2RlcyBhIEZpcmViYXNlIGF1dGguIHRva2VuIGFuZCBjaGVja3MgdGhlIHZhbGlkaXR5IG9mIGl0cyB0aW1lLWJhc2VkIGNsYWltcy4gV2lsbCByZXR1cm4gdHJ1ZSBpZiB0aGVcclxuICogdG9rZW4gaXMgd2l0aGluIHRoZSB0aW1lIHdpbmRvdyBhdXRob3JpemVkIGJ5IHRoZSAnbmJmJyAobm90LWJlZm9yZSkgYW5kICdpYXQnIChpc3N1ZWQtYXQpIGNsYWltcy5cclxuICpcclxuICogTm90ZXM6XHJcbiAqIC0gTWF5IHJldHVybiBhIGZhbHNlIG5lZ2F0aXZlIGlmIHRoZXJlJ3Mgbm8gbmF0aXZlIGJhc2U2NCBkZWNvZGluZyBzdXBwb3J0LlxyXG4gKiAtIERvZXNuJ3QgY2hlY2sgaWYgdGhlIHRva2VuIGlzIGFjdHVhbGx5IHZhbGlkLlxyXG4gKi9cclxudmFyIGlzVmFsaWRUaW1lc3RhbXAgPSBmdW5jdGlvbiAodG9rZW4pIHtcclxuICAgIHZhciBjbGFpbXMgPSBkZWNvZGUodG9rZW4pLmNsYWltcztcclxuICAgIHZhciBub3cgPSBNYXRoLmZsb29yKG5ldyBEYXRlKCkuZ2V0VGltZSgpIC8gMTAwMCk7XHJcbiAgICB2YXIgdmFsaWRTaW5jZSA9IDAsIHZhbGlkVW50aWwgPSAwO1xyXG4gICAgaWYgKHR5cGVvZiBjbGFpbXMgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgaWYgKGNsYWltcy5oYXNPd25Qcm9wZXJ0eSgnbmJmJykpIHtcclxuICAgICAgICAgICAgdmFsaWRTaW5jZSA9IGNsYWltc1snbmJmJ107XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGNsYWltcy5oYXNPd25Qcm9wZXJ0eSgnaWF0JykpIHtcclxuICAgICAgICAgICAgdmFsaWRTaW5jZSA9IGNsYWltc1snaWF0J107XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChjbGFpbXMuaGFzT3duUHJvcGVydHkoJ2V4cCcpKSB7XHJcbiAgICAgICAgICAgIHZhbGlkVW50aWwgPSBjbGFpbXNbJ2V4cCddO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgLy8gdG9rZW4gd2lsbCBleHBpcmUgYWZ0ZXIgMjRoIGJ5IGRlZmF1bHRcclxuICAgICAgICAgICAgdmFsaWRVbnRpbCA9IHZhbGlkU2luY2UgKyA4NjQwMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gKCEhbm93ICYmXHJcbiAgICAgICAgISF2YWxpZFNpbmNlICYmXHJcbiAgICAgICAgISF2YWxpZFVudGlsICYmXHJcbiAgICAgICAgbm93ID49IHZhbGlkU2luY2UgJiZcclxuICAgICAgICBub3cgPD0gdmFsaWRVbnRpbCk7XHJcbn07XHJcbi8qKlxyXG4gKiBEZWNvZGVzIGEgRmlyZWJhc2UgYXV0aC4gdG9rZW4gYW5kIHJldHVybnMgaXRzIGlzc3VlZCBhdCB0aW1lIGlmIHZhbGlkLCBudWxsIG90aGVyd2lzZS5cclxuICpcclxuICogTm90ZXM6XHJcbiAqIC0gTWF5IHJldHVybiBudWxsIGlmIHRoZXJlJ3Mgbm8gbmF0aXZlIGJhc2U2NCBkZWNvZGluZyBzdXBwb3J0LlxyXG4gKiAtIERvZXNuJ3QgY2hlY2sgaWYgdGhlIHRva2VuIGlzIGFjdHVhbGx5IHZhbGlkLlxyXG4gKi9cclxudmFyIGlzc3VlZEF0VGltZSA9IGZ1bmN0aW9uICh0b2tlbikge1xyXG4gICAgdmFyIGNsYWltcyA9IGRlY29kZSh0b2tlbikuY2xhaW1zO1xyXG4gICAgaWYgKHR5cGVvZiBjbGFpbXMgPT09ICdvYmplY3QnICYmIGNsYWltcy5oYXNPd25Qcm9wZXJ0eSgnaWF0JykpIHtcclxuICAgICAgICByZXR1cm4gY2xhaW1zWydpYXQnXTtcclxuICAgIH1cclxuICAgIHJldHVybiBudWxsO1xyXG59O1xyXG4vKipcclxuICogRGVjb2RlcyBhIEZpcmViYXNlIGF1dGguIHRva2VuIGFuZCBjaGVja3MgdGhlIHZhbGlkaXR5IG9mIGl0cyBmb3JtYXQuIEV4cGVjdHMgYSB2YWxpZCBpc3N1ZWQtYXQgdGltZS5cclxuICpcclxuICogTm90ZXM6XHJcbiAqIC0gTWF5IHJldHVybiBhIGZhbHNlIG5lZ2F0aXZlIGlmIHRoZXJlJ3Mgbm8gbmF0aXZlIGJhc2U2NCBkZWNvZGluZyBzdXBwb3J0LlxyXG4gKiAtIERvZXNuJ3QgY2hlY2sgaWYgdGhlIHRva2VuIGlzIGFjdHVhbGx5IHZhbGlkLlxyXG4gKi9cclxudmFyIGlzVmFsaWRGb3JtYXQgPSBmdW5jdGlvbiAodG9rZW4pIHtcclxuICAgIHZhciBkZWNvZGVkID0gZGVjb2RlKHRva2VuKSwgY2xhaW1zID0gZGVjb2RlZC5jbGFpbXM7XHJcbiAgICByZXR1cm4gISFjbGFpbXMgJiYgdHlwZW9mIGNsYWltcyA9PT0gJ29iamVjdCcgJiYgY2xhaW1zLmhhc093blByb3BlcnR5KCdpYXQnKTtcclxufTtcclxuLyoqXHJcbiAqIEF0dGVtcHRzIHRvIHBlZXIgaW50byBhbiBhdXRoIHRva2VuIGFuZCBkZXRlcm1pbmUgaWYgaXQncyBhbiBhZG1pbiBhdXRoIHRva2VuIGJ5IGxvb2tpbmcgYXQgdGhlIGNsYWltcyBwb3J0aW9uLlxyXG4gKlxyXG4gKiBOb3RlczpcclxuICogLSBNYXkgcmV0dXJuIGEgZmFsc2UgbmVnYXRpdmUgaWYgdGhlcmUncyBubyBuYXRpdmUgYmFzZTY0IGRlY29kaW5nIHN1cHBvcnQuXHJcbiAqIC0gRG9lc24ndCBjaGVjayBpZiB0aGUgdG9rZW4gaXMgYWN0dWFsbHkgdmFsaWQuXHJcbiAqL1xyXG52YXIgaXNBZG1pbiA9IGZ1bmN0aW9uICh0b2tlbikge1xyXG4gICAgdmFyIGNsYWltcyA9IGRlY29kZSh0b2tlbikuY2xhaW1zO1xyXG4gICAgcmV0dXJuIHR5cGVvZiBjbGFpbXMgPT09ICdvYmplY3QnICYmIGNsYWltc1snYWRtaW4nXSA9PT0gdHJ1ZTtcclxufTtcblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuZnVuY3Rpb24gY29udGFpbnMob2JqLCBrZXkpIHtcclxuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpO1xyXG59XHJcbmZ1bmN0aW9uIHNhZmVHZXQob2JqLCBrZXkpIHtcclxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XHJcbiAgICAgICAgcmV0dXJuIG9ialtrZXldO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcclxuICAgIH1cclxufVxyXG5mdW5jdGlvbiBpc0VtcHR5KG9iaikge1xyXG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xyXG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxufVxyXG5mdW5jdGlvbiBtYXAob2JqLCBmbiwgY29udGV4dE9iaikge1xyXG4gICAgdmFyIHJlcyA9IHt9O1xyXG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xyXG4gICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XHJcbiAgICAgICAgICAgIHJlc1trZXldID0gZm4uY2FsbChjb250ZXh0T2JqLCBvYmpba2V5XSwga2V5LCBvYmopO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiByZXM7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFJldHVybnMgYSBxdWVyeXN0cmluZy1mb3JtYXR0ZWQgc3RyaW5nIChlLmcuICZhcmc9dmFsJmFyZzI9dmFsMikgZnJvbSBhXHJcbiAqIHBhcmFtcyBvYmplY3QgKGUuZy4ge2FyZzogJ3ZhbCcsIGFyZzI6ICd2YWwyJ30pXHJcbiAqIE5vdGU6IFlvdSBtdXN0IHByZXBlbmQgaXQgd2l0aCA/IHdoZW4gYWRkaW5nIGl0IHRvIGEgVVJMLlxyXG4gKi9cclxuZnVuY3Rpb24gcXVlcnlzdHJpbmcocXVlcnlzdHJpbmdQYXJhbXMpIHtcclxuICAgIHZhciBwYXJhbXMgPSBbXTtcclxuICAgIHZhciBfbG9vcF8xID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcclxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcclxuICAgICAgICAgICAgdmFsdWUuZm9yRWFjaChmdW5jdGlvbiAoYXJyYXlWYWwpIHtcclxuICAgICAgICAgICAgICAgIHBhcmFtcy5wdXNoKGVuY29kZVVSSUNvbXBvbmVudChrZXkpICsgJz0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGFycmF5VmFsKSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgcGFyYW1zLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGtleSkgKyAnPScgKyBlbmNvZGVVUklDb21wb25lbnQodmFsdWUpKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgZm9yICh2YXIgX2kgPSAwLCBfYSA9IE9iamVjdC5lbnRyaWVzKHF1ZXJ5c3RyaW5nUGFyYW1zKTsgX2kgPCBfYS5sZW5ndGg7IF9pKyspIHtcclxuICAgICAgICB2YXIgX2IgPSBfYVtfaV0sIGtleSA9IF9iWzBdLCB2YWx1ZSA9IF9iWzFdO1xyXG4gICAgICAgIF9sb29wXzEoa2V5LCB2YWx1ZSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcGFyYW1zLmxlbmd0aCA/ICcmJyArIHBhcmFtcy5qb2luKCcmJykgOiAnJztcclxufVxyXG4vKipcclxuICogRGVjb2RlcyBhIHF1ZXJ5c3RyaW5nIChlLmcuID9hcmc9dmFsJmFyZzI9dmFsMikgaW50byBhIHBhcmFtcyBvYmplY3RcclxuICogKGUuZy4ge2FyZzogJ3ZhbCcsIGFyZzI6ICd2YWwyJ30pXHJcbiAqL1xyXG5mdW5jdGlvbiBxdWVyeXN0cmluZ0RlY29kZShxdWVyeXN0cmluZykge1xyXG4gICAgdmFyIG9iaiA9IHt9O1xyXG4gICAgdmFyIHRva2VucyA9IHF1ZXJ5c3RyaW5nLnJlcGxhY2UoL15cXD8vLCAnJykuc3BsaXQoJyYnKTtcclxuICAgIHRva2Vucy5mb3JFYWNoKGZ1bmN0aW9uICh0b2tlbikge1xyXG4gICAgICAgIGlmICh0b2tlbikge1xyXG4gICAgICAgICAgICB2YXIgX2EgPSB0b2tlbi5zcGxpdCgnPScpLCBrZXkgPSBfYVswXSwgdmFsdWUgPSBfYVsxXTtcclxuICAgICAgICAgICAgb2JqW2RlY29kZVVSSUNvbXBvbmVudChrZXkpXSA9IGRlY29kZVVSSUNvbXBvbmVudCh2YWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gb2JqO1xyXG59XHJcbi8qKlxyXG4gKiBFeHRyYWN0IHRoZSBxdWVyeSBzdHJpbmcgcGFydCBvZiBhIFVSTCwgaW5jbHVkaW5nIHRoZSBsZWFkaW5nIHF1ZXN0aW9uIG1hcmsgKGlmIHByZXNlbnQpLlxyXG4gKi9cclxuZnVuY3Rpb24gZXh0cmFjdFF1ZXJ5c3RyaW5nKHVybCkge1xyXG4gICAgdmFyIHF1ZXJ5U3RhcnQgPSB1cmwuaW5kZXhPZignPycpO1xyXG4gICAgaWYgKCFxdWVyeVN0YXJ0KSB7XHJcbiAgICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gICAgdmFyIGZyYWdtZW50U3RhcnQgPSB1cmwuaW5kZXhPZignIycsIHF1ZXJ5U3RhcnQpO1xyXG4gICAgcmV0dXJuIHVybC5zdWJzdHJpbmcocXVlcnlTdGFydCwgZnJhZ21lbnRTdGFydCA+IDAgPyBmcmFnbWVudFN0YXJ0IDogdW5kZWZpbmVkKTtcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQGZpbGVvdmVydmlldyBTSEEtMSBjcnlwdG9ncmFwaGljIGhhc2guXHJcbiAqIFZhcmlhYmxlIG5hbWVzIGZvbGxvdyB0aGUgbm90YXRpb24gaW4gRklQUyBQVUIgMTgwLTM6XHJcbiAqIGh0dHA6Ly9jc3JjLm5pc3QuZ292L3B1YmxpY2F0aW9ucy9maXBzL2ZpcHMxODAtMy9maXBzMTgwLTNfZmluYWwucGRmLlxyXG4gKlxyXG4gKiBVc2FnZTpcclxuICogICB2YXIgc2hhMSA9IG5ldyBzaGExKCk7XHJcbiAqICAgc2hhMS51cGRhdGUoYnl0ZXMpO1xyXG4gKiAgIHZhciBoYXNoID0gc2hhMS5kaWdlc3QoKTtcclxuICpcclxuICogUGVyZm9ybWFuY2U6XHJcbiAqICAgQ2hyb21lIDIzOiAgIH40MDAgTWJpdC9zXHJcbiAqICAgRmlyZWZveCAxNjogIH4yNTAgTWJpdC9zXHJcbiAqXHJcbiAqL1xyXG4vKipcclxuICogU0hBLTEgY3J5cHRvZ3JhcGhpYyBoYXNoIGNvbnN0cnVjdG9yLlxyXG4gKlxyXG4gKiBUaGUgcHJvcGVydGllcyBkZWNsYXJlZCBoZXJlIGFyZSBkaXNjdXNzZWQgaW4gdGhlIGFib3ZlIGFsZ29yaXRobSBkb2N1bWVudC5cclxuICogQGNvbnN0cnVjdG9yXHJcbiAqIEBmaW5hbFxyXG4gKiBAc3RydWN0XHJcbiAqL1xyXG52YXIgU2hhMSA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcclxuICAgIGZ1bmN0aW9uIFNoYTEoKSB7XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogSG9sZHMgdGhlIHByZXZpb3VzIHZhbHVlcyBvZiBhY2N1bXVsYXRlZCB2YXJpYWJsZXMgYS1lIGluIHRoZSBjb21wcmVzc19cclxuICAgICAgICAgKiBmdW5jdGlvbi5cclxuICAgICAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMuY2hhaW5fID0gW107XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQSBidWZmZXIgaG9sZGluZyB0aGUgcGFydGlhbGx5IGNvbXB1dGVkIGhhc2ggcmVzdWx0LlxyXG4gICAgICAgICAqIEBwcml2YXRlXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5idWZfID0gW107XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQW4gYXJyYXkgb2YgODAgYnl0ZXMsIGVhY2ggYSBwYXJ0IG9mIHRoZSBtZXNzYWdlIHRvIGJlIGhhc2hlZC4gIFJlZmVycmVkIHRvXHJcbiAgICAgICAgICogYXMgdGhlIG1lc3NhZ2Ugc2NoZWR1bGUgaW4gdGhlIGRvY3MuXHJcbiAgICAgICAgICogQHByaXZhdGVcclxuICAgICAgICAgKi9cclxuICAgICAgICB0aGlzLldfID0gW107XHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogQ29udGFpbnMgZGF0YSBuZWVkZWQgdG8gcGFkIG1lc3NhZ2VzIGxlc3MgdGhhbiA2NCBieXRlcy5cclxuICAgICAgICAgKiBAcHJpdmF0ZVxyXG4gICAgICAgICAqL1xyXG4gICAgICAgIHRoaXMucGFkXyA9IFtdO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEBwcml2YXRlIHtudW1iZXJ9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy5pbmJ1Zl8gPSAwO1xyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEBwcml2YXRlIHtudW1iZXJ9XHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdGhpcy50b3RhbF8gPSAwO1xyXG4gICAgICAgIHRoaXMuYmxvY2tTaXplID0gNTEyIC8gODtcclxuICAgICAgICB0aGlzLnBhZF9bMF0gPSAxMjg7XHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCB0aGlzLmJsb2NrU2l6ZTsgKytpKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGFkX1tpXSA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMucmVzZXQoKTtcclxuICAgIH1cclxuICAgIFNoYTEucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzBdID0gMHg2NzQ1MjMwMTtcclxuICAgICAgICB0aGlzLmNoYWluX1sxXSA9IDB4ZWZjZGFiODk7XHJcbiAgICAgICAgdGhpcy5jaGFpbl9bMl0gPSAweDk4YmFkY2ZlO1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzNdID0gMHgxMDMyNTQ3NjtcclxuICAgICAgICB0aGlzLmNoYWluX1s0XSA9IDB4YzNkMmUxZjA7XHJcbiAgICAgICAgdGhpcy5pbmJ1Zl8gPSAwO1xyXG4gICAgICAgIHRoaXMudG90YWxfID0gMDtcclxuICAgIH07XHJcbiAgICAvKipcclxuICAgICAqIEludGVybmFsIGNvbXByZXNzIGhlbHBlciBmdW5jdGlvbi5cclxuICAgICAqIEBwYXJhbSBidWYgQmxvY2sgdG8gY29tcHJlc3MuXHJcbiAgICAgKiBAcGFyYW0gb2Zmc2V0IE9mZnNldCBvZiB0aGUgYmxvY2sgaW4gdGhlIGJ1ZmZlci5cclxuICAgICAqIEBwcml2YXRlXHJcbiAgICAgKi9cclxuICAgIFNoYTEucHJvdG90eXBlLmNvbXByZXNzXyA9IGZ1bmN0aW9uIChidWYsIG9mZnNldCkge1xyXG4gICAgICAgIGlmICghb2Zmc2V0KSB7XHJcbiAgICAgICAgICAgIG9mZnNldCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBXID0gdGhpcy5XXztcclxuICAgICAgICAvLyBnZXQgMTYgYmlnIGVuZGlhbiB3b3Jkc1xyXG4gICAgICAgIGlmICh0eXBlb2YgYnVmID09PSAnc3RyaW5nJykge1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyBpKyspIHtcclxuICAgICAgICAgICAgICAgIC8vIFRPRE8odXNlcik6IFtidWcgODE0MDEyMl0gUmVjZW50IHZlcnNpb25zIG9mIFNhZmFyaSBmb3IgTWFjIE9TIGFuZCBpT1NcclxuICAgICAgICAgICAgICAgIC8vIGhhdmUgYSBidWcgdGhhdCB0dXJucyB0aGUgcG9zdC1pbmNyZW1lbnQgKysgb3BlcmF0b3IgaW50byBwcmUtaW5jcmVtZW50XHJcbiAgICAgICAgICAgICAgICAvLyBkdXJpbmcgSklUIGNvbXBpbGF0aW9uLiAgV2UgaGF2ZSBjb2RlIHRoYXQgZGVwZW5kcyBoZWF2aWx5IG9uIFNIQS0xIGZvclxyXG4gICAgICAgICAgICAgICAgLy8gY29ycmVjdG5lc3MgYW5kIHdoaWNoIGlzIGFmZmVjdGVkIGJ5IHRoaXMgYnVnLCBzbyBJJ3ZlIHJlbW92ZWQgYWxsIHVzZXNcclxuICAgICAgICAgICAgICAgIC8vIG9mIHBvc3QtaW5jcmVtZW50ICsrIGluIHdoaWNoIHRoZSByZXN1bHQgdmFsdWUgaXMgdXNlZC4gIFdlIGNhbiByZXZlcnRcclxuICAgICAgICAgICAgICAgIC8vIHRoaXMgY2hhbmdlIG9uY2UgdGhlIFNhZmFyaSBidWdcclxuICAgICAgICAgICAgICAgIC8vIChodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTA5MDM2KSBoYXMgYmVlbiBmaXhlZCBhbmRcclxuICAgICAgICAgICAgICAgIC8vIG1vc3QgY2xpZW50cyBoYXZlIGJlZW4gdXBkYXRlZC5cclxuICAgICAgICAgICAgICAgIFdbaV0gPVxyXG4gICAgICAgICAgICAgICAgICAgIChidWYuY2hhckNvZGVBdChvZmZzZXQpIDw8IDI0KSB8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIChidWYuY2hhckNvZGVBdChvZmZzZXQgKyAxKSA8PCAxNikgfFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAoYnVmLmNoYXJDb2RlQXQob2Zmc2V0ICsgMikgPDwgOCkgfFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBidWYuY2hhckNvZGVBdChvZmZzZXQgKyAzKTtcclxuICAgICAgICAgICAgICAgIG9mZnNldCArPSA0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDE2OyBpKyspIHtcclxuICAgICAgICAgICAgICAgIFdbaV0gPVxyXG4gICAgICAgICAgICAgICAgICAgIChidWZbb2Zmc2V0XSA8PCAyNCkgfFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAoYnVmW29mZnNldCArIDFdIDw8IDE2KSB8XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIChidWZbb2Zmc2V0ICsgMl0gPDwgOCkgfFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBidWZbb2Zmc2V0ICsgM107XHJcbiAgICAgICAgICAgICAgICBvZmZzZXQgKz0gNDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBleHBhbmQgdG8gODAgd29yZHNcclxuICAgICAgICBmb3IgKHZhciBpID0gMTY7IGkgPCA4MDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHZhciB0ID0gV1tpIC0gM10gXiBXW2kgLSA4XSBeIFdbaSAtIDE0XSBeIFdbaSAtIDE2XTtcclxuICAgICAgICAgICAgV1tpXSA9ICgodCA8PCAxKSB8ICh0ID4+PiAzMSkpICYgMHhmZmZmZmZmZjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGEgPSB0aGlzLmNoYWluX1swXTtcclxuICAgICAgICB2YXIgYiA9IHRoaXMuY2hhaW5fWzFdO1xyXG4gICAgICAgIHZhciBjID0gdGhpcy5jaGFpbl9bMl07XHJcbiAgICAgICAgdmFyIGQgPSB0aGlzLmNoYWluX1szXTtcclxuICAgICAgICB2YXIgZSA9IHRoaXMuY2hhaW5fWzRdO1xyXG4gICAgICAgIHZhciBmLCBrO1xyXG4gICAgICAgIC8vIFRPRE8odXNlcik6IFRyeSB0byB1bnJvbGwgdGhpcyBsb29wIHRvIHNwZWVkIHVwIHRoZSBjb21wdXRhdGlvbi5cclxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDgwOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGkgPCA0MCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGkgPCAyMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGYgPSBkIF4gKGIgJiAoYyBeIGQpKTtcclxuICAgICAgICAgICAgICAgICAgICBrID0gMHg1YTgyNzk5OTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGYgPSBiIF4gYyBeIGQ7XHJcbiAgICAgICAgICAgICAgICAgICAgayA9IDB4NmVkOWViYTE7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoaSA8IDYwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZiA9IChiICYgYykgfCAoZCAmIChiIHwgYykpO1xyXG4gICAgICAgICAgICAgICAgICAgIGsgPSAweDhmMWJiY2RjO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZiA9IGIgXiBjIF4gZDtcclxuICAgICAgICAgICAgICAgICAgICBrID0gMHhjYTYyYzFkNjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2YXIgdCA9ICgoKGEgPDwgNSkgfCAoYSA+Pj4gMjcpKSArIGYgKyBlICsgayArIFdbaV0pICYgMHhmZmZmZmZmZjtcclxuICAgICAgICAgICAgZSA9IGQ7XHJcbiAgICAgICAgICAgIGQgPSBjO1xyXG4gICAgICAgICAgICBjID0gKChiIDw8IDMwKSB8IChiID4+PiAyKSkgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgICAgICBiID0gYTtcclxuICAgICAgICAgICAgYSA9IHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2hhaW5fWzBdID0gKHRoaXMuY2hhaW5fWzBdICsgYSkgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzFdID0gKHRoaXMuY2hhaW5fWzFdICsgYikgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzJdID0gKHRoaXMuY2hhaW5fWzJdICsgYykgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzNdID0gKHRoaXMuY2hhaW5fWzNdICsgZCkgJiAweGZmZmZmZmZmO1xyXG4gICAgICAgIHRoaXMuY2hhaW5fWzRdID0gKHRoaXMuY2hhaW5fWzRdICsgZSkgJiAweGZmZmZmZmZmO1xyXG4gICAgfTtcclxuICAgIFNoYTEucHJvdG90eXBlLnVwZGF0ZSA9IGZ1bmN0aW9uIChieXRlcywgbGVuZ3RoKSB7XHJcbiAgICAgICAgLy8gVE9ETyhqb2hubGVueik6IHRpZ2h0ZW4gdGhlIGZ1bmN0aW9uIHNpZ25hdHVyZSBhbmQgcmVtb3ZlIHRoaXMgY2hlY2tcclxuICAgICAgICBpZiAoYnl0ZXMgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChsZW5ndGggPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBsZW5ndGggPSBieXRlcy5sZW5ndGg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBsZW5ndGhNaW51c0Jsb2NrID0gbGVuZ3RoIC0gdGhpcy5ibG9ja1NpemU7XHJcbiAgICAgICAgdmFyIG4gPSAwO1xyXG4gICAgICAgIC8vIFVzaW5nIGxvY2FsIGluc3RlYWQgb2YgbWVtYmVyIHZhcmlhYmxlcyBnaXZlcyB+NSUgc3BlZWR1cCBvbiBGaXJlZm94IDE2LlxyXG4gICAgICAgIHZhciBidWYgPSB0aGlzLmJ1Zl87XHJcbiAgICAgICAgdmFyIGluYnVmID0gdGhpcy5pbmJ1Zl87XHJcbiAgICAgICAgLy8gVGhlIG91dGVyIHdoaWxlIGxvb3Agc2hvdWxkIGV4ZWN1dGUgYXQgbW9zdCB0d2ljZS5cclxuICAgICAgICB3aGlsZSAobiA8IGxlbmd0aCkge1xyXG4gICAgICAgICAgICAvLyBXaGVuIHdlIGhhdmUgbm8gZGF0YSBpbiB0aGUgYmxvY2sgdG8gdG9wIHVwLCB3ZSBjYW4gZGlyZWN0bHkgcHJvY2VzcyB0aGVcclxuICAgICAgICAgICAgLy8gaW5wdXQgYnVmZmVyIChhc3N1bWluZyBpdCBjb250YWlucyBzdWZmaWNpZW50IGRhdGEpLiBUaGlzIGdpdmVzIH4yNSVcclxuICAgICAgICAgICAgLy8gc3BlZWR1cCBvbiBDaHJvbWUgMjMgYW5kIH4xNSUgc3BlZWR1cCBvbiBGaXJlZm94IDE2LCBidXQgcmVxdWlyZXMgdGhhdFxyXG4gICAgICAgICAgICAvLyB0aGUgZGF0YSBpcyBwcm92aWRlZCBpbiBsYXJnZSBjaHVua3MgKG9yIGluIG11bHRpcGxlcyBvZiA2NCBieXRlcykuXHJcbiAgICAgICAgICAgIGlmIChpbmJ1ZiA9PT0gMCkge1xyXG4gICAgICAgICAgICAgICAgd2hpbGUgKG4gPD0gbGVuZ3RoTWludXNCbG9jaykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuY29tcHJlc3NfKGJ5dGVzLCBuKTtcclxuICAgICAgICAgICAgICAgICAgICBuICs9IHRoaXMuYmxvY2tTaXplO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYnl0ZXMgPT09ICdzdHJpbmcnKSB7XHJcbiAgICAgICAgICAgICAgICB3aGlsZSAobiA8IGxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGJ1ZltpbmJ1Zl0gPSBieXRlcy5jaGFyQ29kZUF0KG4pO1xyXG4gICAgICAgICAgICAgICAgICAgICsraW5idWY7XHJcbiAgICAgICAgICAgICAgICAgICAgKytuO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmJ1ZiA9PT0gdGhpcy5ibG9ja1NpemUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21wcmVzc18oYnVmKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5idWYgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBKdW1wIHRvIHRoZSBvdXRlciBsb29wIHNvIHdlIHVzZSB0aGUgZnVsbC1ibG9jayBvcHRpbWl6YXRpb24uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHdoaWxlIChuIDwgbGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYnVmW2luYnVmXSA9IGJ5dGVzW25dO1xyXG4gICAgICAgICAgICAgICAgICAgICsraW5idWY7XHJcbiAgICAgICAgICAgICAgICAgICAgKytuO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChpbmJ1ZiA9PT0gdGhpcy5ibG9ja1NpemUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5jb21wcmVzc18oYnVmKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5idWYgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBKdW1wIHRvIHRoZSBvdXRlciBsb29wIHNvIHdlIHVzZSB0aGUgZnVsbC1ibG9jayBvcHRpbWl6YXRpb24uXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmluYnVmXyA9IGluYnVmO1xyXG4gICAgICAgIHRoaXMudG90YWxfICs9IGxlbmd0aDtcclxuICAgIH07XHJcbiAgICAvKiogQG92ZXJyaWRlICovXHJcbiAgICBTaGExLnByb3RvdHlwZS5kaWdlc3QgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdmFyIGRpZ2VzdCA9IFtdO1xyXG4gICAgICAgIHZhciB0b3RhbEJpdHMgPSB0aGlzLnRvdGFsXyAqIDg7XHJcbiAgICAgICAgLy8gQWRkIHBhZCAweDgwIDB4MDAqLlxyXG4gICAgICAgIGlmICh0aGlzLmluYnVmXyA8IDU2KSB7XHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKHRoaXMucGFkXywgNTYgLSB0aGlzLmluYnVmXyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnVwZGF0ZSh0aGlzLnBhZF8sIHRoaXMuYmxvY2tTaXplIC0gKHRoaXMuaW5idWZfIC0gNTYpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQWRkICMgYml0cy5cclxuICAgICAgICBmb3IgKHZhciBpID0gdGhpcy5ibG9ja1NpemUgLSAxOyBpID49IDU2OyBpLS0pIHtcclxuICAgICAgICAgICAgdGhpcy5idWZfW2ldID0gdG90YWxCaXRzICYgMjU1O1xyXG4gICAgICAgICAgICB0b3RhbEJpdHMgLz0gMjU2OyAvLyBEb24ndCB1c2UgYml0LXNoaWZ0aW5nIGhlcmUhXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY29tcHJlc3NfKHRoaXMuYnVmXyk7XHJcbiAgICAgICAgdmFyIG4gPSAwO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTsgaSsrKSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGogPSAyNDsgaiA+PSAwOyBqIC09IDgpIHtcclxuICAgICAgICAgICAgICAgIGRpZ2VzdFtuXSA9ICh0aGlzLmNoYWluX1tpXSA+PiBqKSAmIDI1NTtcclxuICAgICAgICAgICAgICAgICsrbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gZGlnZXN0O1xyXG4gICAgfTtcclxuICAgIHJldHVybiBTaGExO1xyXG59KCkpO1xuXG4vKipcclxuICogSGVscGVyIHRvIG1ha2UgYSBTdWJzY3JpYmUgZnVuY3Rpb24gKGp1c3QgbGlrZSBQcm9taXNlIGhlbHBzIG1ha2UgYVxyXG4gKiBUaGVuYWJsZSkuXHJcbiAqXHJcbiAqIEBwYXJhbSBleGVjdXRvciBGdW5jdGlvbiB3aGljaCBjYW4gbWFrZSBjYWxscyB0byBhIHNpbmdsZSBPYnNlcnZlclxyXG4gKiAgICAgYXMgYSBwcm94eS5cclxuICogQHBhcmFtIG9uTm9PYnNlcnZlcnMgQ2FsbGJhY2sgd2hlbiBjb3VudCBvZiBPYnNlcnZlcnMgZ29lcyB0byB6ZXJvLlxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlU3Vic2NyaWJlKGV4ZWN1dG9yLCBvbk5vT2JzZXJ2ZXJzKSB7XHJcbiAgICB2YXIgcHJveHkgPSBuZXcgT2JzZXJ2ZXJQcm94eShleGVjdXRvciwgb25Ob09ic2VydmVycyk7XHJcbiAgICByZXR1cm4gcHJveHkuc3Vic2NyaWJlLmJpbmQocHJveHkpO1xyXG59XHJcbi8qKlxyXG4gKiBJbXBsZW1lbnQgZmFuLW91dCBmb3IgYW55IG51bWJlciBvZiBPYnNlcnZlcnMgYXR0YWNoZWQgdmlhIGEgc3Vic2NyaWJlXHJcbiAqIGZ1bmN0aW9uLlxyXG4gKi9cclxudmFyIE9ic2VydmVyUHJveHkgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XHJcbiAgICAvKipcclxuICAgICAqIEBwYXJhbSBleGVjdXRvciBGdW5jdGlvbiB3aGljaCBjYW4gbWFrZSBjYWxscyB0byBhIHNpbmdsZSBPYnNlcnZlclxyXG4gICAgICogICAgIGFzIGEgcHJveHkuXHJcbiAgICAgKiBAcGFyYW0gb25Ob09ic2VydmVycyBDYWxsYmFjayB3aGVuIGNvdW50IG9mIE9ic2VydmVycyBnb2VzIHRvIHplcm8uXHJcbiAgICAgKi9cclxuICAgIGZ1bmN0aW9uIE9ic2VydmVyUHJveHkoZXhlY3V0b3IsIG9uTm9PYnNlcnZlcnMpIHtcclxuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMub2JzZXJ2ZXJzID0gW107XHJcbiAgICAgICAgdGhpcy51bnN1YnNjcmliZXMgPSBbXTtcclxuICAgICAgICB0aGlzLm9ic2VydmVyQ291bnQgPSAwO1xyXG4gICAgICAgIC8vIE1pY3JvLXRhc2sgc2NoZWR1bGluZyBieSBjYWxsaW5nIHRhc2sudGhlbigpLlxyXG4gICAgICAgIHRoaXMudGFzayA9IFByb21pc2UucmVzb2x2ZSgpO1xyXG4gICAgICAgIHRoaXMuZmluYWxpemVkID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5vbk5vT2JzZXJ2ZXJzID0gb25Ob09ic2VydmVycztcclxuICAgICAgICAvLyBDYWxsIHRoZSBleGVjdXRvciBhc3luY2hyb25vdXNseSBzbyBzdWJzY3JpYmVycyB0aGF0IGFyZSBjYWxsZWRcclxuICAgICAgICAvLyBzeW5jaHJvbm91c2x5IGFmdGVyIHRoZSBjcmVhdGlvbiBvZiB0aGUgc3Vic2NyaWJlIGZ1bmN0aW9uXHJcbiAgICAgICAgLy8gY2FuIHN0aWxsIHJlY2VpdmUgdGhlIHZlcnkgZmlyc3QgdmFsdWUgZ2VuZXJhdGVkIGluIHRoZSBleGVjdXRvci5cclxuICAgICAgICB0aGlzLnRhc2tcclxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBleGVjdXRvcihfdGhpcyk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgIF90aGlzLmVycm9yKGUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgT2JzZXJ2ZXJQcm94eS5wcm90b3R5cGUubmV4dCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xyXG4gICAgICAgIHRoaXMuZm9yRWFjaE9ic2VydmVyKGZ1bmN0aW9uIChvYnNlcnZlcikge1xyXG4gICAgICAgICAgICBvYnNlcnZlci5uZXh0KHZhbHVlKTtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBPYnNlcnZlclByb3h5LnByb3RvdHlwZS5lcnJvciA9IGZ1bmN0aW9uIChlcnJvcikge1xyXG4gICAgICAgIHRoaXMuZm9yRWFjaE9ic2VydmVyKGZ1bmN0aW9uIChvYnNlcnZlcikge1xyXG4gICAgICAgICAgICBvYnNlcnZlci5lcnJvcihlcnJvcik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5jbG9zZShlcnJvcik7XHJcbiAgICB9O1xyXG4gICAgT2JzZXJ2ZXJQcm94eS5wcm90b3R5cGUuY29tcGxldGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5mb3JFYWNoT2JzZXJ2ZXIoZnVuY3Rpb24gKG9ic2VydmVyKSB7XHJcbiAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfTtcclxuICAgIC8qKlxyXG4gICAgICogU3Vic2NyaWJlIGZ1bmN0aW9uIHRoYXQgY2FuIGJlIHVzZWQgdG8gYWRkIGFuIE9ic2VydmVyIHRvIHRoZSBmYW4tb3V0IGxpc3QuXHJcbiAgICAgKlxyXG4gICAgICogLSBXZSByZXF1aXJlIHRoYXQgbm8gZXZlbnQgaXMgc2VudCB0byBhIHN1YnNjcmliZXIgc3ljaHJvbm91c2x5IHRvIHRoZWlyXHJcbiAgICAgKiAgIGNhbGwgdG8gc3Vic2NyaWJlKCkuXHJcbiAgICAgKi9cclxuICAgIE9ic2VydmVyUHJveHkucHJvdG90eXBlLnN1YnNjcmliZSA9IGZ1bmN0aW9uIChuZXh0T3JPYnNlcnZlciwgZXJyb3IsIGNvbXBsZXRlKSB7XHJcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcclxuICAgICAgICB2YXIgb2JzZXJ2ZXI7XHJcbiAgICAgICAgaWYgKG5leHRPck9ic2VydmVyID09PSB1bmRlZmluZWQgJiZcclxuICAgICAgICAgICAgZXJyb3IgPT09IHVuZGVmaW5lZCAmJlxyXG4gICAgICAgICAgICBjb21wbGV0ZSA9PT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTWlzc2luZyBPYnNlcnZlci4nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gQXNzZW1ibGUgYW4gT2JzZXJ2ZXIgb2JqZWN0IHdoZW4gcGFzc2VkIGFzIGNhbGxiYWNrIGZ1bmN0aW9ucy5cclxuICAgICAgICBpZiAoaW1wbGVtZW50c0FueU1ldGhvZHMobmV4dE9yT2JzZXJ2ZXIsIFtcclxuICAgICAgICAgICAgJ25leHQnLFxyXG4gICAgICAgICAgICAnZXJyb3InLFxyXG4gICAgICAgICAgICAnY29tcGxldGUnXHJcbiAgICAgICAgXSkpIHtcclxuICAgICAgICAgICAgb2JzZXJ2ZXIgPSBuZXh0T3JPYnNlcnZlcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIG9ic2VydmVyID0ge1xyXG4gICAgICAgICAgICAgICAgbmV4dDogbmV4dE9yT2JzZXJ2ZXIsXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IsXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogY29tcGxldGVcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG9ic2VydmVyLm5leHQgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBvYnNlcnZlci5uZXh0ID0gbm9vcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG9ic2VydmVyLmVycm9yID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgb2JzZXJ2ZXIuZXJyb3IgPSBub29wO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAob2JzZXJ2ZXIuY29tcGxldGUgPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICBvYnNlcnZlci5jb21wbGV0ZSA9IG5vb3A7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciB1bnN1YiA9IHRoaXMudW5zdWJzY3JpYmVPbmUuYmluZCh0aGlzLCB0aGlzLm9ic2VydmVycy5sZW5ndGgpO1xyXG4gICAgICAgIC8vIEF0dGVtcHQgdG8gc3Vic2NyaWJlIHRvIGEgdGVybWluYXRlZCBPYnNlcnZhYmxlIC0gd2VcclxuICAgICAgICAvLyBqdXN0IHJlc3BvbmQgdG8gdGhlIE9ic2VydmVyIHdpdGggdGhlIGZpbmFsIGVycm9yIG9yIGNvbXBsZXRlXHJcbiAgICAgICAgLy8gZXZlbnQuXHJcbiAgICAgICAgaWYgKHRoaXMuZmluYWxpemVkKSB7XHJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZmxvYXRpbmctcHJvbWlzZXNcclxuICAgICAgICAgICAgdGhpcy50YXNrLnRoZW4oZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoX3RoaXMuZmluYWxFcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvYnNlcnZlci5lcnJvcihfdGhpcy5maW5hbEVycm9yKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmNvbXBsZXRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyBub3RoaW5nXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm9ic2VydmVycy5wdXNoKG9ic2VydmVyKTtcclxuICAgICAgICByZXR1cm4gdW5zdWI7XHJcbiAgICB9O1xyXG4gICAgLy8gVW5zdWJzY3JpYmUgaXMgc3luY2hyb25vdXMgLSB3ZSBndWFyYW50ZWUgdGhhdCBubyBldmVudHMgYXJlIHNlbnQgdG9cclxuICAgIC8vIGFueSB1bnN1YnNjcmliZWQgT2JzZXJ2ZXIuXHJcbiAgICBPYnNlcnZlclByb3h5LnByb3RvdHlwZS51bnN1YnNjcmliZU9uZSA9IGZ1bmN0aW9uIChpKSB7XHJcbiAgICAgICAgaWYgKHRoaXMub2JzZXJ2ZXJzID09PSB1bmRlZmluZWQgfHwgdGhpcy5vYnNlcnZlcnNbaV0gPT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRlbGV0ZSB0aGlzLm9ic2VydmVyc1tpXTtcclxuICAgICAgICB0aGlzLm9ic2VydmVyQ291bnQgLT0gMTtcclxuICAgICAgICBpZiAodGhpcy5vYnNlcnZlckNvdW50ID09PSAwICYmIHRoaXMub25Ob09ic2VydmVycyAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMub25Ob09ic2VydmVycyh0aGlzKTtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgT2JzZXJ2ZXJQcm94eS5wcm90b3R5cGUuZm9yRWFjaE9ic2VydmVyID0gZnVuY3Rpb24gKGZuKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZmluYWxpemVkKSB7XHJcbiAgICAgICAgICAgIC8vIEFscmVhZHkgY2xvc2VkIGJ5IHByZXZpb3VzIGV2ZW50Li4uLmp1c3QgZWF0IHRoZSBhZGRpdGlvbmFsIHZhbHVlcy5cclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBTaW5jZSBzZW5kT25lIGNhbGxzIGFzeW5jaHJvbm91c2x5IC0gdGhlcmUgaXMgbm8gY2hhbmNlIHRoYXRcclxuICAgICAgICAvLyB0aGlzLm9ic2VydmVycyB3aWxsIGJlY29tZSB1bmRlZmluZWQuXHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLm9ic2VydmVycy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB0aGlzLnNlbmRPbmUoaSwgZm4pO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICAvLyBDYWxsIHRoZSBPYnNlcnZlciB2aWEgb25lIG9mIGl0J3MgY2FsbGJhY2sgZnVuY3Rpb24uIFdlIGFyZSBjYXJlZnVsIHRvXHJcbiAgICAvLyBjb25maXJtIHRoYXQgdGhlIG9ic2VydmUgaGFzIG5vdCBiZWVuIHVuc3Vic2NyaWJlZCBzaW5jZSB0aGlzIGFzeW5jaHJvbm91c1xyXG4gICAgLy8gZnVuY3Rpb24gaGFkIGJlZW4gcXVldWVkLlxyXG4gICAgT2JzZXJ2ZXJQcm94eS5wcm90b3R5cGUuc2VuZE9uZSA9IGZ1bmN0aW9uIChpLCBmbikge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgLy8gRXhlY3V0ZSB0aGUgY2FsbGJhY2sgYXN5bmNocm9ub3VzbHlcclxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXHJcbiAgICAgICAgdGhpcy50YXNrLnRoZW4oZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBpZiAoX3RoaXMub2JzZXJ2ZXJzICE9PSB1bmRlZmluZWQgJiYgX3RoaXMub2JzZXJ2ZXJzW2ldICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm4oX3RoaXMub2JzZXJ2ZXJzW2ldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGNhdGNoIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gSWdub3JlIGV4Y2VwdGlvbnMgcmFpc2VkIGluIE9ic2VydmVycyBvciBtaXNzaW5nIG1ldGhvZHMgb2YgYW5cclxuICAgICAgICAgICAgICAgICAgICAvLyBPYnNlcnZlci5cclxuICAgICAgICAgICAgICAgICAgICAvLyBMb2cgZXJyb3IgdG8gY29uc29sZS4gYi8zMTQwNDgwNlxyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcgJiYgY29uc29sZS5lcnJvcikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxuICAgIE9ic2VydmVyUHJveHkucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24gKGVycikge1xyXG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XHJcbiAgICAgICAgaWYgKHRoaXMuZmluYWxpemVkKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5maW5hbGl6ZWQgPSB0cnVlO1xyXG4gICAgICAgIGlmIChlcnIgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICB0aGlzLmZpbmFsRXJyb3IgPSBlcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIFByb3h5IGlzIG5vIGxvbmdlciBuZWVkZWQgLSBnYXJiYWdlIGNvbGxlY3QgcmVmZXJlbmNlc1xyXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZmxvYXRpbmctcHJvbWlzZXNcclxuICAgICAgICB0aGlzLnRhc2sudGhlbihmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIF90aGlzLm9ic2VydmVycyA9IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgX3RoaXMub25Ob09ic2VydmVycyA9IHVuZGVmaW5lZDtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICByZXR1cm4gT2JzZXJ2ZXJQcm94eTtcclxufSgpKTtcclxuLyoqIFR1cm4gc3luY2hyb25vdXMgZnVuY3Rpb24gaW50byBvbmUgY2FsbGVkIGFzeW5jaHJvbm91c2x5LiAqL1xyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlc1xyXG5mdW5jdGlvbiBhc3luYyhmbiwgb25FcnJvcikge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICB2YXIgYXJncyA9IFtdO1xyXG4gICAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBhcmd1bWVudHMubGVuZ3RoOyBfaSsrKSB7XHJcbiAgICAgICAgICAgIGFyZ3NbX2ldID0gYXJndW1lbnRzW19pXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgUHJvbWlzZS5yZXNvbHZlKHRydWUpXHJcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZm4uYXBwbHkodm9pZCAwLCBhcmdzKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goZnVuY3Rpb24gKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGlmIChvbkVycm9yKSB7XHJcbiAgICAgICAgICAgICAgICBvbkVycm9yKGVycm9yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfTtcclxufVxyXG4vKipcclxuICogUmV0dXJuIHRydWUgaWYgdGhlIG9iamVjdCBwYXNzZWQgaW4gaW1wbGVtZW50cyBhbnkgb2YgdGhlIG5hbWVkIG1ldGhvZHMuXHJcbiAqL1xyXG5mdW5jdGlvbiBpbXBsZW1lbnRzQW55TWV0aG9kcyhvYmosIG1ldGhvZHMpIHtcclxuICAgIGlmICh0eXBlb2Ygb2JqICE9PSAnb2JqZWN0JyB8fCBvYmogPT09IG51bGwpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBmb3IgKHZhciBfaSA9IDAsIG1ldGhvZHNfMSA9IG1ldGhvZHM7IF9pIDwgbWV0aG9kc18xLmxlbmd0aDsgX2krKykge1xyXG4gICAgICAgIHZhciBtZXRob2QgPSBtZXRob2RzXzFbX2ldO1xyXG4gICAgICAgIGlmIChtZXRob2QgaW4gb2JqICYmIHR5cGVvZiBvYmpbbWV0aG9kXSA9PT0gJ2Z1bmN0aW9uJykge1xyXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbn1cclxuZnVuY3Rpb24gbm9vcCgpIHtcclxuICAgIC8vIGRvIG5vdGhpbmdcclxufVxuXG4vKipcclxuICogQGxpY2Vuc2VcclxuICogQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQ1xyXG4gKlxyXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xyXG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXHJcbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxyXG4gKlxyXG4gKiAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxyXG4gKlxyXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXHJcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcclxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXHJcbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG4vKipcclxuICogQ2hlY2sgdG8gbWFrZSBzdXJlIHRoZSBhcHByb3ByaWF0ZSBudW1iZXIgb2YgYXJndW1lbnRzIGFyZSBwcm92aWRlZCBmb3IgYSBwdWJsaWMgZnVuY3Rpb24uXHJcbiAqIFRocm93cyBhbiBlcnJvciBpZiBpdCBmYWlscy5cclxuICpcclxuICogQHBhcmFtIGZuTmFtZSBUaGUgZnVuY3Rpb24gbmFtZVxyXG4gKiBAcGFyYW0gbWluQ291bnQgVGhlIG1pbmltdW0gbnVtYmVyIG9mIGFyZ3VtZW50cyB0byBhbGxvdyBmb3IgdGhlIGZ1bmN0aW9uIGNhbGxcclxuICogQHBhcmFtIG1heENvdW50IFRoZSBtYXhpbXVtIG51bWJlciBvZiBhcmd1bWVudCB0byBhbGxvdyBmb3IgdGhlIGZ1bmN0aW9uIGNhbGxcclxuICogQHBhcmFtIGFyZ0NvdW50IFRoZSBhY3R1YWwgbnVtYmVyIG9mIGFyZ3VtZW50cyBwcm92aWRlZC5cclxuICovXHJcbnZhciB2YWxpZGF0ZUFyZ0NvdW50ID0gZnVuY3Rpb24gKGZuTmFtZSwgbWluQ291bnQsIG1heENvdW50LCBhcmdDb3VudCkge1xyXG4gICAgdmFyIGFyZ0Vycm9yO1xyXG4gICAgaWYgKGFyZ0NvdW50IDwgbWluQ291bnQpIHtcclxuICAgICAgICBhcmdFcnJvciA9ICdhdCBsZWFzdCAnICsgbWluQ291bnQ7XHJcbiAgICB9XHJcbiAgICBlbHNlIGlmIChhcmdDb3VudCA+IG1heENvdW50KSB7XHJcbiAgICAgICAgYXJnRXJyb3IgPSBtYXhDb3VudCA9PT0gMCA/ICdub25lJyA6ICdubyBtb3JlIHRoYW4gJyArIG1heENvdW50O1xyXG4gICAgfVxyXG4gICAgaWYgKGFyZ0Vycm9yKSB7XHJcbiAgICAgICAgdmFyIGVycm9yID0gZm5OYW1lICtcclxuICAgICAgICAgICAgJyBmYWlsZWQ6IFdhcyBjYWxsZWQgd2l0aCAnICtcclxuICAgICAgICAgICAgYXJnQ291bnQgK1xyXG4gICAgICAgICAgICAoYXJnQ291bnQgPT09IDEgPyAnIGFyZ3VtZW50LicgOiAnIGFyZ3VtZW50cy4nKSArXHJcbiAgICAgICAgICAgICcgRXhwZWN0cyAnICtcclxuICAgICAgICAgICAgYXJnRXJyb3IgK1xyXG4gICAgICAgICAgICAnLic7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yKTtcclxuICAgIH1cclxufTtcclxuLyoqXHJcbiAqIEdlbmVyYXRlcyBhIHN0cmluZyB0byBwcmVmaXggYW4gZXJyb3IgbWVzc2FnZSBhYm91dCBmYWlsZWQgYXJndW1lbnQgdmFsaWRhdGlvblxyXG4gKlxyXG4gKiBAcGFyYW0gZm5OYW1lIFRoZSBmdW5jdGlvbiBuYW1lXHJcbiAqIEBwYXJhbSBhcmdOYW1lIFRoZSBuYW1lIG9mIHRoZSBhcmd1bWVudFxyXG4gKiBAcmV0dXJuIFRoZSBwcmVmaXggdG8gYWRkIHRvIHRoZSBlcnJvciB0aHJvd24gZm9yIHZhbGlkYXRpb24uXHJcbiAqL1xyXG5mdW5jdGlvbiBlcnJvclByZWZpeChmbk5hbWUsIGFyZ05hbWUpIHtcclxuICAgIHJldHVybiBmbk5hbWUgKyBcIiBmYWlsZWQ6IFwiICsgYXJnTmFtZSArIFwiIGFyZ3VtZW50IFwiO1xyXG59XHJcbi8qKlxyXG4gKiBAcGFyYW0gZm5OYW1lXHJcbiAqIEBwYXJhbSBhcmd1bWVudE51bWJlclxyXG4gKiBAcGFyYW0gbmFtZXNwYWNlXHJcbiAqIEBwYXJhbSBvcHRpb25hbFxyXG4gKi9cclxuZnVuY3Rpb24gdmFsaWRhdGVOYW1lc3BhY2UoZm5OYW1lLCBuYW1lc3BhY2UsIG9wdGlvbmFsKSB7XHJcbiAgICBpZiAob3B0aW9uYWwgJiYgIW5hbWVzcGFjZSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmICh0eXBlb2YgbmFtZXNwYWNlICE9PSAnc3RyaW5nJykge1xyXG4gICAgICAgIC8vVE9ETzogSSBzaG91bGQgZG8gbW9yZSB2YWxpZGF0aW9uIGhlcmUuIFdlIG9ubHkgYWxsb3cgY2VydGFpbiBjaGFycyBpbiBuYW1lc3BhY2VzLlxyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihlcnJvclByZWZpeChmbk5hbWUsICduYW1lc3BhY2UnKSArICdtdXN0IGJlIGEgdmFsaWQgZmlyZWJhc2UgbmFtZXNwYWNlLicpO1xyXG4gICAgfVxyXG59XHJcbmZ1bmN0aW9uIHZhbGlkYXRlQ2FsbGJhY2soZm5OYW1lLCBhcmd1bWVudE5hbWUsIFxyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlc1xyXG5jYWxsYmFjaywgb3B0aW9uYWwpIHtcclxuICAgIGlmIChvcHRpb25hbCAmJiAhY2FsbGJhY2spIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBpZiAodHlwZW9mIGNhbGxiYWNrICE9PSAnZnVuY3Rpb24nKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yUHJlZml4KGZuTmFtZSwgYXJndW1lbnROYW1lKSArICdtdXN0IGJlIGEgdmFsaWQgZnVuY3Rpb24uJyk7XHJcbiAgICB9XHJcbn1cclxuZnVuY3Rpb24gdmFsaWRhdGVDb250ZXh0T2JqZWN0KGZuTmFtZSwgYXJndW1lbnROYW1lLCBjb250ZXh0LCBvcHRpb25hbCkge1xyXG4gICAgaWYgKG9wdGlvbmFsICYmICFjb250ZXh0KSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgaWYgKHR5cGVvZiBjb250ZXh0ICE9PSAnb2JqZWN0JyB8fCBjb250ZXh0ID09PSBudWxsKSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yUHJlZml4KGZuTmFtZSwgYXJndW1lbnROYW1lKSArICdtdXN0IGJlIGEgdmFsaWQgY29udGV4dCBvYmplY3QuJyk7XHJcbiAgICB9XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDE3IEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLy8gQ29kZSBvcmlnaW5hbGx5IGNhbWUgZnJvbSBnb29nLmNyeXB0LnN0cmluZ1RvVXRmOEJ5dGVBcnJheSwgYnV0IGZvciBzb21lIHJlYXNvbiB0aGV5XHJcbi8vIGF1dG9tYXRpY2FsbHkgcmVwbGFjZWQgJ1xcclxcbicgd2l0aCAnXFxuJywgYW5kIHRoZXkgZGlkbid0IGhhbmRsZSBzdXJyb2dhdGUgcGFpcnMsXHJcbi8vIHNvIGl0J3MgYmVlbiBtb2RpZmllZC5cclxuLy8gTm90ZSB0aGF0IG5vdCBhbGwgVW5pY29kZSBjaGFyYWN0ZXJzIGFwcGVhciBhcyBzaW5nbGUgY2hhcmFjdGVycyBpbiBKYXZhU2NyaXB0IHN0cmluZ3MuXHJcbi8vIGZyb21DaGFyQ29kZSByZXR1cm5zIHRoZSBVVEYtMTYgZW5jb2Rpbmcgb2YgYSBjaGFyYWN0ZXIgLSBzbyBzb21lIFVuaWNvZGUgY2hhcmFjdGVyc1xyXG4vLyB1c2UgMiBjaGFyYWN0ZXJzIGluIEphdmFzY3JpcHQuICBBbGwgNC1ieXRlIFVURi04IGNoYXJhY3RlcnMgYmVnaW4gd2l0aCBhIGZpcnN0XHJcbi8vIGNoYXJhY3RlciBpbiB0aGUgcmFuZ2UgMHhEODAwIC0gMHhEQkZGICh0aGUgZmlyc3QgY2hhcmFjdGVyIG9mIGEgc28tY2FsbGVkIHN1cnJvZ2F0ZVxyXG4vLyBwYWlyKS5cclxuLy8gU2VlIGh0dHA6Ly93d3cuZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi81LjEvI3NlYy0xNS4xLjNcclxuLyoqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJcclxuICogQHJldHVybiB7QXJyYXl9XHJcbiAqL1xyXG52YXIgc3RyaW5nVG9CeXRlQXJyYXkkMSA9IGZ1bmN0aW9uIChzdHIpIHtcclxuICAgIHZhciBvdXQgPSBbXTtcclxuICAgIHZhciBwID0gMDtcclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgdmFyIGMgPSBzdHIuY2hhckNvZGVBdChpKTtcclxuICAgICAgICAvLyBJcyB0aGlzIHRoZSBsZWFkIHN1cnJvZ2F0ZSBpbiBhIHN1cnJvZ2F0ZSBwYWlyP1xyXG4gICAgICAgIGlmIChjID49IDB4ZDgwMCAmJiBjIDw9IDB4ZGJmZikge1xyXG4gICAgICAgICAgICB2YXIgaGlnaCA9IGMgLSAweGQ4MDA7IC8vIHRoZSBoaWdoIDEwIGJpdHMuXHJcbiAgICAgICAgICAgIGkrKztcclxuICAgICAgICAgICAgYXNzZXJ0KGkgPCBzdHIubGVuZ3RoLCAnU3Vycm9nYXRlIHBhaXIgbWlzc2luZyB0cmFpbCBzdXJyb2dhdGUuJyk7XHJcbiAgICAgICAgICAgIHZhciBsb3cgPSBzdHIuY2hhckNvZGVBdChpKSAtIDB4ZGMwMDsgLy8gdGhlIGxvdyAxMCBiaXRzLlxyXG4gICAgICAgICAgICBjID0gMHgxMDAwMCArIChoaWdoIDw8IDEwKSArIGxvdztcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGMgPCAxMjgpIHtcclxuICAgICAgICAgICAgb3V0W3ArK10gPSBjO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChjIDwgMjA0OCkge1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IChjID4+IDYpIHwgMTkyO1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChjIDwgNjU1MzYpIHtcclxuICAgICAgICAgICAgb3V0W3ArK10gPSAoYyA+PiAxMikgfCAyMjQ7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKChjID4+IDYpICYgNjMpIHwgMTI4O1xyXG4gICAgICAgICAgICBvdXRbcCsrXSA9IChjICYgNjMpIHwgMTI4O1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgb3V0W3ArK10gPSAoYyA+PiAxOCkgfCAyNDA7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKChjID4+IDEyKSAmIDYzKSB8IDEyODtcclxuICAgICAgICAgICAgb3V0W3ArK10gPSAoKGMgPj4gNikgJiA2MykgfCAxMjg7XHJcbiAgICAgICAgICAgIG91dFtwKytdID0gKGMgJiA2MykgfCAxMjg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIG91dDtcclxufTtcclxuLyoqXHJcbiAqIENhbGN1bGF0ZSBsZW5ndGggd2l0aG91dCBhY3R1YWxseSBjb252ZXJ0aW5nOyB1c2VmdWwgZm9yIGRvaW5nIGNoZWFwZXIgdmFsaWRhdGlvbi5cclxuICogQHBhcmFtIHtzdHJpbmd9IHN0clxyXG4gKiBAcmV0dXJuIHtudW1iZXJ9XHJcbiAqL1xyXG52YXIgc3RyaW5nTGVuZ3RoID0gZnVuY3Rpb24gKHN0cikge1xyXG4gICAgdmFyIHAgPSAwO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICB2YXIgYyA9IHN0ci5jaGFyQ29kZUF0KGkpO1xyXG4gICAgICAgIGlmIChjIDwgMTI4KSB7XHJcbiAgICAgICAgICAgIHArKztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoYyA8IDIwNDgpIHtcclxuICAgICAgICAgICAgcCArPSAyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChjID49IDB4ZDgwMCAmJiBjIDw9IDB4ZGJmZikge1xyXG4gICAgICAgICAgICAvLyBMZWFkIHN1cnJvZ2F0ZSBvZiBhIHN1cnJvZ2F0ZSBwYWlyLiAgVGhlIHBhaXIgdG9nZXRoZXIgd2lsbCB0YWtlIDQgYnl0ZXMgdG8gcmVwcmVzZW50LlxyXG4gICAgICAgICAgICBwICs9IDQ7XHJcbiAgICAgICAgICAgIGkrKzsgLy8gc2tpcCB0cmFpbCBzdXJyb2dhdGUuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBwICs9IDM7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHA7XHJcbn07XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbi8qKlxyXG4gKiBUaGUgYW1vdW50IG9mIG1pbGxpc2Vjb25kcyB0byBleHBvbmVudGlhbGx5IGluY3JlYXNlLlxyXG4gKi9cclxudmFyIERFRkFVTFRfSU5URVJWQUxfTUlMTElTID0gMTAwMDtcclxuLyoqXHJcbiAqIFRoZSBmYWN0b3IgdG8gYmFja29mZiBieS5cclxuICogU2hvdWxkIGJlIGEgbnVtYmVyIGdyZWF0ZXIgdGhhbiAxLlxyXG4gKi9cclxudmFyIERFRkFVTFRfQkFDS09GRl9GQUNUT1IgPSAyO1xyXG4vKipcclxuICogVGhlIG1heGltdW0gbWlsbGlzZWNvbmRzIHRvIGluY3JlYXNlIHRvLlxyXG4gKlxyXG4gKiA8cD5WaXNpYmxlIGZvciB0ZXN0aW5nXHJcbiAqL1xyXG52YXIgTUFYX1ZBTFVFX01JTExJUyA9IDQgKiA2MCAqIDYwICogMTAwMDsgLy8gRm91ciBob3VycywgbGlrZSBpT1MgYW5kIEFuZHJvaWQuXHJcbi8qKlxyXG4gKiBUaGUgcGVyY2VudGFnZSBvZiBiYWNrb2ZmIHRpbWUgdG8gcmFuZG9taXplIGJ5LlxyXG4gKiBTZWVcclxuICogaHR0cDovL2dvL3NhZmUtY2xpZW50LWJlaGF2aW9yI3N0ZXAtMS1kZXRlcm1pbmUtdGhlLWFwcHJvcHJpYXRlLXJldHJ5LWludGVydmFsLXRvLWhhbmRsZS1zcGlrZS10cmFmZmljXHJcbiAqIGZvciBjb250ZXh0LlxyXG4gKlxyXG4gKiA8cD5WaXNpYmxlIGZvciB0ZXN0aW5nXHJcbiAqL1xyXG52YXIgUkFORE9NX0ZBQ1RPUiA9IDAuNTtcclxuLyoqXHJcbiAqIEJhc2VkIG9uIHRoZSBiYWNrb2ZmIG1ldGhvZCBmcm9tXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9nb29nbGUvY2xvc3VyZS1saWJyYXJ5L2Jsb2IvbWFzdGVyL2Nsb3N1cmUvZ29vZy9tYXRoL2V4cG9uZW50aWFsYmFja29mZi5qcy5cclxuICogRXh0cmFjdGVkIGhlcmUgc28gd2UgZG9uJ3QgbmVlZCB0byBwYXNzIG1ldGFkYXRhIGFuZCBhIHN0YXRlZnVsIEV4cG9uZW50aWFsQmFja29mZiBvYmplY3QgYXJvdW5kLlxyXG4gKi9cclxuZnVuY3Rpb24gY2FsY3VsYXRlQmFja29mZk1pbGxpcyhiYWNrb2ZmQ291bnQsIGludGVydmFsTWlsbGlzLCBiYWNrb2ZmRmFjdG9yKSB7XHJcbiAgICBpZiAoaW50ZXJ2YWxNaWxsaXMgPT09IHZvaWQgMCkgeyBpbnRlcnZhbE1pbGxpcyA9IERFRkFVTFRfSU5URVJWQUxfTUlMTElTOyB9XHJcbiAgICBpZiAoYmFja29mZkZhY3RvciA9PT0gdm9pZCAwKSB7IGJhY2tvZmZGYWN0b3IgPSBERUZBVUxUX0JBQ0tPRkZfRkFDVE9SOyB9XHJcbiAgICAvLyBDYWxjdWxhdGVzIGFuIGV4cG9uZW50aWFsbHkgaW5jcmVhc2luZyB2YWx1ZS5cclxuICAgIC8vIERldmlhdGlvbjogY2FsY3VsYXRlcyB2YWx1ZSBmcm9tIGNvdW50IGFuZCBhIGNvbnN0YW50IGludGVydmFsLCBzbyB3ZSBvbmx5IG5lZWQgdG8gc2F2ZSB2YWx1ZVxyXG4gICAgLy8gYW5kIGNvdW50IHRvIHJlc3RvcmUgc3RhdGUuXHJcbiAgICB2YXIgY3VyckJhc2VWYWx1ZSA9IGludGVydmFsTWlsbGlzICogTWF0aC5wb3coYmFja29mZkZhY3RvciwgYmFja29mZkNvdW50KTtcclxuICAgIC8vIEEgcmFuZG9tIFwiZnV6elwiIHRvIGF2b2lkIHdhdmVzIG9mIHJldHJpZXMuXHJcbiAgICAvLyBEZXZpYXRpb246IHJhbmRvbUZhY3RvciBpcyByZXF1aXJlZC5cclxuICAgIHZhciByYW5kb21XYWl0ID0gTWF0aC5yb3VuZChcclxuICAgIC8vIEEgZnJhY3Rpb24gb2YgdGhlIGJhY2tvZmYgdmFsdWUgdG8gYWRkL3N1YnRyYWN0LlxyXG4gICAgLy8gRGV2aWF0aW9uOiBjaGFuZ2VzIG11bHRpcGxpY2F0aW9uIG9yZGVyIHRvIGltcHJvdmUgcmVhZGFiaWxpdHkuXHJcbiAgICBSQU5ET01fRkFDVE9SICpcclxuICAgICAgICBjdXJyQmFzZVZhbHVlICpcclxuICAgICAgICAvLyBBIHJhbmRvbSBmbG9hdCAocm91bmRlZCB0byBpbnQgYnkgTWF0aC5yb3VuZCBhYm92ZSkgaW4gdGhlIHJhbmdlIFstMSwgMV0uIERldGVybWluZXNcclxuICAgICAgICAvLyBpZiB3ZSBhZGQgb3Igc3VidHJhY3QuXHJcbiAgICAgICAgKE1hdGgucmFuZG9tKCkgLSAwLjUpICpcclxuICAgICAgICAyKTtcclxuICAgIC8vIExpbWl0cyBiYWNrb2ZmIHRvIG1heCB0byBhdm9pZCBlZmZlY3RpdmVseSBwZXJtYW5lbnQgYmFja29mZi5cclxuICAgIHJldHVybiBNYXRoLm1pbihNQVhfVkFMVUVfTUlMTElTLCBjdXJyQmFzZVZhbHVlICsgcmFuZG9tV2FpdCk7XHJcbn1cblxuLyoqXHJcbiAqIEBsaWNlbnNlXHJcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcclxuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxyXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcclxuICpcclxuICogICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXHJcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxyXG4gKi9cclxuLyoqXHJcbiAqIFByb3ZpZGUgRW5nbGlzaCBvcmRpbmFsIGxldHRlcnMgYWZ0ZXIgYSBudW1iZXJcclxuICovXHJcbmZ1bmN0aW9uIG9yZGluYWwoaSkge1xyXG4gICAgaWYgKCFOdW1iZXIuaXNGaW5pdGUoaSkpIHtcclxuICAgICAgICByZXR1cm4gXCJcIiArIGk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gaSArIGluZGljYXRvcihpKTtcclxufVxyXG5mdW5jdGlvbiBpbmRpY2F0b3IoaSkge1xyXG4gICAgaSA9IE1hdGguYWJzKGkpO1xyXG4gICAgdmFyIGNlbnQgPSBpICUgMTAwO1xyXG4gICAgaWYgKGNlbnQgPj0gMTAgJiYgY2VudCA8PSAyMCkge1xyXG4gICAgICAgIHJldHVybiAndGgnO1xyXG4gICAgfVxyXG4gICAgdmFyIGRlYyA9IGkgJSAxMDtcclxuICAgIGlmIChkZWMgPT09IDEpIHtcclxuICAgICAgICByZXR1cm4gJ3N0JztcclxuICAgIH1cclxuICAgIGlmIChkZWMgPT09IDIpIHtcclxuICAgICAgICByZXR1cm4gJ25kJztcclxuICAgIH1cclxuICAgIGlmIChkZWMgPT09IDMpIHtcclxuICAgICAgICByZXR1cm4gJ3JkJztcclxuICAgIH1cclxuICAgIHJldHVybiAndGgnO1xyXG59XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAyMSBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmZ1bmN0aW9uIGdldE1vZHVsYXJJbnN0YW5jZShzZXJ2aWNlKSB7XHJcbiAgICBpZiAoc2VydmljZSAmJiBzZXJ2aWNlLl9kZWxlZ2F0ZSkge1xyXG4gICAgICAgIHJldHVybiBzZXJ2aWNlLl9kZWxlZ2F0ZTtcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBzZXJ2aWNlO1xyXG4gICAgfVxyXG59XG5cbmV4cG9ydCB7IENPTlNUQU5UUywgRGVmZXJyZWQsIEVycm9yRmFjdG9yeSwgRmlyZWJhc2VFcnJvciwgTUFYX1ZBTFVFX01JTExJUywgUkFORE9NX0ZBQ1RPUiwgU2hhMSwgYXJlQ29va2llc0VuYWJsZWQsIGFzc2VydCwgYXNzZXJ0aW9uRXJyb3IsIGFzeW5jLCBiYXNlNjQsIGJhc2U2NERlY29kZSwgYmFzZTY0RW5jb2RlLCBjYWxjdWxhdGVCYWNrb2ZmTWlsbGlzLCBjb250YWlucywgY3JlYXRlU3Vic2NyaWJlLCBkZWNvZGUsIGRlZXBDb3B5LCBkZWVwRXh0ZW5kLCBlcnJvclByZWZpeCwgZXh0cmFjdFF1ZXJ5c3RyaW5nLCBnZXRNb2R1bGFySW5zdGFuY2UsIGdldFVBLCBpc0FkbWluLCBpc0Jyb3dzZXIsIGlzQnJvd3NlckV4dGVuc2lvbiwgaXNFbGVjdHJvbiwgaXNFbXB0eSwgaXNJRSwgaXNJbmRleGVkREJBdmFpbGFibGUsIGlzTW9iaWxlQ29yZG92YSwgaXNOb2RlLCBpc05vZGVTZGssIGlzUmVhY3ROYXRpdmUsIGlzU2FmYXJpLCBpc1VXUCwgaXNWYWxpZEZvcm1hdCwgaXNWYWxpZFRpbWVzdGFtcCwgaXNzdWVkQXRUaW1lLCBqc29uRXZhbCwgbWFwLCBvcmRpbmFsLCBxdWVyeXN0cmluZywgcXVlcnlzdHJpbmdEZWNvZGUsIHNhZmVHZXQsIHN0cmluZ0xlbmd0aCwgc3RyaW5nVG9CeXRlQXJyYXkkMSBhcyBzdHJpbmdUb0J5dGVBcnJheSwgc3RyaW5naWZ5LCB2YWxpZGF0ZUFyZ0NvdW50LCB2YWxpZGF0ZUNhbGxiYWNrLCB2YWxpZGF0ZUNvbnRleHRPYmplY3QsIHZhbGlkYXRlSW5kZXhlZERCT3BlbmFibGUsIHZhbGlkYXRlTmFtZXNwYWNlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lc20uanMubWFwXG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxcbiAgIHYyLjAgfCAyMDExMDEyNlxcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXFxuKi9cXG5cXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcXG5iLCB1LCBpLCBjZW50ZXIsXFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgXFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBcXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xcblxcdG1hcmdpbjogMDtcXG5cXHRwYWRkaW5nOiAwO1xcblxcdGJvcmRlcjogMDtcXG5cXHRmb250LXNpemU6IDEwMCU7XFxuXFx0Zm9udDogaW5oZXJpdDtcXG5cXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xcblxcdGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5ib2R5IHtcXG5cXHRsaW5lLWhlaWdodDogMTtcXG59XFxub2wsIHVsIHtcXG5cXHRsaXN0LXN0eWxlOiBub25lO1xcbn1cXG5ibG9ja3F1b3RlLCBxIHtcXG5cXHRxdW90ZXM6IG5vbmU7XFxufVxcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxcbnE6YmVmb3JlLCBxOmFmdGVyIHtcXG5cXHRjb250ZW50OiAnJztcXG5cXHRjb250ZW50OiBub25lO1xcbn1cXG50YWJsZSB7XFxuXFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXG5cXHRib3JkZXItc3BhY2luZzogMDtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9yZXNldC5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7OztDQUdDOztBQUVEOzs7Ozs7Ozs7Ozs7O0NBYUMsU0FBUztDQUNULFVBQVU7Q0FDVixTQUFTO0NBQ1QsZUFBZTtDQUNmLGFBQWE7Q0FDYix3QkFBd0I7QUFDekI7QUFDQSxnREFBZ0Q7QUFDaEQ7O0NBRUMsY0FBYztBQUNmO0FBQ0E7Q0FDQyxjQUFjO0FBQ2Y7QUFDQTtDQUNDLGdCQUFnQjtBQUNqQjtBQUNBO0NBQ0MsWUFBWTtBQUNiO0FBQ0E7O0NBRUMsV0FBVztDQUNYLGFBQWE7QUFDZDtBQUNBO0NBQ0MseUJBQXlCO0NBQ3pCLGlCQUFpQjtBQUNsQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyBcXG4gICB2Mi4wIHwgMjAxMTAxMjZcXG4gICBMaWNlbnNlOiBub25lIChwdWJsaWMgZG9tYWluKVxcbiovXFxuXFxuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXFxuZGVsLCBkZm4sIGVtLCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXFxuYiwgdSwgaSwgY2VudGVyLFxcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXFxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXFxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQsXFxuYXJ0aWNsZSwgYXNpZGUsIGNhbnZhcywgZGV0YWlscywgZW1iZWQsIFxcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgXFxubWVudSwgbmF2LCBvdXRwdXQsIHJ1YnksIHNlY3Rpb24sIHN1bW1hcnksXFxudGltZSwgbWFyaywgYXVkaW8sIHZpZGVvIHtcXG5cXHRtYXJnaW46IDA7XFxuXFx0cGFkZGluZzogMDtcXG5cXHRib3JkZXI6IDA7XFxuXFx0Zm9udC1zaXplOiAxMDAlO1xcblxcdGZvbnQ6IGluaGVyaXQ7XFxuXFx0dmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xcbn1cXG4vKiBIVE1MNSBkaXNwbGF5LXJvbGUgcmVzZXQgZm9yIG9sZGVyIGJyb3dzZXJzICovXFxuYXJ0aWNsZSwgYXNpZGUsIGRldGFpbHMsIGZpZ2NhcHRpb24sIGZpZ3VyZSwgXFxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcXG5cXHRkaXNwbGF5OiBibG9jaztcXG59XFxuYm9keSB7XFxuXFx0bGluZS1oZWlnaHQ6IDE7XFxufVxcbm9sLCB1bCB7XFxuXFx0bGlzdC1zdHlsZTogbm9uZTtcXG59XFxuYmxvY2txdW90ZSwgcSB7XFxuXFx0cXVvdGVzOiBub25lO1xcbn1cXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcXG5xOmJlZm9yZSwgcTphZnRlciB7XFxuXFx0Y29udGVudDogJyc7XFxuXFx0Y29udGVudDogbm9uZTtcXG59XFxudGFibGUge1xcblxcdGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XFxuXFx0Ym9yZGVyLXNwYWNpbmc6IDA7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gZnJvbSBcIi4uL2ltZ3MveC1pY29uLnN2Z1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC0tY29sLWJhc2UtbGlnaHQ6ICNjNWVkZmY7XFxuICAtLWNvbC1iYXNlLW1pZDogIzkzYmZkMztcXG4gIC0tY29sLWJhc2UtbWlkMjogIzcyOWRiMTtcXG4gIC0tY29sLWJhc2UtZGFyazogIzQyNzU5NztcXG4gIC0tY29sLWRhcmtlc3Q6ICMwMDA7XFxuICAtLWNvbC1saWdodDogI2ZmZmZmZjtcXG4gIC0tY29sLWJ0bi1saWdodDogcmdiKDQ2LCAxNDksIDIwOSk7XFxuICAtLWNvbC1idG4tbWlkOiByZ2IoMzAsIDEzOCwgMjAxKTtcXG4gIC0tY29sLWJ0bi1kYXJrOiByZ2IoMjMsIDg5LCAxNzUpO1xcblxcbiAgLS1jYXJkLXNjYWxlOiAuM2VtO1xcblxcbiAgLS10cmFuc2l0aW9uLXNwZWVkOiAuM3M7XFxufVxcbmh0bWwge1xcbiAgaGVpZ2h0OjEwMCU7XFxufVxcbmJvZHkge1xcbiAgcG9zaXRpb246cmVsYXRpdmU7XFxuICBtaW4taGVpZ2h0OjEwMCU7XFxuICBtYXgtd2lkdGg6OTAwcHg7XFxuICBtYXJnaW46YXV0bztcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbC1iYXNlLWRhcmspO1xcbiAgY29sb3I6dmFyKC0tY29sLWxpZ2h0KTtcXG4gIGRpc3BsYXk6ZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcXG59XFxuXFxuaDEge1xcbiAgcGFkZGluZzoxMHB4O1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtc2l6ZTogMmVtO1xcbiAgdGV4dC1zaGFkb3c6MnB4IDJweCA0cHggIHJnYigyLCA0NCwgOTkpO1xcbiAgdHJhbnNpdGlvbjp2YXIoLS10cmFuc2l0aW9uLXNwZWVkKTtcXG59XFxuXFxuaDE6OmFmdGVyIHtcXG4gIGRpc3BsYXk6YmxvY2s7XFxuICBjb250ZW50OicnO1xcbiAgbWFyZ2luLXRvcDouMmVtO1xcbiAgYm9yZGVyLWJvdHRvbToxcHggc29saWQgd2hpdGU7XFxufVxcblxcbmgyIHtcXG4gIGZvbnQtd2VpZ2h0OmJvbGQ7XFxuICBtYXJnaW4tYm90dG9tOjFlbTtcXG59XFxuXFxubWFpbi5jYXJkIHtcXG4gIG1hcmdpbi1ib3R0b206MmVtO1xcbn1cXG5cXG5mb290ZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgYm90dG9tOjA7XFxuICBwYWRkaW5nOi41ZW07XFxufVxcblxcbmZvcm0ge1xcbiAgbWFyZ2luOjAgLjVlbSAwIC41ZW07XFxufVxcblxcbmJ1dHRvbiB7XFxuICBhcHBlYXJhbmNlOm5vbmU7XFxuICBkaXNwbGF5OmJsb2NrO1xcbiAgbWFyZ2luOi4zZW07XFxuICBwYWRkaW5nOi4zZW0gLjZlbTtcXG4gIGJvcmRlcjpub25lO1xcbiAgZm9udC1zaXplOjEuMmVtO1xcbiAgY29sb3I6dmFyKC0tY29sLWxpZ2h0KTtcXG4gIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCB2YXIoLS1jb2wtYnRuLWRhcmspO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgYmFja2dyb3VuZDp2YXIoLS1jb2wtYnRuLW1pZCk7XFxufVxcblxcbmJ1dHRvbjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kOnZhcigtLWNvbC1idG4tbGlnaHQpO1xcbn1cXG5cXG5idXR0b246Zm9jdXMge1xcbiAgb3V0bGluZTpub25lO1xcbiAgYm9yZGVyOm5vbmU7XFxuICBib3JkZXItdG9wOiA0cHggc29saWQgdmFyKC0tY29sLWJ0bi1kYXJrKTtcXG4gIGJhY2tncm91bmQ6dmFyKC0tY29sLWJ0bi1kYXJrKTtcXG59XFxuXFxuZm9ybT5idXR0b24ge1xcbiAgbWFyZ2luLXRvcDouN2VtO1xcbn1cXG5cXG5hOnZpc2l0ZWQsIGE6bGluayB7XFxuICBjb2xvcjp2YXIoLS1jb2wtbGlnaHQpO1xcbn1cXG5cXG5iIHtcXG4gIGZvbnQtd2VpZ2h0OmJvbGQ7XFxufVxcblxcbi5jZW50ZXItY2hpbGRyZW4ge1xcbiAgZGlzcGxheTpmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5oaWRkZW4ge1xcbiAgZGlzcGxheTpub25lO1xcbn1cXG5cXG4uY2FyZCB7XFxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcXG4gIGNvbG9yOiB2YXIoLS1jb2wtZGFya2VzdCk7XFxuICBtYXJnaW46IGNhbGModmFyKC0tY2FyZC1zY2FsZSkqMikgdmFyKC0tY2FyZC1zY2FsZSk7XFxuICBwYWRkaW5nOiB2YXIoLS1jYXJkLXNjYWxlKTtcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbC1saWdodCk7XFxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1jYXJkLXNjYWxlKTtcXG4gIGJveC1zaGFkb3c6IDEuNXB4IDEuNXB4IGNhbGModmFyKC0tY2FyZC1zY2FsZSkgKiAuNykgdmFyKC0tY29sLWJhc2UtZGFyayk7XFxufVxcblxcbi5jYXJkLnNlbWktdHJhbnNwYXJlbnQge1xcbiAgYmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LC41KTtcXG59XFxuXFxuLmNhcmQubGlicmFyeS1oZWFkZXIge1xcbiAgZGlzcGxheTpub25lOyAvKiBPbmx5IHZpc2libGUgaWYgc2NyZWVuIHdpZHRoID4gbW9iaWxlICovXFxufVxcblxcbi5ib29rIHtcXG4gIGRpc3BsYXk6ZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcXG59XFxuXFxuLmJvb2stcHJvcCB7XFxuICBtYXJnaW4tcmlnaHQ6MmVtO1xcbiAgcGFkZGluZzouM2VtIDA7XFxufVxcblxcbi5ib29rLXByb3AuYm9vay10aXRsZSB7XFxuICBmb250LXdlaWdodDpib2xkO1xcbn1cXG4uYm9vay1wcm9wLmJvb2stdGl0bGU6OmFmdGVyIHtcXG4gIGNvbnRlbnQ6XFxcIlxcXCI7XFxuICBkaXNwbGF5OmJsb2NrO1xcbiAgYm9yZGVyLXRvcDogc29saWQgMXB4IHZhcigtLWNvbC1iYXNlLWRhcmspOyBcXG59XFxuLmJvb2stcHJvcC5ib29rLWF1dGhvcjo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6J2J5ICc7XFxufVxcbi5ib29rLXByb3AuYm9vay1wYWdlQ291bnQ6OmFmdGVyIHtcXG4gIGNvbnRlbnQ6JyBwYWdlcyc7XFxufVxcblxcbi5jb250YWluZXItZm9vdCB7XFxuICBtYXJnaW4tbGVmdDouM2VtO1xcbn1cXG5cXG4vKiAqIE1PREFMICovXFxuLm1vZGFsLWJnIHtcXG4gIHBvc2l0aW9uOmZpeGVkO1xcbiAgei1pbmRleDoxMDtcXG4gIGxlZnQ6MDtcXG4gIHRvcDowO1xcbiAgd2lkdGg6MTAwJTtcXG4gIGhlaWdodDoxMDAlO1xcbiAgb3ZlcmZsb3c6YXV0bztcXG4gIGJhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMik7XFxufVxcblxcbi5tb2RhbCB7XFxuICAvKiBjZW50ZXIgKi9cXG4gIHotaW5kZXg6IDExO1xcbiAgcG9zaXRpb246Zml4ZWQ7XFxuICB0b3A6NTAlO1xcbiAgbGVmdDo1MCU7XFxuICB0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7XFxuXFxuICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XFxuICB3aWR0aDpmaXQtY29udGVudDtcXG4gIG1heC13aWR0aDo5NSU7XFxuICBwYWRkaW5nOiAuN2VtO1xcbiAgcGFkZGluZy1ib3R0b206MDtcXG4gIG1hcmdpbjogMDtcXG5cXG4gIGZvbnQtc2l6ZTogMTUwJTtcXG59XFxuXFxuLm1vZGFsID4gcCB7XFxuICBwYWRkaW5nLXJpZ2h0OjJlbTtcXG59XFxuXFxuLmZvcm0taXRlbSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgbWFyZ2luOiAuNWVtIC4yZW07XFxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcXG59XFxuXFxuLmZvcm0taXRlbSA+IGxhYmVsIHtcXG4gIHBhZGRpbmctcmlnaHQ6LjRlbTtcXG59XFxuXFxuLmNsb3NlLWJ0biB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMDtcXG4gIHRvcDogMDtcXG4gIHdpZHRoOiAxLjVlbTtcXG4gIGhlaWdodDogMS41ZW07XFxuICBtYXJnaW46LjNlbTtcXG4gIGJhY2tncm91bmQ6IHJlZDtcXG4gIGJvcmRlci1yYWRpdXM6NTAlO1xcbiAgY29udGVudDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG4gIHVzZXItc2VsZWN0Om5vbmU7XFxufVxcblxcbi5jbG9zZS1idG46aG92ZXIge1xcbiAgYmFja2dyb3VuZDpyZ2IoMjU1LCA5MywgMTQyKTtcXG4gIHRyYW5zZm9ybTpyb3RhdGUoOTBkZWcpO1xcbiAgdHJhbnNpdGlvbjouM3M7XFxufVxcblxcbi5zd2l0Y2gge1xcbiAgcG9zaXRpb246cmVsYXRpdmU7XFxuICBkaXNwbGF5OmZsZXg7XFxuICBhbGlnbi1pdGVtczpjZW50ZXI7XFxufVxcblxcbi5zd2l0Y2ggaW5wdXQge1xcbiAgZGlzcGxheTpub25lO1xcbn1cXG5cXG4uc3dpdGNoLWxhYmVsIHtcXG4gIHBhZGRpbmctcmlnaHQ6IDFlbTtcXG59XFxuLnN3aXRjaC1zcGFuIHtcXG4gIGJhY2tncm91bmQ6dmFyKC0tY29sLWJhc2UtZGFyayk7XFxuICB3aWR0aDoxLjdlbTtcXG4gIGhlaWdodDoxZW07XFxuICBib3JkZXItcmFkaXVzOi41ZW07XFxufVxcblxcbi5zd2l0Y2gtc3Bhbjo6YmVmb3JlIHtcXG4gIHBvc2l0aW9uOmFic29sdXRlO1xcbiAgYm94LXNpemluZzpib3JkZXItYm94O1xcbiAgY29udGVudDpcXFwiXFxcIjtcXG4gIGhlaWdodDogMWVtO1xcbiAgd2lkdGg6IDFlbTtcXG4gIGJvcmRlcjogLjE1ZW0gc29saWQgdmFyKC0tY29sLWJhc2UtZGFyayk7XFxuICBib3JkZXItcmFkaXVzOjUwJTtcXG4gIGJhY2tncm91bmQ6dmFyKC0tY29sLWJhc2UtbGlnaHQpO1xcbiAgdHJhbnNpdGlvbjogLjFzO1xcbn1cXG5cXG5pbnB1dDpjaGVja2VkICsgLnN3aXRjaC1zcGFuOjpiZWZvcmUge1xcbiAgdHJhbnNmb3JtOnRyYW5zbGF0ZVgoLjdlbSk7XFxuICBiYWNrZ3JvdW5kOmxpZ2h0Z3JlZW47XFxuICBib3JkZXItY29sb3I6IGdyZWVuO1xcbn1cXG5cXG5pbnB1dDpjaGVja2VkICsgLnN3aXRjaC1zcGFuIHtcXG4gIGJhY2tncm91bmQ6IGdyZWVuO1xcbn1cXG5cXG5pbnB1dFt0eXBlPSd0ZXh0J10sIGlucHV0W3R5cGU9J251bWJlciddIHtcXG4gIGFwcGVhcmFuY2U6bm9uZTtcXG4gIGJvcmRlcjoxcHggc29saWQgdmFyKC0tY29sLWRhcmtlc3QpO1xcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xcbn1cXG5cXG4udmFsaWRhdGlvbi1mYWlsZWQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjpyZWQ7XFxuICBhbmltYXRpb24tbmFtZTogYW5pbS1mYWRlO1xcbiAgYW5pbWF0aW9uLWR1cmF0aW9uOiAzcztcXG59XFxuXFxuLmNhcmQuZm9ybS12YWxpZGF0aW9uLWVycm9yIHtcXG4gIHotaW5kZXg6MTU7XFxuICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XFxuICBwb3NpdGlvbjphYnNvbHV0ZTtcXG4gIHRvcDoxLjZlbTtcXG4gIHJpZ2h0OjA7XFxuICBtYXJnaW46MDtcXG4gIGJhY2tncm91bmQ6cmdiKDI0MywgMTc0LCAxNzQpO1xcbiAgZm9udC1zaXplOi43ZW07XFxufVxcblxcbkBrZXlmcmFtZXMgYW5pbS1mYWRlIHtcXG4gIDAlIHsgYmFja2dyb3VuZC1jb2xvcjpyZWQ7IH1cXG4gIDEwMCUgeyBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgfVxcbn1cXG5cXG5AbWVkaWEgKG1pbi13aWR0aDozNWVtKSB7XFxuICBoMSB7XFxuICAgIGZvbnQtc2l6ZTozLjZlbTtcXG4gIH1cXG4gIC5ib29rIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA2ZnIgNWZyIDNmciA0ZnI7XFxuICB9XFxuICAuY2FyZC5saWJyYXJ5LWhlYWRlciB7XFxuICAgIGRpc3BsYXk6Z3JpZDtcXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICB9XFxuICAuY2xvc2UtYnRuIHtcXG4gICAgdG9wOiAwO1xcbiAgfVxcblxcbiAgLmJvb2stcHJvcC5ib29rLWF1dGhvcjo6YmVmb3JlIHtcXG4gICAgY29udGVudDonJztcXG4gIH1cXG5cXG4gIC5ib29rLXByb3AuYm9vay1wYWdlQ291bnQ6OmFmdGVyIHtcXG4gICAgY29udGVudDonJztcXG4gIH1cXG5cXG4gIC5ib29rLXByb3AuYm9vay10aXRsZSB7XFxuICAgIGZvbnQtd2VpZ2h0Om5vcm1hbDtcXG4gIH1cXG5cXG4gIC5ib29rLXByb3AuYm9vay10aXRsZTo6YWZ0ZXIge1xcbiAgICBkaXNwbGF5Om5vbmU7IFxcbiAgfVxcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLHlCQUF5QjtFQUN6Qix1QkFBdUI7RUFDdkIsd0JBQXdCO0VBQ3hCLHdCQUF3QjtFQUN4QixtQkFBbUI7RUFDbkIsb0JBQW9CO0VBQ3BCLGtDQUFrQztFQUNsQyxnQ0FBZ0M7RUFDaEMsZ0NBQWdDOztFQUVoQyxrQkFBa0I7O0VBRWxCLHVCQUF1QjtBQUN6QjtBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsZUFBZTtFQUNmLGVBQWU7RUFDZixXQUFXO0VBQ1gsc0NBQXNDO0VBQ3RDLHNCQUFzQjtFQUN0QixZQUFZO0VBQ1oscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGdC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bkI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsbUNBQW1DO0VBQ25DLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLG9CQUFvQjtFQUNwQix5QkFBeUI7RUFDekIsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLHFCQUFxQjtFQUNyQixpQkFBaUI7RUFDakIsU0FBUztFQUNULE9BQU87RUFDUCxRQUFRO0VBQ1IsNkJBQTZCO0VBQzdCLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxLQUFLLG9CQUFvQixFQUFFO0VBQzNCLE9BQU8sdUJBQXVCLEVBQUU7QUFDbEM7O0FBRUE7RUFDRTtJQUNFLGVBQWU7RUFDakI7RUFDQTtJQUNFLGFBQWE7SUFDYixzQ0FBc0M7RUFDeEM7RUFDQTtJQUNFLFlBQVk7SUFDWixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLE1BQU07RUFDUjs7RUFFQTtJQUNFLFVBQVU7RUFDWjs7RUFFQTtJQUNFLFVBQVU7RUFDWjs7RUFFQTtJQUNFLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFlBQVk7RUFDZDtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIjpyb290IHtcXG4gIC0tY29sLWJhc2UtbGlnaHQ6ICNjNWVkZmY7XFxuICAtLWNvbC1iYXNlLW1pZDogIzkzYmZkMztcXG4gIC0tY29sLWJhc2UtbWlkMjogIzcyOWRiMTtcXG4gIC0tY29sLWJhc2UtZGFyazogIzQyNzU5NztcXG4gIC0tY29sLWRhcmtlc3Q6ICMwMDA7XFxuICAtLWNvbC1saWdodDogI2ZmZmZmZjtcXG4gIC0tY29sLWJ0bi1saWdodDogcmdiKDQ2LCAxNDksIDIwOSk7XFxuICAtLWNvbC1idG4tbWlkOiByZ2IoMzAsIDEzOCwgMjAxKTtcXG4gIC0tY29sLWJ0bi1kYXJrOiByZ2IoMjMsIDg5LCAxNzUpO1xcblxcbiAgLS1jYXJkLXNjYWxlOiAuM2VtO1xcblxcbiAgLS10cmFuc2l0aW9uLXNwZWVkOiAuM3M7XFxufVxcbmh0bWwge1xcbiAgaGVpZ2h0OjEwMCU7XFxufVxcbmJvZHkge1xcbiAgcG9zaXRpb246cmVsYXRpdmU7XFxuICBtaW4taGVpZ2h0OjEwMCU7XFxuICBtYXgtd2lkdGg6OTAwcHg7XFxuICBtYXJnaW46YXV0bztcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWNvbC1iYXNlLWRhcmspO1xcbiAgY29sb3I6dmFyKC0tY29sLWxpZ2h0KTtcXG4gIGRpc3BsYXk6ZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcXG59XFxuXFxuaDEge1xcbiAgcGFkZGluZzoxMHB4O1xcbiAgZm9udC13ZWlnaHQ6IDcwMDtcXG4gIGZvbnQtc2l6ZTogMmVtO1xcbiAgdGV4dC1zaGFkb3c6MnB4IDJweCA0cHggIHJnYigyLCA0NCwgOTkpO1xcbiAgdHJhbnNpdGlvbjp2YXIoLS10cmFuc2l0aW9uLXNwZWVkKTtcXG59XFxuXFxuaDE6OmFmdGVyIHtcXG4gIGRpc3BsYXk6YmxvY2s7XFxuICBjb250ZW50OicnO1xcbiAgbWFyZ2luLXRvcDouMmVtO1xcbiAgYm9yZGVyLWJvdHRvbToxcHggc29saWQgd2hpdGU7XFxufVxcblxcbmgyIHtcXG4gIGZvbnQtd2VpZ2h0OmJvbGQ7XFxuICBtYXJnaW4tYm90dG9tOjFlbTtcXG59XFxuXFxubWFpbi5jYXJkIHtcXG4gIG1hcmdpbi1ib3R0b206MmVtO1xcbn1cXG5cXG5mb290ZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgYm90dG9tOjA7XFxuICBwYWRkaW5nOi41ZW07XFxufVxcblxcbmZvcm0ge1xcbiAgbWFyZ2luOjAgLjVlbSAwIC41ZW07XFxufVxcblxcbmJ1dHRvbiB7XFxuICBhcHBlYXJhbmNlOm5vbmU7XFxuICBkaXNwbGF5OmJsb2NrO1xcbiAgbWFyZ2luOi4zZW07XFxuICBwYWRkaW5nOi4zZW0gLjZlbTtcXG4gIGJvcmRlcjpub25lO1xcbiAgZm9udC1zaXplOjEuMmVtO1xcbiAgY29sb3I6dmFyKC0tY29sLWxpZ2h0KTtcXG4gIGJvcmRlci1ib3R0b206IDRweCBzb2xpZCB2YXIoLS1jb2wtYnRuLWRhcmspO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgYmFja2dyb3VuZDp2YXIoLS1jb2wtYnRuLW1pZCk7XFxufVxcblxcbmJ1dHRvbjpob3ZlciB7XFxuICBiYWNrZ3JvdW5kOnZhcigtLWNvbC1idG4tbGlnaHQpO1xcbn1cXG5cXG5idXR0b246Zm9jdXMge1xcbiAgb3V0bGluZTpub25lO1xcbiAgYm9yZGVyOm5vbmU7XFxuICBib3JkZXItdG9wOiA0cHggc29saWQgdmFyKC0tY29sLWJ0bi1kYXJrKTtcXG4gIGJhY2tncm91bmQ6dmFyKC0tY29sLWJ0bi1kYXJrKTtcXG59XFxuXFxuZm9ybT5idXR0b24ge1xcbiAgbWFyZ2luLXRvcDouN2VtO1xcbn1cXG5cXG5hOnZpc2l0ZWQsIGE6bGluayB7XFxuICBjb2xvcjp2YXIoLS1jb2wtbGlnaHQpO1xcbn1cXG5cXG5iIHtcXG4gIGZvbnQtd2VpZ2h0OmJvbGQ7XFxufVxcblxcbi5jZW50ZXItY2hpbGRyZW4ge1xcbiAgZGlzcGxheTpmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5oaWRkZW4ge1xcbiAgZGlzcGxheTpub25lO1xcbn1cXG5cXG4uY2FyZCB7XFxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcXG4gIGNvbG9yOiB2YXIoLS1jb2wtZGFya2VzdCk7XFxuICBtYXJnaW46IGNhbGModmFyKC0tY2FyZC1zY2FsZSkqMikgdmFyKC0tY2FyZC1zY2FsZSk7XFxuICBwYWRkaW5nOiB2YXIoLS1jYXJkLXNjYWxlKTtcXG4gIGJhY2tncm91bmQ6IHZhcigtLWNvbC1saWdodCk7XFxuICBib3JkZXItcmFkaXVzOiB2YXIoLS1jYXJkLXNjYWxlKTtcXG4gIGJveC1zaGFkb3c6IDEuNXB4IDEuNXB4IGNhbGModmFyKC0tY2FyZC1zY2FsZSkgKiAuNykgdmFyKC0tY29sLWJhc2UtZGFyayk7XFxufVxcblxcbi5jYXJkLnNlbWktdHJhbnNwYXJlbnQge1xcbiAgYmFja2dyb3VuZDpyZ2JhKDI1NSwyNTUsMjU1LC41KTtcXG59XFxuXFxuLmNhcmQubGlicmFyeS1oZWFkZXIge1xcbiAgZGlzcGxheTpub25lOyAvKiBPbmx5IHZpc2libGUgaWYgc2NyZWVuIHdpZHRoID4gbW9iaWxlICovXFxufVxcblxcbi5ib29rIHtcXG4gIGRpc3BsYXk6ZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcXG59XFxuXFxuLmJvb2stcHJvcCB7XFxuICBtYXJnaW4tcmlnaHQ6MmVtO1xcbiAgcGFkZGluZzouM2VtIDA7XFxufVxcblxcbi5ib29rLXByb3AuYm9vay10aXRsZSB7XFxuICBmb250LXdlaWdodDpib2xkO1xcbn1cXG4uYm9vay1wcm9wLmJvb2stdGl0bGU6OmFmdGVyIHtcXG4gIGNvbnRlbnQ6XFxcIlxcXCI7XFxuICBkaXNwbGF5OmJsb2NrO1xcbiAgYm9yZGVyLXRvcDogc29saWQgMXB4IHZhcigtLWNvbC1iYXNlLWRhcmspOyBcXG59XFxuLmJvb2stcHJvcC5ib29rLWF1dGhvcjo6YmVmb3JlIHtcXG4gIGNvbnRlbnQ6J2J5ICc7XFxufVxcbi5ib29rLXByb3AuYm9vay1wYWdlQ291bnQ6OmFmdGVyIHtcXG4gIGNvbnRlbnQ6JyBwYWdlcyc7XFxufVxcblxcbi5jb250YWluZXItZm9vdCB7XFxuICBtYXJnaW4tbGVmdDouM2VtO1xcbn1cXG5cXG4vKiAqIE1PREFMICovXFxuLm1vZGFsLWJnIHtcXG4gIHBvc2l0aW9uOmZpeGVkO1xcbiAgei1pbmRleDoxMDtcXG4gIGxlZnQ6MDtcXG4gIHRvcDowO1xcbiAgd2lkdGg6MTAwJTtcXG4gIGhlaWdodDoxMDAlO1xcbiAgb3ZlcmZsb3c6YXV0bztcXG4gIGJhY2tncm91bmQtY29sb3I6cmdiYSgwLDAsMCwuMik7XFxufVxcblxcbi5tb2RhbCB7XFxuICAvKiBjZW50ZXIgKi9cXG4gIHotaW5kZXg6IDExO1xcbiAgcG9zaXRpb246Zml4ZWQ7XFxuICB0b3A6NTAlO1xcbiAgbGVmdDo1MCU7XFxuICB0cmFuc2Zvcm06dHJhbnNsYXRlKC01MCUsLTUwJSk7XFxuXFxuICBib3gtc2l6aW5nOmJvcmRlci1ib3g7XFxuICB3aWR0aDpmaXQtY29udGVudDtcXG4gIG1heC13aWR0aDo5NSU7XFxuICBwYWRkaW5nOiAuN2VtO1xcbiAgcGFkZGluZy1ib3R0b206MDtcXG4gIG1hcmdpbjogMDtcXG5cXG4gIGZvbnQtc2l6ZTogMTUwJTtcXG59XFxuXFxuLm1vZGFsID4gcCB7XFxuICBwYWRkaW5nLXJpZ2h0OjJlbTtcXG59XFxuXFxuLmZvcm0taXRlbSB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgbWFyZ2luOiAuNWVtIC4yZW07XFxuICBwb3NpdGlvbjpyZWxhdGl2ZTtcXG59XFxuXFxuLmZvcm0taXRlbSA+IGxhYmVsIHtcXG4gIHBhZGRpbmctcmlnaHQ6LjRlbTtcXG59XFxuXFxuLmNsb3NlLWJ0biB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICByaWdodDogMDtcXG4gIHRvcDogMDtcXG4gIHdpZHRoOiAxLjVlbTtcXG4gIGhlaWdodDogMS41ZW07XFxuICBtYXJnaW46LjNlbTtcXG4gIGJhY2tncm91bmQ6IHJlZDtcXG4gIGJvcmRlci1yYWRpdXM6NTAlO1xcbiAgY29udGVudDogdXJsKC4uL2ltZ3MveC1pY29uLnN2Zyk7XFxuICB1c2VyLXNlbGVjdDpub25lO1xcbn1cXG5cXG4uY2xvc2UtYnRuOmhvdmVyIHtcXG4gIGJhY2tncm91bmQ6cmdiKDI1NSwgOTMsIDE0Mik7XFxuICB0cmFuc2Zvcm06cm90YXRlKDkwZGVnKTtcXG4gIHRyYW5zaXRpb246LjNzO1xcbn1cXG5cXG4uc3dpdGNoIHtcXG4gIHBvc2l0aW9uOnJlbGF0aXZlO1xcbiAgZGlzcGxheTpmbGV4O1xcbiAgYWxpZ24taXRlbXM6Y2VudGVyO1xcbn1cXG5cXG4uc3dpdGNoIGlucHV0IHtcXG4gIGRpc3BsYXk6bm9uZTtcXG59XFxuXFxuLnN3aXRjaC1sYWJlbCB7XFxuICBwYWRkaW5nLXJpZ2h0OiAxZW07XFxufVxcbi5zd2l0Y2gtc3BhbiB7XFxuICBiYWNrZ3JvdW5kOnZhcigtLWNvbC1iYXNlLWRhcmspO1xcbiAgd2lkdGg6MS43ZW07XFxuICBoZWlnaHQ6MWVtO1xcbiAgYm9yZGVyLXJhZGl1czouNWVtO1xcbn1cXG5cXG4uc3dpdGNoLXNwYW46OmJlZm9yZSB7XFxuICBwb3NpdGlvbjphYnNvbHV0ZTtcXG4gIGJveC1zaXppbmc6Ym9yZGVyLWJveDtcXG4gIGNvbnRlbnQ6XFxcIlxcXCI7XFxuICBoZWlnaHQ6IDFlbTtcXG4gIHdpZHRoOiAxZW07XFxuICBib3JkZXI6IC4xNWVtIHNvbGlkIHZhcigtLWNvbC1iYXNlLWRhcmspO1xcbiAgYm9yZGVyLXJhZGl1czo1MCU7XFxuICBiYWNrZ3JvdW5kOnZhcigtLWNvbC1iYXNlLWxpZ2h0KTtcXG4gIHRyYW5zaXRpb246IC4xcztcXG59XFxuXFxuaW5wdXQ6Y2hlY2tlZCArIC5zd2l0Y2gtc3Bhbjo6YmVmb3JlIHtcXG4gIHRyYW5zZm9ybTp0cmFuc2xhdGVYKC43ZW0pO1xcbiAgYmFja2dyb3VuZDpsaWdodGdyZWVuO1xcbiAgYm9yZGVyLWNvbG9yOiBncmVlbjtcXG59XFxuXFxuaW5wdXQ6Y2hlY2tlZCArIC5zd2l0Y2gtc3BhbiB7XFxuICBiYWNrZ3JvdW5kOiBncmVlbjtcXG59XFxuXFxuaW5wdXRbdHlwZT0ndGV4dCddLCBpbnB1dFt0eXBlPSdudW1iZXInXSB7XFxuICBhcHBlYXJhbmNlOm5vbmU7XFxuICBib3JkZXI6MXB4IHNvbGlkIHZhcigtLWNvbC1kYXJrZXN0KTtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG59XFxuXFxuLnZhbGlkYXRpb24tZmFpbGVkIHtcXG4gIGJhY2tncm91bmQtY29sb3I6cmVkO1xcbiAgYW5pbWF0aW9uLW5hbWU6IGFuaW0tZmFkZTtcXG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogM3M7XFxufVxcblxcbi5jYXJkLmZvcm0tdmFsaWRhdGlvbi1lcnJvciB7XFxuICB6LWluZGV4OjE1O1xcbiAgYm94LXNpemluZzpib3JkZXItYm94O1xcbiAgcG9zaXRpb246YWJzb2x1dGU7XFxuICB0b3A6MS42ZW07XFxuICByaWdodDowO1xcbiAgbWFyZ2luOjA7XFxuICBiYWNrZ3JvdW5kOnJnYigyNDMsIDE3NCwgMTc0KTtcXG4gIGZvbnQtc2l6ZTouN2VtO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIGFuaW0tZmFkZSB7XFxuICAwJSB7IGJhY2tncm91bmQtY29sb3I6cmVkOyB9XFxuICAxMDAlIHsgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IH1cXG59XFxuXFxuQG1lZGlhIChtaW4td2lkdGg6MzVlbSkge1xcbiAgaDEge1xcbiAgICBmb250LXNpemU6My42ZW07XFxuICB9XFxuICAuYm9vayB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNmZyIDVmciAzZnIgNGZyO1xcbiAgfVxcbiAgLmNhcmQubGlicmFyeS1oZWFkZXIge1xcbiAgICBkaXNwbGF5OmdyaWQ7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgfVxcbiAgLmNsb3NlLWJ0biB7XFxuICAgIHRvcDogMDtcXG4gIH1cXG5cXG4gIC5ib29rLXByb3AuYm9vay1hdXRob3I6OmJlZm9yZSB7XFxuICAgIGNvbnRlbnQ6Jyc7XFxuICB9XFxuXFxuICAuYm9vay1wcm9wLmJvb2stcGFnZUNvdW50OjphZnRlciB7XFxuICAgIGNvbnRlbnQ6Jyc7XFxuICB9XFxuXFxuICAuYm9vay1wcm9wLmJvb2stdGl0bGUge1xcbiAgICBmb250LXdlaWdodDpub3JtYWw7XFxuICB9XFxuXFxuICAuYm9vay1wcm9wLmJvb2stdGl0bGU6OmFmdGVyIHtcXG4gICAgZGlzcGxheTpub25lOyBcXG4gIH1cXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCBcIlwiXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgICAgdmFyIGlkID0gdGhpc1tpXVswXTtcblxuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfaV0pO1xuXG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWNvbnRpbnVlXG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuXG4gICAgICBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzJdID0gXCJcIi5jb25jYXQobWVkaWFRdWVyeSwgXCIgYW5kIFwiKS5jb25jYXQoaXRlbVsyXSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmZ1bmN0aW9uIF9zbGljZWRUb0FycmF5KGFyciwgaSkgeyByZXR1cm4gX2FycmF5V2l0aEhvbGVzKGFycikgfHwgX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgfHwgX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KGFyciwgaSkgfHwgX25vbkl0ZXJhYmxlUmVzdCgpOyB9XG5cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVJlc3QoKSB7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIGF0dGVtcHQgdG8gZGVzdHJ1Y3R1cmUgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7IH1cblxuZnVuY3Rpb24gX3Vuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5KG8sIG1pbkxlbikgeyBpZiAoIW8pIHJldHVybjsgaWYgKHR5cGVvZiBvID09PSBcInN0cmluZ1wiKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lOyBpZiAobiA9PT0gXCJNYXBcIiB8fCBuID09PSBcIlNldFwiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09IFwiQXJndW1lbnRzXCIgfHwgL14oPzpVaXxJKW50KD86OHwxNnwzMikoPzpDbGFtcGVkKT9BcnJheSQvLnRlc3QobikpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB9XG5cbmZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7IGlmIChsZW4gPT0gbnVsbCB8fCBsZW4gPiBhcnIubGVuZ3RoKSBsZW4gPSBhcnIubGVuZ3RoOyBmb3IgKHZhciBpID0gMCwgYXJyMiA9IG5ldyBBcnJheShsZW4pOyBpIDwgbGVuOyBpKyspIHsgYXJyMltpXSA9IGFycltpXTsgfSByZXR1cm4gYXJyMjsgfVxuXG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB7IGlmICh0eXBlb2YgU3ltYm9sID09PSBcInVuZGVmaW5lZFwiIHx8ICEoU3ltYm9sLml0ZXJhdG9yIGluIE9iamVjdChhcnIpKSkgcmV0dXJuOyB2YXIgX2FyciA9IFtdOyB2YXIgX24gPSB0cnVlOyB2YXIgX2QgPSBmYWxzZTsgdmFyIF9lID0gdW5kZWZpbmVkOyB0cnkgeyBmb3IgKHZhciBfaSA9IGFycltTeW1ib2wuaXRlcmF0b3JdKCksIF9zOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgb3B0aW9ucyA9IHt9O1xuICB9IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlcnNjb3JlLWRhbmdsZSwgbm8tcGFyYW0tcmVhc3NpZ25cblxuXG4gIHVybCA9IHVybCAmJiB1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsO1xuXG4gIGlmICh0eXBlb2YgdXJsICE9PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfSAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cblxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG5cblxuICBpZiAoL1tcIicoKSBcXHRcXG5dLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJpbXBvcnQgZmlyZWJhc2UgZnJvbSAnQGZpcmViYXNlL2FwcCc7XG5leHBvcnQgeyBkZWZhdWx0IH0gZnJvbSAnQGZpcmViYXNlL2FwcCc7XG5cbnZhciBuYW1lID0gXCJmaXJlYmFzZVwiO1xudmFyIHZlcnNpb24gPSBcIjguNC4yXCI7XG5cbi8qKlxyXG4gKiBAbGljZW5zZVxyXG4gKiBDb3B5cmlnaHQgMjAxOCBHb29nbGUgTExDXHJcbiAqXHJcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XHJcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cclxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XHJcbiAqXHJcbiAqICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXHJcbiAqXHJcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcclxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxyXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cclxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxyXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cclxuICovXHJcbmZpcmViYXNlLnJlZ2lzdGVyVmVyc2lvbihuYW1lLCB2ZXJzaW9uLCAnYXBwJyk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5lc20uanMubWFwXG4iLCIhZnVuY3Rpb24odCxlKXtcIm9iamVjdFwiPT10eXBlb2YgZXhwb3J0cyYmXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZT9lKHJlcXVpcmUoXCJAZmlyZWJhc2UvYXBwXCIpKTpcImZ1bmN0aW9uXCI9PXR5cGVvZiBkZWZpbmUmJmRlZmluZS5hbWQ/ZGVmaW5lKFtcIkBmaXJlYmFzZS9hcHBcIl0sZSk6ZSgodD1cInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsVGhpcz9nbG9iYWxUaGlzOnR8fHNlbGYpLmZpcmViYXNlKX0odGhpcyxmdW5jdGlvbihlKXtcInVzZSBzdHJpY3RcIjt0cnl7IWZ1bmN0aW9uKCl7ZnVuY3Rpb24gdCh0KXtyZXR1cm4gdCYmXCJvYmplY3RcIj09dHlwZW9mIHQmJlwiZGVmYXVsdFwiaW4gdD90OntkZWZhdWx0OnR9fXZhciB6bD10KGUpOyFmdW5jdGlvbigpe3ZhciB0LG89XCJmdW5jdGlvblwiPT10eXBlb2YgT2JqZWN0LmRlZmluZVByb3BlcnRpZXM/T2JqZWN0LmRlZmluZVByb3BlcnR5OmZ1bmN0aW9uKHQsZSxuKXt0IT1BcnJheS5wcm90b3R5cGUmJnQhPU9iamVjdC5wcm90b3R5cGUmJih0W2VdPW4udmFsdWUpfTt2YXIgdT1mdW5jdGlvbih0KXt0PVtcIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3csXCJvYmplY3RcIj09dHlwZW9mIHNlbGYmJnNlbGYsXCJvYmplY3RcIj09dHlwZW9mIGdsb2JhbCYmZ2xvYmFsLHRdO2Zvcih2YXIgZT0wO2U8dC5sZW5ndGg7KytlKXt2YXIgbj10W2VdO2lmKG4mJm4uTWF0aD09TWF0aClyZXR1cm4gbn1yZXR1cm4gZ2xvYmFsVGhpc30odGhpcyk7ZnVuY3Rpb24gYyh0KXt2YXIgZSxuLGk9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yJiZ0W1N5bWJvbC5pdGVyYXRvcl07cmV0dXJuIGk/aS5jYWxsKHQpOntuZXh0OihlPXQsbj0wLGZ1bmN0aW9uKCl7cmV0dXJuIG48ZS5sZW5ndGg/e2RvbmU6ITEsdmFsdWU6ZVtuKytdfTp7ZG9uZTohMH19KX19IWZ1bmN0aW9uKHQsZSl7aWYoZSl7dmFyIG49dTt0PXQuc3BsaXQoXCIuXCIpO2Zvcih2YXIgaT0wO2k8dC5sZW5ndGgtMTtpKyspe3ZhciByPXRbaV07ciBpbiBufHwobltyXT17fSksbj1uW3JdfShlPWUoaT1uW3Q9dFt0Lmxlbmd0aC0xXV0pKSE9aSYmbnVsbCE9ZSYmbyhuLHQse2NvbmZpZ3VyYWJsZTohMCx3cml0YWJsZTohMCx2YWx1ZTplfSl9fShcIlByb21pc2VcIixmdW5jdGlvbih0KXtmdW5jdGlvbiBhKHQpe3RoaXMuYj0wLHRoaXMuYz12b2lkIDAsdGhpcy5hPVtdO3ZhciBlPXRoaXMuZigpO3RyeXt0KGUucmVzb2x2ZSxlLnJlamVjdCl9Y2F0Y2godCl7ZS5yZWplY3QodCl9fWZ1bmN0aW9uIGUoKXt0aGlzLmE9bnVsbH1mdW5jdGlvbiBzKGUpe3JldHVybiBlIGluc3RhbmNlb2YgYT9lOm5ldyBhKGZ1bmN0aW9uKHQpe3QoZSl9KX1pZih0KXJldHVybiB0O2UucHJvdG90eXBlLmI9ZnVuY3Rpb24odCl7dmFyIGU7bnVsbD09dGhpcy5hJiYodGhpcy5hPVtdLChlPXRoaXMpLmMoZnVuY3Rpb24oKXtlLmcoKX0pKSx0aGlzLmEucHVzaCh0KX07dmFyIG49dS5zZXRUaW1lb3V0O2UucHJvdG90eXBlLmM9ZnVuY3Rpb24odCl7bih0LDApfSxlLnByb3RvdHlwZS5nPWZ1bmN0aW9uKCl7Zm9yKDt0aGlzLmEmJnRoaXMuYS5sZW5ndGg7KXt2YXIgdD10aGlzLmE7dGhpcy5hPVtdO2Zvcih2YXIgZT0wO2U8dC5sZW5ndGg7KytlKXt2YXIgbj10W2VdO3RbZV09bnVsbDt0cnl7bigpfWNhdGNoKHQpe3RoaXMuZih0KX19fXRoaXMuYT1udWxsfSxlLnByb3RvdHlwZS5mPWZ1bmN0aW9uKHQpe3RoaXMuYyhmdW5jdGlvbigpe3Rocm93IHR9KX0sYS5wcm90b3R5cGUuZj1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe2l8fChpPSEwLGUuY2FsbChuLHQpKX19dmFyIG49dGhpcyxpPSExO3JldHVybntyZXNvbHZlOnQodGhpcy5tKSxyZWplY3Q6dCh0aGlzLmcpfX0sYS5wcm90b3R5cGUubT1mdW5jdGlvbih0KXtpZih0PT09dGhpcyl0aGlzLmcobmV3IFR5cGVFcnJvcihcIkEgUHJvbWlzZSBjYW5ub3QgcmVzb2x2ZSB0byBpdHNlbGZcIikpO2Vsc2UgaWYodCBpbnN0YW5jZW9mIGEpdGhpcy5zKHQpO2Vsc2V7dDpzd2l0Y2godHlwZW9mIHQpe2Nhc2VcIm9iamVjdFwiOnZhciBlPW51bGwhPXQ7YnJlYWsgdDtjYXNlXCJmdW5jdGlvblwiOmU9ITA7YnJlYWsgdDtkZWZhdWx0OmU9ITF9ZT90aGlzLnYodCk6dGhpcy5oKHQpfX0sYS5wcm90b3R5cGUudj1mdW5jdGlvbih0KXt2YXIgZT12b2lkIDA7dHJ5e2U9dC50aGVufWNhdGNoKHQpe3JldHVybiB2b2lkIHRoaXMuZyh0KX1cImZ1bmN0aW9uXCI9PXR5cGVvZiBlP3RoaXMudShlLHQpOnRoaXMuaCh0KX0sYS5wcm90b3R5cGUuZz1mdW5jdGlvbih0KXt0aGlzLmkoMix0KX0sYS5wcm90b3R5cGUuaD1mdW5jdGlvbih0KXt0aGlzLmkoMSx0KX0sYS5wcm90b3R5cGUuaT1mdW5jdGlvbih0LGUpe2lmKDAhPXRoaXMuYil0aHJvdyBFcnJvcihcIkNhbm5vdCBzZXR0bGUoXCIrdCtcIiwgXCIrZStcIik6IFByb21pc2UgYWxyZWFkeSBzZXR0bGVkIGluIHN0YXRlXCIrdGhpcy5iKTt0aGlzLmI9dCx0aGlzLmM9ZSx0aGlzLmwoKX0sYS5wcm90b3R5cGUubD1mdW5jdGlvbigpe2lmKG51bGwhPXRoaXMuYSl7Zm9yKHZhciB0PTA7dDx0aGlzLmEubGVuZ3RoOysrdClyLmIodGhpcy5hW3RdKTt0aGlzLmE9bnVsbH19O3ZhciByPW5ldyBlO3JldHVybiBhLnByb3RvdHlwZS5zPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZigpO3QuUWEoZS5yZXNvbHZlLGUucmVqZWN0KX0sYS5wcm90b3R5cGUudT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZigpO3RyeXt0LmNhbGwoZSxuLnJlc29sdmUsbi5yZWplY3QpfWNhdGNoKHQpe24ucmVqZWN0KHQpfX0sYS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4oZSx0KXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlP2Z1bmN0aW9uKHQpe3RyeXtpKGUodCkpfWNhdGNoKHQpe3IodCl9fTp0fXZhciBpLHIsbz1uZXcgYShmdW5jdGlvbih0LGUpe2k9dCxyPWV9KTtyZXR1cm4gdGhpcy5RYShuKHQsaSksbihlLHIpKSxvfSxhLnByb3RvdHlwZS5jYXRjaD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50aGVuKHZvaWQgMCx0KX0sYS5wcm90b3R5cGUuUWE9ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKCl7c3dpdGNoKGkuYil7Y2FzZSAxOnQoaS5jKTticmVhaztjYXNlIDI6ZShpLmMpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoXCJVbmV4cGVjdGVkIHN0YXRlOiBcIitpLmIpfX12YXIgaT10aGlzO251bGw9PXRoaXMuYT9yLmIobik6dGhpcy5hLnB1c2gobil9LGEucmVzb2x2ZT1zLGEucmVqZWN0PWZ1bmN0aW9uKG4pe3JldHVybiBuZXcgYShmdW5jdGlvbih0LGUpe2Uobil9KX0sYS5yYWNlPWZ1bmN0aW9uKHIpe3JldHVybiBuZXcgYShmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1jKHIpLGk9bi5uZXh0KCk7IWkuZG9uZTtpPW4ubmV4dCgpKXMoaS52YWx1ZSkuUWEodCxlKX0pfSxhLmFsbD1mdW5jdGlvbih0KXt2YXIgZT1jKHQpLG89ZS5uZXh0KCk7cmV0dXJuIG8uZG9uZT9zKFtdKTpuZXcgYShmdW5jdGlvbihuLHQpe2Zvcih2YXIgaT1bXSxyPTA7aS5wdXNoKHZvaWQgMCkscisrLHMoby52YWx1ZSkuUWEoZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe2lbZV09dCwwPT0tLXImJm4oaSl9fShpLmxlbmd0aC0xKSx0KSxvPWUubmV4dCgpLCFvLmRvbmU7KTt9KX0sYX0pO3ZhciBoPWh8fHt9LGw9dGhpc3x8c2VsZixlPS9eW1xcdysvXy1dK1s9XXswLDJ9JC8scz1udWxsO2Z1bmN0aW9uIGYodCl7cmV0dXJuKHQ9dC5xdWVyeVNlbGVjdG9yJiZ0LnF1ZXJ5U2VsZWN0b3IoXCJzY3JpcHRbbm9uY2VdXCIpKSYmKHQ9dC5ub25jZXx8dC5nZXRBdHRyaWJ1dGUoXCJub25jZVwiKSkmJmUudGVzdCh0KT90OlwiXCJ9ZnVuY3Rpb24gYSgpe31mdW5jdGlvbiBkKHQpe3ZhciBlPXR5cGVvZiB0O3JldHVyblwib2JqZWN0XCIhPWU/ZTp0P0FycmF5LmlzQXJyYXkodCk/XCJhcnJheVwiOmU6XCJudWxsXCJ9ZnVuY3Rpb24gcCh0KXt2YXIgZT1kKHQpO3JldHVyblwiYXJyYXlcIj09ZXx8XCJvYmplY3RcIj09ZSYmXCJudW1iZXJcIj09dHlwZW9mIHQubGVuZ3RofWZ1bmN0aW9uIHYodCl7cmV0dXJuXCJmdW5jdGlvblwiPT1kKHQpfWZ1bmN0aW9uIG0odCl7dmFyIGU9dHlwZW9mIHQ7cmV0dXJuXCJvYmplY3RcIj09ZSYmbnVsbCE9dHx8XCJmdW5jdGlvblwiPT1lfXZhciBuPVwiY2xvc3VyZV91aWRfXCIrKDFlOSpNYXRoLnJhbmRvbSgpPj4+MCksaT0wO2Z1bmN0aW9uIHIodCxlLG4pe3JldHVybiB0LmNhbGwuYXBwbHkodC5iaW5kLGFyZ3VtZW50cyl9ZnVuY3Rpb24gZyhlLG4sdCl7aWYoIWUpdGhyb3cgRXJyb3IoKTtpZigyPGFyZ3VtZW50cy5sZW5ndGgpe3ZhciBpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywyKTtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO3JldHVybiBBcnJheS5wcm90b3R5cGUudW5zaGlmdC5hcHBseSh0LGkpLGUuYXBwbHkobix0KX19cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGUuYXBwbHkobixhcmd1bWVudHMpfX1mdW5jdGlvbiBiKHQsZSxuKXtyZXR1cm4oYj1GdW5jdGlvbi5wcm90b3R5cGUuYmluZCYmLTEhPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kLnRvU3RyaW5nKCkuaW5kZXhPZihcIm5hdGl2ZSBjb2RlXCIpP3I6ZykuYXBwbHkobnVsbCxhcmd1bWVudHMpfWZ1bmN0aW9uIHkoZSl7dmFyIG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO3JldHVybiBmdW5jdGlvbigpe3ZhciB0PW4uc2xpY2UoKTtyZXR1cm4gdC5wdXNoLmFwcGx5KHQsYXJndW1lbnRzKSxlLmFwcGx5KHRoaXMsdCl9fWZ1bmN0aW9uIHcodCxlKXtmdW5jdGlvbiBuKCl7fW4ucHJvdG90eXBlPWUucHJvdG90eXBlLHQuYWI9ZS5wcm90b3R5cGUsdC5wcm90b3R5cGU9bmV3IG4sdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dH1mdW5jdGlvbiBJKHQpe3JldHVybiB0fWZ1bmN0aW9uIFQodCxlLG4pe3RoaXMuY29kZT1rK3QsdGhpcy5tZXNzYWdlPWV8fFNbdF18fFwiXCIsdGhpcy5hPW58fG51bGx9ZnVuY3Rpb24gRSh0KXt2YXIgZT10JiZ0LmNvZGU7cmV0dXJuIGU/bmV3IFQoZS5zdWJzdHJpbmcoay5sZW5ndGgpLHQubWVzc2FnZSx0LnNlcnZlclJlc3BvbnNlKTpudWxsfXcoVCxFcnJvciksVC5wcm90b3R5cGUudz1mdW5jdGlvbigpe3ZhciB0PXtjb2RlOnRoaXMuY29kZSxtZXNzYWdlOnRoaXMubWVzc2FnZX07cmV0dXJuIHRoaXMuYSYmKHQuc2VydmVyUmVzcG9uc2U9dGhpcy5hKSx0fSxULnByb3RvdHlwZS50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy53KCl9O3ZhciBBLGs9XCJhdXRoL1wiLFM9e1wiYWRtaW4tcmVzdHJpY3RlZC1vcGVyYXRpb25cIjpcIlRoaXMgb3BlcmF0aW9uIGlzIHJlc3RyaWN0ZWQgdG8gYWRtaW5pc3RyYXRvcnMgb25seS5cIixcImFyZ3VtZW50LWVycm9yXCI6XCJcIixcImFwcC1ub3QtYXV0aG9yaXplZFwiOlwiVGhpcyBhcHAsIGlkZW50aWZpZWQgYnkgdGhlIGRvbWFpbiB3aGVyZSBpdCdzIGhvc3RlZCwgaXMgbm90IGF1dGhvcml6ZWQgdG8gdXNlIEZpcmViYXNlIEF1dGhlbnRpY2F0aW9uIHdpdGggdGhlIHByb3ZpZGVkIEFQSSBrZXkuIFJldmlldyB5b3VyIGtleSBjb25maWd1cmF0aW9uIGluIHRoZSBHb29nbGUgQVBJIGNvbnNvbGUuXCIsXCJhcHAtbm90LWluc3RhbGxlZFwiOlwiVGhlIHJlcXVlc3RlZCBtb2JpbGUgYXBwbGljYXRpb24gY29ycmVzcG9uZGluZyB0byB0aGUgaWRlbnRpZmllciAoQW5kcm9pZCBwYWNrYWdlIG5hbWUgb3IgaU9TIGJ1bmRsZSBJRCkgcHJvdmlkZWQgaXMgbm90IGluc3RhbGxlZCBvbiB0aGlzIGRldmljZS5cIixcImNhcHRjaGEtY2hlY2stZmFpbGVkXCI6XCJUaGUgcmVDQVBUQ0hBIHJlc3BvbnNlIHRva2VuIHByb3ZpZGVkIGlzIGVpdGhlciBpbnZhbGlkLCBleHBpcmVkLCBhbHJlYWR5IHVzZWQgb3IgdGhlIGRvbWFpbiBhc3NvY2lhdGVkIHdpdGggaXQgZG9lcyBub3QgbWF0Y2ggdGhlIGxpc3Qgb2Ygd2hpdGVsaXN0ZWQgZG9tYWlucy5cIixcImNvZGUtZXhwaXJlZFwiOlwiVGhlIFNNUyBjb2RlIGhhcyBleHBpcmVkLiBQbGVhc2UgcmUtc2VuZCB0aGUgdmVyaWZpY2F0aW9uIGNvZGUgdG8gdHJ5IGFnYWluLlwiLFwiY29yZG92YS1ub3QtcmVhZHlcIjpcIkNvcmRvdmEgZnJhbWV3b3JrIGlzIG5vdCByZWFkeS5cIixcImNvcnMtdW5zdXBwb3J0ZWRcIjpcIlRoaXMgYnJvd3NlciBpcyBub3Qgc3VwcG9ydGVkLlwiLFwiY3JlZGVudGlhbC1hbHJlYWR5LWluLXVzZVwiOlwiVGhpcyBjcmVkZW50aWFsIGlzIGFscmVhZHkgYXNzb2NpYXRlZCB3aXRoIGEgZGlmZmVyZW50IHVzZXIgYWNjb3VudC5cIixcImN1c3RvbS10b2tlbi1taXNtYXRjaFwiOlwiVGhlIGN1c3RvbSB0b2tlbiBjb3JyZXNwb25kcyB0byBhIGRpZmZlcmVudCBhdWRpZW5jZS5cIixcInJlcXVpcmVzLXJlY2VudC1sb2dpblwiOlwiVGhpcyBvcGVyYXRpb24gaXMgc2Vuc2l0aXZlIGFuZCByZXF1aXJlcyByZWNlbnQgYXV0aGVudGljYXRpb24uIExvZyBpbiBhZ2FpbiBiZWZvcmUgcmV0cnlpbmcgdGhpcyByZXF1ZXN0LlwiLFwiZHluYW1pYy1saW5rLW5vdC1hY3RpdmF0ZWRcIjpcIlBsZWFzZSBhY3RpdmF0ZSBEeW5hbWljIExpbmtzIGluIHRoZSBGaXJlYmFzZSBDb25zb2xlIGFuZCBhZ3JlZSB0byB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMuXCIsXCJlbWFpbC1jaGFuZ2UtbmVlZHMtdmVyaWZpY2F0aW9uXCI6XCJNdWx0aS1mYWN0b3IgdXNlcnMgbXVzdCBhbHdheXMgaGF2ZSBhIHZlcmlmaWVkIGVtYWlsLlwiLFwiZW1haWwtYWxyZWFkeS1pbi11c2VcIjpcIlRoZSBlbWFpbCBhZGRyZXNzIGlzIGFscmVhZHkgaW4gdXNlIGJ5IGFub3RoZXIgYWNjb3VudC5cIixcImV4cGlyZWQtYWN0aW9uLWNvZGVcIjpcIlRoZSBhY3Rpb24gY29kZSBoYXMgZXhwaXJlZC4gXCIsXCJjYW5jZWxsZWQtcG9wdXAtcmVxdWVzdFwiOlwiVGhpcyBvcGVyYXRpb24gaGFzIGJlZW4gY2FuY2VsbGVkIGR1ZSB0byBhbm90aGVyIGNvbmZsaWN0aW5nIHBvcHVwIGJlaW5nIG9wZW5lZC5cIixcImludGVybmFsLWVycm9yXCI6XCJBbiBpbnRlcm5hbCBlcnJvciBoYXMgb2NjdXJyZWQuXCIsXCJpbnZhbGlkLWFwcC1jcmVkZW50aWFsXCI6XCJUaGUgcGhvbmUgdmVyaWZpY2F0aW9uIHJlcXVlc3QgY29udGFpbnMgYW4gaW52YWxpZCBhcHBsaWNhdGlvbiB2ZXJpZmllci4gVGhlIHJlQ0FQVENIQSB0b2tlbiByZXNwb25zZSBpcyBlaXRoZXIgaW52YWxpZCBvciBleHBpcmVkLlwiLFwiaW52YWxpZC1hcHAtaWRcIjpcIlRoZSBtb2JpbGUgYXBwIGlkZW50aWZpZXIgaXMgbm90IHJlZ2lzdGVkIGZvciB0aGUgY3VycmVudCBwcm9qZWN0LlwiLFwiaW52YWxpZC11c2VyLXRva2VuXCI6XCJUaGlzIHVzZXIncyBjcmVkZW50aWFsIGlzbid0IHZhbGlkIGZvciB0aGlzIHByb2plY3QuIFRoaXMgY2FuIGhhcHBlbiBpZiB0aGUgdXNlcidzIHRva2VuIGhhcyBiZWVuIHRhbXBlcmVkIHdpdGgsIG9yIGlmIHRoZSB1c2VyIGlzbid0IGZvciB0aGUgcHJvamVjdCBhc3NvY2lhdGVkIHdpdGggdGhpcyBBUEkga2V5LlwiLFwiaW52YWxpZC1hdXRoLWV2ZW50XCI6XCJBbiBpbnRlcm5hbCBlcnJvciBoYXMgb2NjdXJyZWQuXCIsXCJpbnZhbGlkLXZlcmlmaWNhdGlvbi1jb2RlXCI6XCJUaGUgU01TIHZlcmlmaWNhdGlvbiBjb2RlIHVzZWQgdG8gY3JlYXRlIHRoZSBwaG9uZSBhdXRoIGNyZWRlbnRpYWwgaXMgaW52YWxpZC4gUGxlYXNlIHJlc2VuZCB0aGUgdmVyaWZpY2F0aW9uIGNvZGUgc21zIGFuZCBiZSBzdXJlIHVzZSB0aGUgdmVyaWZpY2F0aW9uIGNvZGUgcHJvdmlkZWQgYnkgdGhlIHVzZXIuXCIsXCJpbnZhbGlkLWNvbnRpbnVlLXVyaVwiOlwiVGhlIGNvbnRpbnVlIFVSTCBwcm92aWRlZCBpbiB0aGUgcmVxdWVzdCBpcyBpbnZhbGlkLlwiLFwiaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIjpcIlRoZSBmb2xsb3dpbmcgQ29yZG92YSBwbHVnaW5zIG11c3QgYmUgaW5zdGFsbGVkIHRvIGVuYWJsZSBPQXV0aCBzaWduLWluOiBjb3Jkb3ZhLXBsdWdpbi1idWlsZGluZm8sIGNvcmRvdmEtdW5pdmVyc2FsLWxpbmtzLXBsdWdpbiwgY29yZG92YS1wbHVnaW4tYnJvd3NlcnRhYiwgY29yZG92YS1wbHVnaW4taW5hcHBicm93c2VyIGFuZCBjb3Jkb3ZhLXBsdWdpbi1jdXN0b211cmxzY2hlbWUuXCIsXCJpbnZhbGlkLWN1c3RvbS10b2tlblwiOlwiVGhlIGN1c3RvbSB0b2tlbiBmb3JtYXQgaXMgaW5jb3JyZWN0LiBQbGVhc2UgY2hlY2sgdGhlIGRvY3VtZW50YXRpb24uXCIsXCJpbnZhbGlkLWR5bmFtaWMtbGluay1kb21haW5cIjpcIlRoZSBwcm92aWRlZCBkeW5hbWljIGxpbmsgZG9tYWluIGlzIG5vdCBjb25maWd1cmVkIG9yIGF1dGhvcml6ZWQgZm9yIHRoZSBjdXJyZW50IHByb2plY3QuXCIsXCJpbnZhbGlkLWVtYWlsXCI6XCJUaGUgZW1haWwgYWRkcmVzcyBpcyBiYWRseSBmb3JtYXR0ZWQuXCIsXCJpbnZhbGlkLWFwaS1rZXlcIjpcIllvdXIgQVBJIGtleSBpcyBpbnZhbGlkLCBwbGVhc2UgY2hlY2sgeW91IGhhdmUgY29waWVkIGl0IGNvcnJlY3RseS5cIixcImludmFsaWQtY2VydC1oYXNoXCI6XCJUaGUgU0hBLTEgY2VydGlmaWNhdGUgaGFzaCBwcm92aWRlZCBpcyBpbnZhbGlkLlwiLFwiaW52YWxpZC1jcmVkZW50aWFsXCI6XCJUaGUgc3VwcGxpZWQgYXV0aCBjcmVkZW50aWFsIGlzIG1hbGZvcm1lZCBvciBoYXMgZXhwaXJlZC5cIixcImludmFsaWQtbWVzc2FnZS1wYXlsb2FkXCI6XCJUaGUgZW1haWwgdGVtcGxhdGUgY29ycmVzcG9uZGluZyB0byB0aGlzIGFjdGlvbiBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMgaW4gaXRzIG1lc3NhZ2UuIFBsZWFzZSBmaXggYnkgZ29pbmcgdG8gdGhlIEF1dGggZW1haWwgdGVtcGxhdGVzIHNlY3Rpb24gaW4gdGhlIEZpcmViYXNlIENvbnNvbGUuXCIsXCJpbnZhbGlkLW11bHRpLWZhY3Rvci1zZXNzaW9uXCI6XCJUaGUgcmVxdWVzdCBkb2VzIG5vdCBjb250YWluIGEgdmFsaWQgcHJvb2Ygb2YgZmlyc3QgZmFjdG9yIHN1Y2Nlc3NmdWwgc2lnbi1pbi5cIixcImludmFsaWQtb2F1dGgtcHJvdmlkZXJcIjpcIkVtYWlsQXV0aFByb3ZpZGVyIGlzIG5vdCBzdXBwb3J0ZWQgZm9yIHRoaXMgb3BlcmF0aW9uLiBUaGlzIG9wZXJhdGlvbiBvbmx5IHN1cHBvcnRzIE9BdXRoIHByb3ZpZGVycy5cIixcImludmFsaWQtb2F1dGgtY2xpZW50LWlkXCI6XCJUaGUgT0F1dGggY2xpZW50IElEIHByb3ZpZGVkIGlzIGVpdGhlciBpbnZhbGlkIG9yIGRvZXMgbm90IG1hdGNoIHRoZSBzcGVjaWZpZWQgQVBJIGtleS5cIixcInVuYXV0aG9yaXplZC1kb21haW5cIjpcIlRoaXMgZG9tYWluIGlzIG5vdCBhdXRob3JpemVkIGZvciBPQXV0aCBvcGVyYXRpb25zIGZvciB5b3VyIEZpcmViYXNlIHByb2plY3QuIEVkaXQgdGhlIGxpc3Qgb2YgYXV0aG9yaXplZCBkb21haW5zIGZyb20gdGhlIEZpcmViYXNlIGNvbnNvbGUuXCIsXCJpbnZhbGlkLWFjdGlvbi1jb2RlXCI6XCJUaGUgYWN0aW9uIGNvZGUgaXMgaW52YWxpZC4gVGhpcyBjYW4gaGFwcGVuIGlmIHRoZSBjb2RlIGlzIG1hbGZvcm1lZCwgZXhwaXJlZCwgb3IgaGFzIGFscmVhZHkgYmVlbiB1c2VkLlwiLFwid3JvbmctcGFzc3dvcmRcIjpcIlRoZSBwYXNzd29yZCBpcyBpbnZhbGlkIG9yIHRoZSB1c2VyIGRvZXMgbm90IGhhdmUgYSBwYXNzd29yZC5cIixcImludmFsaWQtcGVyc2lzdGVuY2UtdHlwZVwiOlwiVGhlIHNwZWNpZmllZCBwZXJzaXN0ZW5jZSB0eXBlIGlzIGludmFsaWQuIEl0IGNhbiBvbmx5IGJlIGxvY2FsLCBzZXNzaW9uIG9yIG5vbmUuXCIsXCJpbnZhbGlkLXBob25lLW51bWJlclwiOlwiVGhlIGZvcm1hdCBvZiB0aGUgcGhvbmUgbnVtYmVyIHByb3ZpZGVkIGlzIGluY29ycmVjdC4gUGxlYXNlIGVudGVyIHRoZSBwaG9uZSBudW1iZXIgaW4gYSBmb3JtYXQgdGhhdCBjYW4gYmUgcGFyc2VkIGludG8gRS4xNjQgZm9ybWF0LiBFLjE2NCBwaG9uZSBudW1iZXJzIGFyZSB3cml0dGVuIGluIHRoZSBmb3JtYXQgWytdW2NvdW50cnkgY29kZV1bc3Vic2NyaWJlciBudW1iZXIgaW5jbHVkaW5nIGFyZWEgY29kZV0uXCIsXCJpbnZhbGlkLXByb3ZpZGVyLWlkXCI6XCJUaGUgc3BlY2lmaWVkIHByb3ZpZGVyIElEIGlzIGludmFsaWQuXCIsXCJpbnZhbGlkLXJlY2lwaWVudC1lbWFpbFwiOlwiVGhlIGVtYWlsIGNvcnJlc3BvbmRpbmcgdG8gdGhpcyBhY3Rpb24gZmFpbGVkIHRvIHNlbmQgYXMgdGhlIHByb3ZpZGVkIHJlY2lwaWVudCBlbWFpbCBhZGRyZXNzIGlzIGludmFsaWQuXCIsXCJpbnZhbGlkLXNlbmRlclwiOlwiVGhlIGVtYWlsIHRlbXBsYXRlIGNvcnJlc3BvbmRpbmcgdG8gdGhpcyBhY3Rpb24gY29udGFpbnMgYW4gaW52YWxpZCBzZW5kZXIgZW1haWwgb3IgbmFtZS4gUGxlYXNlIGZpeCBieSBnb2luZyB0byB0aGUgQXV0aCBlbWFpbCB0ZW1wbGF0ZXMgc2VjdGlvbiBpbiB0aGUgRmlyZWJhc2UgQ29uc29sZS5cIixcImludmFsaWQtdmVyaWZpY2F0aW9uLWlkXCI6XCJUaGUgdmVyaWZpY2F0aW9uIElEIHVzZWQgdG8gY3JlYXRlIHRoZSBwaG9uZSBhdXRoIGNyZWRlbnRpYWwgaXMgaW52YWxpZC5cIixcImludmFsaWQtdGVuYW50LWlkXCI6XCJUaGUgQXV0aCBpbnN0YW5jZSdzIHRlbmFudCBJRCBpcyBpbnZhbGlkLlwiLFwibXVsdGktZmFjdG9yLWluZm8tbm90LWZvdW5kXCI6XCJUaGUgdXNlciBkb2VzIG5vdCBoYXZlIGEgc2Vjb25kIGZhY3RvciBtYXRjaGluZyB0aGUgaWRlbnRpZmllciBwcm92aWRlZC5cIixcIm11bHRpLWZhY3Rvci1hdXRoLXJlcXVpcmVkXCI6XCJQcm9vZiBvZiBvd25lcnNoaXAgb2YgYSBzZWNvbmQgZmFjdG9yIGlzIHJlcXVpcmVkIHRvIGNvbXBsZXRlIHNpZ24taW4uXCIsXCJtaXNzaW5nLWFuZHJvaWQtcGtnLW5hbWVcIjpcIkFuIEFuZHJvaWQgUGFja2FnZSBOYW1lIG11c3QgYmUgcHJvdmlkZWQgaWYgdGhlIEFuZHJvaWQgQXBwIGlzIHJlcXVpcmVkIHRvIGJlIGluc3RhbGxlZC5cIixcImF1dGgtZG9tYWluLWNvbmZpZy1yZXF1aXJlZFwiOlwiQmUgc3VyZSB0byBpbmNsdWRlIGF1dGhEb21haW4gd2hlbiBjYWxsaW5nIGZpcmViYXNlLmluaXRpYWxpemVBcHAoKSwgYnkgZm9sbG93aW5nIHRoZSBpbnN0cnVjdGlvbnMgaW4gdGhlIEZpcmViYXNlIGNvbnNvbGUuXCIsXCJtaXNzaW5nLWFwcC1jcmVkZW50aWFsXCI6XCJUaGUgcGhvbmUgdmVyaWZpY2F0aW9uIHJlcXVlc3QgaXMgbWlzc2luZyBhbiBhcHBsaWNhdGlvbiB2ZXJpZmllciBhc3NlcnRpb24uIEEgcmVDQVBUQ0hBIHJlc3BvbnNlIHRva2VuIG5lZWRzIHRvIGJlIHByb3ZpZGVkLlwiLFwibWlzc2luZy12ZXJpZmljYXRpb24tY29kZVwiOlwiVGhlIHBob25lIGF1dGggY3JlZGVudGlhbCB3YXMgY3JlYXRlZCB3aXRoIGFuIGVtcHR5IFNNUyB2ZXJpZmljYXRpb24gY29kZS5cIixcIm1pc3NpbmctY29udGludWUtdXJpXCI6XCJBIGNvbnRpbnVlIFVSTCBtdXN0IGJlIHByb3ZpZGVkIGluIHRoZSByZXF1ZXN0LlwiLFwibWlzc2luZy1pZnJhbWUtc3RhcnRcIjpcIkFuIGludGVybmFsIGVycm9yIGhhcyBvY2N1cnJlZC5cIixcIm1pc3NpbmctaW9zLWJ1bmRsZS1pZFwiOlwiQW4gaU9TIEJ1bmRsZSBJRCBtdXN0IGJlIHByb3ZpZGVkIGlmIGFuIEFwcCBTdG9yZSBJRCBpcyBwcm92aWRlZC5cIixcIm1pc3NpbmctbXVsdGktZmFjdG9yLWluZm9cIjpcIk5vIHNlY29uZCBmYWN0b3IgaWRlbnRpZmllciBpcyBwcm92aWRlZC5cIixcIm1pc3NpbmctbXVsdGktZmFjdG9yLXNlc3Npb25cIjpcIlRoZSByZXF1ZXN0IGlzIG1pc3NpbmcgcHJvb2Ygb2YgZmlyc3QgZmFjdG9yIHN1Y2Nlc3NmdWwgc2lnbi1pbi5cIixcIm1pc3Npbmctb3ItaW52YWxpZC1ub25jZVwiOlwiVGhlIHJlcXVlc3QgZG9lcyBub3QgY29udGFpbiBhIHZhbGlkIG5vbmNlLiBUaGlzIGNhbiBvY2N1ciBpZiB0aGUgU0hBLTI1NiBoYXNoIG9mIHRoZSBwcm92aWRlZCByYXcgbm9uY2UgZG9lcyBub3QgbWF0Y2ggdGhlIGhhc2hlZCBub25jZSBpbiB0aGUgSUQgdG9rZW4gcGF5bG9hZC5cIixcIm1pc3NpbmctcGhvbmUtbnVtYmVyXCI6XCJUbyBzZW5kIHZlcmlmaWNhdGlvbiBjb2RlcywgcHJvdmlkZSBhIHBob25lIG51bWJlciBmb3IgdGhlIHJlY2lwaWVudC5cIixcIm1pc3NpbmctdmVyaWZpY2F0aW9uLWlkXCI6XCJUaGUgcGhvbmUgYXV0aCBjcmVkZW50aWFsIHdhcyBjcmVhdGVkIHdpdGggYW4gZW1wdHkgdmVyaWZpY2F0aW9uIElELlwiLFwiYXBwLWRlbGV0ZWRcIjpcIlRoaXMgaW5zdGFuY2Ugb2YgRmlyZWJhc2VBcHAgaGFzIGJlZW4gZGVsZXRlZC5cIixcImFjY291bnQtZXhpc3RzLXdpdGgtZGlmZmVyZW50LWNyZWRlbnRpYWxcIjpcIkFuIGFjY291bnQgYWxyZWFkeSBleGlzdHMgd2l0aCB0aGUgc2FtZSBlbWFpbCBhZGRyZXNzIGJ1dCBkaWZmZXJlbnQgc2lnbi1pbiBjcmVkZW50aWFscy4gU2lnbiBpbiB1c2luZyBhIHByb3ZpZGVyIGFzc29jaWF0ZWQgd2l0aCB0aGlzIGVtYWlsIGFkZHJlc3MuXCIsXCJuZXR3b3JrLXJlcXVlc3QtZmFpbGVkXCI6XCJBIG5ldHdvcmsgZXJyb3IgKHN1Y2ggYXMgdGltZW91dCwgaW50ZXJydXB0ZWQgY29ubmVjdGlvbiBvciB1bnJlYWNoYWJsZSBob3N0KSBoYXMgb2NjdXJyZWQuXCIsXCJuby1hdXRoLWV2ZW50XCI6XCJBbiBpbnRlcm5hbCBlcnJvciBoYXMgb2NjdXJyZWQuXCIsXCJuby1zdWNoLXByb3ZpZGVyXCI6XCJVc2VyIHdhcyBub3QgbGlua2VkIHRvIGFuIGFjY291bnQgd2l0aCB0aGUgZ2l2ZW4gcHJvdmlkZXIuXCIsXCJudWxsLXVzZXJcIjpcIkEgbnVsbCB1c2VyIG9iamVjdCB3YXMgcHJvdmlkZWQgYXMgdGhlIGFyZ3VtZW50IGZvciBhbiBvcGVyYXRpb24gd2hpY2ggcmVxdWlyZXMgYSBub24tbnVsbCB1c2VyIG9iamVjdC5cIixcIm9wZXJhdGlvbi1ub3QtYWxsb3dlZFwiOlwiVGhlIGdpdmVuIHNpZ24taW4gcHJvdmlkZXIgaXMgZGlzYWJsZWQgZm9yIHRoaXMgRmlyZWJhc2UgcHJvamVjdC4gRW5hYmxlIGl0IGluIHRoZSBGaXJlYmFzZSBjb25zb2xlLCB1bmRlciB0aGUgc2lnbi1pbiBtZXRob2QgdGFiIG9mIHRoZSBBdXRoIHNlY3Rpb24uXCIsXCJvcGVyYXRpb24tbm90LXN1cHBvcnRlZC1pbi10aGlzLWVudmlyb25tZW50XCI6J1RoaXMgb3BlcmF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGVudmlyb25tZW50IHRoaXMgYXBwbGljYXRpb24gaXMgcnVubmluZyBvbi4gXCJsb2NhdGlvbi5wcm90b2NvbFwiIG11c3QgYmUgaHR0cCwgaHR0cHMgb3IgY2hyb21lLWV4dGVuc2lvbiBhbmQgd2ViIHN0b3JhZ2UgbXVzdCBiZSBlbmFibGVkLicsXCJwb3B1cC1ibG9ja2VkXCI6XCJVbmFibGUgdG8gZXN0YWJsaXNoIGEgY29ubmVjdGlvbiB3aXRoIHRoZSBwb3B1cC4gSXQgbWF5IGhhdmUgYmVlbiBibG9ja2VkIGJ5IHRoZSBicm93c2VyLlwiLFwicG9wdXAtY2xvc2VkLWJ5LXVzZXJcIjpcIlRoZSBwb3B1cCBoYXMgYmVlbiBjbG9zZWQgYnkgdGhlIHVzZXIgYmVmb3JlIGZpbmFsaXppbmcgdGhlIG9wZXJhdGlvbi5cIixcInByb3ZpZGVyLWFscmVhZHktbGlua2VkXCI6XCJVc2VyIGNhbiBvbmx5IGJlIGxpbmtlZCB0byBvbmUgaWRlbnRpdHkgZm9yIHRoZSBnaXZlbiBwcm92aWRlci5cIixcInF1b3RhLWV4Y2VlZGVkXCI6XCJUaGUgcHJvamVjdCdzIHF1b3RhIGZvciB0aGlzIG9wZXJhdGlvbiBoYXMgYmVlbiBleGNlZWRlZC5cIixcInJlZGlyZWN0LWNhbmNlbGxlZC1ieS11c2VyXCI6XCJUaGUgcmVkaXJlY3Qgb3BlcmF0aW9uIGhhcyBiZWVuIGNhbmNlbGxlZCBieSB0aGUgdXNlciBiZWZvcmUgZmluYWxpemluZy5cIixcInJlZGlyZWN0LW9wZXJhdGlvbi1wZW5kaW5nXCI6XCJBIHJlZGlyZWN0IHNpZ24taW4gb3BlcmF0aW9uIGlzIGFscmVhZHkgcGVuZGluZy5cIixcInJlamVjdGVkLWNyZWRlbnRpYWxcIjpcIlRoZSByZXF1ZXN0IGNvbnRhaW5zIG1hbGZvcm1lZCBvciBtaXNtYXRjaGluZyBjcmVkZW50aWFscy5cIixcInNlY29uZC1mYWN0b3ItYWxyZWFkeS1pbi11c2VcIjpcIlRoZSBzZWNvbmQgZmFjdG9yIGlzIGFscmVhZHkgZW5yb2xsZWQgb24gdGhpcyBhY2NvdW50LlwiLFwibWF4aW11bS1zZWNvbmQtZmFjdG9yLWNvdW50LWV4Y2VlZGVkXCI6XCJUaGUgbWF4aW11bSBhbGxvd2VkIG51bWJlciBvZiBzZWNvbmQgZmFjdG9ycyBvbiBhIHVzZXIgaGFzIGJlZW4gZXhjZWVkZWQuXCIsXCJ0ZW5hbnQtaWQtbWlzbWF0Y2hcIjpcIlRoZSBwcm92aWRlZCB0ZW5hbnQgSUQgZG9lcyBub3QgbWF0Y2ggdGhlIEF1dGggaW5zdGFuY2UncyB0ZW5hbnQgSURcIix0aW1lb3V0OlwiVGhlIG9wZXJhdGlvbiBoYXMgdGltZWQgb3V0LlwiLFwidXNlci10b2tlbi1leHBpcmVkXCI6XCJUaGUgdXNlcidzIGNyZWRlbnRpYWwgaXMgbm8gbG9uZ2VyIHZhbGlkLiBUaGUgdXNlciBtdXN0IHNpZ24gaW4gYWdhaW4uXCIsXCJ0b28tbWFueS1yZXF1ZXN0c1wiOlwiV2UgaGF2ZSBibG9ja2VkIGFsbCByZXF1ZXN0cyBmcm9tIHRoaXMgZGV2aWNlIGR1ZSB0byB1bnVzdWFsIGFjdGl2aXR5LiBUcnkgYWdhaW4gbGF0ZXIuXCIsXCJ1bmF1dGhvcml6ZWQtY29udGludWUtdXJpXCI6XCJUaGUgZG9tYWluIG9mIHRoZSBjb250aW51ZSBVUkwgaXMgbm90IHdoaXRlbGlzdGVkLiAgUGxlYXNlIHdoaXRlbGlzdCB0aGUgZG9tYWluIGluIHRoZSBGaXJlYmFzZSBjb25zb2xlLlwiLFwidW5zdXBwb3J0ZWQtZmlyc3QtZmFjdG9yXCI6XCJFbnJvbGxpbmcgYSBzZWNvbmQgZmFjdG9yIG9yIHNpZ25pbmcgaW4gd2l0aCBhIG11bHRpLWZhY3RvciBhY2NvdW50IHJlcXVpcmVzIHNpZ24taW4gd2l0aCBhIHN1cHBvcnRlZCBmaXJzdCBmYWN0b3IuXCIsXCJ1bnN1cHBvcnRlZC1wZXJzaXN0ZW5jZS10eXBlXCI6XCJUaGUgY3VycmVudCBlbnZpcm9ubWVudCBkb2VzIG5vdCBzdXBwb3J0IHRoZSBzcGVjaWZpZWQgcGVyc2lzdGVuY2UgdHlwZS5cIixcInVuc3VwcG9ydGVkLXRlbmFudC1vcGVyYXRpb25cIjpcIlRoaXMgb3BlcmF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgaW4gYSBtdWx0aS10ZW5hbnQgY29udGV4dC5cIixcInVudmVyaWZpZWQtZW1haWxcIjpcIlRoZSBvcGVyYXRpb24gcmVxdWlyZXMgYSB2ZXJpZmllZCBlbWFpbC5cIixcInVzZXItY2FuY2VsbGVkXCI6XCJUaGUgdXNlciBkaWQgbm90IGdyYW50IHlvdXIgYXBwbGljYXRpb24gdGhlIHBlcm1pc3Npb25zIGl0IHJlcXVlc3RlZC5cIixcInVzZXItbm90LWZvdW5kXCI6XCJUaGVyZSBpcyBubyB1c2VyIHJlY29yZCBjb3JyZXNwb25kaW5nIHRvIHRoaXMgaWRlbnRpZmllci4gVGhlIHVzZXIgbWF5IGhhdmUgYmVlbiBkZWxldGVkLlwiLFwidXNlci1kaXNhYmxlZFwiOlwiVGhlIHVzZXIgYWNjb3VudCBoYXMgYmVlbiBkaXNhYmxlZCBieSBhbiBhZG1pbmlzdHJhdG9yLlwiLFwidXNlci1taXNtYXRjaFwiOlwiVGhlIHN1cHBsaWVkIGNyZWRlbnRpYWxzIGRvIG5vdCBjb3JyZXNwb25kIHRvIHRoZSBwcmV2aW91c2x5IHNpZ25lZCBpbiB1c2VyLlwiLFwidXNlci1zaWduZWQtb3V0XCI6XCJcIixcIndlYWstcGFzc3dvcmRcIjpcIlRoZSBwYXNzd29yZCBtdXN0IGJlIDYgY2hhcmFjdGVycyBsb25nIG9yIG1vcmUuXCIsXCJ3ZWItc3RvcmFnZS11bnN1cHBvcnRlZFwiOlwiVGhpcyBicm93c2VyIGlzIG5vdCBzdXBwb3J0ZWQgb3IgM3JkIHBhcnR5IGNvb2tpZXMgYW5kIGRhdGEgbWF5IGJlIGRpc2FibGVkLlwifSxOPXtsZDp7VGE6XCJodHRwczovL3N0YWdpbmctaWRlbnRpdHl0b29sa2l0LnNhbmRib3guZ29vZ2xlYXBpcy5jb20vaWRlbnRpdHl0b29sa2l0L3YzL3JlbHlpbmdwYXJ0eS9cIixaYTpcImh0dHBzOi8vc3RhZ2luZy1zZWN1cmV0b2tlbi5zYW5kYm94Lmdvb2dsZWFwaXMuY29tL3YxL3Rva2VuXCIsV2E6XCJodHRwczovL3N0YWdpbmctaWRlbnRpdHl0b29sa2l0LnNhbmRib3guZ29vZ2xlYXBpcy5jb20vdjIvXCIsaWQ6XCJiXCJ9LHNkOntUYTpcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2lkZW50aXR5dG9vbGtpdC92My9yZWx5aW5ncGFydHkvXCIsWmE6XCJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZWFwaXMuY29tL3YxL3Rva2VuXCIsV2E6XCJodHRwczovL2lkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNvbS92Mi9cIixpZDpcInBcIn0sdWQ6e1RhOlwiaHR0cHM6Ly9zdGFnaW5nLXd3dy5zYW5kYm94Lmdvb2dsZWFwaXMuY29tL2lkZW50aXR5dG9vbGtpdC92My9yZWx5aW5ncGFydHkvXCIsWmE6XCJodHRwczovL3N0YWdpbmctc2VjdXJldG9rZW4uc2FuZGJveC5nb29nbGVhcGlzLmNvbS92MS90b2tlblwiLFdhOlwiaHR0cHM6Ly9zdGFnaW5nLWlkZW50aXR5dG9vbGtpdC5zYW5kYm94Lmdvb2dsZWFwaXMuY29tL3YyL1wiLGlkOlwic1wifSx2ZDp7VGE6XCJodHRwczovL3d3dy1nb29nbGVhcGlzLXRlc3Quc2FuZGJveC5nb29nbGUuY29tL2lkZW50aXR5dG9vbGtpdC92My9yZWx5aW5ncGFydHkvXCIsWmE6XCJodHRwczovL3Rlc3Qtc2VjdXJldG9rZW4uc2FuZGJveC5nb29nbGVhcGlzLmNvbS92MS90b2tlblwiLFdhOlwiaHR0cHM6Ly90ZXN0LWlkZW50aXR5dG9vbGtpdC5zYW5kYm94Lmdvb2dsZWFwaXMuY29tL3YyL1wiLGlkOlwidFwifX07ZnVuY3Rpb24gXyh0KXtmb3IodmFyIGUgaW4gTilpZihOW2VdLmlkPT09dClyZXR1cm4gdD1OW2VdLHtmaXJlYmFzZUVuZHBvaW50OnQuVGEsc2VjdXJlVG9rZW5FbmRwb2ludDp0LlphLGlkZW50aXR5UGxhdGZvcm1FbmRwb2ludDp0LldhfTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBPKHQpe2lmKHQpdHJ5e3JldHVybiB0LiRnb29nX1RoZW5hYmxlfWNhdGNoKHQpe3JldHVybn19ZnVuY3Rpb24gQyh0KXt2YXIgZTtFcnJvci5jYXB0dXJlU3RhY2tUcmFjZT9FcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLEMpOihlPUVycm9yKCkuc3RhY2spJiYodGhpcy5zdGFjaz1lKSx0JiYodGhpcy5tZXNzYWdlPVN0cmluZyh0KSl9ZnVuY3Rpb24gUih0LGUpe2Zvcih2YXIgbj1cIlwiLGk9KHQ9dC5zcGxpdChcIiVzXCIpKS5sZW5ndGgtMSxyPTA7cjxpO3IrKyluKz10W3JdKyhyPGUubGVuZ3RoP2Vbcl06XCIlc1wiKTtDLmNhbGwodGhpcyxuK3RbaV0pfWZ1bmN0aW9uIEQodCl7dGhyb3cgbmV3IFIoXCJGYWlsdXJlXCIrKHQ/XCI6IFwiK3Q6XCJcIiksQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpKX1mdW5jdGlvbiBQKHQsZSl7dGhpcy5jPXQsdGhpcy5mPWUsdGhpcy5iPTAsdGhpcy5hPW51bGx9ZnVuY3Rpb24gTCh0LGUpe3QuZihlKSx0LmI8MTAwJiYodC5iKyssZS5uZXh0PXQuYSx0LmE9ZSl9ZnVuY3Rpb24geCgpe3RoaXMuYj10aGlzLmE9bnVsbH1BPV8oXCJfX0VJRF9fXCIpP1wiX19FSURfX1wiOnZvaWQgMCx3KEMsRXJyb3IpLEMucHJvdG90eXBlLm5hbWU9XCJDdXN0b21FcnJvclwiLHcoUixDKSxSLnByb3RvdHlwZS5uYW1lPVwiQXNzZXJ0aW9uRXJyb3JcIixQLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gMDx0aGlzLmI/KHRoaXMuYi0tLHQ9dGhpcy5hLHRoaXMuYT10Lm5leHQsdC5uZXh0PW51bGwpOnQ9dGhpcy5jKCksdH07dmFyIE09bmV3IFAoZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGp9LGZ1bmN0aW9uKHQpe3QucmVzZXQoKX0pO2Z1bmN0aW9uIGooKXt0aGlzLm5leHQ9dGhpcy5iPXRoaXMuYT1udWxsfXgucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0LGUpe3ZhciBuPU0uZ2V0KCk7bi5zZXQodCxlKSx0aGlzLmI/dGhpcy5iLm5leHQ9bjp0aGlzLmE9bix0aGlzLmI9bn0sai5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQsZSl7dGhpcy5hPXQsdGhpcy5iPWUsdGhpcy5uZXh0PW51bGx9LGoucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5uZXh0PXRoaXMuYj10aGlzLmE9bnVsbH07dmFyIFU9QXJyYXkucHJvdG90eXBlLmluZGV4T2Y/ZnVuY3Rpb24odCxlKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbCh0LGUsdm9pZCAwKX06ZnVuY3Rpb24odCxlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm5cInN0cmluZ1wiIT10eXBlb2YgZXx8MSE9ZS5sZW5ndGg/LTE6dC5pbmRleE9mKGUsMCk7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspaWYobiBpbiB0JiZ0W25dPT09ZSlyZXR1cm4gbjtyZXR1cm4tMX0sVj1BcnJheS5wcm90b3R5cGUuZm9yRWFjaD9mdW5jdGlvbih0LGUsbil7QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbCh0LGUsbil9OmZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIGk9dC5sZW5ndGgscj1cInN0cmluZ1wiPT10eXBlb2YgdD90LnNwbGl0KFwiXCIpOnQsbz0wO288aTtvKyspbyBpbiByJiZlLmNhbGwobixyW29dLG8sdCl9O3ZhciBGPUFycmF5LnByb3RvdHlwZS5maWx0ZXI/ZnVuY3Rpb24odCxlKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKHQsZSx2b2lkIDApfTpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbixpPXQubGVuZ3RoLHI9W10sbz0wLGE9XCJzdHJpbmdcIj09dHlwZW9mIHQ/dC5zcGxpdChcIlwiKTp0LHM9MDtzPGk7cysrKXMgaW4gYSYmKG49YVtzXSxlLmNhbGwodm9pZCAwLG4scyx0KSYmKHJbbysrXT1uKSk7cmV0dXJuIHJ9LHE9QXJyYXkucHJvdG90eXBlLm1hcD9mdW5jdGlvbih0LGUpe3JldHVybiBBcnJheS5wcm90b3R5cGUubWFwLmNhbGwodCxlLHZvaWQgMCl9OmZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXQubGVuZ3RoLGk9QXJyYXkobikscj1cInN0cmluZ1wiPT10eXBlb2YgdD90LnNwbGl0KFwiXCIpOnQsbz0wO288bjtvKyspbyBpbiByJiYoaVtvXT1lLmNhbGwodm9pZCAwLHJbb10sbyx0KSk7cmV0dXJuIGl9LEg9QXJyYXkucHJvdG90eXBlLnNvbWU/ZnVuY3Rpb24odCxlKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLnNvbWUuY2FsbCh0LGUsdm9pZCAwKX06ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dC5sZW5ndGgsaT1cInN0cmluZ1wiPT10eXBlb2YgdD90LnNwbGl0KFwiXCIpOnQscj0wO3I8bjtyKyspaWYociBpbiBpJiZlLmNhbGwodm9pZCAwLGlbcl0scix0KSlyZXR1cm4hMDtyZXR1cm4hMX07ZnVuY3Rpb24gSyh0LGUpe3JldHVybiAwPD1VKHQsZSl9ZnVuY3Rpb24gRyh0LGUpe3ZhciBuO3JldHVybihuPTA8PShlPVUodCxlKSkpJiZBcnJheS5wcm90b3R5cGUuc3BsaWNlLmNhbGwodCxlLDEpLG59ZnVuY3Rpb24gQihuLGkpeyFmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1cInN0cmluZ1wiPT10eXBlb2YgdD90LnNwbGl0KFwiXCIpOnQsaT10Lmxlbmd0aC0xOzA8PWk7LS1pKWkgaW4gbiYmZS5jYWxsKHZvaWQgMCxuW2ldLGksdCl9KG4sZnVuY3Rpb24odCxlKXtpLmNhbGwodm9pZCAwLHQsZSxuKSYmMT09QXJyYXkucHJvdG90eXBlLnNwbGljZS5jYWxsKG4sZSwxKS5sZW5ndGgmJjB9KX1mdW5jdGlvbiBXKCl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5jb25jYXQuYXBwbHkoW10sYXJndW1lbnRzKX1mdW5jdGlvbiBYKHQpe3ZhciBlPXQubGVuZ3RoO2lmKDA8ZSl7Zm9yKHZhciBuPUFycmF5KGUpLGk9MDtpPGU7aSsrKW5baV09dFtpXTtyZXR1cm4gbn1yZXR1cm5bXX12YXIgSixZPVN0cmluZy5wcm90b3R5cGUudHJpbT9mdW5jdGlvbih0KXtyZXR1cm4gdC50cmltKCl9OmZ1bmN0aW9uKHQpe3JldHVybi9eW1xcc1xceGEwXSooW1xcc1xcU10qPylbXFxzXFx4YTBdKiQvLmV4ZWModClbMV19LHo9LyYvZywkPS88L2csWj0vPi9nLFE9L1wiL2csdHQ9LycvZyxldD0vXFx4MDAvZyxudD0vW1xceDAwJjw+XCInXS87ZnVuY3Rpb24gaXQodCxlKXtyZXR1cm4tMSE9dC5pbmRleE9mKGUpfWZ1bmN0aW9uIHJ0KHQsZSl7cmV0dXJuIHQ8ZT8tMTplPHQ/MTowfXQ6e3ZhciBvdD1sLm5hdmlnYXRvcjtpZihvdCl7b3Q9b3QudXNlckFnZW50O2lmKG90KXtKPW90O2JyZWFrIHR9fUo9XCJcIn1mdW5jdGlvbiBhdCh0KXtyZXR1cm4gaXQoSix0KX1mdW5jdGlvbiBzdCh0LGUpe2Zvcih2YXIgbiBpbiB0KWUuY2FsbCh2b2lkIDAsdFtuXSxuLHQpfWZ1bmN0aW9uIHV0KHQpe2Zvcih2YXIgZSBpbiB0KXJldHVybjtyZXR1cm4gMX1mdW5jdGlvbiBjdCh0KXt2YXIgZSxuPXt9O2ZvcihlIGluIHQpbltlXT10W2VdO3JldHVybiBufXZhciBodD1cImNvbnN0cnVjdG9yIGhhc093blByb3BlcnR5IGlzUHJvdG90eXBlT2YgcHJvcGVydHlJc0VudW1lcmFibGUgdG9Mb2NhbGVTdHJpbmcgdG9TdHJpbmcgdmFsdWVPZlwiLnNwbGl0KFwiIFwiKTtmdW5jdGlvbiBsdCh0KXtmb3IodmFyIGUsbixpPTE7aTxhcmd1bWVudHMubGVuZ3RoO2krKyl7Zm9yKGUgaW4gbj1hcmd1bWVudHNbaV0pdFtlXT1uW2VdO2Zvcih2YXIgcj0wO3I8aHQubGVuZ3RoO3IrKyllPWh0W3JdLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLGUpJiYodFtlXT1uW2VdKX19ZnVuY3Rpb24gZnQodCxlKXt0Ont0cnl7dmFyIG49dCYmdC5vd25lckRvY3VtZW50LG49biYmKG4uZGVmYXVsdFZpZXd8fG4ucGFyZW50V2luZG93KTtpZigobj1ufHxsKS5FbGVtZW50JiZuLkxvY2F0aW9uKXt2YXIgaT1uO2JyZWFrIHR9fWNhdGNoKHQpe31pPW51bGx9aWYoaSYmdm9pZCAwIT09aVtlXSYmKCF0fHwhKHQgaW5zdGFuY2VvZiBpW2VdKSYmKHQgaW5zdGFuY2VvZiBpLkxvY2F0aW9ufHx0IGluc3RhbmNlb2YgaS5FbGVtZW50KSkpe2lmKG0odCkpdHJ5e3ZhciByPXQuY29uc3RydWN0b3IuZGlzcGxheU5hbWV8fHQuY29uc3RydWN0b3IubmFtZXx8T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfWNhdGNoKHQpe3I9XCI8b2JqZWN0IGNvdWxkIG5vdCBiZSBzdHJpbmdpZmllZD5cIn1lbHNlIHI9dm9pZCAwPT09dD9cInVuZGVmaW5lZFwiOm51bGw9PT10P1wibnVsbFwiOnR5cGVvZiB0O0QoXCJBcmd1bWVudCBpcyBub3QgYSAlcyAob3IgYSBub24tRWxlbWVudCwgbm9uLUxvY2F0aW9uIG1vY2spOyBnb3Q6ICVzXCIsZSxyKX19ZnVuY3Rpb24gZHQodCxlKXt0aGlzLmE9dD09PWd0JiZlfHxcIlwiLHRoaXMuYj1tdH1mdW5jdGlvbiBwdCh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGR0JiZ0LmNvbnN0cnVjdG9yPT09ZHQmJnQuYj09PW10P3QuYTooRChcImV4cGVjdGVkIG9iamVjdCBvZiB0eXBlIENvbnN0LCBnb3QgJ1wiK3QrXCInXCIpLFwidHlwZV9lcnJvcjpDb25zdFwiKX1kdC5wcm90b3R5cGUuc2E9ITAsZHQucHJvdG90eXBlLnJhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYX0sZHQucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJDb25zdHtcIit0aGlzLmErXCJ9XCJ9O3ZhciB2dCxtdD17fSxndD17fTtmdW5jdGlvbiBidCgpe2lmKHZvaWQgMD09PXZ0KXt2YXIgdD1udWxsLGU9bC50cnVzdGVkVHlwZXM7aWYoZSYmZS5jcmVhdGVQb2xpY3kpe3RyeXt0PWUuY3JlYXRlUG9saWN5KFwiZ29vZyNodG1sXCIse2NyZWF0ZUhUTUw6SSxjcmVhdGVTY3JpcHQ6SSxjcmVhdGVTY3JpcHRVUkw6SX0pfWNhdGNoKHQpe2wuY29uc29sZSYmbC5jb25zb2xlLmVycm9yKHQubWVzc2FnZSl9dnQ9dH1lbHNlIHZ0PXR9cmV0dXJuIHZ0fWZ1bmN0aW9uIHl0KHQsZSl7dGhpcy5hPWU9PT1BdD90OlwiXCJ9ZnVuY3Rpb24gd3QodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiB5dCYmdC5jb25zdHJ1Y3Rvcj09PXl0P3QuYTooRChcImV4cGVjdGVkIG9iamVjdCBvZiB0eXBlIFRydXN0ZWRSZXNvdXJjZVVybCwgZ290ICdcIit0K1wiJyBvZiB0eXBlIFwiK2QodCkpLFwidHlwZV9lcnJvcjpUcnVzdGVkUmVzb3VyY2VVcmxcIil9ZnVuY3Rpb24gSXQodCxuKXt2YXIgZSxpPXB0KHQpO2lmKCFFdC50ZXN0KGkpKXRocm93IEVycm9yKFwiSW52YWxpZCBUcnVzdGVkUmVzb3VyY2VVcmwgZm9ybWF0OiBcIitpKTtyZXR1cm4gdD1pLnJlcGxhY2UoVHQsZnVuY3Rpb24odCxlKXtpZighT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4sZSkpdGhyb3cgRXJyb3IoJ0ZvdW5kIG1hcmtlciwgXCInK2UrJ1wiLCBpbiBmb3JtYXQgc3RyaW5nLCBcIicraSsnXCIsIGJ1dCBubyB2YWxpZCBsYWJlbCBtYXBwaW5nIGZvdW5kIGluIGFyZ3M6ICcrSlNPTi5zdHJpbmdpZnkobikpO3JldHVybih0PW5bZV0paW5zdGFuY2VvZiBkdD9wdCh0KTplbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKHQpKX0pLGU9dCx0PWJ0KCksbmV3IHl0KGU9dD90LmNyZWF0ZVNjcmlwdFVSTChlKTplLEF0KX15dC5wcm90b3R5cGUuc2E9ITAseXQucHJvdG90eXBlLnJhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYS50b1N0cmluZygpfSx5dC5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIlRydXN0ZWRSZXNvdXJjZVVybHtcIit0aGlzLmErXCJ9XCJ9O3ZhciBUdD0vJXsoXFx3Kyl9L2csRXQ9L14oKGh0dHBzOik/XFwvXFwvWzAtOWEtei46W1xcXS1dK1xcL3xcXC9bXi9cXFxcXXxbXjovXFxcXCVdK1xcL3xbXjovXFxcXCVdKls/I118YWJvdXQ6YmxhbmsjKS9pLEF0PXt9O2Z1bmN0aW9uIGt0KHQsZSl7dGhpcy5hPWU9PT1EdD90OlwiXCJ9ZnVuY3Rpb24gU3QodCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBrdCYmdC5jb25zdHJ1Y3Rvcj09PWt0P3QuYTooRChcImV4cGVjdGVkIG9iamVjdCBvZiB0eXBlIFNhZmVVcmwsIGdvdCAnXCIrdCtcIicgb2YgdHlwZSBcIitkKHQpKSxcInR5cGVfZXJyb3I6U2FmZVVybFwiKX1rdC5wcm90b3R5cGUuc2E9ITAsa3QucHJvdG90eXBlLnJhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYS50b1N0cmluZygpfSxrdC5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIlNhZmVVcmx7XCIrdGhpcy5hK1wifVwifTt2YXIgTnQ9L14oPzphdWRpb1xcLyg/OjNncHAyfDNncHB8YWFjfEwxNnxtaWRpfG1wM3xtcDR8bXBlZ3xvZ2F8b2dnfG9wdXN8eC1tNGF8eC1tYXRyb3NrYXx4LXdhdnx3YXZ8d2VibSl8Zm9udFxcL1xcdyt8aW1hZ2VcXC8oPzpibXB8Z2lmfGpwZWd8anBnfHBuZ3x0aWZmfHdlYnB8eC1pY29uKXx0ZXh0XFwvY3N2fHZpZGVvXFwvKD86bXBlZ3xtcDR8b2dnfHdlYm18cXVpY2t0aW1lfHgtbWF0cm9za2EpKSg/OjtcXHcrPSg/Olxcdyt8XCJbXFx3Oyw9IF0rXCIpKSokL2ksX3Q9L15kYXRhOiguKik7YmFzZTY0LFthLXowLTkrXFwvXSs9KiQvaSxPdD0vXig/Oig/Omh0dHBzP3xtYWlsdG98ZnRwKTp8W146Lz8jXSooPzpbLz8jXXwkKSkvaTtmdW5jdGlvbiBDdCh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIGt0P3Q6KHQ9XCJvYmplY3RcIj09dHlwZW9mIHQmJnQuc2E/dC5yYSgpOlN0cmluZyh0KSx0PU90LnRlc3QodCl8fChlPSh0PSh0PVN0cmluZyh0KSkucmVwbGFjZSgvKCUwQXwlMEQpL2csXCJcIikpLm1hdGNoKF90KSkmJk50LnRlc3QoZVsxXSk/bmV3IGt0KHQsRHQpOm51bGwpO3ZhciBlfWZ1bmN0aW9uIFJ0KHQpe3JldHVybiB0IGluc3RhbmNlb2Yga3Q/dDoodD1cIm9iamVjdFwiPT10eXBlb2YgdCYmdC5zYT90LnJhKCk6U3RyaW5nKHQpLG5ldyBrdCh0PSFPdC50ZXN0KHQpP1wiYWJvdXQ6aW52YWxpZCN6Q2xvc3VyZXpcIjp0LER0KSl9dmFyIER0PXt9LFB0PW5ldyBrdChcImFib3V0OmludmFsaWQjekNsb3N1cmV6XCIsRHQpO2Z1bmN0aW9uIEx0KHQsZSxuKXt0aGlzLmE9bj09PXh0P3Q6XCJcIn1MdC5wcm90b3R5cGUuc2E9ITAsTHQucHJvdG90eXBlLnJhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYS50b1N0cmluZygpfSxMdC5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIlNhZmVIdG1se1wiK3RoaXMuYStcIn1cIn07dmFyIHh0PXt9O2Z1bmN0aW9uIE10KHQsZSxuLGkpe3JldHVybiB0PXQgaW5zdGFuY2VvZiBrdD90OlJ0KHQpLGU9ZXx8bCxuPW4gaW5zdGFuY2VvZiBkdD9wdChuKTpufHxcIlwiLGUub3BlbihTdCh0KSxuLGksdm9pZCAwKX1mdW5jdGlvbiBqdCh0KXtmb3IodmFyIGU9dC5zcGxpdChcIiVzXCIpLG49XCJcIixpPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKTtpLmxlbmd0aCYmMTxlLmxlbmd0aDspbis9ZS5zaGlmdCgpK2kuc2hpZnQoKTtyZXR1cm4gbitlLmpvaW4oXCIlc1wiKX1mdW5jdGlvbiBVdCh0KXtyZXR1cm4gbnQudGVzdCh0KSYmKC0xIT0odD0tMSE9KHQ9LTEhPSh0PS0xIT0odD0tMSE9KHQ9LTEhPXQuaW5kZXhPZihcIiZcIik/dC5yZXBsYWNlKHosXCImYW1wO1wiKTp0KS5pbmRleE9mKFwiPFwiKT90LnJlcGxhY2UoJCxcIiZsdDtcIik6dCkuaW5kZXhPZihcIj5cIik/dC5yZXBsYWNlKFosXCImZ3Q7XCIpOnQpLmluZGV4T2YoJ1wiJyk/dC5yZXBsYWNlKFEsXCImcXVvdDtcIik6dCkuaW5kZXhPZihcIidcIik/dC5yZXBsYWNlKHR0LFwiJiMzOTtcIik6dCkuaW5kZXhPZihcIlxcMFwiKSYmKHQ9dC5yZXBsYWNlKGV0LFwiJiMwO1wiKSkpLHR9ZnVuY3Rpb24gVnQodCl7cmV0dXJuIFZ0W1wiIFwiXSh0KSx0fVZ0W1wiIFwiXT1hO3ZhciBGdCxxdD1hdChcIk9wZXJhXCIpLEh0PWF0KFwiVHJpZGVudFwiKXx8YXQoXCJNU0lFXCIpLEt0PWF0KFwiRWRnZVwiKSxHdD1LdHx8SHQsQnQ9YXQoXCJHZWNrb1wiKSYmIShpdChKLnRvTG93ZXJDYXNlKCksXCJ3ZWJraXRcIikmJiFhdChcIkVkZ2VcIikpJiYhKGF0KFwiVHJpZGVudFwiKXx8YXQoXCJNU0lFXCIpKSYmIWF0KFwiRWRnZVwiKSxXdD1pdChKLnRvTG93ZXJDYXNlKCksXCJ3ZWJraXRcIikmJiFhdChcIkVkZ2VcIik7ZnVuY3Rpb24gWHQoKXt2YXIgdD1sLmRvY3VtZW50O3JldHVybiB0P3QuZG9jdW1lbnRNb2RlOnZvaWQgMH10Ont2YXIgSnQ9XCJcIixZdD0oWXQ9SixCdD8vcnY6KFteXFwpO10rKShcXCl8OykvLmV4ZWMoWXQpOkt0Py9FZGdlXFwvKFtcXGRcXC5dKykvLmV4ZWMoWXQpOkh0Py9cXGIoPzpNU0lFfHJ2KVs6IF0oW15cXCk7XSspKFxcKXw7KS8uZXhlYyhZdCk6V3Q/L1dlYktpdFxcLyhcXFMrKS8uZXhlYyhZdCk6cXQ/Lyg/OlZlcnNpb24pWyBcXC9dPyhcXFMrKS8uZXhlYyhZdCk6dm9pZCAwKTtpZihZdCYmKEp0PVl0P1l0WzFdOlwiXCIpLEh0KXtZdD1YdCgpO2lmKG51bGwhPVl0JiZZdD5wYXJzZUZsb2F0KEp0KSl7RnQ9U3RyaW5nKFl0KTticmVhayB0fX1GdD1KdH12YXIgenQ9e307ZnVuY3Rpb24gJHQocyl7cmV0dXJuIHQ9cyxlPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PTAsZT1ZKFN0cmluZyhGdCkpLnNwbGl0KFwiLlwiKSxuPVkoU3RyaW5nKHMpKS5zcGxpdChcIi5cIiksaT1NYXRoLm1heChlLmxlbmd0aCxuLmxlbmd0aCkscj0wOzA9PXQmJnI8aTtyKyspZm9yKHZhciBvPWVbcl18fFwiXCIsYT1uW3JdfHxcIlwiO289LyhcXGQqKShcXEQqKSguKikvLmV4ZWMobyl8fFtcIlwiLFwiXCIsXCJcIixcIlwiXSxhPS8oXFxkKikoXFxEKikoLiopLy5leGVjKGEpfHxbXCJcIixcIlwiLFwiXCIsXCJcIl0sKDAhPW9bMF0ubGVuZ3RofHwwIT1hWzBdLmxlbmd0aCkmJih0PXJ0KDA9PW9bMV0ubGVuZ3RoPzA6cGFyc2VJbnQob1sxXSwxMCksMD09YVsxXS5sZW5ndGg/MDpwYXJzZUludChhWzFdLDEwKSl8fHJ0KDA9PW9bMl0ubGVuZ3RoLDA9PWFbMl0ubGVuZ3RoKXx8cnQob1syXSxhWzJdKSxvPW9bM10sYT1hWzNdLDA9PXQpOyk7cmV0dXJuIDA8PXR9LG49enQsT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4sdCk/blt0XTpuW3RdPWUodCk7dmFyIHQsZSxufXZhciBadD1sLmRvY3VtZW50JiZIdCYmKFh0KCl8fHBhcnNlSW50KEZ0LDEwKSl8fHZvaWQgMDt0cnl7bmV3IHNlbGYuT2Zmc2NyZWVuQ2FudmFzKDAsMCkuZ2V0Q29udGV4dChcIjJkXCIpfWNhdGNoKHQpe312YXIgUXQ9IUh0fHw5PD1OdW1iZXIoWnQpO2Z1bmN0aW9uIHRlKHQpe3ZhciBlPWRvY3VtZW50O3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0P2UuZ2V0RWxlbWVudEJ5SWQodCk6dH1mdW5jdGlvbiBlZShuLHQpe3N0KHQsZnVuY3Rpb24odCxlKXt0JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmdC5zYSYmKHQ9dC5yYSgpKSxcInN0eWxlXCI9PWU/bi5zdHlsZS5jc3NUZXh0PXQ6XCJjbGFzc1wiPT1lP24uY2xhc3NOYW1lPXQ6XCJmb3JcIj09ZT9uLmh0bWxGb3I9dDpyZS5oYXNPd25Qcm9wZXJ0eShlKT9uLnNldEF0dHJpYnV0ZShyZVtlXSx0KTowPT1lLmxhc3RJbmRleE9mKFwiYXJpYS1cIiwwKXx8MD09ZS5sYXN0SW5kZXhPZihcImRhdGEtXCIsMCk/bi5zZXRBdHRyaWJ1dGUoZSx0KTpuW2VdPXR9KX12YXIgbmUsaWUscmU9e2NlbGxwYWRkaW5nOlwiY2VsbFBhZGRpbmdcIixjZWxsc3BhY2luZzpcImNlbGxTcGFjaW5nXCIsY29sc3BhbjpcImNvbFNwYW5cIixmcmFtZWJvcmRlcjpcImZyYW1lQm9yZGVyXCIsaGVpZ2h0OlwiaGVpZ2h0XCIsbWF4bGVuZ3RoOlwibWF4TGVuZ3RoXCIsbm9uY2U6XCJub25jZVwiLHJvbGU6XCJyb2xlXCIscm93c3BhbjpcInJvd1NwYW5cIix0eXBlOlwidHlwZVwiLHVzZW1hcDpcInVzZU1hcFwiLHZhbGlnbjpcInZBbGlnblwiLHdpZHRoOlwid2lkdGhcIn07ZnVuY3Rpb24gb2UoKXt2YXIgdCxlPWFyZ3VtZW50cyxuPWRvY3VtZW50LGk9U3RyaW5nKGVbMF0pLHI9ZVsxXTtyZXR1cm4hUXQmJnImJihyLm5hbWV8fHIudHlwZSkmJihpPVtcIjxcIixpXSxyLm5hbWUmJmkucHVzaCgnIG5hbWU9XCInLFV0KHIubmFtZSksJ1wiJyksci50eXBlJiYoaS5wdXNoKCcgdHlwZT1cIicsVXQoci50eXBlKSwnXCInKSxsdCh0PXt9LHIpLGRlbGV0ZSB0LnR5cGUscj10KSxpLnB1c2goXCI+XCIpLGk9aS5qb2luKFwiXCIpKSxpPWFlKG4saSksciYmKFwic3RyaW5nXCI9PXR5cGVvZiByP2kuY2xhc3NOYW1lPXI6QXJyYXkuaXNBcnJheShyKT9pLmNsYXNzTmFtZT1yLmpvaW4oXCIgXCIpOmVlKGkscikpLDI8ZS5sZW5ndGgmJmZ1bmN0aW9uKGUsbix0KXtmdW5jdGlvbiBpKHQpe3QmJm4uYXBwZW5kQ2hpbGQoXCJzdHJpbmdcIj09dHlwZW9mIHQ/ZS5jcmVhdGVUZXh0Tm9kZSh0KTp0KX1mb3IodmFyIHI9MjtyPHQubGVuZ3RoO3IrKyl7dmFyIG89dFtyXTtpZighcChvKXx8bShvKSYmMDxvLm5vZGVUeXBlKWkobyk7ZWxzZXt0OntpZihvJiZcIm51bWJlclwiPT10eXBlb2Ygby5sZW5ndGgpe2lmKG0obykpe3ZhciBhPVwiZnVuY3Rpb25cIj09dHlwZW9mIG8uaXRlbXx8XCJzdHJpbmdcIj09dHlwZW9mIG8uaXRlbTticmVhayB0fWlmKHYobykpe2E9XCJmdW5jdGlvblwiPT10eXBlb2Ygby5pdGVtO2JyZWFrIHR9fWE9ITF9VihhP1gobyk6byxpKX19fShuLGksZSksaX1mdW5jdGlvbiBhZSh0LGUpe3JldHVybiBlPVN0cmluZyhlKSxcImFwcGxpY2F0aW9uL3hodG1sK3htbFwiPT09dC5jb250ZW50VHlwZSYmKGU9ZS50b0xvd2VyQ2FzZSgpKSx0LmNyZWF0ZUVsZW1lbnQoZSl9ZnVuY3Rpb24gc2UodCl7bC5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgdH0sMCl9ZnVuY3Rpb24gdWUodCxlKXtpZXx8ZnVuY3Rpb24oKXt7dmFyIHQ7aWU9bC5Qcm9taXNlJiZsLlByb21pc2UucmVzb2x2ZT8odD1sLlByb21pc2UucmVzb2x2ZSh2b2lkIDApLGZ1bmN0aW9uKCl7dC50aGVuKGxlKX0pOmZ1bmN0aW9uKCl7dmFyIHQ9bGU7IXYobC5zZXRJbW1lZGlhdGUpfHxsLldpbmRvdyYmbC5XaW5kb3cucHJvdG90eXBlJiYhYXQoXCJFZGdlXCIpJiZsLldpbmRvdy5wcm90b3R5cGUuc2V0SW1tZWRpYXRlPT1sLnNldEltbWVkaWF0ZT8obmU9bmV8fGZ1bmN0aW9uKCl7dmFyIHQ9bC5NZXNzYWdlQ2hhbm5lbDtpZih2b2lkIDA9PT0odD12b2lkIDA9PT10JiZcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cucG9zdE1lc3NhZ2UmJndpbmRvdy5hZGRFdmVudExpc3RlbmVyJiYhYXQoXCJQcmVzdG9cIik/ZnVuY3Rpb24oKXt2YXIgdD1hZShkb2N1bWVudCxcIklGUkFNRVwiKTt0LnN0eWxlLmRpc3BsYXk9XCJub25lXCIsZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKHQpO3ZhciBlPXQuY29udGVudFdpbmRvdzsodD1lLmRvY3VtZW50KS5vcGVuKCksdC5jbG9zZSgpO3ZhciBuPVwiY2FsbEltbWVkaWF0ZVwiK01hdGgucmFuZG9tKCksaT1cImZpbGU6XCI9PWUubG9jYXRpb24ucHJvdG9jb2w/XCIqXCI6ZS5sb2NhdGlvbi5wcm90b2NvbCtcIi8vXCIrZS5sb2NhdGlvbi5ob3N0O3Q9YihmdW5jdGlvbih0KXtcIipcIiE9aSYmdC5vcmlnaW4hPWl8fHQuZGF0YSE9bnx8dGhpcy5wb3J0MS5vbm1lc3NhZ2UoKX0sdGhpcyksZS5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLHQsITEpLHRoaXMucG9ydDE9e30sdGhpcy5wb3J0Mj17cG9zdE1lc3NhZ2U6ZnVuY3Rpb24oKXtlLnBvc3RNZXNzYWdlKG4saSl9fX06dCl8fGF0KFwiVHJpZGVudFwiKXx8YXQoXCJNU0lFXCIpKXJldHVybiBmdW5jdGlvbih0KXtsLnNldFRpbWVvdXQodCwwKX07dmFyIGU9bmV3IHQsbj17fSxpPW47cmV0dXJuIGUucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKCl7dmFyIHQ7dm9pZCAwIT09bi5uZXh0JiYodD0obj1uLm5leHQpLkdiLG4uR2I9bnVsbCx0KCkpfSxmdW5jdGlvbih0KXtpLm5leHQ9e0diOnR9LGk9aS5uZXh0LGUucG9ydDIucG9zdE1lc3NhZ2UoMCl9fSgpKSh0KTpsLnNldEltbWVkaWF0ZSh0KX19fSgpLGNlfHwoaWUoKSxjZT0hMCksaGUuYWRkKHQsZSl9dmFyIGNlPSExLGhlPW5ldyB4O2Z1bmN0aW9uIGxlKCl7Zm9yKHZhciB0LGUsbjtuPWU9dm9pZCAwLG49bnVsbCwoZT1oZSkuYSYmKG49ZS5hLGUuYT1lLmEubmV4dCxlLmF8fChlLmI9bnVsbCksbi5uZXh0PW51bGwpLHQ9bjspe3RyeXt0LmEuY2FsbCh0LmIpfWNhdGNoKHQpe3NlKHQpfUwoTSx0KX1jZT0hMX1mdW5jdGlvbiBmZSh0LGUpe2lmKHRoaXMuYT1kZSx0aGlzLmk9dm9pZCAwLHRoaXMuZj10aGlzLmI9dGhpcy5jPW51bGwsdGhpcy5nPXRoaXMuaD0hMSx0IT1hKXRyeXt2YXIgbj10aGlzO3QuY2FsbChlLGZ1bmN0aW9uKHQpe2tlKG4scGUsdCl9LGZ1bmN0aW9uKHQpe2lmKCEodCBpbnN0YW5jZW9mIERlKSl0cnl7aWYodCBpbnN0YW5jZW9mIEVycm9yKXRocm93IHQ7dGhyb3cgRXJyb3IoXCJQcm9taXNlIHJlamVjdGVkLlwiKX1jYXRjaCh0KXt9a2Uobix2ZSx0KX0pfWNhdGNoKHQpe2tlKHRoaXMsdmUsdCl9fXZhciBkZT0wLHBlPTIsdmU9MztmdW5jdGlvbiBtZSgpe3RoaXMubmV4dD10aGlzLmY9dGhpcy5iPXRoaXMuZz10aGlzLmE9bnVsbCx0aGlzLmM9ITF9bWUucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5mPXRoaXMuYj10aGlzLmc9dGhpcy5hPW51bGwsdGhpcy5jPSExfTt2YXIgZ2U9bmV3IFAoZnVuY3Rpb24oKXtyZXR1cm4gbmV3IG1lfSxmdW5jdGlvbih0KXt0LnJlc2V0KCl9KTtmdW5jdGlvbiBiZSh0LGUsbil7dmFyIGk9Z2UuZ2V0KCk7cmV0dXJuIGkuZz10LGkuYj1lLGkuZj1uLGl9ZnVuY3Rpb24geWUodCl7aWYodCBpbnN0YW5jZW9mIGZlKXJldHVybiB0O3ZhciBlPW5ldyBmZShhKTtyZXR1cm4ga2UoZSxwZSx0KSxlfWZ1bmN0aW9uIHdlKG4pe3JldHVybiBuZXcgZmUoZnVuY3Rpb24odCxlKXtlKG4pfSl9ZnVuY3Rpb24gSWUodCxlLG4pe1NlKHQsZSxuLG51bGwpfHx1ZSh5KGUsdCkpfWZ1bmN0aW9uIFRlKG4pe3JldHVybiBuZXcgZmUoZnVuY3Rpb24oaSl7dmFyIHI9bi5sZW5ndGgsbz1bXTtpZihyKWZvcih2YXIgdD1mdW5jdGlvbih0LGUsbil7ci0tLG9bdF09ZT97UGI6ITAsdmFsdWU6bn06e1BiOiExLHJlYXNvbjpufSwwPT1yJiZpKG8pfSxlPTA7ZTxuLmxlbmd0aDtlKyspSWUobltlXSx5KHQsZSwhMCkseSh0LGUsITEpKTtlbHNlIGkobyl9KX1mdW5jdGlvbiBFZSh0LGUpe3QuYnx8dC5hIT1wZSYmdC5hIT12ZXx8TmUodCksdC5mP3QuZi5uZXh0PWU6dC5iPWUsdC5mPWV9ZnVuY3Rpb24gQWUodCxyLG8sYSl7dmFyIGU9YmUobnVsbCxudWxsLG51bGwpO3JldHVybiBlLmE9bmV3IGZlKGZ1bmN0aW9uKG4saSl7ZS5nPXI/ZnVuY3Rpb24odCl7dHJ5e3ZhciBlPXIuY2FsbChhLHQpO24oZSl9Y2F0Y2godCl7aSh0KX19Om4sZS5iPW8/ZnVuY3Rpb24odCl7dHJ5e3ZhciBlPW8uY2FsbChhLHQpO3ZvaWQgMD09PWUmJnQgaW5zdGFuY2VvZiBEZT9pKHQpOm4oZSl9Y2F0Y2godCl7aSh0KX19Oml9KSxFZShlLmEuYz10LGUpLGUuYX1mdW5jdGlvbiBrZSh0LGUsbil7dmFyIGkscjt0LmE9PWRlJiYodD09PW4mJihlPXZlLG49bmV3IFR5cGVFcnJvcihcIlByb21pc2UgY2Fubm90IHJlc29sdmUgdG8gaXRzZWxmXCIpKSx0LmE9MSxTZShuLHQuJGMsdC5hZCx0KXx8KHQuaT1uLHQuYT1lLHQuYz1udWxsLE5lKHQpLGUhPXZlfHxuIGluc3RhbmNlb2YgRGV8fChyPW4sKGk9dCkuZz0hMCx1ZShmdW5jdGlvbigpe2kuZyYmUmUuY2FsbChudWxsLHIpfSkpKSl9ZnVuY3Rpb24gU2UodCxlLG4saSl7aWYodCBpbnN0YW5jZW9mIGZlKXJldHVybiBFZSh0LGJlKGV8fGEsbnx8bnVsbCxpKSksMTtpZihPKHQpKXJldHVybiB0LnRoZW4oZSxuLGkpLDE7aWYobSh0KSl0cnl7dmFyIHI9dC50aGVuO2lmKHYocikpcmV0dXJuIGZ1bmN0aW9uKHQsZSxuLGkscil7ZnVuY3Rpb24gbyh0KXthfHwoYT0hMCxpLmNhbGwocix0KSl9dmFyIGE9ITE7dHJ5e2UuY2FsbCh0LGZ1bmN0aW9uKHQpe2F8fChhPSEwLG4uY2FsbChyLHQpKX0sbyl9Y2F0Y2godCl7byh0KX19KHQscixlLG4saSksMX1jYXRjaCh0KXtyZXR1cm4gbi5jYWxsKGksdCksMX19ZnVuY3Rpb24gTmUodCl7dC5ofHwodC5oPSEwLHVlKHQuZ2MsdCkpfWZ1bmN0aW9uIF9lKHQpe3ZhciBlPW51bGw7cmV0dXJuIHQuYiYmKGU9dC5iLHQuYj1lLm5leHQsZS5uZXh0PW51bGwpLHQuYnx8KHQuZj1udWxsKSxlfWZ1bmN0aW9uIE9lKHQsZSxuLGkpe2lmKG49PXZlJiZlLmImJiFlLmMpZm9yKDt0JiZ0Lmc7dD10LmMpdC5nPSExO2lmKGUuYSllLmEuYz1udWxsLENlKGUsbixpKTtlbHNlIHRyeXtlLmM/ZS5nLmNhbGwoZS5mKTpDZShlLG4saSl9Y2F0Y2godCl7UmUuY2FsbChudWxsLHQpfUwoZ2UsZSl9ZnVuY3Rpb24gQ2UodCxlLG4pe2U9PXBlP3QuZy5jYWxsKHQuZixuKTp0LmImJnQuYi5jYWxsKHQuZixuKX1mZS5wcm90b3R5cGUudGhlbj1mdW5jdGlvbih0LGUsbil7cmV0dXJuIEFlKHRoaXMsdih0KT90Om51bGwsdihlKT9lOm51bGwsbil9LGZlLnByb3RvdHlwZS4kZ29vZ19UaGVuYWJsZT0hMCwodD1mZS5wcm90b3R5cGUpLm9hPWZ1bmN0aW9uKHQsZSl7cmV0dXJuKHQ9YmUodCx0LGUpKS5jPSEwLEVlKHRoaXMsdCksdGhpc30sdC5vPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIEFlKHRoaXMsbnVsbCx0LGUpfSx0LmNhbmNlbD1mdW5jdGlvbih0KXt2YXIgZTt0aGlzLmE9PWRlJiYoZT1uZXcgRGUodCksdWUoZnVuY3Rpb24oKXshZnVuY3Rpb24gdChlLG4pe2lmKGUuYT09ZGUpaWYoZS5jKXt2YXIgaT1lLmM7aWYoaS5iKXtmb3IodmFyIHI9MCxvPW51bGwsYT1udWxsLHM9aS5iO3MmJihzLmN8fChyKyssISgobz1zLmE9PWU/czpvKSYmMTxyKSkpO3M9cy5uZXh0KW98fChhPXMpO28mJihpLmE9PWRlJiYxPT1yP3QoaSxuKTooYT8oKHI9YSkubmV4dD09aS5mJiYoaS5mPXIpLHIubmV4dD1yLm5leHQubmV4dCk6X2UoaSksT2UoaSxvLHZlLG4pKSl9ZS5jPW51bGx9ZWxzZSBrZShlLHZlLG4pfSh0aGlzLGUpfSx0aGlzKSl9LHQuJGM9ZnVuY3Rpb24odCl7dGhpcy5hPWRlLGtlKHRoaXMscGUsdCl9LHQuYWQ9ZnVuY3Rpb24odCl7dGhpcy5hPWRlLGtlKHRoaXMsdmUsdCl9LHQuZ2M9ZnVuY3Rpb24oKXtmb3IodmFyIHQ7dD1fZSh0aGlzKTspT2UodGhpcyx0LHRoaXMuYSx0aGlzLmkpO3RoaXMuaD0hMX07dmFyIFJlPXNlO2Z1bmN0aW9uIERlKHQpe0MuY2FsbCh0aGlzLHQpfWZ1bmN0aW9uIFBlKCl7dGhpcy54YT10aGlzLnhhLHRoaXMucGE9dGhpcy5wYX13KERlLEMpO3ZhciBMZT0wO2Z1bmN0aW9uIHhlKHQpe3QueGF8fCh0LnhhPSEwLHQuRGEoKSwwPT1MZSl8fCh0PXQsT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsbikmJnRbbl18fCh0W25dPSsraSkpfVBlLnByb3RvdHlwZS54YT0hKERlLnByb3RvdHlwZS5uYW1lPVwiY2FuY2VsXCIpLFBlLnByb3RvdHlwZS5EYT1mdW5jdGlvbigpe2lmKHRoaXMucGEpZm9yKDt0aGlzLnBhLmxlbmd0aDspdGhpcy5wYS5zaGlmdCgpKCl9O3ZhciBNZT1PYmplY3QuZnJlZXplfHxmdW5jdGlvbih0KXtyZXR1cm4gdH0samU9IUh0fHw5PD1OdW1iZXIoWnQpLFVlPUh0JiYhJHQoXCI5XCIpLFZlPWZ1bmN0aW9uKCl7aWYoIWwuYWRkRXZlbnRMaXN0ZW5lcnx8IU9iamVjdC5kZWZpbmVQcm9wZXJ0eSlyZXR1cm4hMTt2YXIgdD0hMSxlPU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSxcInBhc3NpdmVcIix7Z2V0OmZ1bmN0aW9uKCl7dD0hMH19KTt0cnl7bC5hZGRFdmVudExpc3RlbmVyKFwidGVzdFwiLGEsZSksbC5yZW1vdmVFdmVudExpc3RlbmVyKFwidGVzdFwiLGEsZSl9Y2F0Y2godCl7fXJldHVybiB0fSgpO2Z1bmN0aW9uIEZlKHQsZSl7dGhpcy50eXBlPXQsdGhpcy5iPXRoaXMudGFyZ2V0PWUsdGhpcy5kZWZhdWx0UHJldmVudGVkPSExfWZ1bmN0aW9uIHFlKHQsZSl7aWYoRmUuY2FsbCh0aGlzLHQ/dC50eXBlOlwiXCIpLHRoaXMucmVsYXRlZFRhcmdldD10aGlzLmI9dGhpcy50YXJnZXQ9bnVsbCx0aGlzLmJ1dHRvbj10aGlzLnNjcmVlblk9dGhpcy5zY3JlZW5YPXRoaXMuY2xpZW50WT10aGlzLmNsaWVudFg9MCx0aGlzLmtleT1cIlwiLHRoaXMubWV0YUtleT10aGlzLnNoaWZ0S2V5PXRoaXMuYWx0S2V5PXRoaXMuY3RybEtleT0hMSx0aGlzLnBvaW50ZXJJZD0wLHRoaXMucG9pbnRlclR5cGU9XCJcIix0aGlzLmE9bnVsbCx0KXt2YXIgbj10aGlzLnR5cGU9dC50eXBlLGk9dC5jaGFuZ2VkVG91Y2hlcyYmdC5jaGFuZ2VkVG91Y2hlcy5sZW5ndGg/dC5jaGFuZ2VkVG91Y2hlc1swXTpudWxsO2lmKHRoaXMudGFyZ2V0PXQudGFyZ2V0fHx0LnNyY0VsZW1lbnQsdGhpcy5iPWUsZT10LnJlbGF0ZWRUYXJnZXQpe2lmKEJ0KXt0Ont0cnl7VnQoZS5ub2RlTmFtZSk7dmFyIHI9ITA7YnJlYWsgdH1jYXRjaCh0KXt9cj0hMX1yfHwoZT1udWxsKX19ZWxzZVwibW91c2VvdmVyXCI9PW4/ZT10LmZyb21FbGVtZW50OlwibW91c2VvdXRcIj09biYmKGU9dC50b0VsZW1lbnQpO3RoaXMucmVsYXRlZFRhcmdldD1lLGk/KHRoaXMuY2xpZW50WD12b2lkIDAhPT1pLmNsaWVudFg/aS5jbGllbnRYOmkucGFnZVgsdGhpcy5jbGllbnRZPXZvaWQgMCE9PWkuY2xpZW50WT9pLmNsaWVudFk6aS5wYWdlWSx0aGlzLnNjcmVlblg9aS5zY3JlZW5YfHwwLHRoaXMuc2NyZWVuWT1pLnNjcmVlbll8fDApOih0aGlzLmNsaWVudFg9dm9pZCAwIT09dC5jbGllbnRYP3QuY2xpZW50WDp0LnBhZ2VYLHRoaXMuY2xpZW50WT12b2lkIDAhPT10LmNsaWVudFk/dC5jbGllbnRZOnQucGFnZVksdGhpcy5zY3JlZW5YPXQuc2NyZWVuWHx8MCx0aGlzLnNjcmVlblk9dC5zY3JlZW5ZfHwwKSx0aGlzLmJ1dHRvbj10LmJ1dHRvbix0aGlzLmtleT10LmtleXx8XCJcIix0aGlzLmN0cmxLZXk9dC5jdHJsS2V5LHRoaXMuYWx0S2V5PXQuYWx0S2V5LHRoaXMuc2hpZnRLZXk9dC5zaGlmdEtleSx0aGlzLm1ldGFLZXk9dC5tZXRhS2V5LHRoaXMucG9pbnRlcklkPXQucG9pbnRlcklkfHwwLHRoaXMucG9pbnRlclR5cGU9XCJzdHJpbmdcIj09dHlwZW9mIHQucG9pbnRlclR5cGU/dC5wb2ludGVyVHlwZTpIZVt0LnBvaW50ZXJUeXBlXXx8XCJcIiwodGhpcy5hPXQpLmRlZmF1bHRQcmV2ZW50ZWQmJnRoaXMucHJldmVudERlZmF1bHQoKX19RmUucHJvdG90eXBlLnByZXZlbnREZWZhdWx0PWZ1bmN0aW9uKCl7dGhpcy5kZWZhdWx0UHJldmVudGVkPSEwfSx3KHFlLEZlKTt2YXIgSGU9TWUoezI6XCJ0b3VjaFwiLDM6XCJwZW5cIiw0OlwibW91c2VcIn0pO3FlLnByb3RvdHlwZS5wcmV2ZW50RGVmYXVsdD1mdW5jdGlvbigpe3FlLmFiLnByZXZlbnREZWZhdWx0LmNhbGwodGhpcyk7dmFyIHQ9dGhpcy5hO2lmKHQucHJldmVudERlZmF1bHQpdC5wcmV2ZW50RGVmYXVsdCgpO2Vsc2UgaWYodC5yZXR1cm5WYWx1ZT0hMSxVZSl0cnl7KHQuY3RybEtleXx8MTEyPD10LmtleUNvZGUmJnQua2V5Q29kZTw9MTIzKSYmKHQua2V5Q29kZT0tMSl9Y2F0Y2godCl7fX0scWUucHJvdG90eXBlLmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5hfTt2YXIgS2U9XCJjbG9zdXJlX2xpc3RlbmFibGVfXCIrKDFlNipNYXRoLnJhbmRvbSgpfDApLEdlPTA7ZnVuY3Rpb24gQmUodCxlLG4saSxyKXt0aGlzLmxpc3RlbmVyPXQsdGhpcy5wcm94eT1udWxsLHRoaXMuc3JjPWUsdGhpcy50eXBlPW4sdGhpcy5jYXB0dXJlPSEhaSx0aGlzLlZhPXIsdGhpcy5rZXk9KytHZSx0aGlzLnZhPXRoaXMuUGE9ITF9ZnVuY3Rpb24gV2UodCl7dC52YT0hMCx0Lmxpc3RlbmVyPW51bGwsdC5wcm94eT1udWxsLHQuc3JjPW51bGwsdC5WYT1udWxsfWZ1bmN0aW9uIFhlKHQpe3RoaXMuc3JjPXQsdGhpcy5hPXt9LHRoaXMuYj0wfWZ1bmN0aW9uIEplKHQsZSl7dmFyIG49ZS50eXBlO24gaW4gdC5hJiZHKHQuYVtuXSxlKSYmKFdlKGUpLDA9PXQuYVtuXS5sZW5ndGgmJihkZWxldGUgdC5hW25dLHQuYi0tKSl9ZnVuY3Rpb24gWWUodCxlLG4saSl7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDsrK3Ipe3ZhciBvPXRbcl07aWYoIW8udmEmJm8ubGlzdGVuZXI9PWUmJm8uY2FwdHVyZT09ISFuJiZvLlZhPT1pKXJldHVybiByfXJldHVybi0xfVhlLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCxlLG4saSxyKXt2YXIgbz10LnRvU3RyaW5nKCk7KHQ9dGhpcy5hW29dKXx8KHQ9dGhpcy5hW29dPVtdLHRoaXMuYisrKTt2YXIgYT1ZZSh0LGUsaSxyKTtyZXR1cm4tMTxhPyhlPXRbYV0sbnx8KGUuUGE9ITEpKTooKGU9bmV3IEJlKGUsdGhpcy5zcmMsbywhIWkscikpLlBhPW4sdC5wdXNoKGUpKSxlfTt2YXIgemU9XCJjbG9zdXJlX2xtX1wiKygxZTYqTWF0aC5yYW5kb20oKXwwKSwkZT17fTtmdW5jdGlvbiBaZSh0LGUsbixpLHIpe2lmKGkmJmkub25jZSl0bih0LGUsbixpLHIpO2Vsc2UgaWYoQXJyYXkuaXNBcnJheShlKSlmb3IodmFyIG89MDtvPGUubGVuZ3RoO28rKylaZSh0LGVbb10sbixpLHIpO2Vsc2Ugbj1obihuKSx0JiZ0W0tlXT9mbih0LGUsbixtKGkpPyEhaS5jYXB0dXJlOiEhaSxyKTpRZSh0LGUsbiwhMSxpLHIpfWZ1bmN0aW9uIFFlKHQsZSxuLGkscixvKXtpZighZSl0aHJvdyBFcnJvcihcIkludmFsaWQgZXZlbnQgdHlwZVwiKTt2YXIgYSxzLHU9bShyKT8hIXIuY2FwdHVyZTohIXIsYz11bih0KTtpZihjfHwodFt6ZV09Yz1uZXcgWGUodCkpLCEobj1jLmFkZChlLG4saSx1LG8pKS5wcm94eSlpZihhPXNuLGk9cz1qZT9mdW5jdGlvbih0KXtyZXR1cm4gYS5jYWxsKHMuc3JjLHMubGlzdGVuZXIsdCl9OmZ1bmN0aW9uKHQpe2lmKCEodD1hLmNhbGwocy5zcmMscy5saXN0ZW5lcix0KSkpcmV0dXJuIHR9LChuLnByb3h5PWkpLnNyYz10LGkubGlzdGVuZXI9bix0LmFkZEV2ZW50TGlzdGVuZXIpdm9pZCAwPT09KHI9IVZlP3U6cikmJihyPSExKSx0LmFkZEV2ZW50TGlzdGVuZXIoZS50b1N0cmluZygpLGkscik7ZWxzZSBpZih0LmF0dGFjaEV2ZW50KXQuYXR0YWNoRXZlbnQocm4oZS50b1N0cmluZygpKSxpKTtlbHNle2lmKCF0LmFkZExpc3RlbmVyfHwhdC5yZW1vdmVMaXN0ZW5lcil0aHJvdyBFcnJvcihcImFkZEV2ZW50TGlzdGVuZXIgYW5kIGF0dGFjaEV2ZW50IGFyZSB1bmF2YWlsYWJsZS5cIik7dC5hZGRMaXN0ZW5lcihpKX19ZnVuY3Rpb24gdG4odCxlLG4saSxyKXtpZihBcnJheS5pc0FycmF5KGUpKWZvcih2YXIgbz0wO288ZS5sZW5ndGg7bysrKXRuKHQsZVtvXSxuLGkscik7ZWxzZSBuPWhuKG4pLHQmJnRbS2VdP2RuKHQsZSxuLG0oaSk/ISFpLmNhcHR1cmU6ISFpLHIpOlFlKHQsZSxuLCEwLGkscil9ZnVuY3Rpb24gZW4odCxlLG4saSxyKXtpZihBcnJheS5pc0FycmF5KGUpKWZvcih2YXIgbz0wO288ZS5sZW5ndGg7bysrKWVuKHQsZVtvXSxuLGkscik7ZWxzZSBpPW0oaSk/ISFpLmNhcHR1cmU6ISFpLG49aG4obiksdCYmdFtLZV0/KHQ9dC52LChlPVN0cmluZyhlKS50b1N0cmluZygpKWluIHQuYSYmKC0xPChuPVllKG89dC5hW2VdLG4saSxyKSkmJihXZShvW25dKSxBcnJheS5wcm90b3R5cGUuc3BsaWNlLmNhbGwobyxuLDEpLDA9PW8ubGVuZ3RoJiYoZGVsZXRlIHQuYVtlXSx0LmItLSkpKSk6KHQ9dCYmdW4odCkpJiYoZT10LmFbZS50b1N0cmluZygpXSwobj0odD0tMSk8KHQ9ZT9ZZShlLG4saSxyKTp0KT9lW3RdOm51bGwpJiZubihuKSl9ZnVuY3Rpb24gbm4odCl7dmFyIGUsbixpO1wibnVtYmVyXCIhPXR5cGVvZiB0JiZ0JiYhdC52YSYmKChlPXQuc3JjKSYmZVtLZV0/SmUoZS52LHQpOihuPXQudHlwZSxpPXQucHJveHksZS5yZW1vdmVFdmVudExpc3RlbmVyP2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihuLGksdC5jYXB0dXJlKTplLmRldGFjaEV2ZW50P2UuZGV0YWNoRXZlbnQocm4obiksaSk6ZS5hZGRMaXN0ZW5lciYmZS5yZW1vdmVMaXN0ZW5lciYmZS5yZW1vdmVMaXN0ZW5lcihpKSwobj11bihlKSk/KEplKG4sdCksMD09bi5iJiYobi5zcmM9bnVsbCxlW3plXT1udWxsKSk6V2UodCkpKX1mdW5jdGlvbiBybih0KXtyZXR1cm4gdCBpbiAkZT8kZVt0XTokZVt0XT1cIm9uXCIrdH1mdW5jdGlvbiBvbih0LGUsbixpKXt2YXIgcj0hMDtpZigodD11bih0KSkmJihlPXQuYVtlLnRvU3RyaW5nKCldKSlmb3IoZT1lLmNvbmNhdCgpLHQ9MDt0PGUubGVuZ3RoO3QrKyl7dmFyIG89ZVt0XTtvJiZvLmNhcHR1cmU9PW4mJiFvLnZhJiYobz1hbihvLGkpLHI9ciYmITEhPT1vKX1yZXR1cm4gcn1mdW5jdGlvbiBhbih0LGUpe3ZhciBuPXQubGlzdGVuZXIsaT10LlZhfHx0LnNyYztyZXR1cm4gdC5QYSYmbm4odCksbi5jYWxsKGksZSl9ZnVuY3Rpb24gc24odCxlKXtpZih0LnZhKXJldHVybiEwO2lmKGplKXJldHVybiBhbih0LG5ldyBxZShlLHRoaXMpKTtpZighZSl0OntlPVtcIndpbmRvd1wiLFwiZXZlbnRcIl07Zm9yKHZhciBuPWwsaT0wO2k8ZS5sZW5ndGg7aSsrKWlmKG51bGw9PShuPW5bZVtpXV0pKXtlPW51bGw7YnJlYWsgdH1lPW59aWYoZT1uZXcgcWUoaT1lLHRoaXMpLG49ITAsIShpLmtleUNvZGU8MHx8bnVsbCE9aS5yZXR1cm5WYWx1ZSkpe3Q6e3ZhciByPSExO2lmKDA9PWkua2V5Q29kZSl0cnl7aS5rZXlDb2RlPS0xO2JyZWFrIHR9Y2F0Y2godCl7cj0hMH0hciYmbnVsbCE9aS5yZXR1cm5WYWx1ZXx8KGkucmV0dXJuVmFsdWU9ITApfWZvcihpPVtdLHI9ZS5iO3I7cj1yLnBhcmVudE5vZGUpaS5wdXNoKHIpO2Zvcih0PXQudHlwZSxyPWkubGVuZ3RoLTE7MDw9cjtyLS0pe2UuYj1pW3JdO3ZhciBvPW9uKGlbcl0sdCwhMCxlKSxuPW4mJm99Zm9yKHI9MDtyPGkubGVuZ3RoO3IrKyllLmI9aVtyXSxvPW9uKGlbcl0sdCwhMSxlKSxuPW4mJm99cmV0dXJuIG59ZnVuY3Rpb24gdW4odCl7cmV0dXJuKHQ9dFt6ZV0paW5zdGFuY2VvZiBYZT90Om51bGx9dmFyIGNuPVwiX19jbG9zdXJlX2V2ZW50c19mbl9cIisoMWU5Kk1hdGgucmFuZG9tKCk+Pj4wKTtmdW5jdGlvbiBobihlKXtyZXR1cm4gdihlKT9lOihlW2NuXXx8KGVbY25dPWZ1bmN0aW9uKHQpe3JldHVybiBlLmhhbmRsZUV2ZW50KHQpfSksZVtjbl0pfWZ1bmN0aW9uIGxuKCl7UGUuY2FsbCh0aGlzKSx0aGlzLnY9bmV3IFhlKHRoaXMpLCh0aGlzLmFjPXRoaXMpLmdiPW51bGx9ZnVuY3Rpb24gZm4odCxlLG4saSxyKXt0LnYuYWRkKFN0cmluZyhlKSxuLCExLGkscil9ZnVuY3Rpb24gZG4odCxlLG4saSxyKXt0LnYuYWRkKFN0cmluZyhlKSxuLCEwLGkscil9ZnVuY3Rpb24gcG4odCxlLG4saSl7aWYoIShlPXQudi5hW1N0cmluZyhlKV0pKXJldHVybiEwO2U9ZS5jb25jYXQoKTtmb3IodmFyIHI9ITAsbz0wO288ZS5sZW5ndGg7KytvKXt2YXIgYSxzLHU9ZVtvXTt1JiYhdS52YSYmdS5jYXB0dXJlPT1uJiYoYT11Lmxpc3RlbmVyLHM9dS5WYXx8dS5zcmMsdS5QYSYmSmUodC52LHUpLHI9ITEhPT1hLmNhbGwocyxpKSYmcil9cmV0dXJuIHImJiFpLmRlZmF1bHRQcmV2ZW50ZWR9ZnVuY3Rpb24gdm4odCxlLG4pe2lmKHYodCkpbiYmKHQ9Yih0LG4pKTtlbHNle2lmKCF0fHxcImZ1bmN0aW9uXCIhPXR5cGVvZiB0LmhhbmRsZUV2ZW50KXRocm93IEVycm9yKFwiSW52YWxpZCBsaXN0ZW5lciBhcmd1bWVudFwiKTt0PWIodC5oYW5kbGVFdmVudCx0KX1yZXR1cm4gMjE0NzQ4MzY0NzxOdW1iZXIoZSk/LTE6bC5zZXRUaW1lb3V0KHQsZXx8MCl9ZnVuY3Rpb24gbW4obil7dmFyIGk9bnVsbDtyZXR1cm4gbmV3IGZlKGZ1bmN0aW9uKHQsZSl7LTE9PShpPXZuKGZ1bmN0aW9uKCl7dCh2b2lkIDApfSxuKSkmJmUoRXJyb3IoXCJGYWlsZWQgdG8gc2NoZWR1bGUgdGltZXIuXCIpKX0pLm8oZnVuY3Rpb24odCl7dGhyb3cgbC5jbGVhclRpbWVvdXQoaSksdH0pfWZ1bmN0aW9uIGduKHQpe2lmKHQuVyYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5XKXJldHVybiB0LlcoKTtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm4gdC5zcGxpdChcIlwiKTtpZihwKHQpKXtmb3IodmFyIGU9W10sbj10Lmxlbmd0aCxpPTA7aTxuO2krKyllLnB1c2godFtpXSk7cmV0dXJuIGV9Zm9yKGkgaW4gZT1bXSxuPTAsdCllW24rK109dFtpXTtyZXR1cm4gZX1mdW5jdGlvbiBibih0KXtpZih0LlkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuWSlyZXR1cm4gdC5ZKCk7aWYoIXQuV3x8XCJmdW5jdGlvblwiIT10eXBlb2YgdC5XKXtpZihwKHQpfHxcInN0cmluZ1wiPT10eXBlb2YgdCl7dmFyIGU9W107dD10Lmxlbmd0aDtmb3IodmFyIG49MDtuPHQ7bisrKWUucHVzaChuKTtyZXR1cm4gZX1mb3IodmFyIGkgaW4gZT1bXSxuPTAsdCllW24rK109aTtyZXR1cm4gZX19ZnVuY3Rpb24geW4odCxlKXt0aGlzLmI9e30sdGhpcy5hPVtdLHRoaXMuYz0wO3ZhciBuPWFyZ3VtZW50cy5sZW5ndGg7aWYoMTxuKXtpZihuJTIpdGhyb3cgRXJyb3IoXCJVbmV2ZW4gbnVtYmVyIG9mIGFyZ3VtZW50c1wiKTtmb3IodmFyIGk9MDtpPG47aSs9Mil0aGlzLnNldChhcmd1bWVudHNbaV0sYXJndW1lbnRzW2krMV0pfWVsc2UgaWYodClpZih0IGluc3RhbmNlb2YgeW4pZm9yKG49dC5ZKCksaT0wO2k8bi5sZW5ndGg7aSsrKXRoaXMuc2V0KG5baV0sdC5nZXQobltpXSkpO2Vsc2UgZm9yKGkgaW4gdCl0aGlzLnNldChpLHRbaV0pfWZ1bmN0aW9uIHduKHQpe2lmKHQuYyE9dC5hLmxlbmd0aCl7Zm9yKHZhciBlPTAsbj0wO2U8dC5hLmxlbmd0aDspe3ZhciBpPXQuYVtlXTtJbih0LmIsaSkmJih0LmFbbisrXT1pKSxlKyt9dC5hLmxlbmd0aD1ufWlmKHQuYyE9dC5hLmxlbmd0aCl7Zm9yKHZhciByPXt9LG49ZT0wO2U8dC5hLmxlbmd0aDspSW4ocixpPXQuYVtlXSl8fChyW3QuYVtuKytdPWldPTEpLGUrKzt0LmEubGVuZ3RoPW59fWZ1bmN0aW9uIEluKHQsZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfXcobG4sUGUpLGxuLnByb3RvdHlwZVtLZV09ITAsbG4ucHJvdG90eXBlLmFkZEV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24odCxlLG4saSl7WmUodGhpcyx0LGUsbixpKX0sbG4ucHJvdG90eXBlLnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24odCxlLG4saSl7ZW4odGhpcyx0LGUsbixpKX0sbG4ucHJvdG90eXBlLmRpc3BhdGNoRXZlbnQ9ZnVuY3Rpb24odCl7dmFyIGU7aWYobj10aGlzLmdiKWZvcihlPVtdO247bj1uLmdiKWUucHVzaChuKTt2YXIgbj10aGlzLmFjLGk9dC50eXBlfHx0O2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0P3Q9bmV3IEZlKHQsbik6dCBpbnN0YW5jZW9mIEZlP3QudGFyZ2V0PXQudGFyZ2V0fHxuOihhPXQsbHQodD1uZXcgRmUoaSxuKSxhKSksYT0hMCxlKWZvcih2YXIgcj1lLmxlbmd0aC0xOzA8PXI7ci0tKXZhciBvPXQuYj1lW3JdLGE9cG4obyxpLCEwLHQpJiZhO2lmKGE9cG4obz10LmI9bixpLCEwLHQpJiZhLGE9cG4obyxpLCExLHQpJiZhLGUpZm9yKHI9MDtyPGUubGVuZ3RoO3IrKylhPXBuKG89dC5iPWVbcl0saSwhMSx0KSYmYTtyZXR1cm4gYX0sbG4ucHJvdG90eXBlLkRhPWZ1bmN0aW9uKCl7aWYobG4uYWIuRGEuY2FsbCh0aGlzKSx0aGlzLnYpe3ZhciB0LGU9dGhpcy52O2Zvcih0IGluIGUuYSl7Zm9yKHZhciBuPWUuYVt0XSxpPTA7aTxuLmxlbmd0aDtpKyspV2UobltpXSk7ZGVsZXRlIGUuYVt0XSxlLmItLX19dGhpcy5nYj1udWxsfSwodD15bi5wcm90b3R5cGUpLlc9ZnVuY3Rpb24oKXt3bih0aGlzKTtmb3IodmFyIHQ9W10sZT0wO2U8dGhpcy5hLmxlbmd0aDtlKyspdC5wdXNoKHRoaXMuYlt0aGlzLmFbZV1dKTtyZXR1cm4gdH0sdC5ZPWZ1bmN0aW9uKCl7cmV0dXJuIHduKHRoaXMpLHRoaXMuYS5jb25jYXQoKX0sdC5jbGVhcj1mdW5jdGlvbigpe3RoaXMuYj17fSx0aGlzLmM9dGhpcy5hLmxlbmd0aD0wfSx0LmdldD1mdW5jdGlvbih0LGUpe3JldHVybiBJbih0aGlzLmIsdCk/dGhpcy5iW3RdOmV9LHQuc2V0PWZ1bmN0aW9uKHQsZSl7SW4odGhpcy5iLHQpfHwodGhpcy5jKyssdGhpcy5hLnB1c2godCkpLHRoaXMuYlt0XT1lfSx0LmZvckVhY2g9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dGhpcy5ZKCksaT0wO2k8bi5sZW5ndGg7aSsrKXt2YXIgcj1uW2ldLG89dGhpcy5nZXQocik7dC5jYWxsKGUsbyxyLHRoaXMpfX07dmFyIFRuPS9eKD86KFteOi8/Iy5dKyk6KT8oPzpcXC9cXC8oPzooW15cXFxcLz8jXSopQCk/KFteXFxcXC8/I10qPykoPzo6KFswLTldKykpPyg/PVtcXFxcLz8jXXwkKSk/KFtePyNdKyk/KD86XFw/KFteI10qKSk/KD86IyhbXFxzXFxTXSopKT8kLztmdW5jdGlvbiBFbih0LGUpe3ZhciBuO3RoaXMuYT10aGlzLmw9dGhpcy5jPVwiXCIsdGhpcy5nPW51bGwsdGhpcy5oPXRoaXMuZj1cIlwiLHRoaXMuaT0hMSx0IGluc3RhbmNlb2YgRW4/KHRoaXMuaT12b2lkIDAhPT1lP2U6dC5pLEFuKHRoaXMsdC5jKSx0aGlzLmw9dC5sLHRoaXMuYT10LmEsa24odGhpcyx0LmcpLHRoaXMuZj10LmYsU24odGhpcyxCbih0LmIpKSx0aGlzLmg9dC5oKTp0JiYobj1TdHJpbmcodCkubWF0Y2goVG4pKT8odGhpcy5pPSEhZSxBbih0aGlzLG5bMV18fFwiXCIsITApLHRoaXMubD1SbihuWzJdfHxcIlwiKSx0aGlzLmE9Um4oblszXXx8XCJcIiwhMCksa24odGhpcyxuWzRdKSx0aGlzLmY9Um4obls1XXx8XCJcIiwhMCksU24odGhpcyxuWzZdfHxcIlwiLCEwKSx0aGlzLmg9Um4obls3XXx8XCJcIikpOih0aGlzLmk9ISFlLHRoaXMuYj1uZXcgVm4obnVsbCx0aGlzLmkpKX1mdW5jdGlvbiBBbih0LGUsbil7dC5jPW4/Um4oZSwhMCk6ZSx0LmMmJih0LmM9dC5jLnJlcGxhY2UoLzokLyxcIlwiKSl9ZnVuY3Rpb24ga24odCxlKXtpZihlKXtpZihlPU51bWJlcihlKSxpc05hTihlKXx8ZTwwKXRocm93IEVycm9yKFwiQmFkIHBvcnQgbnVtYmVyIFwiK2UpO3QuZz1lfWVsc2UgdC5nPW51bGx9ZnVuY3Rpb24gU24odCxlLG4pe3ZhciBpLHI7ZSBpbnN0YW5jZW9mIFZuPyh0LmI9ZSxpPXQuYiwocj10LmkpJiYhaS5mJiYoRm4oaSksaS5jPW51bGwsaS5hLmZvckVhY2goZnVuY3Rpb24odCxlKXt2YXIgbj1lLnRvTG93ZXJDYXNlKCk7ZSE9biYmKEhuKHRoaXMsZSksR24odGhpcyxuLHQpKX0saSkpLGkuZj1yKToobnx8KGU9RG4oZSxqbikpLHQuYj1uZXcgVm4oZSx0LmkpKX1mdW5jdGlvbiBObih0LGUsbil7dC5iLnNldChlLG4pfWZ1bmN0aW9uIF9uKHQsZSl7cmV0dXJuIHQuYi5nZXQoZSl9ZnVuY3Rpb24gT24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBFbj9uZXcgRW4odCk6bmV3IEVuKHQsdm9pZCAwKX1mdW5jdGlvbiBDbih0LGUsbixpKXt2YXIgcj1uZXcgRW4obnVsbCx2b2lkIDApO3JldHVybiB0JiZBbihyLHQpLGUmJihyLmE9ZSksbiYma24ocixuKSxpJiYoci5mPWkpLHJ9ZnVuY3Rpb24gUm4odCxlKXtyZXR1cm4gdD9lP2RlY29kZVVSSSh0LnJlcGxhY2UoLyUyNS9nLFwiJTI1MjVcIikpOmRlY29kZVVSSUNvbXBvbmVudCh0KTpcIlwifWZ1bmN0aW9uIERuKHQsZSxuKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdD8odD1lbmNvZGVVUkkodCkucmVwbGFjZShlLFBuKSx0PW4/dC5yZXBsYWNlKC8lMjUoWzAtOWEtZkEtRl17Mn0pL2csXCIlJDFcIik6dCk6bnVsbH1mdW5jdGlvbiBQbih0KXtyZXR1cm5cIiVcIisoKHQ9dC5jaGFyQ29kZUF0KDApKT4+NCYxNSkudG9TdHJpbmcoMTYpKygxNSZ0KS50b1N0cmluZygxNil9RW4ucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHQ9W10sZT10aGlzLmM7ZSYmdC5wdXNoKERuKGUsTG4sITApLFwiOlwiKTt2YXIgbj10aGlzLmE7cmV0dXJuIW4mJlwiZmlsZVwiIT1lfHwodC5wdXNoKFwiLy9cIiksKGU9dGhpcy5sKSYmdC5wdXNoKERuKGUsTG4sITApLFwiQFwiKSx0LnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhuKSkucmVwbGFjZSgvJTI1KFswLTlhLWZBLUZdezJ9KS9nLFwiJSQxXCIpKSxudWxsIT0obj10aGlzLmcpJiZ0LnB1c2goXCI6XCIsU3RyaW5nKG4pKSksKG49dGhpcy5mKSYmKHRoaXMuYSYmXCIvXCIhPW4uY2hhckF0KDApJiZ0LnB1c2goXCIvXCIpLHQucHVzaChEbihuLFwiL1wiPT1uLmNoYXJBdCgwKT9Nbjp4biwhMCkpKSwobj10aGlzLmIudG9TdHJpbmcoKSkmJnQucHVzaChcIj9cIixuKSwobj10aGlzLmgpJiZ0LnB1c2goXCIjXCIsRG4obixVbikpLHQuam9pbihcIlwiKX0sRW4ucHJvdG90eXBlLnJlc29sdmU9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IEVuKHRoaXMpLG49ISF0LmM7bj9BbihlLHQuYyk6bj0hIXQubCxuP2UubD10Lmw6bj0hIXQuYSxuP2UuYT10LmE6bj1udWxsIT10Lmc7dmFyIGk9dC5mO2lmKG4pa24oZSx0LmcpO2Vsc2UgaWYobj0hIXQuZilpZihcIi9cIiE9aS5jaGFyQXQoMCkmJih0aGlzLmEmJiF0aGlzLmY/aT1cIi9cIitpOi0xIT0ocj1lLmYubGFzdEluZGV4T2YoXCIvXCIpKSYmKGk9ZS5mLnN1YnN0cigwLHIrMSkraSkpLFwiLi5cIj09KHI9aSl8fFwiLlwiPT1yKWk9XCJcIjtlbHNlIGlmKGl0KHIsXCIuL1wiKXx8aXQocixcIi8uXCIpKXtmb3IodmFyIGk9MD09ci5sYXN0SW5kZXhPZihcIi9cIiwwKSxyPXIuc3BsaXQoXCIvXCIpLG89W10sYT0wO2E8ci5sZW5ndGg7KXt2YXIgcz1yW2ErK107XCIuXCI9PXM/aSYmYT09ci5sZW5ndGgmJm8ucHVzaChcIlwiKTpcIi4uXCI9PXM/KCgxPG8ubGVuZ3RofHwxPT1vLmxlbmd0aCYmXCJcIiE9b1swXSkmJm8ucG9wKCksaSYmYT09ci5sZW5ndGgmJm8ucHVzaChcIlwiKSk6KG8ucHVzaChzKSxpPSEwKX1pPW8uam9pbihcIi9cIil9ZWxzZSBpPXI7cmV0dXJuIG4/ZS5mPWk6bj1cIlwiIT09dC5iLnRvU3RyaW5nKCksbj9TbihlLEJuKHQuYikpOm49ISF0LmgsbiYmKGUuaD10LmgpLGV9O3ZhciBMbj0vWyNcXC9cXD9AXS9nLHhuPS9bI1xcPzpdL2csTW49L1sjXFw/XS9nLGpuPS9bI1xcP0BdL2csVW49LyMvZztmdW5jdGlvbiBWbih0LGUpe3RoaXMuYj10aGlzLmE9bnVsbCx0aGlzLmM9dHx8bnVsbCx0aGlzLmY9ISFlfWZ1bmN0aW9uIEZuKG4pe24uYXx8KG4uYT1uZXcgeW4sbi5iPTAsbi5jJiZmdW5jdGlvbih0LGUpe2lmKHQpe3Q9dC5zcGxpdChcIiZcIik7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspe3ZhciBpLHI9dFtuXS5pbmRleE9mKFwiPVwiKSxvPW51bGw7MDw9cj8oaT10W25dLnN1YnN0cmluZygwLHIpLG89dFtuXS5zdWJzdHJpbmcocisxKSk6aT10W25dLGUoaSxvP2RlY29kZVVSSUNvbXBvbmVudChvLnJlcGxhY2UoL1xcKy9nLFwiIFwiKSk6XCJcIil9fX0obi5jLGZ1bmN0aW9uKHQsZSl7bi5hZGQoZGVjb2RlVVJJQ29tcG9uZW50KHQucmVwbGFjZSgvXFwrL2csXCIgXCIpKSxlKX0pKX1mdW5jdGlvbiBxbih0KXt2YXIgZT1ibih0KTtpZih2b2lkIDA9PT1lKXRocm93IEVycm9yKFwiS2V5cyBhcmUgdW5kZWZpbmVkXCIpO3ZhciBuPW5ldyBWbihudWxsLHZvaWQgMCk7dD1nbih0KTtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIHI9ZVtpXSxvPXRbaV07QXJyYXkuaXNBcnJheShvKT9HbihuLHIsbyk6bi5hZGQocixvKX1yZXR1cm4gbn1mdW5jdGlvbiBIbih0LGUpe0ZuKHQpLGU9V24odCxlKSxJbih0LmEuYixlKSYmKHQuYz1udWxsLHQuYi09dC5hLmdldChlKS5sZW5ndGgsSW4oKHQ9dC5hKS5iLGUpJiYoZGVsZXRlIHQuYltlXSx0LmMtLSx0LmEubGVuZ3RoPjIqdC5jJiZ3bih0KSkpfWZ1bmN0aW9uIEtuKHQsZSl7cmV0dXJuIEZuKHQpLGU9V24odCxlKSxJbih0LmEuYixlKX1mdW5jdGlvbiBHbih0LGUsbil7SG4odCxlKSwwPG4ubGVuZ3RoJiYodC5jPW51bGwsdC5hLnNldChXbih0LGUpLFgobikpLHQuYis9bi5sZW5ndGgpfWZ1bmN0aW9uIEJuKHQpe3ZhciBlPW5ldyBWbjtyZXR1cm4gZS5jPXQuYyx0LmEmJihlLmE9bmV3IHluKHQuYSksZS5iPXQuYiksZX1mdW5jdGlvbiBXbih0LGUpe3JldHVybiBlPVN0cmluZyhlKSxlPXQuZj9lLnRvTG93ZXJDYXNlKCk6ZX1mdW5jdGlvbiBYbih0KXt2YXIgZT1bXTtyZXR1cm4gZnVuY3Rpb24gdChlLG4saSl7aWYobnVsbD09bilpLnB1c2goXCJudWxsXCIpO2Vsc2V7aWYoXCJvYmplY3RcIj09dHlwZW9mIG4pe2lmKEFycmF5LmlzQXJyYXkobikpe3ZhciByPW47bj1yLmxlbmd0aCxpLnB1c2goXCJbXCIpO2Zvcih2YXIgbz1cIlwiLGE9MDthPG47YSsrKWkucHVzaChvKSx0KGUsclthXSxpKSxvPVwiLFwiO3JldHVybiB2b2lkIGkucHVzaChcIl1cIil9aWYoIShuIGluc3RhbmNlb2YgU3RyaW5nfHxuIGluc3RhbmNlb2YgTnVtYmVyfHxuIGluc3RhbmNlb2YgQm9vbGVhbikpe2ZvcihyIGluIGkucHVzaChcIntcIiksbz1cIlwiLG4pT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG4scikmJihhPW5bcl0sXCJmdW5jdGlvblwiIT10eXBlb2YgYSYmKGkucHVzaChvKSwkbihyLGkpLGkucHVzaChcIjpcIiksdChlLGEsaSksbz1cIixcIikpO3JldHVybiB2b2lkIGkucHVzaChcIn1cIil9bj1uLnZhbHVlT2YoKX1zd2l0Y2godHlwZW9mIG4pe2Nhc2VcInN0cmluZ1wiOiRuKG4saSk7YnJlYWs7Y2FzZVwibnVtYmVyXCI6aS5wdXNoKGlzRmluaXRlKG4pJiYhaXNOYU4obik/U3RyaW5nKG4pOlwibnVsbFwiKTticmVhaztjYXNlXCJib29sZWFuXCI6aS5wdXNoKFN0cmluZyhuKSk7YnJlYWs7Y2FzZVwiZnVuY3Rpb25cIjppLnB1c2goXCJudWxsXCIpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoXCJVbmtub3duIHR5cGU6IFwiK3R5cGVvZiBuKX19fShuZXcgSm4sdCxlKSxlLmpvaW4oXCJcIil9ZnVuY3Rpb24gSm4oKXt9KHQ9Vm4ucHJvdG90eXBlKS5hZGQ9ZnVuY3Rpb24odCxlKXtGbih0aGlzKSx0aGlzLmM9bnVsbCx0PVduKHRoaXMsdCk7dmFyIG49dGhpcy5hLmdldCh0KTtyZXR1cm4gbnx8dGhpcy5hLnNldCh0LG49W10pLG4ucHVzaChlKSx0aGlzLmIrPTEsdGhpc30sdC5jbGVhcj1mdW5jdGlvbigpe3RoaXMuYT10aGlzLmM9bnVsbCx0aGlzLmI9MH0sdC5mb3JFYWNoPWZ1bmN0aW9uKG4saSl7Rm4odGhpcyksdGhpcy5hLmZvckVhY2goZnVuY3Rpb24odCxlKXtWKHQsZnVuY3Rpb24odCl7bi5jYWxsKGksdCxlLHRoaXMpfSx0aGlzKX0sdGhpcyl9LHQuWT1mdW5jdGlvbigpe0ZuKHRoaXMpO2Zvcih2YXIgdD10aGlzLmEuVygpLGU9dGhpcy5hLlkoKSxuPVtdLGk9MDtpPGUubGVuZ3RoO2krKylmb3IodmFyIHI9dFtpXSxvPTA7bzxyLmxlbmd0aDtvKyspbi5wdXNoKGVbaV0pO3JldHVybiBufSx0Llc9ZnVuY3Rpb24odCl7Rm4odGhpcyk7dmFyIGU9W107aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpS24odGhpcyx0KSYmKGU9VyhlLHRoaXMuYS5nZXQoV24odGhpcyx0KSkpKTtlbHNle3Q9dGhpcy5hLlcoKTtmb3IodmFyIG49MDtuPHQubGVuZ3RoO24rKyllPVcoZSx0W25dKX1yZXR1cm4gZX0sdC5zZXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gRm4odGhpcyksdGhpcy5jPW51bGwsS24odGhpcyx0PVduKHRoaXMsdCkpJiYodGhpcy5iLT10aGlzLmEuZ2V0KHQpLmxlbmd0aCksdGhpcy5hLnNldCh0LFtlXSksdGhpcy5iKz0xLHRoaXN9LHQuZ2V0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQmJjA8KHQ9dGhpcy5XKHQpKS5sZW5ndGg/U3RyaW5nKHRbMF0pOmV9LHQudG9TdHJpbmc9ZnVuY3Rpb24oKXtpZih0aGlzLmMpcmV0dXJuIHRoaXMuYztpZighdGhpcy5hKXJldHVyblwiXCI7Zm9yKHZhciB0PVtdLGU9dGhpcy5hLlkoKSxuPTA7bjxlLmxlbmd0aDtuKyspZm9yKHZhciBpPWVbbl0scj1lbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKGkpKSxpPXRoaXMuVyhpKSxvPTA7bzxpLmxlbmd0aDtvKyspe3ZhciBhPXI7XCJcIiE9PWlbb10mJihhKz1cIj1cIitlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKGlbb10pKSksdC5wdXNoKGEpfXJldHVybiB0aGlzLmM9dC5qb2luKFwiJlwiKX07dmFyIFluPXsnXCInOidcXFxcXCInLFwiXFxcXFwiOlwiXFxcXFxcXFxcIixcIi9cIjpcIlxcXFwvXCIsXCJcXGJcIjpcIlxcXFxiXCIsXCJcXGZcIjpcIlxcXFxmXCIsXCJcXG5cIjpcIlxcXFxuXCIsXCJcXHJcIjpcIlxcXFxyXCIsXCJcXHRcIjpcIlxcXFx0XCIsXCJcXHZcIjpcIlxcXFx1MDAwYlwifSx6bj0vXFx1ZmZmZi8udGVzdChcIlxcdWZmZmZcIik/L1tcXFxcXCJcXHgwMC1cXHgxZlxceDdmLVxcdWZmZmZdL2c6L1tcXFxcXCJcXHgwMC1cXHgxZlxceDdmLVxceGZmXS9nO2Z1bmN0aW9uICRuKHQsZSl7ZS5wdXNoKCdcIicsdC5yZXBsYWNlKHpuLGZ1bmN0aW9uKHQpe3ZhciBlPVluW3RdO3JldHVybiBlfHwoZT1cIlxcXFx1XCIrKDY1NTM2fHQuY2hhckNvZGVBdCgwKSkudG9TdHJpbmcoMTYpLnN1YnN0cigxKSxZblt0XT1lKSxlfSksJ1wiJyl9ZnVuY3Rpb24gWm4oKXt2YXIgdD1naSgpO3JldHVybiBIdCYmWnQmJjExPT1adHx8L0VkZ2VcXC9cXGQrLy50ZXN0KHQpfWZ1bmN0aW9uIFFuKCl7cmV0dXJuIGwud2luZG93JiZsLndpbmRvdy5sb2NhdGlvbi5ocmVmfHxzZWxmJiZzZWxmLmxvY2F0aW9uJiZzZWxmLmxvY2F0aW9uLmhyZWZ8fFwiXCJ9ZnVuY3Rpb24gdGkodCxlKXtlPWV8fGwud2luZG93O3ZhciBuPVwiYWJvdXQ6YmxhbmtcIjt0JiYobj1TdChDdCh0KXx8UHQpKSxlLmxvY2F0aW9uLmhyZWY9bn1mdW5jdGlvbiBlaSh0KXtyZXR1cm4hISgodD0odHx8Z2koKSkudG9Mb3dlckNhc2UoKSkubWF0Y2goL2FuZHJvaWQvKXx8dC5tYXRjaCgvd2Vib3MvKXx8dC5tYXRjaCgvaXBob25lfGlwYWR8aXBvZC8pfHx0Lm1hdGNoKC9ibGFja2JlcnJ5Lyl8fHQubWF0Y2goL3dpbmRvd3MgcGhvbmUvKXx8dC5tYXRjaCgvaWVtb2JpbGUvKSl9ZnVuY3Rpb24gbmkodCl7dD10fHxsLndpbmRvdzt0cnl7dC5jbG9zZSgpfWNhdGNoKHQpe319ZnVuY3Rpb24gaWkodCxlLG4pe3ZhciBpPU1hdGguZmxvb3IoMWU5Kk1hdGgucmFuZG9tKCkpLnRvU3RyaW5nKCk7ZT1lfHw1MDAsbj1ufHw2MDA7dmFyIHI9KHdpbmRvdy5zY3JlZW4uYXZhaWxIZWlnaHQtbikvMixvPSh3aW5kb3cuc2NyZWVuLmF2YWlsV2lkdGgtZSkvMjtmb3IoYSBpbiBlPXt3aWR0aDplLGhlaWdodDpuLHRvcDowPHI/cjowLGxlZnQ6MDxvP286MCxsb2NhdGlvbjohMCxyZXNpemFibGU6ITAsc3RhdHVzYmFyOiEwLHRvb2xiYXI6ITF9LG49Z2koKS50b0xvd2VyQ2FzZSgpLGkmJihlLnRhcmdldD1pLGl0KG4sXCJjcmlvcy9cIikmJihlLnRhcmdldD1cIl9ibGFua1wiKSkscGkoZ2koKSk9PWZpJiYodD10fHxcImh0dHA6Ly9sb2NhbGhvc3RcIixlLnNjcm9sbGJhcnM9ITApLG49dHx8XCJcIiwodD1lKXx8KHQ9e30pLGk9d2luZG93LGU9biBpbnN0YW5jZW9mIGt0P246Q3Qodm9pZCAwIT09bi5ocmVmP24uaHJlZjpTdHJpbmcobikpfHxQdCxuPXQudGFyZ2V0fHxuLnRhcmdldCxyPVtdLHQpc3dpdGNoKGEpe2Nhc2VcIndpZHRoXCI6Y2FzZVwiaGVpZ2h0XCI6Y2FzZVwidG9wXCI6Y2FzZVwibGVmdFwiOnIucHVzaChhK1wiPVwiK3RbYV0pO2JyZWFrO2Nhc2VcInRhcmdldFwiOmNhc2VcIm5vb3BlbmVyXCI6Y2FzZVwibm9yZWZlcnJlclwiOmJyZWFrO2RlZmF1bHQ6ci5wdXNoKGErXCI9XCIrKHRbYV0/MTowKSl9dmFyIGE9ci5qb2luKFwiLFwiKTtpZigoYXQoXCJpUGhvbmVcIikmJiFhdChcImlQb2RcIikmJiFhdChcImlQYWRcIil8fGF0KFwiaVBhZFwiKXx8YXQoXCJpUG9kXCIpKSYmaS5uYXZpZ2F0b3ImJmkubmF2aWdhdG9yLnN0YW5kYWxvbmUmJm4mJlwiX3NlbGZcIiE9bj8oZnQoYT1hZShkb2N1bWVudCxcIkFcIiksXCJIVE1MQW5jaG9yRWxlbWVudFwiKSxlPWUgaW5zdGFuY2VvZiBrdD9lOlJ0KGUpLGEuaHJlZj1TdChlKSxhLnNldEF0dHJpYnV0ZShcInRhcmdldFwiLG4pLHQubm9yZWZlcnJlciYmYS5zZXRBdHRyaWJ1dGUoXCJyZWxcIixcIm5vcmVmZXJyZXJcIiksKHQ9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoXCJNb3VzZUV2ZW50XCIpKS5pbml0TW91c2VFdmVudChcImNsaWNrXCIsITAsITAsaSwxKSxhLmRpc3BhdGNoRXZlbnQodCksYT17fSk6dC5ub3JlZmVycmVyPyhhPU10KFwiXCIsaSxuLGEpLHQ9U3QoZSksYSYmKEd0JiZpdCh0LFwiO1wiKSYmKHQ9XCInXCIrdC5yZXBsYWNlKC8nL2csXCIlMjdcIikrXCInXCIpLGEub3BlbmVyPW51bGwsdD0nPG1ldGEgbmFtZT1cInJlZmVycmVyXCIgY29udGVudD1cIm5vLXJlZmVycmVyXCI+PG1ldGEgaHR0cC1lcXVpdj1cInJlZnJlc2hcIiBjb250ZW50PVwiMDsgdXJsPScrVXQodCkrJ1wiPicsdD1uZXcgTHQodD0oaT1idCgpKT9pLmNyZWF0ZUhUTUwodCk6dCwwLHh0KSxpPWEuZG9jdW1lbnQpJiYoaS53cml0ZSgobz10KWluc3RhbmNlb2YgTHQmJm8uY29uc3RydWN0b3I9PT1MdD9vLmE6KEQoXCJleHBlY3RlZCBvYmplY3Qgb2YgdHlwZSBTYWZlSHRtbCwgZ290ICdcIitvK1wiJyBvZiB0eXBlIFwiK2QobykpLFwidHlwZV9lcnJvcjpTYWZlSHRtbFwiKSksaS5jbG9zZSgpKSk6KGE9TXQoZSxpLG4sYSkpJiZ0Lm5vb3BlbmVyJiYoYS5vcGVuZXI9bnVsbCksYSl0cnl7YS5mb2N1cygpfWNhdGNoKHQpe31yZXR1cm4gYX12YXIgcmk9L15cXGR7MSwzfVxcLlxcZHsxLDN9XFwuXFxkezEsM31cXC5cXGR7MSwzfSQvLG9pPS9eW15AXStAW15AXSskLztmdW5jdGlvbiBhaSgpe3ZhciBlPW51bGw7cmV0dXJuIG5ldyBmZShmdW5jdGlvbih0KXtcImNvbXBsZXRlXCI9PWwuZG9jdW1lbnQucmVhZHlTdGF0ZT90KCk6KGU9ZnVuY3Rpb24oKXt0KCl9LHRuKHdpbmRvdyxcImxvYWRcIixlKSl9KS5vKGZ1bmN0aW9uKHQpe3Rocm93IGVuKHdpbmRvdyxcImxvYWRcIixlKSx0fSl9ZnVuY3Rpb24gc2kodCl7cmV0dXJuIHQ9dHx8Z2koKSwhKFwiZmlsZTpcIiE9PVRpKCkmJlwiaW9uaWM6XCIhPT1UaSgpfHwhdC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9pcGhvbmV8aXBhZHxpcG9kfGFuZHJvaWQvKSl9ZnVuY3Rpb24gdWkoKXt2YXIgdD1sLndpbmRvdzt0cnl7cmV0dXJuIHQmJnQhPXQudG9wfWNhdGNoKHQpe3JldHVybn19ZnVuY3Rpb24gY2koKXtyZXR1cm4gdm9pZCAwIT09bC5Xb3JrZXJHbG9iYWxTY29wZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgbC5pbXBvcnRTY3JpcHRzfWZ1bmN0aW9uIGhpKCl7cmV0dXJuIHpsLmRlZmF1bHQuSU5URVJOQUwuaGFzT3duUHJvcGVydHkoXCJyZWFjdE5hdGl2ZVwiKT9cIlJlYWN0TmF0aXZlXCI6emwuZGVmYXVsdC5JTlRFUk5BTC5oYXNPd25Qcm9wZXJ0eShcIm5vZGVcIik/XCJOb2RlXCI6Y2koKT9cIldvcmtlclwiOlwiQnJvd3NlclwifWZ1bmN0aW9uIGxpKCl7dmFyIHQ9aGkoKTtyZXR1cm5cIlJlYWN0TmF0aXZlXCI9PT10fHxcIk5vZGVcIj09PXR9dmFyIGZpPVwiRmlyZWZveFwiLGRpPVwiQ2hyb21lXCI7ZnVuY3Rpb24gcGkodCl7dmFyIGU9dC50b0xvd2VyQ2FzZSgpO3JldHVybiBpdChlLFwib3BlcmEvXCIpfHxpdChlLFwib3ByL1wiKXx8aXQoZSxcIm9waW9zL1wiKT9cIk9wZXJhXCI6aXQoZSxcImllbW9iaWxlXCIpP1wiSUVNb2JpbGVcIjppdChlLFwibXNpZVwiKXx8aXQoZSxcInRyaWRlbnQvXCIpP1wiSUVcIjppdChlLFwiZWRnZS9cIik/XCJFZGdlXCI6aXQoZSxcImZpcmVmb3gvXCIpP2ZpOml0KGUsXCJzaWxrL1wiKT9cIlNpbGtcIjppdChlLFwiYmxhY2tiZXJyeVwiKT9cIkJsYWNrYmVycnlcIjppdChlLFwid2Vib3NcIik/XCJXZWJvc1wiOiFpdChlLFwic2FmYXJpL1wiKXx8aXQoZSxcImNocm9tZS9cIil8fGl0KGUsXCJjcmlvcy9cIil8fGl0KGUsXCJhbmRyb2lkXCIpPyFpdChlLFwiY2hyb21lL1wiKSYmIWl0KGUsXCJjcmlvcy9cIil8fGl0KGUsXCJlZGdlL1wiKT9pdChlLFwiYW5kcm9pZFwiKT9cIkFuZHJvaWRcIjoodD10Lm1hdGNoKC8oW2EtekEtWlxcZFxcLl0rKVxcL1thLXpBLVpcXGRcXC5dKiQvKSkmJjI9PXQubGVuZ3RoP3RbMV06XCJPdGhlclwiOmRpOlwiU2FmYXJpXCJ9dmFyIHZpPXttZDpcIkZpcmViYXNlQ29yZS13ZWJcIixvZDpcIkZpcmViYXNlVUktd2ViXCJ9O2Z1bmN0aW9uIG1pKHQsZSl7ZT1lfHxbXTt2YXIgbixpPVtdLHI9e307Zm9yKG4gaW4gdmkpclt2aVtuXV09ITA7Zm9yKG49MDtuPGUubGVuZ3RoO24rKyl2b2lkIDAhPT1yW2Vbbl1dJiYoZGVsZXRlIHJbZVtuXV0saS5wdXNoKGVbbl0pKTtyZXR1cm4gaS5zb3J0KCksKGU9aSkubGVuZ3RofHwoZT1bXCJGaXJlYmFzZUNvcmUtd2ViXCJdKSxcIkJyb3dzZXJcIj09PShpPWhpKCkpP2k9cGkocj1naSgpKTpcIldvcmtlclwiPT09aSYmKGk9cGkocj1naSgpKStcIi1cIitpKSxpK1wiL0pzQ29yZS9cIit0K1wiL1wiK2Uuam9pbihcIixcIil9ZnVuY3Rpb24gZ2koKXtyZXR1cm4gbC5uYXZpZ2F0b3ImJmwubmF2aWdhdG9yLnVzZXJBZ2VudHx8XCJcIn1mdW5jdGlvbiBiaSh0LGUpe3Q9dC5zcGxpdChcIi5cIiksZT1lfHxsO2Zvcih2YXIgbj0wO248dC5sZW5ndGgmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZudWxsIT1lO24rKyllPWVbdFtuXV07cmV0dXJuIGU9biE9dC5sZW5ndGg/dm9pZCAwOmV9ZnVuY3Rpb24geWkoKXt0cnl7dmFyIHQ9bC5sb2NhbFN0b3JhZ2UsZT1OaSgpO2lmKHQpcmV0dXJuIHQuc2V0SXRlbShlLFwiMVwiKSx0LnJlbW92ZUl0ZW0oZSksIVpuKCl8fCEhbC5pbmRleGVkREJ9Y2F0Y2godCl7cmV0dXJuIGNpKCkmJiEhbC5pbmRleGVkREJ9cmV0dXJuITF9ZnVuY3Rpb24gd2koKXtyZXR1cm4oSWkoKXx8XCJjaHJvbWUtZXh0ZW5zaW9uOlwiPT09VGkoKXx8c2koKSkmJiFsaSgpJiZ5aSgpJiYhY2koKX1mdW5jdGlvbiBJaSgpe3JldHVyblwiaHR0cDpcIj09PVRpKCl8fFwiaHR0cHM6XCI9PT1UaSgpfWZ1bmN0aW9uIFRpKCl7cmV0dXJuIGwubG9jYXRpb24mJmwubG9jYXRpb24ucHJvdG9jb2x8fG51bGx9ZnVuY3Rpb24gRWkodCl7cmV0dXJuIWVpKHQ9dHx8Z2koKSkmJnBpKHQpIT1maX1mdW5jdGlvbiBBaSh0KXtyZXR1cm4gdm9pZCAwPT09dD9udWxsOlhuKHQpfWZ1bmN0aW9uIGtpKHQpe3ZhciBlLG49e307Zm9yKGUgaW4gdCl0Lmhhc093blByb3BlcnR5KGUpJiZudWxsIT09dFtlXSYmdm9pZCAwIT09dFtlXSYmKG5bZV09dFtlXSk7cmV0dXJuIG59ZnVuY3Rpb24gU2kodCl7aWYobnVsbCE9PXQpcmV0dXJuIEpTT04ucGFyc2UodCl9ZnVuY3Rpb24gTmkodCl7cmV0dXJuIHR8fE1hdGguZmxvb3IoMWU5Kk1hdGgucmFuZG9tKCkpLnRvU3RyaW5nKCl9ZnVuY3Rpb24gX2kodCl7cmV0dXJuXCJTYWZhcmlcIiE9cGkodD10fHxnaSgpKSYmIXQudG9Mb3dlckNhc2UoKS5tYXRjaCgvaXBob25lfGlwYWR8aXBvZC8pfWZ1bmN0aW9uIE9pKCl7dmFyIHQ9bC5fX19qc2w7aWYodCYmdC5IKWZvcih2YXIgZSBpbiB0LkgpaWYodC5IW2VdLnI9dC5IW2VdLnJ8fFtdLHQuSFtlXS5MPXQuSFtlXS5MfHxbXSx0LkhbZV0ucj10LkhbZV0uTC5jb25jYXQoKSx0LkNQKWZvcih2YXIgbj0wO248dC5DUC5sZW5ndGg7bisrKXQuQ1Bbbl09bnVsbH1mdW5jdGlvbiBDaSh0LGUpe2lmKGU8dCl0aHJvdyBFcnJvcihcIlNob3J0IGRlbGF5IHNob3VsZCBiZSBsZXNzIHRoYW4gbG9uZyBkZWxheSFcIik7dGhpcy5hPXQsdGhpcy5jPWUsdD1naSgpLGU9aGkoKSx0aGlzLmI9ZWkodCl8fFwiUmVhY3ROYXRpdmVcIj09PWV9ZnVuY3Rpb24gUmkoKXt2YXIgdD1sLmRvY3VtZW50O3JldHVybiF0fHx2b2lkIDA9PT10LnZpc2liaWxpdHlTdGF0ZXx8XCJ2aXNpYmxlXCI9PXQudmlzaWJpbGl0eVN0YXRlfWZ1bmN0aW9uIERpKCl7dmFyIGU9bC5kb2N1bWVudCxuPW51bGw7cmV0dXJuIFJpKCl8fCFlP3llKCk6bmV3IGZlKGZ1bmN0aW9uKHQpe249ZnVuY3Rpb24oKXtSaSgpJiYoZS5yZW1vdmVFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLG4sITEpLHQoKSl9LGUuYWRkRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIixuLCExKX0pLm8oZnVuY3Rpb24odCl7dGhyb3cgZS5yZW1vdmVFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLG4sITEpLHR9KX1mdW5jdGlvbiBQaSh0KXt0cnl7dmFyIGU9bmV3IERhdGUocGFyc2VJbnQodCwxMCkpO2lmKCFpc05hTihlLmdldFRpbWUoKSkmJiEvW14wLTldLy50ZXN0KHQpKXJldHVybiBlLnRvVVRDU3RyaW5nKCl9Y2F0Y2godCl7fXJldHVybiBudWxsfWZ1bmN0aW9uIExpKCl7cmV0dXJuIGJpKFwiZmlyZWF1dGgub2F1dGhoZWxwZXJcIixsKXx8YmkoXCJmaXJlYXV0aC5pZnJhbWVcIixsKX1DaS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKCl7dmFyIHQ9bC5uYXZpZ2F0b3I7cmV0dXJuIXR8fFwiYm9vbGVhblwiIT10eXBlb2YgdC5vbkxpbmV8fCFJaSgpJiZcImNocm9tZS1leHRlbnNpb246XCIhPT1UaSgpJiZ2b2lkIDA9PT10LmNvbm5lY3Rpb258fHQub25MaW5lP3RoaXMuYj90aGlzLmM6dGhpcy5hOk1hdGgubWluKDVlMyx0aGlzLmEpfTt2YXIgeGksTWk9e307ZnVuY3Rpb24gamkodCl7TWlbdF18fChNaVt0XT0hMCxcInVuZGVmaW5lZFwiIT10eXBlb2YgY29uc29sZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4odCkpfXRyeXt2YXIgVWk9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KFVpLFwiYWJjZFwiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCx2YWx1ZToxfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFVpLFwiYWJjZFwiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMCx2YWx1ZToyfSkseGk9Mj09VWkuYWJjZH1jYXRjaCh0KXt4aT0hMX1mdW5jdGlvbiBWaSh0LGUsbil7eGk/T2JqZWN0LmRlZmluZVByb3BlcnR5KHQsZSx7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsdmFsdWU6bn0pOnRbZV09bn1mdW5jdGlvbiBGaSh0LGUpe2lmKGUpZm9yKHZhciBuIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShuKSYmVmkodCxuLGVbbl0pfWZ1bmN0aW9uIHFpKHQpe3ZhciBlPXt9O3JldHVybiBGaShlLHQpLGV9ZnVuY3Rpb24gSGkodCl7dmFyIGU9dDtpZihcIm9iamVjdFwiPT10eXBlb2YgdCYmbnVsbCE9dClmb3IodmFyIG4gaW4gZT1cImxlbmd0aFwiaW4gdD9bXTp7fSx0KVZpKGUsbixIaSh0W25dKSk7cmV0dXJuIGV9ZnVuY3Rpb24gS2kodCl7dmFyIGU9dCYmKHRbSmldP1wicGhvbmVcIjpudWxsKTtpZighKGUmJnQmJnRbWGldKSl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIsXCJJbnRlcm5hbCBhc3NlcnQ6IGludmFsaWQgTXVsdGlGYWN0b3JJbmZvIG9iamVjdFwiKTtWaSh0aGlzLFwidWlkXCIsdFtYaV0pLFZpKHRoaXMsXCJkaXNwbGF5TmFtZVwiLHRbQmldfHxudWxsKTt2YXIgbj1udWxsO1ZpKHRoaXMsXCJlbnJvbGxtZW50VGltZVwiLG49dFtXaV0/bmV3IERhdGUodFtXaV0pLnRvVVRDU3RyaW5nKCk6biksVmkodGhpcyxcImZhY3RvcklkXCIsZSl9ZnVuY3Rpb24gR2kodCl7dHJ5e3ZhciBlPW5ldyBZaSh0KX1jYXRjaCh0KXtlPW51bGx9cmV0dXJuIGV9S2kucHJvdG90eXBlLnc9ZnVuY3Rpb24oKXtyZXR1cm57dWlkOnRoaXMudWlkLGRpc3BsYXlOYW1lOnRoaXMuZGlzcGxheU5hbWUsZmFjdG9ySWQ6dGhpcy5mYWN0b3JJZCxlbnJvbGxtZW50VGltZTp0aGlzLmVucm9sbG1lbnRUaW1lfX07dmFyIEJpPVwiZGlzcGxheU5hbWVcIixXaT1cImVucm9sbGVkQXRcIixYaT1cIm1mYUVucm9sbG1lbnRJZFwiLEppPVwicGhvbmVJbmZvXCI7ZnVuY3Rpb24gWWkodCl7S2kuY2FsbCh0aGlzLHQpLFZpKHRoaXMsXCJwaG9uZU51bWJlclwiLHRbSmldKX1mdW5jdGlvbiB6aSh0KXt2YXIgZT17fSxuPXRbdHJdLGk9dFtucl0scj10W2lyXTtpZih0PUdpKHRbZXJdKSwhcnx8ciE9WmkmJnIhPVFpJiYhbnx8cj09UWkmJiFpfHxyPT0kaSYmIXQpdGhyb3cgRXJyb3IoXCJJbnZhbGlkIGNoZWNrQWN0aW9uQ29kZSByZXNwb25zZSFcIik7cj09UWk/KGVbb3JdPW58fG51bGwsZVtzcl09bnx8bnVsbCxlW3JyXT1pKTooZVtvcl09aXx8bnVsbCxlW3NyXT1pfHxudWxsLGVbcnJdPW58fG51bGwpLGVbYXJdPXR8fG51bGwsVmkodGhpcyxjcixyKSxWaSh0aGlzLHVyLEhpKGUpKX13KFlpLEtpKSxZaS5wcm90b3R5cGUudz1mdW5jdGlvbigpe3ZhciB0PVlpLmFiLncuY2FsbCh0aGlzKTtyZXR1cm4gdC5waG9uZU51bWJlcj10aGlzLnBob25lTnVtYmVyLHR9O3ZhciAkaT1cIlJFVkVSVF9TRUNPTkRfRkFDVE9SX0FERElUSU9OXCIsWmk9XCJFTUFJTF9TSUdOSU5cIixRaT1cIlZFUklGWV9BTkRfQ0hBTkdFX0VNQUlMXCIsdHI9XCJlbWFpbFwiLGVyPVwibWZhSW5mb1wiLG5yPVwibmV3RW1haWxcIixpcj1cInJlcXVlc3RUeXBlXCIscnI9XCJlbWFpbFwiLG9yPVwiZnJvbUVtYWlsXCIsYXI9XCJtdWx0aUZhY3RvckluZm9cIixzcj1cInByZXZpb3VzRW1haWxcIix1cj1cImRhdGFcIixjcj1cIm9wZXJhdGlvblwiO2Z1bmN0aW9uIGhyKHQpe3ZhciBlPV9uKHQ9T24odCksbHIpfHxudWxsLG49X24odCxmcil8fG51bGwsaT0oaT1fbih0LHZyKXx8bnVsbCkmJmdyW2ldfHxudWxsO2lmKCFlfHwhbnx8IWkpdGhyb3cgbmV3IFQoXCJhcmd1bWVudC1lcnJvclwiLGxyK1wiLCBcIitmcitcImFuZCBcIit2citcIiBhcmUgcmVxdWlyZWQgaW4gYSB2YWxpZCBhY3Rpb24gY29kZSBVUkwuXCIpO0ZpKHRoaXMse2FwaUtleTplLG9wZXJhdGlvbjppLGNvZGU6bixjb250aW51ZVVybDpfbih0LGRyKXx8bnVsbCxsYW5ndWFnZUNvZGU6X24odCxwcil8fG51bGwsdGVuYW50SWQ6X24odCxtcil8fG51bGx9KX12YXIgbHI9XCJhcGlLZXlcIixmcj1cIm9vYkNvZGVcIixkcj1cImNvbnRpbnVlVXJsXCIscHI9XCJsYW5ndWFnZUNvZGVcIix2cj1cIm1vZGVcIixtcj1cInRlbmFudElkXCIsZ3I9e3JlY292ZXJFbWFpbDpcIlJFQ09WRVJfRU1BSUxcIixyZXNldFBhc3N3b3JkOlwiUEFTU1dPUkRfUkVTRVRcIixyZXZlcnRTZWNvbmRGYWN0b3JBZGRpdGlvbjokaSxzaWduSW46WmksdmVyaWZ5QW5kQ2hhbmdlRW1haWw6UWksdmVyaWZ5RW1haWw6XCJWRVJJRllfRU1BSUxcIn07ZnVuY3Rpb24gYnIodCl7dHJ5e3JldHVybiBuZXcgaHIodCl9Y2F0Y2godCl7cmV0dXJuIG51bGx9fWZ1bmN0aW9uIHlyKHQpe2lmKHZvaWQgMD09PShlPXRbQXJdKSl0aHJvdyBuZXcgVChcIm1pc3NpbmctY29udGludWUtdXJpXCIpO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBlfHxcInN0cmluZ1wiPT10eXBlb2YgZSYmIWUubGVuZ3RoKXRocm93IG5ldyBUKFwiaW52YWxpZC1jb250aW51ZS11cmlcIik7aWYodGhpcy5oPWUsdGhpcy5iPXRoaXMuYT1udWxsLHRoaXMuZz0hMSwoaT10W3dyXSkmJlwib2JqZWN0XCI9PXR5cGVvZiBpKXt2YXIgZT1pW05yXSxuPWlba3JdLGk9aVtTcl07aWYoXCJzdHJpbmdcIj09dHlwZW9mIGUmJmUubGVuZ3RoKXtpZih0aGlzLmE9ZSx2b2lkIDAhPT1uJiZcImJvb2xlYW5cIiE9dHlwZW9mIG4pdGhyb3cgbmV3IFQoXCJhcmd1bWVudC1lcnJvclwiLGtyK1wiIHByb3BlcnR5IG11c3QgYmUgYSBib29sZWFuIHdoZW4gc3BlY2lmaWVkLlwiKTtpZih0aGlzLmc9ISFuLHZvaWQgMCE9PWkmJihcInN0cmluZ1wiIT10eXBlb2YgaXx8XCJzdHJpbmdcIj09dHlwZW9mIGkmJiFpLmxlbmd0aCkpdGhyb3cgbmV3IFQoXCJhcmd1bWVudC1lcnJvclwiLFNyK1wiIHByb3BlcnR5IG11c3QgYmUgYSBub24gZW1wdHkgc3RyaW5nIHdoZW4gc3BlY2lmaWVkLlwiKTt0aGlzLmI9aXx8bnVsbH1lbHNle2lmKHZvaWQgMCE9PWUpdGhyb3cgbmV3IFQoXCJhcmd1bWVudC1lcnJvclwiLE5yK1wiIHByb3BlcnR5IG11c3QgYmUgYSBub24gZW1wdHkgc3RyaW5nIHdoZW4gc3BlY2lmaWVkLlwiKTtpZih2b2lkIDAhPT1ufHx2b2lkIDAhPT1pKXRocm93IG5ldyBUKFwibWlzc2luZy1hbmRyb2lkLXBrZy1uYW1lXCIpfX1lbHNlIGlmKHZvaWQgMCE9PWkpdGhyb3cgbmV3IFQoXCJhcmd1bWVudC1lcnJvclwiLHdyK1wiIHByb3BlcnR5IG11c3QgYmUgYSBub24gbnVsbCBvYmplY3Qgd2hlbiBzcGVjaWZpZWQuXCIpO2lmKHRoaXMuZj1udWxsLChlPXRbRXJdKSYmXCJvYmplY3RcIj09dHlwZW9mIGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZihlPWVbX3JdKSYmZS5sZW5ndGgpdGhpcy5mPWU7ZWxzZSBpZih2b2lkIDAhPT1lKXRocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixfcitcIiBwcm9wZXJ0eSBtdXN0IGJlIGEgbm9uIGVtcHR5IHN0cmluZyB3aGVuIHNwZWNpZmllZC5cIil9ZWxzZSBpZih2b2lkIDAhPT1lKXRocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixFcitcIiBwcm9wZXJ0eSBtdXN0IGJlIGEgbm9uIG51bGwgb2JqZWN0IHdoZW4gc3BlY2lmaWVkLlwiKTtpZih2b2lkIDAhPT0oZT10W1RyXSkmJlwiYm9vbGVhblwiIT10eXBlb2YgZSl0aHJvdyBuZXcgVChcImFyZ3VtZW50LWVycm9yXCIsVHIrXCIgcHJvcGVydHkgbXVzdCBiZSBhIGJvb2xlYW4gd2hlbiBzcGVjaWZpZWQuXCIpO2lmKHRoaXMuYz0hIWUsdm9pZCAwIT09KHQ9dFtJcl0pJiYoXCJzdHJpbmdcIiE9dHlwZW9mIHR8fFwic3RyaW5nXCI9PXR5cGVvZiB0JiYhdC5sZW5ndGgpKXRocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixJcitcIiBwcm9wZXJ0eSBtdXN0IGJlIGEgbm9uIGVtcHR5IHN0cmluZyB3aGVuIHNwZWNpZmllZC5cIik7dGhpcy5pPXR8fG51bGx9dmFyIHdyPVwiYW5kcm9pZFwiLElyPVwiZHluYW1pY0xpbmtEb21haW5cIixUcj1cImhhbmRsZUNvZGVJbkFwcFwiLEVyPVwiaU9TXCIsQXI9XCJ1cmxcIixrcj1cImluc3RhbGxBcHBcIixTcj1cIm1pbmltdW1WZXJzaW9uXCIsTnI9XCJwYWNrYWdlTmFtZVwiLF9yPVwiYnVuZGxlSWRcIjtmdW5jdGlvbiBPcih0KXt2YXIgZSxuPXt9O2ZvcihlIGluIG4uY29udGludWVVcmw9dC5oLG4uY2FuSGFuZGxlQ29kZUluQXBwPXQuYywobi5hbmRyb2lkUGFja2FnZU5hbWU9dC5hKSYmKG4uYW5kcm9pZE1pbmltdW1WZXJzaW9uPXQuYixuLmFuZHJvaWRJbnN0YWxsQXBwPXQuZyksbi5pT1NCdW5kbGVJZD10LmYsbi5keW5hbWljTGlua0RvbWFpbj10LmksbiludWxsPT09bltlXSYmZGVsZXRlIG5bZV07cmV0dXJuIG59dmFyIENyPW51bGw7ZnVuY3Rpb24gUnIodCl7dmFyIGU9W107cmV0dXJuIGZ1bmN0aW9uKGksdCl7ZnVuY3Rpb24gZSh0KXtmb3IoO3I8aS5sZW5ndGg7KXt2YXIgZT1pLmNoYXJBdChyKyspLG49Q3JbZV07aWYobnVsbCE9bilyZXR1cm4gbjtpZighL15bXFxzXFx4YTBdKiQvLnRlc3QoZSkpdGhyb3cgRXJyb3IoXCJVbmtub3duIGJhc2U2NCBlbmNvZGluZyBhdCBjaGFyOiBcIitlKX1yZXR1cm4gdH0hZnVuY3Rpb24oKXtpZighQ3Ipe0NyPXt9O2Zvcih2YXIgdD1cIkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5XCIuc3BsaXQoXCJcIiksZT1bXCIrLz1cIixcIisvXCIsXCItXz1cIixcIi1fLlwiLFwiLV9cIl0sbj0wO248NTtuKyspZm9yKHZhciBpPXQuY29uY2F0KGVbbl0uc3BsaXQoXCJcIikpLHI9MDtyPGkubGVuZ3RoO3IrKyl7dmFyIG89aVtyXTt2b2lkIDA9PT1DcltvXSYmKENyW29dPXIpfX19KCk7Zm9yKHZhciByPTA7Oyl7dmFyIG49ZSgtMSksbz1lKDApLGE9ZSg2NCkscz1lKDY0KTtpZig2ND09PXMmJi0xPT09bilicmVhazt0KG48PDJ8bz4+NCksNjQhPWEmJih0KG88PDQmMjQwfGE+PjIpLDY0IT1zJiZ0KGE8PDYmMTkyfHMpKX19KHQsZnVuY3Rpb24odCl7ZS5wdXNoKHQpfSksZX1mdW5jdGlvbiBEcih0KXt2YXIgZT1Mcih0KTtpZighKGUmJmUuc3ViJiZlLmlzcyYmZS5hdWQmJmUuZXhwKSl0aHJvdyBFcnJvcihcIkludmFsaWQgSldUXCIpO3RoaXMuaD10LHRoaXMuYT1lLmV4cCx0aGlzLmk9ZS5zdWIsdD1EYXRlLm5vdygpLzFlMyx0aGlzLmc9ZS5pYXR8fCh0PnRoaXMuYT90aGlzLmE6dCksdGhpcy5iPWUucHJvdmlkZXJfaWR8fGUuZmlyZWJhc2UmJmUuZmlyZWJhc2Uuc2lnbl9pbl9wcm92aWRlcnx8bnVsbCx0aGlzLmY9ZS5maXJlYmFzZSYmZS5maXJlYmFzZS50ZW5hbnR8fG51bGwsdGhpcy5jPSEhZS5pc19hbm9ueW1vdXN8fFwiYW5vbnltb3VzXCI9PXRoaXMuYn1mdW5jdGlvbiBQcih0KXt0cnl7cmV0dXJuIG5ldyBEcih0KX1jYXRjaCh0KXtyZXR1cm4gbnVsbH19ZnVuY3Rpb24gTHIodCl7aWYoIXQpcmV0dXJuIG51bGw7aWYoMyE9KHQ9dC5zcGxpdChcIi5cIikpLmxlbmd0aClyZXR1cm4gbnVsbDtmb3IodmFyIGU9KDQtKHQ9dFsxXSkubGVuZ3RoJTQpJTQsbj0wO248ZTtuKyspdCs9XCIuXCI7dHJ5e3ZhciBpPVJyKHQpO2Zvcih0PVtdLG49ZT0wO2U8aS5sZW5ndGg7KXt2YXIgcixvLGEscz1pW2UrK107czwxMjg/dFtuKytdPVN0cmluZy5mcm9tQ2hhckNvZGUocyk6MTkxPHMmJnM8MjI0PyhyPWlbZSsrXSx0W24rK109U3RyaW5nLmZyb21DaGFyQ29kZSgoMzEmcyk8PDZ8NjMmcikpOjIzOTxzJiZzPDM2NT8oYT0oKDcmcyk8PDE4fCg2MyYocj1pW2UrK10pKTw8MTJ8KDYzJihvPWlbZSsrXSkpPDw2fDYzJmlbZSsrXSktNjU1MzYsdFtuKytdPVN0cmluZy5mcm9tQ2hhckNvZGUoNTUyOTYrKGE+PjEwKSksdFtuKytdPVN0cmluZy5mcm9tQ2hhckNvZGUoNTYzMjArKDEwMjMmYSkpKToocj1pW2UrK10sbz1pW2UrK10sdFtuKytdPVN0cmluZy5mcm9tQ2hhckNvZGUoKDE1JnMpPDwxMnwoNjMmcik8PDZ8NjMmbykpfXJldHVybiBKU09OLnBhcnNlKHQuam9pbihcIlwiKSl9Y2F0Y2godCl7fXJldHVybiBudWxsfURyLnByb3RvdHlwZS5UPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZn0sRHIucHJvdG90eXBlLmw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jfSxEci5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ofTt2YXIgeHI9XCJvYXV0aF9jb25zdW1lcl9rZXkgb2F1dGhfbm9uY2Ugb2F1dGhfc2lnbmF0dXJlIG9hdXRoX3NpZ25hdHVyZV9tZXRob2Qgb2F1dGhfdGltZXN0YW1wIG9hdXRoX3Rva2VuIG9hdXRoX3ZlcnNpb25cIi5zcGxpdChcIiBcIiksTXI9W1wiY2xpZW50X2lkXCIsXCJyZXNwb25zZV90eXBlXCIsXCJzY29wZVwiLFwicmVkaXJlY3RfdXJpXCIsXCJzdGF0ZVwiXSxqcj17bmQ6e0phOlwibG9jYWxlXCIsdWE6NzAwLHRhOjYwMCxmYTpcImZhY2Vib29rLmNvbVwiLFhhOk1yfSxwZDp7SmE6bnVsbCx1YTo1MDAsdGE6NzUwLGZhOlwiZ2l0aHViLmNvbVwiLFhhOk1yfSxxZDp7SmE6XCJobFwiLHVhOjUxNSx0YTo2ODAsZmE6XCJnb29nbGUuY29tXCIsWGE6TXJ9LHdkOntKYTpcImxhbmdcIix1YTo0ODUsdGE6NzA1LGZhOlwidHdpdHRlci5jb21cIixYYTp4cn0sa2Q6e0phOlwibG9jYWxlXCIsdWE6NjQwLHRhOjYwMCxmYTpcImFwcGxlLmNvbVwiLFhhOltdfX07ZnVuY3Rpb24gVXIodCl7Zm9yKHZhciBlIGluIGpyKWlmKGpyW2VdLmZhPT10KXJldHVybiBqcltlXTtyZXR1cm4gbnVsbH1mdW5jdGlvbiBWcih0KXt2YXIgZT17fTtlW1wiZmFjZWJvb2suY29tXCJdPUdyLGVbXCJnb29nbGUuY29tXCJdPVdyLGVbXCJnaXRodWIuY29tXCJdPUJyLGVbXCJ0d2l0dGVyLmNvbVwiXT1Ycjt2YXIgbj10JiZ0W3FyXTt0cnl7aWYobilyZXR1cm4gbmV3KGVbbl18fEtyKSh0KTtpZih2b2lkIDAhPT10W0ZyXSlyZXR1cm4gbmV3IEhyKHQpfWNhdGNoKHQpe31yZXR1cm4gbnVsbH12YXIgRnI9XCJpZFRva2VuXCIscXI9XCJwcm92aWRlcklkXCI7ZnVuY3Rpb24gSHIodCl7dmFyIGUsbj10W3FyXTtpZihufHwhdFtGcl18fChlPVByKHRbRnJdKSkmJmUuYiYmKG49ZS5iKSwhbil0aHJvdyBFcnJvcihcIkludmFsaWQgYWRkaXRpb25hbCB1c2VyIGluZm8hXCIpO1wiYW5vbnltb3VzXCIhPW4mJlwiY3VzdG9tXCIhPW58fChuPW51bGwpLGU9ITEsdm9pZCAwIT09dC5pc05ld1VzZXI/ZT0hIXQuaXNOZXdVc2VyOlwiaWRlbnRpdHl0b29sa2l0I1NpZ251cE5ld1VzZXJSZXNwb25zZVwiPT09dC5raW5kJiYoZT0hMCksVmkodGhpcyxcInByb3ZpZGVySWRcIixuKSxWaSh0aGlzLFwiaXNOZXdVc2VyXCIsZSl9ZnVuY3Rpb24gS3IodCl7SHIuY2FsbCh0aGlzLHQpLFZpKHRoaXMsXCJwcm9maWxlXCIsSGkoKHQ9U2kodC5yYXdVc2VySW5mb3x8XCJ7fVwiKSl8fHt9KSl9ZnVuY3Rpb24gR3IodCl7aWYoS3IuY2FsbCh0aGlzLHQpLFwiZmFjZWJvb2suY29tXCIhPXRoaXMucHJvdmlkZXJJZCl0aHJvdyBFcnJvcihcIkludmFsaWQgcHJvdmlkZXIgSUQhXCIpfWZ1bmN0aW9uIEJyKHQpe2lmKEtyLmNhbGwodGhpcyx0KSxcImdpdGh1Yi5jb21cIiE9dGhpcy5wcm92aWRlcklkKXRocm93IEVycm9yKFwiSW52YWxpZCBwcm92aWRlciBJRCFcIik7VmkodGhpcyxcInVzZXJuYW1lXCIsdGhpcy5wcm9maWxlJiZ0aGlzLnByb2ZpbGUubG9naW58fG51bGwpfWZ1bmN0aW9uIFdyKHQpe2lmKEtyLmNhbGwodGhpcyx0KSxcImdvb2dsZS5jb21cIiE9dGhpcy5wcm92aWRlcklkKXRocm93IEVycm9yKFwiSW52YWxpZCBwcm92aWRlciBJRCFcIil9ZnVuY3Rpb24gWHIodCl7aWYoS3IuY2FsbCh0aGlzLHQpLFwidHdpdHRlci5jb21cIiE9dGhpcy5wcm92aWRlcklkKXRocm93IEVycm9yKFwiSW52YWxpZCBwcm92aWRlciBJRCFcIik7VmkodGhpcyxcInVzZXJuYW1lXCIsdC5zY3JlZW5OYW1lfHxudWxsKX1mdW5jdGlvbiBKcih0KXt2YXIgZT1fbihpPU9uKHQpLFwibGlua1wiKSxuPV9uKE9uKGUpLFwibGlua1wiKSxpPV9uKGksXCJkZWVwX2xpbmtfaWRcIik7cmV0dXJuIF9uKE9uKGkpLFwibGlua1wiKXx8aXx8bnx8ZXx8dH1mdW5jdGlvbiBZcih0LGUpe2lmKCF0JiYhZSl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIsXCJJbnRlcm5hbCBhc3NlcnQ6IG5vIHJhdyBzZXNzaW9uIHN0cmluZyBhdmFpbGFibGVcIik7aWYodCYmZSl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIsXCJJbnRlcm5hbCBhc3NlcnQ6IHVuYWJsZSB0byBkZXRlcm1pbmUgdGhlIHNlc3Npb24gdHlwZVwiKTt0aGlzLmE9dHx8bnVsbCx0aGlzLmI9ZXx8bnVsbCx0aGlzLnR5cGU9dGhpcy5hP3pyOiRyfXcoS3IsSHIpLHcoR3IsS3IpLHcoQnIsS3IpLHcoV3IsS3IpLHcoWHIsS3IpO3ZhciB6cj1cImVucm9sbFwiLCRyPVwic2lnbmluXCI7ZnVuY3Rpb24gWnIoKXt9ZnVuY3Rpb24gUXIodCxuKXtyZXR1cm4gdC50aGVuKGZ1bmN0aW9uKHQpe2lmKHRbSGFdKXt2YXIgZT1Qcih0W0hhXSk7aWYoIWV8fG4hPWUuaSl0aHJvdyBuZXcgVChcInVzZXItbWlzbWF0Y2hcIik7cmV0dXJuIHR9dGhyb3cgbmV3IFQoXCJ1c2VyLW1pc21hdGNoXCIpfSkubyhmdW5jdGlvbih0KXt0aHJvdyB0JiZ0LmNvZGUmJnQuY29kZT09aytcInVzZXItbm90LWZvdW5kXCI/bmV3IFQoXCJ1c2VyLW1pc21hdGNoXCIpOnR9KX1mdW5jdGlvbiB0byh0LGUpe2lmKCFlKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIixcImZhaWxlZCB0byBjb25zdHJ1Y3QgYSBjcmVkZW50aWFsXCIpO3RoaXMuYT1lLFZpKHRoaXMsXCJwcm92aWRlcklkXCIsdCksVmkodGhpcyxcInNpZ25Jbk1ldGhvZFwiLHQpfWZ1bmN0aW9uIGVvKHQpe3JldHVybntwZW5kaW5nVG9rZW46dC5hLHJlcXVlc3RVcmk6XCJodHRwOi8vbG9jYWxob3N0XCJ9fWZ1bmN0aW9uIG5vKHQpe2lmKHQmJnQucHJvdmlkZXJJZCYmdC5zaWduSW5NZXRob2QmJjA9PXQucHJvdmlkZXJJZC5pbmRleE9mKFwic2FtbC5cIikmJnQucGVuZGluZ1Rva2VuKXRyeXtyZXR1cm4gbmV3IHRvKHQucHJvdmlkZXJJZCx0LnBlbmRpbmdUb2tlbil9Y2F0Y2godCl7fXJldHVybiBudWxsfWZ1bmN0aW9uIGlvKHQsZSxuKXtpZih0aGlzLmE9bnVsbCxlLmlkVG9rZW58fGUuYWNjZXNzVG9rZW4pZS5pZFRva2VuJiZWaSh0aGlzLFwiaWRUb2tlblwiLGUuaWRUb2tlbiksZS5hY2Nlc3NUb2tlbiYmVmkodGhpcyxcImFjY2Vzc1Rva2VuXCIsZS5hY2Nlc3NUb2tlbiksZS5ub25jZSYmIWUucGVuZGluZ1Rva2VuJiZWaSh0aGlzLFwibm9uY2VcIixlLm5vbmNlKSxlLnBlbmRpbmdUb2tlbiYmKHRoaXMuYT1lLnBlbmRpbmdUb2tlbik7ZWxzZXtpZighZS5vYXV0aFRva2VufHwhZS5vYXV0aFRva2VuU2VjcmV0KXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIixcImZhaWxlZCB0byBjb25zdHJ1Y3QgYSBjcmVkZW50aWFsXCIpO1ZpKHRoaXMsXCJhY2Nlc3NUb2tlblwiLGUub2F1dGhUb2tlbiksVmkodGhpcyxcInNlY3JldFwiLGUub2F1dGhUb2tlblNlY3JldCl9VmkodGhpcyxcInByb3ZpZGVySWRcIix0KSxWaSh0aGlzLFwic2lnbkluTWV0aG9kXCIsbil9ZnVuY3Rpb24gcm8odCl7dmFyIGU9e307cmV0dXJuIHQuaWRUb2tlbiYmKGUuaWRfdG9rZW49dC5pZFRva2VuKSx0LmFjY2Vzc1Rva2VuJiYoZS5hY2Nlc3NfdG9rZW49dC5hY2Nlc3NUb2tlbiksdC5zZWNyZXQmJihlLm9hdXRoX3Rva2VuX3NlY3JldD10LnNlY3JldCksZS5wcm92aWRlcklkPXQucHJvdmlkZXJJZCx0Lm5vbmNlJiYhdC5hJiYoZS5ub25jZT10Lm5vbmNlKSxlPXtwb3N0Qm9keTpxbihlKS50b1N0cmluZygpLHJlcXVlc3RVcmk6XCJodHRwOi8vbG9jYWxob3N0XCJ9LHQuYSYmKGRlbGV0ZSBlLnBvc3RCb2R5LGUucGVuZGluZ1Rva2VuPXQuYSksZX1mdW5jdGlvbiBvbyh0KXtpZih0JiZ0LnByb3ZpZGVySWQmJnQuc2lnbkluTWV0aG9kKXt2YXIgZT17aWRUb2tlbjp0Lm9hdXRoSWRUb2tlbixhY2Nlc3NUb2tlbjp0Lm9hdXRoVG9rZW5TZWNyZXQ/bnVsbDp0Lm9hdXRoQWNjZXNzVG9rZW4sb2F1dGhUb2tlblNlY3JldDp0Lm9hdXRoVG9rZW5TZWNyZXQsb2F1dGhUb2tlbjp0Lm9hdXRoVG9rZW5TZWNyZXQmJnQub2F1dGhBY2Nlc3NUb2tlbixub25jZTp0Lm5vbmNlLHBlbmRpbmdUb2tlbjp0LnBlbmRpbmdUb2tlbn07dHJ5e3JldHVybiBuZXcgaW8odC5wcm92aWRlcklkLGUsdC5zaWduSW5NZXRob2QpfWNhdGNoKHQpe319cmV0dXJuIG51bGx9ZnVuY3Rpb24gYW8odCxlKXt0aGlzLlFjPWV8fFtdLEZpKHRoaXMse3Byb3ZpZGVySWQ6dCxpc09BdXRoUHJvdmlkZXI6ITB9KSx0aGlzLkliPXt9LHRoaXMucGI9KFVyKHQpfHx7fSkuSmF8fG51bGwsdGhpcy5vYj1udWxsfWZ1bmN0aW9uIHNvKHQpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiB0fHwwIT10LmluZGV4T2YoXCJzYW1sLlwiKSl0aHJvdyBuZXcgVChcImFyZ3VtZW50LWVycm9yXCIsJ1NBTUwgcHJvdmlkZXIgSURzIG11c3QgYmUgcHJlZml4ZWQgd2l0aCBcInNhbWwuXCInKTthby5jYWxsKHRoaXMsdCxbXSl9ZnVuY3Rpb24gdW8odCl7YW8uY2FsbCh0aGlzLHQsTXIpLHRoaXMuYT1bXX1mdW5jdGlvbiBjbygpe3VvLmNhbGwodGhpcyxcImZhY2Vib29rLmNvbVwiKX1mdW5jdGlvbiBobyh0KXtpZighdCl0aHJvdyBuZXcgVChcImFyZ3VtZW50LWVycm9yXCIsXCJjcmVkZW50aWFsIGZhaWxlZDogZXhwZWN0ZWQgMSBhcmd1bWVudCAodGhlIE9BdXRoIGFjY2VzcyB0b2tlbikuXCIpO3ZhciBlPXQ7cmV0dXJuIG0odCkmJihlPXQuYWNjZXNzVG9rZW4pLChuZXcgY28pLmNyZWRlbnRpYWwoe2FjY2Vzc1Rva2VuOmV9KX1mdW5jdGlvbiBsbygpe3VvLmNhbGwodGhpcyxcImdpdGh1Yi5jb21cIil9ZnVuY3Rpb24gZm8odCl7aWYoIXQpdGhyb3cgbmV3IFQoXCJhcmd1bWVudC1lcnJvclwiLFwiY3JlZGVudGlhbCBmYWlsZWQ6IGV4cGVjdGVkIDEgYXJndW1lbnQgKHRoZSBPQXV0aCBhY2Nlc3MgdG9rZW4pLlwiKTt2YXIgZT10O3JldHVybiBtKHQpJiYoZT10LmFjY2Vzc1Rva2VuKSwobmV3IGxvKS5jcmVkZW50aWFsKHthY2Nlc3NUb2tlbjplfSl9ZnVuY3Rpb24gcG8oKXt1by5jYWxsKHRoaXMsXCJnb29nbGUuY29tXCIpLHRoaXMuQ2EoXCJwcm9maWxlXCIpfWZ1bmN0aW9uIHZvKHQsZSl7dmFyIG49dDtyZXR1cm4gbSh0KSYmKG49dC5pZFRva2VuLGU9dC5hY2Nlc3NUb2tlbiksKG5ldyBwbykuY3JlZGVudGlhbCh7aWRUb2tlbjpuLGFjY2Vzc1Rva2VuOmV9KX1mdW5jdGlvbiBtbygpe2FvLmNhbGwodGhpcyxcInR3aXR0ZXIuY29tXCIseHIpfWZ1bmN0aW9uIGdvKHQsZSl7dmFyIG49dDtpZighKG49IW0obik/e29hdXRoVG9rZW46dCxvYXV0aFRva2VuU2VjcmV0OmV9Om4pLm9hdXRoVG9rZW58fCFuLm9hdXRoVG9rZW5TZWNyZXQpdGhyb3cgbmV3IFQoXCJhcmd1bWVudC1lcnJvclwiLFwiY3JlZGVudGlhbCBmYWlsZWQ6IGV4cGVjdGVkIDIgYXJndW1lbnRzICh0aGUgT0F1dGggYWNjZXNzIHRva2VuIGFuZCBzZWNyZXQpLlwiKTtyZXR1cm4gbmV3IGlvKFwidHdpdHRlci5jb21cIixuLFwidHdpdHRlci5jb21cIil9ZnVuY3Rpb24gYm8odCxlLG4pe3RoaXMuYT10LHRoaXMuZj1lLFZpKHRoaXMsXCJwcm92aWRlcklkXCIsXCJwYXNzd29yZFwiKSxWaSh0aGlzLFwic2lnbkluTWV0aG9kXCIsbj09PXdvLkVNQUlMX0xJTktfU0lHTl9JTl9NRVRIT0Q/d28uRU1BSUxfTElOS19TSUdOX0lOX01FVEhPRDp3by5FTUFJTF9QQVNTV09SRF9TSUdOX0lOX01FVEhPRCl9ZnVuY3Rpb24geW8odCl7cmV0dXJuIHQmJnQuZW1haWwmJnQucGFzc3dvcmQ/bmV3IGJvKHQuZW1haWwsdC5wYXNzd29yZCx0LnNpZ25Jbk1ldGhvZCk6bnVsbH1mdW5jdGlvbiB3bygpe0ZpKHRoaXMse3Byb3ZpZGVySWQ6XCJwYXNzd29yZFwiLGlzT0F1dGhQcm92aWRlcjohMX0pfWZ1bmN0aW9uIElvKHQsZSl7aWYoIShlPVRvKGUpKSl0aHJvdyBuZXcgVChcImFyZ3VtZW50LWVycm9yXCIsXCJJbnZhbGlkIGVtYWlsIGxpbmshXCIpO3JldHVybiBuZXcgYm8odCxlLmNvZGUsd28uRU1BSUxfTElOS19TSUdOX0lOX01FVEhPRCl9ZnVuY3Rpb24gVG8odCl7cmV0dXJuKHQ9YnIodD1Kcih0KSkpJiZ0Lm9wZXJhdGlvbj09PVppP3Q6bnVsbH1mdW5jdGlvbiBFbyh0KXtpZighKHQuZWImJnQuY2J8fHQuTGEmJnQuZWEpKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIik7dGhpcy5hPXQsVmkodGhpcyxcInByb3ZpZGVySWRcIixcInBob25lXCIpLHRoaXMuZmE9XCJwaG9uZVwiLFZpKHRoaXMsXCJzaWduSW5NZXRob2RcIixcInBob25lXCIpfWZ1bmN0aW9uIEFvKGUpe2lmKGUmJlwicGhvbmVcIj09PWUucHJvdmlkZXJJZCYmKGUudmVyaWZpY2F0aW9uSWQmJmUudmVyaWZpY2F0aW9uQ29kZXx8ZS50ZW1wb3JhcnlQcm9vZiYmZS5waG9uZU51bWJlcikpe3ZhciBuPXt9O3JldHVybiBWKFtcInZlcmlmaWNhdGlvbklkXCIsXCJ2ZXJpZmljYXRpb25Db2RlXCIsXCJ0ZW1wb3JhcnlQcm9vZlwiLFwicGhvbmVOdW1iZXJcIl0sZnVuY3Rpb24odCl7ZVt0XSYmKG5bdF09ZVt0XSl9KSxuZXcgRW8obil9cmV0dXJuIG51bGx9ZnVuY3Rpb24ga28odCl7cmV0dXJuIHQuYS5MYSYmdC5hLmVhP3t0ZW1wb3JhcnlQcm9vZjp0LmEuTGEscGhvbmVOdW1iZXI6dC5hLmVhfTp7c2Vzc2lvbkluZm86dC5hLmViLGNvZGU6dC5hLmNifX1mdW5jdGlvbiBTbyh0KXt0cnl7dGhpcy5hPXR8fHpsLmRlZmF1bHQuYXV0aCgpfWNhdGNoKHQpe3Rocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixcIkVpdGhlciBhbiBpbnN0YW5jZSBvZiBmaXJlYmFzZS5hdXRoLkF1dGggbXVzdCBiZSBwYXNzZWQgYXMgYW4gYXJndW1lbnQgdG8gdGhlIGZpcmViYXNlLmF1dGguUGhvbmVBdXRoUHJvdmlkZXIgY29uc3RydWN0b3IsIG9yIHRoZSBkZWZhdWx0IGZpcmViYXNlIEFwcCBpbnN0YW5jZSBtdXN0IGJlIGluaXRpYWxpemVkIHZpYSBmaXJlYmFzZS5pbml0aWFsaXplQXBwKCkuXCIpfUZpKHRoaXMse3Byb3ZpZGVySWQ6XCJwaG9uZVwiLGlzT0F1dGhQcm92aWRlcjohMX0pfWZ1bmN0aW9uIE5vKHQsZSl7aWYoIXQpdGhyb3cgbmV3IFQoXCJtaXNzaW5nLXZlcmlmaWNhdGlvbi1pZFwiKTtpZighZSl0aHJvdyBuZXcgVChcIm1pc3NpbmctdmVyaWZpY2F0aW9uLWNvZGVcIik7cmV0dXJuIG5ldyBFbyh7ZWI6dCxjYjplfSl9ZnVuY3Rpb24gX28odCl7aWYodC50ZW1wb3JhcnlQcm9vZiYmdC5waG9uZU51bWJlcilyZXR1cm4gbmV3IEVvKHtMYTp0LnRlbXBvcmFyeVByb29mLGVhOnQucGhvbmVOdW1iZXJ9KTt2YXIgZT10JiZ0LnByb3ZpZGVySWQ7aWYoIWV8fFwicGFzc3dvcmRcIj09PWUpcmV0dXJuIG51bGw7dmFyIG49dCYmdC5vYXV0aEFjY2Vzc1Rva2VuLGk9dCYmdC5vYXV0aFRva2VuU2VjcmV0LHI9dCYmdC5ub25jZSxvPXQmJnQub2F1dGhJZFRva2VuLGE9dCYmdC5wZW5kaW5nVG9rZW47dHJ5e3N3aXRjaChlKXtjYXNlXCJnb29nbGUuY29tXCI6cmV0dXJuIHZvKG8sbik7Y2FzZVwiZmFjZWJvb2suY29tXCI6cmV0dXJuIGhvKG4pO2Nhc2VcImdpdGh1Yi5jb21cIjpyZXR1cm4gZm8obik7Y2FzZVwidHdpdHRlci5jb21cIjpyZXR1cm4gZ28obixpKTtkZWZhdWx0OnJldHVybiBufHxpfHxvfHxhP2E/MD09ZS5pbmRleE9mKFwic2FtbC5cIik/bmV3IHRvKGUsYSk6bmV3IGlvKGUse3BlbmRpbmdUb2tlbjphLGlkVG9rZW46dC5vYXV0aElkVG9rZW4sYWNjZXNzVG9rZW46dC5vYXV0aEFjY2Vzc1Rva2VufSxlKTpuZXcgdW8oZSkuY3JlZGVudGlhbCh7aWRUb2tlbjpvLGFjY2Vzc1Rva2VuOm4scmF3Tm9uY2U6cn0pOm51bGx9fWNhdGNoKHQpe3JldHVybiBudWxsfX1mdW5jdGlvbiBPbyh0KXtpZighdC5pc09BdXRoUHJvdmlkZXIpdGhyb3cgbmV3IFQoXCJpbnZhbGlkLW9hdXRoLXByb3ZpZGVyXCIpfWZ1bmN0aW9uIENvKHQsZSxuLGkscixvLGEpe2lmKHRoaXMuYz10LHRoaXMuYj1lfHxudWxsLHRoaXMuZz1ufHxudWxsLHRoaXMuZj1pfHxudWxsLHRoaXMuaT1vfHxudWxsLHRoaXMuaD1hfHxudWxsLHRoaXMuYT1yfHxudWxsLCF0aGlzLmcmJiF0aGlzLmEpdGhyb3cgbmV3IFQoXCJpbnZhbGlkLWF1dGgtZXZlbnRcIik7aWYodGhpcy5nJiZ0aGlzLmEpdGhyb3cgbmV3IFQoXCJpbnZhbGlkLWF1dGgtZXZlbnRcIik7aWYodGhpcy5nJiYhdGhpcy5mKXRocm93IG5ldyBUKFwiaW52YWxpZC1hdXRoLWV2ZW50XCIpfWZ1bmN0aW9uIFJvKHQpe3JldHVybih0PXR8fHt9KS50eXBlP25ldyBDbyh0LnR5cGUsdC5ldmVudElkLHQudXJsUmVzcG9uc2UsdC5zZXNzaW9uSWQsdC5lcnJvciYmRSh0LmVycm9yKSx0LnBvc3RCb2R5LHQudGVuYW50SWQpOm51bGx9ZnVuY3Rpb24gRG8oKXt0aGlzLmI9bnVsbCx0aGlzLmE9W119WXIucHJvdG90eXBlLkhhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYT95ZSh0aGlzLmEpOnllKHRoaXMuYil9LFlyLnByb3RvdHlwZS53PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHlwZT09enI/e211bHRpRmFjdG9yU2Vzc2lvbjp7aWRUb2tlbjp0aGlzLmF9fTp7bXVsdGlGYWN0b3JTZXNzaW9uOntwZW5kaW5nQ3JlZGVudGlhbDp0aGlzLmJ9fX0sWnIucHJvdG90eXBlLmthPWZ1bmN0aW9uKCl7fSxaci5wcm90b3R5cGUuYj1mdW5jdGlvbigpe30sWnIucHJvdG90eXBlLmM9ZnVuY3Rpb24oKXt9LFpyLnByb3RvdHlwZS53PWZ1bmN0aW9uKCl7fSx0by5wcm90b3R5cGUua2E9ZnVuY3Rpb24odCl7cmV0dXJuIGhzKHQsZW8odGhpcykpfSx0by5wcm90b3R5cGUuYj1mdW5jdGlvbih0LGUpe3ZhciBuPWVvKHRoaXMpO3JldHVybiBuLmlkVG9rZW49ZSxscyh0LG4pfSx0by5wcm90b3R5cGUuYz1mdW5jdGlvbih0LGUpe3JldHVybiBRcihmcyh0LGVvKHRoaXMpKSxlKX0sdG8ucHJvdG90eXBlLnc9ZnVuY3Rpb24oKXtyZXR1cm57cHJvdmlkZXJJZDp0aGlzLnByb3ZpZGVySWQsc2lnbkluTWV0aG9kOnRoaXMuc2lnbkluTWV0aG9kLHBlbmRpbmdUb2tlbjp0aGlzLmF9fSxpby5wcm90b3R5cGUua2E9ZnVuY3Rpb24odCl7cmV0dXJuIGhzKHQscm8odGhpcykpfSxpby5wcm90b3R5cGUuYj1mdW5jdGlvbih0LGUpe3ZhciBuPXJvKHRoaXMpO3JldHVybiBuLmlkVG9rZW49ZSxscyh0LG4pfSxpby5wcm90b3R5cGUuYz1mdW5jdGlvbih0LGUpe3JldHVybiBRcihmcyh0LHJvKHRoaXMpKSxlKX0saW8ucHJvdG90eXBlLnc9ZnVuY3Rpb24oKXt2YXIgdD17cHJvdmlkZXJJZDp0aGlzLnByb3ZpZGVySWQsc2lnbkluTWV0aG9kOnRoaXMuc2lnbkluTWV0aG9kfTtyZXR1cm4gdGhpcy5pZFRva2VuJiYodC5vYXV0aElkVG9rZW49dGhpcy5pZFRva2VuKSx0aGlzLmFjY2Vzc1Rva2VuJiYodC5vYXV0aEFjY2Vzc1Rva2VuPXRoaXMuYWNjZXNzVG9rZW4pLHRoaXMuc2VjcmV0JiYodC5vYXV0aFRva2VuU2VjcmV0PXRoaXMuc2VjcmV0KSx0aGlzLm5vbmNlJiYodC5ub25jZT10aGlzLm5vbmNlKSx0aGlzLmEmJih0LnBlbmRpbmdUb2tlbj10aGlzLmEpLHR9LGFvLnByb3RvdHlwZS5LYT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5JYj1jdCh0KSx0aGlzfSx3KHNvLGFvKSx3KHVvLGFvKSx1by5wcm90b3R5cGUuQ2E9ZnVuY3Rpb24odCl7cmV0dXJuIEsodGhpcy5hLHQpfHx0aGlzLmEucHVzaCh0KSx0aGlzfSx1by5wcm90b3R5cGUuUWI9ZnVuY3Rpb24oKXtyZXR1cm4gWCh0aGlzLmEpfSx1by5wcm90b3R5cGUuY3JlZGVudGlhbD1mdW5jdGlvbih0LGUpe2U9bSh0KT97aWRUb2tlbjp0LmlkVG9rZW58fG51bGwsYWNjZXNzVG9rZW46dC5hY2Nlc3NUb2tlbnx8bnVsbCxub25jZTp0LnJhd05vbmNlfHxudWxsfTp7aWRUb2tlbjp0fHxudWxsLGFjY2Vzc1Rva2VuOmV8fG51bGx9O2lmKCFlLmlkVG9rZW4mJiFlLmFjY2Vzc1Rva2VuKXRocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixcImNyZWRlbnRpYWwgZmFpbGVkOiBtdXN0IHByb3ZpZGUgdGhlIElEIHRva2VuIGFuZC9vciB0aGUgYWNjZXNzIHRva2VuLlwiKTtyZXR1cm4gbmV3IGlvKHRoaXMucHJvdmlkZXJJZCxlLHRoaXMucHJvdmlkZXJJZCl9LHcoY28sdW8pLFZpKGNvLFwiUFJPVklERVJfSURcIixcImZhY2Vib29rLmNvbVwiKSxWaShjbyxcIkZBQ0VCT09LX1NJR05fSU5fTUVUSE9EXCIsXCJmYWNlYm9vay5jb21cIiksdyhsbyx1byksVmkobG8sXCJQUk9WSURFUl9JRFwiLFwiZ2l0aHViLmNvbVwiKSxWaShsbyxcIkdJVEhVQl9TSUdOX0lOX01FVEhPRFwiLFwiZ2l0aHViLmNvbVwiKSx3KHBvLHVvKSxWaShwbyxcIlBST1ZJREVSX0lEXCIsXCJnb29nbGUuY29tXCIpLFZpKHBvLFwiR09PR0xFX1NJR05fSU5fTUVUSE9EXCIsXCJnb29nbGUuY29tXCIpLHcobW8sYW8pLFZpKG1vLFwiUFJPVklERVJfSURcIixcInR3aXR0ZXIuY29tXCIpLFZpKG1vLFwiVFdJVFRFUl9TSUdOX0lOX01FVEhPRFwiLFwidHdpdHRlci5jb21cIiksYm8ucHJvdG90eXBlLmthPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNpZ25Jbk1ldGhvZD09d28uRU1BSUxfTElOS19TSUdOX0lOX01FVEhPRD9Ycyh0LHdzLHtlbWFpbDp0aGlzLmEsb29iQ29kZTp0aGlzLmZ9KTpYcyh0LEhzLHtlbWFpbDp0aGlzLmEscGFzc3dvcmQ6dGhpcy5mfSl9LGJvLnByb3RvdHlwZS5iPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuc2lnbkluTWV0aG9kPT13by5FTUFJTF9MSU5LX1NJR05fSU5fTUVUSE9EP1hzKHQsSXMse2lkVG9rZW46ZSxlbWFpbDp0aGlzLmEsb29iQ29kZTp0aGlzLmZ9KTpYcyh0LExzLHtpZFRva2VuOmUsZW1haWw6dGhpcy5hLHBhc3N3b3JkOnRoaXMuZn0pfSxiby5wcm90b3R5cGUuYz1mdW5jdGlvbih0LGUpe3JldHVybiBRcih0aGlzLmthKHQpLGUpfSxiby5wcm90b3R5cGUudz1mdW5jdGlvbigpe3JldHVybntlbWFpbDp0aGlzLmEscGFzc3dvcmQ6dGhpcy5mLHNpZ25Jbk1ldGhvZDp0aGlzLnNpZ25Jbk1ldGhvZH19LEZpKHdvLHtQUk9WSURFUl9JRDpcInBhc3N3b3JkXCJ9KSxGaSh3byx7RU1BSUxfTElOS19TSUdOX0lOX01FVEhPRDpcImVtYWlsTGlua1wifSksRmkod28se0VNQUlMX1BBU1NXT1JEX1NJR05fSU5fTUVUSE9EOlwicGFzc3dvcmRcIn0pLEVvLnByb3RvdHlwZS5rYT1mdW5jdGlvbih0KXtyZXR1cm4gdC5mYihrbyh0aGlzKSl9LEVvLnByb3RvdHlwZS5iPWZ1bmN0aW9uKHQsZSl7dmFyIG49a28odGhpcyk7cmV0dXJuIG4uaWRUb2tlbj1lLFhzKHQsR3Msbil9LEVvLnByb3RvdHlwZS5jPWZ1bmN0aW9uKHQsZSl7dmFyIG49a28odGhpcyk7cmV0dXJuIG4ub3BlcmF0aW9uPVwiUkVBVVRIXCIsUXIodD1Ycyh0LEJzLG4pLGUpfSxFby5wcm90b3R5cGUudz1mdW5jdGlvbigpe3ZhciB0PXtwcm92aWRlcklkOlwicGhvbmVcIn07cmV0dXJuIHRoaXMuYS5lYiYmKHQudmVyaWZpY2F0aW9uSWQ9dGhpcy5hLmViKSx0aGlzLmEuY2ImJih0LnZlcmlmaWNhdGlvbkNvZGU9dGhpcy5hLmNiKSx0aGlzLmEuTGEmJih0LnRlbXBvcmFyeVByb29mPXRoaXMuYS5MYSksdGhpcy5hLmVhJiYodC5waG9uZU51bWJlcj10aGlzLmEuZWEpLHR9LFNvLnByb3RvdHlwZS5mYj1mdW5jdGlvbihpLHIpe3ZhciBvPXRoaXMuYS5hO3JldHVybiB5ZShyLnZlcmlmeSgpKS50aGVuKGZ1bmN0aW9uKG4pe2lmKFwic3RyaW5nXCIhPXR5cGVvZiBuKXRocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixcIkFuIGltcGxlbWVudGF0aW9uIG9mIGZpcmViYXNlLmF1dGguQXBwbGljYXRpb25WZXJpZmllci5wcm90b3R5cGUudmVyaWZ5KCkgbXVzdCByZXR1cm4gYSBmaXJlYmFzZS5Qcm9taXNlIHRoYXQgcmVzb2x2ZXMgd2l0aCBhIHN0cmluZy5cIik7aWYoXCJyZWNhcHRjaGFcIiE9PXIudHlwZSl0aHJvdyBuZXcgVChcImFyZ3VtZW50LWVycm9yXCIsJ09ubHkgZmlyZWJhc2UuYXV0aC5BcHBsaWNhdGlvblZlcmlmaWVycyB3aXRoIHR5cGU9XCJyZWNhcHRjaGFcIiBhcmUgY3VycmVudGx5IHN1cHBvcnRlZC4nKTt2YXIgdD1tKGkpP2kuc2Vzc2lvbjpudWxsLGU9bShpKT9pLnBob25lTnVtYmVyOmksdD10JiZ0LnR5cGU9PXpyP3QuSGEoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBYcyhvLE1zLHtpZFRva2VuOnQscGhvbmVFbnJvbGxtZW50SW5mbzp7cGhvbmVOdW1iZXI6ZSxyZWNhcHRjaGFUb2tlbjpufX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHQucGhvbmVTZXNzaW9uSW5mby5zZXNzaW9uSW5mb30pfSk6dCYmdC50eXBlPT0kcj90LkhhKCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZT1vLHQ9e21mYVBlbmRpbmdDcmVkZW50aWFsOnQsbWZhRW5yb2xsbWVudElkOmkubXVsdGlGYWN0b3JIaW50JiZpLm11bHRpRmFjdG9ySGludC51aWR8fGkubXVsdGlGYWN0b3JVaWQscGhvbmVTaWduSW5JbmZvOntyZWNhcHRjaGFUb2tlbjpufX0sWHMoZSxqcyx0KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0LnBob25lUmVzcG9uc2VJbmZvLnNlc3Npb25JbmZvfSk7dmFyIGV9KTpYcyhvLERzLHtwaG9uZU51bWJlcjplLHJlY2FwdGNoYVRva2VuOm59KTtyZXR1cm4gdC50aGVuKGZ1bmN0aW9uKHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHIucmVzZXQmJnIucmVzZXQoKSx0fSxmdW5jdGlvbih0KXt0aHJvd1wiZnVuY3Rpb25cIj09dHlwZW9mIHIucmVzZXQmJnIucmVzZXQoKSx0fSl9KX0sRmkoU28se1BST1ZJREVSX0lEOlwicGhvbmVcIn0pLEZpKFNvLHtQSE9ORV9TSUdOX0lOX01FVEhPRDpcInBob25lXCJ9KSxDby5wcm90b3R5cGUuZ2V0VWlkPWZ1bmN0aW9uKCl7dmFyIHQ9W107cmV0dXJuIHQucHVzaCh0aGlzLmMpLHRoaXMuYiYmdC5wdXNoKHRoaXMuYiksdGhpcy5mJiZ0LnB1c2godGhpcy5mKSx0aGlzLmgmJnQucHVzaCh0aGlzLmgpLHQuam9pbihcIi1cIil9LENvLnByb3RvdHlwZS5UPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaH0sQ28ucHJvdG90eXBlLnc9ZnVuY3Rpb24oKXtyZXR1cm57dHlwZTp0aGlzLmMsZXZlbnRJZDp0aGlzLmIsdXJsUmVzcG9uc2U6dGhpcy5nLHNlc3Npb25JZDp0aGlzLmYscG9zdEJvZHk6dGhpcy5pLHRlbmFudElkOnRoaXMuaCxlcnJvcjp0aGlzLmEmJnRoaXMuYS53KCl9fTt2YXIgUG8sTG89bnVsbDtmdW5jdGlvbiB4byh0KXt2YXIgZT1cInVuYXV0aG9yaXplZC1kb21haW5cIixuPXZvaWQgMCxpPU9uKHQpO3Q9aS5hLFwiY2hyb21lLWV4dGVuc2lvblwiPT0oaT1pLmMpP249anQoXCJUaGlzIGNocm9tZSBleHRlbnNpb24gSUQgKGNocm9tZS1leHRlbnNpb246Ly8lcykgaXMgbm90IGF1dGhvcml6ZWQgdG8gcnVuIHRoaXMgb3BlcmF0aW9uLiBBZGQgaXQgdG8gdGhlIE9BdXRoIHJlZGlyZWN0IGRvbWFpbnMgbGlzdCBpbiB0aGUgRmlyZWJhc2UgY29uc29sZSAtPiBBdXRoIHNlY3Rpb24gLT4gU2lnbiBpbiBtZXRob2QgdGFiLlwiLHQpOlwiaHR0cFwiPT1pfHxcImh0dHBzXCI9PWk/bj1qdChcIlRoaXMgZG9tYWluICglcykgaXMgbm90IGF1dGhvcml6ZWQgdG8gcnVuIHRoaXMgb3BlcmF0aW9uLiBBZGQgaXQgdG8gdGhlIE9BdXRoIHJlZGlyZWN0IGRvbWFpbnMgbGlzdCBpbiB0aGUgRmlyZWJhc2UgY29uc29sZSAtPiBBdXRoIHNlY3Rpb24gLT4gU2lnbiBpbiBtZXRob2QgdGFiLlwiLHQpOmU9XCJvcGVyYXRpb24tbm90LXN1cHBvcnRlZC1pbi10aGlzLWVudmlyb25tZW50XCIsVC5jYWxsKHRoaXMsZSxuKX1mdW5jdGlvbiBNbyh0LGUsbil7VC5jYWxsKHRoaXMsdCxuKSwodD1lfHx7fSkuSmImJlZpKHRoaXMsXCJlbWFpbFwiLHQuSmIpLHQuZWEmJlZpKHRoaXMsXCJwaG9uZU51bWJlclwiLHQuZWEpLHQuY3JlZGVudGlhbCYmVmkodGhpcyxcImNyZWRlbnRpYWxcIix0LmNyZWRlbnRpYWwpLHQuWmImJlZpKHRoaXMsXCJ0ZW5hbnRJZFwiLHQuWmIpfWZ1bmN0aW9uIGpvKHQpe2lmKHQuY29kZSl7dmFyIGU9dC5jb2RlfHxcIlwiOzA9PWUuaW5kZXhPZihrKSYmKGU9ZS5zdWJzdHJpbmcoay5sZW5ndGgpKTt2YXIgbj17Y3JlZGVudGlhbDpfbyh0KSxaYjp0LnRlbmFudElkfTtpZih0LmVtYWlsKW4uSmI9dC5lbWFpbDtlbHNlIGlmKHQucGhvbmVOdW1iZXIpbi5lYT10LnBob25lTnVtYmVyO2Vsc2UgaWYoIW4uY3JlZGVudGlhbClyZXR1cm4gbmV3IFQoZSx0Lm1lc3NhZ2V8fHZvaWQgMCk7cmV0dXJuIG5ldyBNbyhlLG4sdC5tZXNzYWdlKX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBVbygpe31mdW5jdGlvbiBWbyh0KXtyZXR1cm4gdC5jfHwodC5jPXQuYigpKX1mdW5jdGlvbiBGbygpe31mdW5jdGlvbiBxbyh0KXtpZih0LmZ8fFwidW5kZWZpbmVkXCIhPXR5cGVvZiBYTUxIdHRwUmVxdWVzdHx8XCJ1bmRlZmluZWRcIj09dHlwZW9mIEFjdGl2ZVhPYmplY3QpcmV0dXJuIHQuZjtmb3IodmFyIGU9W1wiTVNYTUwyLlhNTEhUVFAuNi4wXCIsXCJNU1hNTDIuWE1MSFRUUC4zLjBcIixcIk1TWE1MMi5YTUxIVFRQXCIsXCJNaWNyb3NvZnQuWE1MSFRUUFwiXSxuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPWVbbl07dHJ5e3JldHVybiBuZXcgQWN0aXZlWE9iamVjdChpKSx0LmY9aX1jYXRjaCh0KXt9fXRocm93IEVycm9yKFwiQ291bGQgbm90IGNyZWF0ZSBBY3RpdmVYT2JqZWN0LiBBY3RpdmVYIG1pZ2h0IGJlIGRpc2FibGVkLCBvciBNU1hNTCBtaWdodCBub3QgYmUgaW5zdGFsbGVkXCIpfWZ1bmN0aW9uIEhvKCl7fWZ1bmN0aW9uIEtvKCl7dGhpcy5hPW5ldyBYRG9tYWluUmVxdWVzdCx0aGlzLnJlYWR5U3RhdGU9MCx0aGlzLm9ucmVhZHlzdGF0ZWNoYW5nZT1udWxsLHRoaXMucmVzcG9uc2VUeXBlPXRoaXMucmVzcG9uc2VUZXh0PXRoaXMucmVzcG9uc2U9XCJcIix0aGlzLnN0YXR1cz0tMSx0aGlzLnN0YXR1c1RleHQ9XCJcIix0aGlzLmEub25sb2FkPWIodGhpcy5xYyx0aGlzKSx0aGlzLmEub25lcnJvcj1iKHRoaXMuU2IsdGhpcyksdGhpcy5hLm9ucHJvZ3Jlc3M9Yih0aGlzLnJjLHRoaXMpLHRoaXMuYS5vbnRpbWVvdXQ9Yih0aGlzLnZjLHRoaXMpfWZ1bmN0aW9uIEdvKHQsZSl7dC5yZWFkeVN0YXRlPWUsdC5vbnJlYWR5c3RhdGVjaGFuZ2UmJnQub25yZWFkeXN0YXRlY2hhbmdlKCl9ZnVuY3Rpb24gQm8odCxlLG4pe3RoaXMucmVzZXQodCxlLG4sdm9pZCAwLHZvaWQgMCl9ZnVuY3Rpb24gV28odCl7dGhpcy5mPXQsdGhpcy5iPXRoaXMuYz10aGlzLmE9bnVsbH1mdW5jdGlvbiBYbyh0LGUpe3RoaXMubmFtZT10LHRoaXMudmFsdWU9ZX13KHhvLFQpLHcoTW8sVCksTW8ucHJvdG90eXBlLnc9ZnVuY3Rpb24oKXt2YXIgdD17Y29kZTp0aGlzLmNvZGUsbWVzc2FnZTp0aGlzLm1lc3NhZ2V9O3RoaXMuZW1haWwmJih0LmVtYWlsPXRoaXMuZW1haWwpLHRoaXMucGhvbmVOdW1iZXImJih0LnBob25lTnVtYmVyPXRoaXMucGhvbmVOdW1iZXIpLHRoaXMudGVuYW50SWQmJih0LnRlbmFudElkPXRoaXMudGVuYW50SWQpO3ZhciBlPXRoaXMuY3JlZGVudGlhbCYmdGhpcy5jcmVkZW50aWFsLncoKTtyZXR1cm4gZSYmbHQodCxlKSx0fSxNby5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudygpfSxVby5wcm90b3R5cGUuYz1udWxsLHcoRm8sVW8pLEZvLnByb3RvdHlwZS5hPWZ1bmN0aW9uKCl7dmFyIHQ9cW8odGhpcyk7cmV0dXJuIHQ/bmV3IEFjdGl2ZVhPYmplY3QodCk6bmV3IFhNTEh0dHBSZXF1ZXN0fSxGby5wcm90b3R5cGUuYj1mdW5jdGlvbigpe3ZhciB0PXt9O3JldHVybiBxbyh0aGlzKSYmKHRbMF09ITAsdFsxXT0hMCksdH0sUG89bmV3IEZvLHcoSG8sVW8pLEhvLnByb3RvdHlwZS5hPWZ1bmN0aW9uKCl7dmFyIHQ9bmV3IFhNTEh0dHBSZXF1ZXN0O2lmKFwid2l0aENyZWRlbnRpYWxzXCJpbiB0KXJldHVybiB0O2lmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBYRG9tYWluUmVxdWVzdClyZXR1cm4gbmV3IEtvO3Rocm93IEVycm9yKFwiVW5zdXBwb3J0ZWQgYnJvd3NlclwiKX0sSG8ucHJvdG90eXBlLmI9ZnVuY3Rpb24oKXtyZXR1cm57fX0sKHQ9S28ucHJvdG90eXBlKS5vcGVuPWZ1bmN0aW9uKHQsZSxuKXtpZihudWxsIT1uJiYhbil0aHJvdyBFcnJvcihcIk9ubHkgYXN5bmMgcmVxdWVzdHMgYXJlIHN1cHBvcnRlZC5cIik7dGhpcy5hLm9wZW4odCxlKX0sdC5zZW5kPWZ1bmN0aW9uKHQpe2lmKHQpe2lmKFwic3RyaW5nXCIhPXR5cGVvZiB0KXRocm93IEVycm9yKFwiT25seSBzdHJpbmcgZGF0YSBpcyBzdXBwb3J0ZWRcIik7dGhpcy5hLnNlbmQodCl9ZWxzZSB0aGlzLmEuc2VuZCgpfSx0LmFib3J0PWZ1bmN0aW9uKCl7dGhpcy5hLmFib3J0KCl9LHQuc2V0UmVxdWVzdEhlYWRlcj1mdW5jdGlvbigpe30sdC5nZXRSZXNwb25zZUhlYWRlcj1mdW5jdGlvbih0KXtyZXR1cm5cImNvbnRlbnQtdHlwZVwiPT10LnRvTG93ZXJDYXNlKCk/dGhpcy5hLmNvbnRlbnRUeXBlOlwiXCJ9LHQucWM9ZnVuY3Rpb24oKXt0aGlzLnN0YXR1cz0yMDAsdGhpcy5yZXNwb25zZT10aGlzLnJlc3BvbnNlVGV4dD10aGlzLmEucmVzcG9uc2VUZXh0LEdvKHRoaXMsNCl9LHQuU2I9ZnVuY3Rpb24oKXt0aGlzLnN0YXR1cz01MDAsdGhpcy5yZXNwb25zZT10aGlzLnJlc3BvbnNlVGV4dD1cIlwiLEdvKHRoaXMsNCl9LHQudmM9ZnVuY3Rpb24oKXt0aGlzLlNiKCl9LHQucmM9ZnVuY3Rpb24oKXt0aGlzLnN0YXR1cz0yMDAsR28odGhpcywxKX0sdC5nZXRBbGxSZXNwb25zZUhlYWRlcnM9ZnVuY3Rpb24oKXtyZXR1cm5cImNvbnRlbnQtdHlwZTogXCIrdGhpcy5hLmNvbnRlbnRUeXBlfSxCby5wcm90b3R5cGUuYT1udWxsLEJvLnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbih0LGUsbixpLHIpe2RlbGV0ZSB0aGlzLmF9LFhvLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5hbWV9O3ZhciBKbz1uZXcgWG8oXCJTRVZFUkVcIiwxZTMpLFlvPW5ldyBYbyhcIldBUk5JTkdcIiw5MDApLHpvPW5ldyBYbyhcIkNPTkZJR1wiLDcwMCksJG89bmV3IFhvKFwiRklORVwiLDUwMCk7V28ucHJvdG90eXBlLmxvZz1mdW5jdGlvbih0LGUsbil7aWYodC52YWx1ZT49ZnVuY3Rpb24gdChlKXtyZXR1cm4gZS5jfHwoZS5hP3QoZS5hKTooRChcIlJvb3QgbG9nZ2VyIGhhcyBubyBsZXZlbCBzZXQuXCIpLG51bGwpKX0odGhpcykudmFsdWUpZm9yKHYoZSkmJihlPWUoKSksdD1uZXcgQm8odCxTdHJpbmcoZSksdGhpcy5mKSxuJiYodC5hPW4pLG49dGhpcztuOyluPW4uYX07dmFyIFpvLFFvPXt9LHRhPW51bGw7ZnVuY3Rpb24gZWEodCl7dmFyIGUsbixpO3JldHVybiB0YXx8KHRhPW5ldyBXbyhcIlwiKSwoUW9bXCJcIl09dGEpLmM9em8pLChlPVFvW3RdKXx8KGU9bmV3IFdvKHQpLGk9dC5sYXN0SW5kZXhPZihcIi5cIiksbj10LnN1YnN0cihpKzEpLChpPWVhKHQuc3Vic3RyKDAsaSkpKS5ifHwoaS5iPXt9KSwoaS5iW25dPWUpLmE9aSxRb1t0XT1lKSxlfWZ1bmN0aW9uIG5hKHQsZSl7dCYmdC5sb2coJG8sZSx2b2lkIDApfWZ1bmN0aW9uIGlhKHQpe3RoaXMuZj10fWZ1bmN0aW9uIHJhKHQpe2xuLmNhbGwodGhpcyksdGhpcy51PXQsdGhpcy5oPXZvaWQgMCx0aGlzLnJlYWR5U3RhdGU9b2EsdGhpcy5zdGF0dXM9MCx0aGlzLnJlc3BvbnNlVHlwZT10aGlzLnJlc3BvbnNlVGV4dD10aGlzLnJlc3BvbnNlPXRoaXMuc3RhdHVzVGV4dD1cIlwiLHRoaXMub25yZWFkeXN0YXRlY2hhbmdlPW51bGwsdGhpcy5sPW5ldyBIZWFkZXJzLHRoaXMuYj1udWxsLHRoaXMucz1cIkdFVFwiLHRoaXMuZj1cIlwiLHRoaXMuYT0hMSx0aGlzLmk9ZWEoXCJnb29nLm5ldC5GZXRjaFhtbEh0dHBcIiksdGhpcy5tPXRoaXMuYz10aGlzLmc9bnVsbH13KGlhLFVvKSxpYS5wcm90b3R5cGUuYT1mdW5jdGlvbigpe3JldHVybiBuZXcgcmEodGhpcy5mKX0saWEucHJvdG90eXBlLmI9KFpvPXt9LGZ1bmN0aW9uKCl7cmV0dXJuIFpvfSksdyhyYSxsbik7dmFyIG9hPTA7ZnVuY3Rpb24gYWEodCl7dC5jLnJlYWQoKS50aGVuKHQucGMuYmluZCh0KSkuY2F0Y2godC5VYS5iaW5kKHQpKX1mdW5jdGlvbiBzYSh0KXt0LnJlYWR5U3RhdGU9NCx0Lmc9bnVsbCx0LmM9bnVsbCx0Lm09bnVsbCx1YSh0KX1mdW5jdGlvbiB1YSh0KXt0Lm9ucmVhZHlzdGF0ZWNoYW5nZSYmdC5vbnJlYWR5c3RhdGVjaGFuZ2UuY2FsbCh0KX1mdW5jdGlvbiBjYSh0KXtsbi5jYWxsKHRoaXMpLHRoaXMuaGVhZGVycz1uZXcgeW4sdGhpcy5EPXR8fG51bGwsdGhpcy5jPSExLHRoaXMuQz10aGlzLmE9bnVsbCx0aGlzLmg9dGhpcy5SPXRoaXMubD1cIlwiLHRoaXMuZj10aGlzLk89dGhpcy5pPXRoaXMuSj0hMSx0aGlzLmc9MCx0aGlzLnM9bnVsbCx0aGlzLm09aGEsdGhpcy51PXRoaXMuUz0hMX0odD1yYS5wcm90b3R5cGUpLm9wZW49ZnVuY3Rpb24odCxlKXtpZih0aGlzLnJlYWR5U3RhdGUhPW9hKXRocm93IHRoaXMuYWJvcnQoKSxFcnJvcihcIkVycm9yIHJlb3BlbmluZyBhIGNvbm5lY3Rpb25cIik7dGhpcy5zPXQsdGhpcy5mPWUsdGhpcy5yZWFkeVN0YXRlPTEsdWEodGhpcyl9LHQuc2VuZD1mdW5jdGlvbih0KXtpZigxIT10aGlzLnJlYWR5U3RhdGUpdGhyb3cgdGhpcy5hYm9ydCgpLEVycm9yKFwibmVlZCB0byBjYWxsIG9wZW4oKSBmaXJzdC4gXCIpO3RoaXMuYT0hMDt2YXIgZT17aGVhZGVyczp0aGlzLmwsbWV0aG9kOnRoaXMucyxjcmVkZW50aWFsczp0aGlzLmgsY2FjaGU6dm9pZCAwfTt0JiYoZS5ib2R5PXQpLHRoaXMudS5mZXRjaChuZXcgUmVxdWVzdCh0aGlzLmYsZSkpLnRoZW4odGhpcy51Yy5iaW5kKHRoaXMpLHRoaXMuVWEuYmluZCh0aGlzKSl9LHQuYWJvcnQ9ZnVuY3Rpb24oKXt0aGlzLnJlc3BvbnNlPXRoaXMucmVzcG9uc2VUZXh0PVwiXCIsdGhpcy5sPW5ldyBIZWFkZXJzLHRoaXMuc3RhdHVzPTAsdGhpcy5jJiZ0aGlzLmMuY2FuY2VsKFwiUmVxdWVzdCB3YXMgYWJvcnRlZC5cIiksMTw9dGhpcy5yZWFkeVN0YXRlJiZ0aGlzLmEmJjQhPXRoaXMucmVhZHlTdGF0ZSYmKHRoaXMuYT0hMSxzYSh0aGlzKSksdGhpcy5yZWFkeVN0YXRlPW9hfSx0LnVjPWZ1bmN0aW9uKHQpe3RoaXMuYSYmKHRoaXMuZz10LHRoaXMuYnx8KHRoaXMuc3RhdHVzPXRoaXMuZy5zdGF0dXMsdGhpcy5zdGF0dXNUZXh0PXRoaXMuZy5zdGF0dXNUZXh0LHRoaXMuYj10LmhlYWRlcnMsdGhpcy5yZWFkeVN0YXRlPTIsdWEodGhpcykpLHRoaXMuYSYmKHRoaXMucmVhZHlTdGF0ZT0zLHVhKHRoaXMpLHRoaXMuYSYmKFwiYXJyYXlidWZmZXJcIj09PXRoaXMucmVzcG9uc2VUeXBlP3QuYXJyYXlCdWZmZXIoKS50aGVuKHRoaXMuc2MuYmluZCh0aGlzKSx0aGlzLlVhLmJpbmQodGhpcykpOnZvaWQgMCE9PWwuUmVhZGFibGVTdHJlYW0mJlwiYm9keVwiaW4gdD8odGhpcy5yZXNwb25zZT10aGlzLnJlc3BvbnNlVGV4dD1cIlwiLHRoaXMuYz10LmJvZHkuZ2V0UmVhZGVyKCksdGhpcy5tPW5ldyBUZXh0RGVjb2RlcixhYSh0aGlzKSk6dC50ZXh0KCkudGhlbih0aGlzLnRjLmJpbmQodGhpcyksdGhpcy5VYS5iaW5kKHRoaXMpKSkpKX0sdC5wYz1mdW5jdGlvbih0KXt2YXIgZTt0aGlzLmEmJigoZT10aGlzLm0uZGVjb2RlKHQudmFsdWV8fG5ldyBVaW50OEFycmF5KDApLHtzdHJlYW06IXQuZG9uZX0pKSYmKHRoaXMucmVzcG9uc2U9dGhpcy5yZXNwb25zZVRleHQrPWUpLCh0LmRvbmU/c2E6dWEpKHRoaXMpLDM9PXRoaXMucmVhZHlTdGF0ZSYmYWEodGhpcykpfSx0LnRjPWZ1bmN0aW9uKHQpe3RoaXMuYSYmKHRoaXMucmVzcG9uc2U9dGhpcy5yZXNwb25zZVRleHQ9dCxzYSh0aGlzKSl9LHQuc2M9ZnVuY3Rpb24odCl7dGhpcy5hJiYodGhpcy5yZXNwb25zZT10LHNhKHRoaXMpKX0sdC5VYT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmk7ZSYmZS5sb2coWW8sXCJGYWlsZWQgdG8gZmV0Y2ggdXJsIFwiK3RoaXMuZix0IGluc3RhbmNlb2YgRXJyb3I/dDpFcnJvcih0KSksdGhpcy5hJiZzYSh0aGlzKX0sdC5zZXRSZXF1ZXN0SGVhZGVyPWZ1bmN0aW9uKHQsZSl7dGhpcy5sLmFwcGVuZCh0LGUpfSx0LmdldFJlc3BvbnNlSGVhZGVyPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmI/dGhpcy5iLmdldCh0LnRvTG93ZXJDYXNlKCkpfHxcIlwiOigodD10aGlzLmkpJiZ0LmxvZyhZbyxcIkF0dGVtcHRpbmcgdG8gZ2V0IHJlc3BvbnNlIGhlYWRlciBidXQgbm8gaGVhZGVycyBoYXZlIGJlZW4gcmVjZWl2ZWQgZm9yIHVybDogXCIrdGhpcy5mLHZvaWQgMCksXCJcIil9LHQuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzPWZ1bmN0aW9uKCl7aWYoIXRoaXMuYil7dmFyIHQ9dGhpcy5pO3JldHVybiB0JiZ0LmxvZyhZbyxcIkF0dGVtcHRpbmcgdG8gZ2V0IGFsbCByZXNwb25zZSBoZWFkZXJzIGJ1dCBubyBoZWFkZXJzIGhhdmUgYmVlbiByZWNlaXZlZCBmb3IgdXJsOiBcIit0aGlzLmYsdm9pZCAwKSxcIlwifWZvcih2YXIgdD1bXSxlPXRoaXMuYi5lbnRyaWVzKCksbj1lLm5leHQoKTshbi5kb25lOyluPW4udmFsdWUsdC5wdXNoKG5bMF0rXCI6IFwiK25bMV0pLG49ZS5uZXh0KCk7cmV0dXJuIHQuam9pbihcIlxcclxcblwiKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KHJhLnByb3RvdHlwZSxcIndpdGhDcmVkZW50aWFsc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm5cImluY2x1ZGVcIj09PXRoaXMuaH0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuaD10P1wiaW5jbHVkZVwiOlwic2FtZS1vcmlnaW5cIn19KSx3KGNhLGxuKTt2YXIgaGE9XCJcIjtjYS5wcm90b3R5cGUuYj1lYShcImdvb2cubmV0LlhocklvXCIpO3ZhciBsYT0vXmh0dHBzPyQvaSxmYT1bXCJQT1NUXCIsXCJQVVRcIl07ZnVuY3Rpb24gZGEoZSx0LG4saSxyKXtpZihlLmEpdGhyb3cgRXJyb3IoXCJbZ29vZy5uZXQuWGhySW9dIE9iamVjdCBpcyBhY3RpdmUgd2l0aCBhbm90aGVyIHJlcXVlc3Q9XCIrZS5sK1wiOyBuZXdVcmk9XCIrdCk7bj1uP24udG9VcHBlckNhc2UoKTpcIkdFVFwiLGUubD10LGUuaD1cIlwiLGUuUj1uLGUuSj0hMSxlLmM9ITAsZS5hPShlLkR8fFBvKS5hKCksZS5DPWUuRD9WbyhlLkQpOlZvKFBvKSxlLmEub25yZWFkeXN0YXRlY2hhbmdlPWIoZS5WYixlKTt0cnl7bmEoZS5iLFRhKGUsXCJPcGVuaW5nIFhoclwiKSksZS5PPSEwLGUuYS5vcGVuKG4sU3RyaW5nKHQpLCEwKSxlLk89ITF9Y2F0Y2godCl7cmV0dXJuIG5hKGUuYixUYShlLFwiRXJyb3Igb3BlbmluZyBYaHI6IFwiK3QubWVzc2FnZSkpLHZvaWQgdmEoZSx0KX10PWl8fFwiXCI7dmFyIG8sYT1uZXcgeW4oZS5oZWFkZXJzKTtyJiZmdW5jdGlvbih0LGUpe2lmKHQuZm9yRWFjaCYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5mb3JFYWNoKXQuZm9yRWFjaChlLHZvaWQgMCk7ZWxzZSBpZihwKHQpfHxcInN0cmluZ1wiPT10eXBlb2YgdClWKHQsZSx2b2lkIDApO2Vsc2UgZm9yKHZhciBuPWJuKHQpLGk9Z24odCkscj1pLmxlbmd0aCxvPTA7bzxyO28rKyllLmNhbGwodm9pZCAwLGlbb10sbiYmbltvXSx0KX0ocixmdW5jdGlvbih0LGUpe2Euc2V0KGUsdCl9KSxyPWZ1bmN0aW9uKHQpe3Q6e2Zvcih2YXIgZT1wYSxuPXQubGVuZ3RoLGk9XCJzdHJpbmdcIj09dHlwZW9mIHQ/dC5zcGxpdChcIlwiKTp0LHI9MDtyPG47cisrKWlmKHIgaW4gaSYmZS5jYWxsKHZvaWQgMCxpW3JdLHIsdCkpe2U9cjticmVhayB0fWU9LTF9cmV0dXJuIGU8MD9udWxsOlwic3RyaW5nXCI9PXR5cGVvZiB0P3QuY2hhckF0KGUpOnRbZV19KGEuWSgpKSxpPWwuRm9ybURhdGEmJnQgaW5zdGFuY2VvZiBsLkZvcm1EYXRhLCFLKGZhLG4pfHxyfHxpfHxhLnNldChcIkNvbnRlbnQtVHlwZVwiLFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLThcIiksYS5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7dGhpcy5hLnNldFJlcXVlc3RIZWFkZXIoZSx0KX0sZSksZS5tJiYoZS5hLnJlc3BvbnNlVHlwZT1lLm0pLFwid2l0aENyZWRlbnRpYWxzXCJpbiBlLmEmJmUuYS53aXRoQ3JlZGVudGlhbHMhPT1lLlMmJihlLmEud2l0aENyZWRlbnRpYWxzPWUuUyk7dHJ5e3lhKGUpLDA8ZS5nJiYoZS51PShvPWUuYSxIdCYmJHQoOSkmJlwibnVtYmVyXCI9PXR5cGVvZiBvLnRpbWVvdXQmJnZvaWQgMCE9PW8ub250aW1lb3V0KSxuYShlLmIsVGEoZSxcIldpbGwgYWJvcnQgYWZ0ZXIgXCIrZS5nK1wibXMgaWYgaW5jb21wbGV0ZSwgeGhyMiBcIitlLnUpKSxlLnU/KGUuYS50aW1lb3V0PWUuZyxlLmEub250aW1lb3V0PWIoZS5NYSxlKSk6ZS5zPXZuKGUuTWEsZS5nLGUpKSxuYShlLmIsVGEoZSxcIlNlbmRpbmcgcmVxdWVzdFwiKSksZS5pPSEwLGUuYS5zZW5kKHQpLGUuaT0hMX1jYXRjaCh0KXtuYShlLmIsVGEoZSxcIlNlbmQgZXJyb3I6IFwiK3QubWVzc2FnZSkpLHZhKGUsdCl9fWZ1bmN0aW9uIHBhKHQpe3JldHVyblwiY29udGVudC10eXBlXCI9PXQudG9Mb3dlckNhc2UoKX1mdW5jdGlvbiB2YSh0LGUpe3QuYz0hMSx0LmEmJih0LmY9ITAsdC5hLmFib3J0KCksdC5mPSExKSx0Lmg9ZSxtYSh0KSxiYSh0KX1mdW5jdGlvbiBtYSh0KXt0Lkp8fCh0Lko9ITAsdC5kaXNwYXRjaEV2ZW50KFwiY29tcGxldGVcIiksdC5kaXNwYXRjaEV2ZW50KFwiZXJyb3JcIikpfWZ1bmN0aW9uIGdhKGUpe2lmKGUuYyYmdm9pZCAwIT09aClpZihlLkNbMV0mJjQ9PXdhKGUpJiYyPT1JYShlKSluYShlLmIsVGEoZSxcIkxvY2FsIHJlcXVlc3QgZXJyb3IgZGV0ZWN0ZWQgYW5kIGlnbm9yZWRcIikpO2Vsc2UgaWYoZS5pJiY0PT13YShlKSl2bihlLlZiLDAsZSk7ZWxzZSBpZihlLmRpc3BhdGNoRXZlbnQoXCJyZWFkeXN0YXRlY2hhbmdlXCIpLDQ9PXdhKGUpKXtuYShlLmIsVGEoZSxcIlJlcXVlc3QgY29tcGxldGVcIikpLGUuYz0hMTt0cnl7dmFyIHQsbixpLHIsbz1JYShlKTt0OnN3aXRjaChvKXtjYXNlIDIwMDpjYXNlIDIwMTpjYXNlIDIwMjpjYXNlIDIwNDpjYXNlIDIwNjpjYXNlIDMwNDpjYXNlIDEyMjM6dmFyIGE9ITA7YnJlYWsgdDtkZWZhdWx0OmE9ITF9aWYoKHQ9YSl8fCgobj0wPT09bykmJighKHI9U3RyaW5nKGUubCkubWF0Y2goVG4pWzFdfHxudWxsKSYmbC5zZWxmJiZsLnNlbGYubG9jYXRpb24mJihyPShpPWwuc2VsZi5sb2NhdGlvbi5wcm90b2NvbCkuc3Vic3RyKDAsaS5sZW5ndGgtMSkpLG49IWxhLnRlc3Qocj9yLnRvTG93ZXJDYXNlKCk6XCJcIikpLHQ9biksdCllLmRpc3BhdGNoRXZlbnQoXCJjb21wbGV0ZVwiKSxlLmRpc3BhdGNoRXZlbnQoXCJzdWNjZXNzXCIpO2Vsc2V7dHJ5e3ZhciBzPTI8d2EoZSk/ZS5hLnN0YXR1c1RleHQ6XCJcIn1jYXRjaCh0KXtuYShlLmIsXCJDYW4gbm90IGdldCBzdGF0dXM6IFwiK3QubWVzc2FnZSkscz1cIlwifWUuaD1zK1wiIFtcIitJYShlKStcIl1cIixtYShlKX19ZmluYWxseXtiYShlKX19fWZ1bmN0aW9uIGJhKGUsdCl7aWYoZS5hKXt5YShlKTt2YXIgbj1lLmEsaT1lLkNbMF0/YTpudWxsO2UuYT1udWxsLGUuQz1udWxsLHR8fGUuZGlzcGF0Y2hFdmVudChcInJlYWR5XCIpO3RyeXtuLm9ucmVhZHlzdGF0ZWNoYW5nZT1pfWNhdGNoKHQpeyhlPWUuYikmJmUubG9nKEpvLFwiUHJvYmxlbSBlbmNvdW50ZXJlZCByZXNldHRpbmcgb25yZWFkeXN0YXRlY2hhbmdlOiBcIit0Lm1lc3NhZ2Usdm9pZCAwKX19fWZ1bmN0aW9uIHlhKHQpe3QuYSYmdC51JiYodC5hLm9udGltZW91dD1udWxsKSx0LnMmJihsLmNsZWFyVGltZW91dCh0LnMpLHQucz1udWxsKX1mdW5jdGlvbiB3YSh0KXtyZXR1cm4gdC5hP3QuYS5yZWFkeVN0YXRlOjB9ZnVuY3Rpb24gSWEodCl7dHJ5e3JldHVybiAyPHdhKHQpP3QuYS5zdGF0dXM6LTF9Y2F0Y2godCl7cmV0dXJuLTF9fWZ1bmN0aW9uIFRhKHQsZSl7cmV0dXJuIGUrXCIgW1wiK3QuUitcIiBcIit0LmwrXCIgXCIrSWEodCkrXCJdXCJ9ZnVuY3Rpb24gRWEodCl7dmFyIGU9TGE7dGhpcy5nPVtdLHRoaXMudT1lLHRoaXMucz10fHxudWxsLHRoaXMuZj10aGlzLmE9ITEsdGhpcy5jPXZvaWQgMCx0aGlzLnY9dGhpcy5DPXRoaXMuaT0hMSx0aGlzLmg9MCx0aGlzLmI9bnVsbCx0aGlzLmw9MH1mdW5jdGlvbiBBYSh0LGUsbil7dC5hPSEwLHQuYz1uLHQuZj0hZSxfYSh0KX1mdW5jdGlvbiBrYSh0KXtpZih0LmEpe2lmKCF0LnYpdGhyb3cgbmV3IE9hO3Qudj0hMX19ZnVuY3Rpb24gU2EodCxlLG4saSl7dC5nLnB1c2goW2UsbixpXSksdC5hJiZfYSh0KX1mdW5jdGlvbiBOYSh0KXtyZXR1cm4gSCh0LmcsZnVuY3Rpb24odCl7cmV0dXJuIHYodFsxXSl9KX1mdW5jdGlvbiBfYShlKXt2YXIgbjtlLmgmJmUuYSYmTmEoZSkmJihpPWUuaCwobj1EYVtpXSkmJihsLmNsZWFyVGltZW91dChuLmEpLGRlbGV0ZSBEYVtpXSksZS5oPTApLGUuYiYmKGUuYi5sLS0sZGVsZXRlIGUuYik7Zm9yKHZhciBpPWUuYyx0PW49ITE7ZS5nLmxlbmd0aCYmIWUuaTspe3ZhciByPShhPWUuZy5zaGlmdCgpKVswXSxvPWFbMV0sYT1hWzJdO2lmKHI9ZS5mP286cil0cnl7dmFyIHM9ci5jYWxsKGF8fGUucyxpKTt2b2lkIDAhPT1zJiYoZS5mPWUuZiYmKHM9PWl8fHMgaW5zdGFuY2VvZiBFcnJvciksZS5jPWk9cyksKE8oaSl8fFwiZnVuY3Rpb25cIj09dHlwZW9mIGwuUHJvbWlzZSYmaSBpbnN0YW5jZW9mIGwuUHJvbWlzZSkmJih0PSEwLGUuaT0hMCl9Y2F0Y2godCl7aT10LGUuZj0hMCxOYShlKXx8KG49ITApfX1lLmM9aSx0JiYocz1iKGUubSxlLCEwKSx0PWIoZS5tLGUsITEpLGkgaW5zdGFuY2VvZiBFYT8oU2EoaSxzLHQpLGkuQz0hMCk6aS50aGVuKHMsdCkpLG4mJihpPW5ldyBSYShpKSxEYVtpLmFdPWksZS5oPWkuYSl9ZnVuY3Rpb24gT2EoKXtDLmNhbGwodGhpcyl9ZnVuY3Rpb24gQ2EoKXtDLmNhbGwodGhpcyl9ZnVuY3Rpb24gUmEodCl7dGhpcy5hPWwuc2V0VGltZW91dChiKHRoaXMuYyx0aGlzKSwwKSx0aGlzLmI9dH0odD1jYS5wcm90b3R5cGUpLk1hPWZ1bmN0aW9uKCl7dm9pZCAwIT09aCYmdGhpcy5hJiYodGhpcy5oPVwiVGltZWQgb3V0IGFmdGVyIFwiK3RoaXMuZytcIm1zLCBhYm9ydGluZ1wiLG5hKHRoaXMuYixUYSh0aGlzLHRoaXMuaCkpLHRoaXMuZGlzcGF0Y2hFdmVudChcInRpbWVvdXRcIiksdGhpcy5hYm9ydCg4KSl9LHQuYWJvcnQ9ZnVuY3Rpb24oKXt0aGlzLmEmJnRoaXMuYyYmKG5hKHRoaXMuYixUYSh0aGlzLFwiQWJvcnRpbmdcIikpLHRoaXMuYz0hMSx0aGlzLmY9ITAsdGhpcy5hLmFib3J0KCksdGhpcy5mPSExLHRoaXMuZGlzcGF0Y2hFdmVudChcImNvbXBsZXRlXCIpLHRoaXMuZGlzcGF0Y2hFdmVudChcImFib3J0XCIpLGJhKHRoaXMpKX0sdC5EYT1mdW5jdGlvbigpe3RoaXMuYSYmKHRoaXMuYyYmKHRoaXMuYz0hMSx0aGlzLmY9ITAsdGhpcy5hLmFib3J0KCksdGhpcy5mPSExKSxiYSh0aGlzLCEwKSksY2EuYWIuRGEuY2FsbCh0aGlzKX0sdC5WYj1mdW5jdGlvbigpe3RoaXMueGF8fCh0aGlzLk98fHRoaXMuaXx8dGhpcy5mP2dhKHRoaXMpOnRoaXMuSmMoKSl9LHQuSmM9ZnVuY3Rpb24oKXtnYSh0aGlzKX0sdC5nZXRSZXNwb25zZT1mdW5jdGlvbigpe3RyeXtpZighdGhpcy5hKXJldHVybiBudWxsO2lmKFwicmVzcG9uc2VcImluIHRoaXMuYSlyZXR1cm4gdGhpcy5hLnJlc3BvbnNlO3N3aXRjaCh0aGlzLm0pe2Nhc2UgaGE6Y2FzZVwidGV4dFwiOnJldHVybiB0aGlzLmEucmVzcG9uc2VUZXh0O2Nhc2VcImFycmF5YnVmZmVyXCI6aWYoXCJtb3pSZXNwb25zZUFycmF5QnVmZmVyXCJpbiB0aGlzLmEpcmV0dXJuIHRoaXMuYS5tb3pSZXNwb25zZUFycmF5QnVmZmVyfXZhciB0PXRoaXMuYjtyZXR1cm4gdCYmdC5sb2coSm8sXCJSZXNwb25zZSB0eXBlIFwiK3RoaXMubStcIiBpcyBub3Qgc3VwcG9ydGVkIG9uIHRoaXMgYnJvd3NlclwiLHZvaWQgMCksbnVsbH1jYXRjaCh0KXtyZXR1cm4gbmEodGhpcy5iLFwiQ2FuIG5vdCBnZXQgcmVzcG9uc2U6IFwiK3QubWVzc2FnZSksbnVsbH19LEVhLnByb3RvdHlwZS5jYW5jZWw9ZnVuY3Rpb24odCl7dmFyIGU7dGhpcy5hP3RoaXMuYyBpbnN0YW5jZW9mIEVhJiZ0aGlzLmMuY2FuY2VsKCk6KHRoaXMuYiYmKGU9dGhpcy5iLGRlbGV0ZSB0aGlzLmIsdD9lLmNhbmNlbCh0KTooZS5sLS0sZS5sPD0wJiZlLmNhbmNlbCgpKSksdGhpcy51P3RoaXMudS5jYWxsKHRoaXMucyx0aGlzKTp0aGlzLnY9ITAsdGhpcy5hfHwodD1uZXcgQ2Esa2EodGhpcyksQWEodGhpcywhMSx0KSkpfSxFYS5wcm90b3R5cGUubT1mdW5jdGlvbih0LGUpe3RoaXMuaT0hMSxBYSh0aGlzLHQsZSl9LEVhLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxyLG89bmV3IGZlKGZ1bmN0aW9uKHQsZSl7aT10LHI9ZX0pO3JldHVybiBTYSh0aGlzLGksZnVuY3Rpb24odCl7dCBpbnN0YW5jZW9mIENhP28uY2FuY2VsKCk6cih0KX0pLG8udGhlbih0LGUsbil9LEVhLnByb3RvdHlwZS4kZ29vZ19UaGVuYWJsZT0hMCx3KE9hLEMpLE9hLnByb3RvdHlwZS5tZXNzYWdlPVwiRGVmZXJyZWQgaGFzIGFscmVhZHkgZmlyZWRcIixPYS5wcm90b3R5cGUubmFtZT1cIkFscmVhZHlDYWxsZWRFcnJvclwiLHcoQ2EsQyksQ2EucHJvdG90eXBlLm1lc3NhZ2U9XCJEZWZlcnJlZCB3YXMgY2FuY2VsZWRcIixDYS5wcm90b3R5cGUubmFtZT1cIkNhbmNlbGVkRXJyb3JcIixSYS5wcm90b3R5cGUuYz1mdW5jdGlvbigpe3Rocm93IGRlbGV0ZSBEYVt0aGlzLmFdLHRoaXMuYn07dmFyIERhPXt9O2Z1bmN0aW9uIFBhKHQpe3ZhciBlPWRvY3VtZW50LG49d3QodCkudG9TdHJpbmcoKSxpPWFlKGRvY3VtZW50LFwiU0NSSVBUXCIpLHI9e1diOmksTWE6dm9pZCAwfSxvPW5ldyBFYShyKSxhPXdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7eGEoaSwhMCk7dmFyIHQ9bmV3IFVhKGphLFwiVGltZW91dCByZWFjaGVkIGZvciBsb2FkaW5nIHNjcmlwdCBcIituKTtrYShvKSxBYShvLCExLHQpfSw1ZTMpO3JldHVybiByLk1hPWEsaS5vbmxvYWQ9aS5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24oKXtpLnJlYWR5U3RhdGUmJlwibG9hZGVkXCIhPWkucmVhZHlTdGF0ZSYmXCJjb21wbGV0ZVwiIT1pLnJlYWR5U3RhdGV8fCh4YShpLCExLGEpLGthKG8pLEFhKG8sITAsbnVsbCkpfSxpLm9uZXJyb3I9ZnVuY3Rpb24oKXt4YShpLCEwLGEpO3ZhciB0PW5ldyBVYShNYSxcIkVycm9yIHdoaWxlIGxvYWRpbmcgc2NyaXB0IFwiK24pO2thKG8pLEFhKG8sITEsdCl9LGx0KHI9e30se3R5cGU6XCJ0ZXh0L2phdmFzY3JpcHRcIixjaGFyc2V0OlwiVVRGLThcIn0pLGVlKGkscikscj10LGZ0KHQ9aSxcIkhUTUxTY3JpcHRFbGVtZW50XCIpLHQuc3JjPXd0KHIpLChyPShyPXQub3duZXJEb2N1bWVudCYmdC5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3KSYmciE9bD9mKHIuZG9jdW1lbnQpOnM9bnVsbD09PXM/ZihsLmRvY3VtZW50KTpzKSYmdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLHIpLCgoZT0oKHI9ZSl8fGRvY3VtZW50KS5nZXRFbGVtZW50c0J5VGFnTmFtZShcIkhFQURcIikpJiYwIT1lLmxlbmd0aD9lWzBdOnIuZG9jdW1lbnRFbGVtZW50KS5hcHBlbmRDaGlsZChpKSxvfWZ1bmN0aW9uIExhKCl7dmFyIHQ7dGhpcyYmdGhpcy5XYiYmKCh0PXRoaXMuV2IpJiZcIlNDUklQVFwiPT10LnRhZ05hbWUmJnhhKHQsITAsdGhpcy5NYSkpfWZ1bmN0aW9uIHhhKHQsZSxuKXtudWxsIT1uJiZsLmNsZWFyVGltZW91dChuKSx0Lm9ubG9hZD1hLHQub25lcnJvcj1hLHQub25yZWFkeXN0YXRlY2hhbmdlPWEsZSYmd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0JiZ0LnBhcmVudE5vZGUmJnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCh0KX0sMCl9dmFyIE1hPTAsamE9MTtmdW5jdGlvbiBVYSh0LGUpe3ZhciBuPVwiSnNsb2FkZXIgZXJyb3IgKGNvZGUgI1wiK3QrXCIpXCI7ZSYmKG4rPVwiOiBcIitlKSxDLmNhbGwodGhpcyxuKSx0aGlzLmNvZGU9dH1mdW5jdGlvbiBWYSh0KXt0aGlzLmY9dH1mdW5jdGlvbiBGYSh0LGUsbil7aWYodGhpcy5jPXQsdD1lfHx7fSx0aGlzLmw9dC5zZWN1cmVUb2tlbkVuZHBvaW50fHxcImh0dHBzOi8vc2VjdXJldG9rZW4uZ29vZ2xlYXBpcy5jb20vdjEvdG9rZW5cIix0aGlzLm09dC5zZWN1cmVUb2tlblRpbWVvdXR8fEthLHRoaXMuZz1jdCh0LnNlY3VyZVRva2VuSGVhZGVyc3x8R2EpLHRoaXMuaD10LmZpcmViYXNlRW5kcG9pbnR8fFwiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vaWRlbnRpdHl0b29sa2l0L3YzL3JlbHlpbmdwYXJ0eS9cIix0aGlzLmk9dC5pZGVudGl0eVBsYXRmb3JtRW5kcG9pbnR8fFwiaHR0cHM6Ly9pZGVudGl0eXRvb2xraXQuZ29vZ2xlYXBpcy5jb20vdjIvXCIsdGhpcy52PXQuZmlyZWJhc2VUaW1lb3V0fHxCYSx0aGlzLmE9Y3QodC5maXJlYmFzZUhlYWRlcnN8fFdhKSxuJiYodGhpcy5hW1wiWC1DbGllbnQtVmVyc2lvblwiXT1uLHRoaXMuZ1tcIlgtQ2xpZW50LVZlcnNpb25cIl09biksbj1cIk5vZGVcIj09aGkoKSwhKG49bC5YTUxIdHRwUmVxdWVzdHx8biYmemwuZGVmYXVsdC5JTlRFUk5BTC5ub2RlJiZ6bC5kZWZhdWx0LklOVEVSTkFMLm5vZGUuWE1MSHR0cFJlcXVlc3QpJiYhY2koKSl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIsXCJUaGUgWE1MSHR0cFJlcXVlc3QgY29tcGF0aWJpbGl0eSBsaWJyYXJ5IHdhcyBub3QgZm91bmQuXCIpO3RoaXMuZj12b2lkIDAsY2koKT90aGlzLmY9bmV3IGlhKHNlbGYpOmxpKCk/dGhpcy5mPW5ldyBWYShuKTp0aGlzLmY9bmV3IEhvLHRoaXMuYj1udWxsfXcoVWEsQyksdyhWYSxVbyksVmEucHJvdG90eXBlLmE9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHRoaXMuZn0sVmEucHJvdG90eXBlLmI9ZnVuY3Rpb24oKXtyZXR1cm57fX07dmFyIHFhLEhhPVwiaWRUb2tlblwiLEthPW5ldyBDaSgzZTQsNmU0KSxHYT17XCJDb250ZW50LVR5cGVcIjpcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwifSxCYT1uZXcgQ2koM2U0LDZlNCksV2E9e1wiQ29udGVudC1UeXBlXCI6XCJhcHBsaWNhdGlvbi9qc29uXCJ9O2Z1bmN0aW9uIFhhKHQsZSl7ZT90LmFbXCJYLUZpcmViYXNlLUxvY2FsZVwiXT1lOmRlbGV0ZSB0LmFbXCJYLUZpcmViYXNlLUxvY2FsZVwiXX1mdW5jdGlvbiBKYSh0LGUpe2UmJih0Lmw9WWEoXCJodHRwczovL3NlY3VyZXRva2VuLmdvb2dsZWFwaXMuY29tL3YxL3Rva2VuXCIsZSksdC5oPVlhKFwiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vaWRlbnRpdHl0b29sa2l0L3YzL3JlbHlpbmdwYXJ0eS9cIixlKSx0Lmk9WWEoXCJodHRwczovL2lkZW50aXR5dG9vbGtpdC5nb29nbGVhcGlzLmNvbS92Mi9cIixlKSl9ZnVuY3Rpb24gWWEodCxlKXtyZXR1cm4gdD1Pbih0KSxlPU9uKGUudXJsKSx0LmY9dC5hK3QuZixBbih0LGUuYyksdC5hPWUuYSxrbih0LGUuZyksdC50b1N0cmluZygpfWZ1bmN0aW9uIHphKHQsZSl7ZT8odC5hW1wiWC1DbGllbnQtVmVyc2lvblwiXT1lLHQuZ1tcIlgtQ2xpZW50LVZlcnNpb25cIl09ZSk6KGRlbGV0ZSB0LmFbXCJYLUNsaWVudC1WZXJzaW9uXCJdLGRlbGV0ZSB0LmdbXCJYLUNsaWVudC1WZXJzaW9uXCJdKX1mdW5jdGlvbiAkYSh0LGUsbixpLHIsbyxhKXt2YXIgczsodD0oKHM9cGkocz1naSgpKT09ZGkmJihzPXMubWF0Y2goL1xcc0Nocm9tZVxcLyhcXGQrKS9pKSkmJjI9PXMubGVuZ3RoP3BhcnNlSW50KHNbMV0sMTApOm51bGwpJiZzPDMwfHxIdCYmWnQmJiEoOTxadCkpJiYhY2koKT8ocWE9cWF8fG5ldyBmZShmdW5jdGlvbih0LGUpe3ZhciBuLGk7bj10LGk9ZSwoKHdpbmRvdy5nYXBpfHx7fSkuY2xpZW50fHx7fSkucmVxdWVzdD9uKCk6KGxbUWFdPWZ1bmN0aW9uKCl7KCh3aW5kb3cuZ2FwaXx8e30pLmNsaWVudHx8e30pLnJlcXVlc3Q/bigpOmkoRXJyb3IoXCJDT1JTX1VOU1VQUE9SVEVEXCIpKX0sZnVuY3Rpb24odCxlKXtTYSh0LG51bGwsZSx2b2lkIDApfShQYShJdChaYSx7b25sb2FkOlFhfSkpLGZ1bmN0aW9uKCl7aShFcnJvcihcIkNPUlNfVU5TVVBQT1JURURcIikpfSkpfSksYih0LnMsdCkpOmIodC51LHQpKShlLG4saSxyLG8sYSl9RmEucHJvdG90eXBlLlQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ifSxGYS5wcm90b3R5cGUudT1mdW5jdGlvbih0LG4sZSxpLHIsbyl7aWYoY2koKSYmKHZvaWQgMD09PWwuZmV0Y2h8fHZvaWQgMD09PWwuSGVhZGVyc3x8dm9pZCAwPT09bC5SZXF1ZXN0KSl0aHJvdyBuZXcgVChcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIixcImZldGNoLCBIZWFkZXJzIGFuZCBSZXF1ZXN0IG5hdGl2ZSBBUElzIG9yIGVxdWl2YWxlbnQgUG9seWZpbGxzIG11c3QgYmUgYXZhaWxhYmxlIHRvIHN1cHBvcnQgSFRUUCByZXF1ZXN0cyBmcm9tIGEgV29ya2VyIGVudmlyb25tZW50LlwiKTt2YXIgYSxzPW5ldyBjYSh0aGlzLmYpO28mJihzLmc9TWF0aC5tYXgoMCxvKSxhPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtzLmRpc3BhdGNoRXZlbnQoXCJ0aW1lb3V0XCIpfSxvKSksZm4ocyxcImNvbXBsZXRlXCIsZnVuY3Rpb24oKXthJiZjbGVhclRpbWVvdXQoYSk7dmFyIGU9bnVsbDt0cnl7ZT1KU09OLnBhcnNlKGZ1bmN0aW9uKGUpe3RyeXtyZXR1cm4gZS5hP2UuYS5yZXNwb25zZVRleHQ6XCJcIn1jYXRjaCh0KXtyZXR1cm4gbmEoZS5iLFwiQ2FuIG5vdCBnZXQgcmVzcG9uc2VUZXh0OiBcIit0Lm1lc3NhZ2UpLFwiXCJ9fSh0aGlzKSl8fG51bGx9Y2F0Y2godCl7ZT1udWxsfW4mJm4oZSl9KSxkbihzLFwicmVhZHlcIixmdW5jdGlvbigpe2EmJmNsZWFyVGltZW91dChhKSx4ZSh0aGlzKX0pLGRuKHMsXCJ0aW1lb3V0XCIsZnVuY3Rpb24oKXthJiZjbGVhclRpbWVvdXQoYSkseGUodGhpcyksbiYmbihudWxsKX0pLGRhKHMsdCxlLGkscil9O3ZhciBaYT1uZXcgZHQoZ3QsXCJodHRwczovL2FwaXMuZ29vZ2xlLmNvbS9qcy9jbGllbnQuanM/b25sb2FkPSV7b25sb2FkfVwiKSxRYT1cIl9fZmNiXCIrTWF0aC5mbG9vcigxZTYqTWF0aC5yYW5kb20oKSkudG9TdHJpbmcoKTtmdW5jdGlvbiB0cyh0LGUsbixpLHIsbyxhKXt2YXIgcz1PbihlK24pO05uKHMsXCJrZXlcIix0LmMpLGEmJk5uKHMsXCJjYlwiLERhdGUubm93KCkudG9TdHJpbmcoKSk7dmFyIHU9XCJHRVRcIj09aTtpZih1KWZvcih2YXIgYyBpbiByKXIuaGFzT3duUHJvcGVydHkoYykmJk5uKHMsYyxyW2NdKTtyZXR1cm4gbmV3IGZlKGZ1bmN0aW9uKGUsbil7JGEodCxzLnRvU3RyaW5nKCksZnVuY3Rpb24odCl7dD90LmVycm9yP24oWXModCxvfHx7fSkpOmUodCk6bihuZXcgVChcIm5ldHdvcmstcmVxdWVzdC1mYWlsZWRcIikpfSxpLHU/dm9pZCAwOlhuKGtpKHIpKSx0LmEsdC52LmdldCgpKX0pfWZ1bmN0aW9uIGVzKHQpe2lmKFwic3RyaW5nXCIhPXR5cGVvZih0PXQuZW1haWwpfHwhb2kudGVzdCh0KSl0aHJvdyBuZXcgVChcImludmFsaWQtZW1haWxcIil9ZnVuY3Rpb24gbnModCl7XCJlbWFpbFwiaW4gdCYmZXModCl9ZnVuY3Rpb24gaXModCl7aWYoIXRbSGFdKXtpZih0Lm1mYVBlbmRpbmdDcmVkZW50aWFsKXRocm93IG5ldyBUKFwibXVsdGktZmFjdG9yLWF1dGgtcmVxdWlyZWRcIixudWxsLGN0KHQpKTt0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIpfX1mdW5jdGlvbiBycyh0KXtpZih0LnBob25lTnVtYmVyfHx0LnRlbXBvcmFyeVByb29mKXtpZighdC5waG9uZU51bWJlcnx8IXQudGVtcG9yYXJ5UHJvb2YpdGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiKX1lbHNle2lmKCF0LnNlc3Npb25JbmZvKXRocm93IG5ldyBUKFwibWlzc2luZy12ZXJpZmljYXRpb24taWRcIik7aWYoIXQuY29kZSl0aHJvdyBuZXcgVChcIm1pc3NpbmctdmVyaWZpY2F0aW9uLWNvZGVcIil9fUZhLnByb3RvdHlwZS5zPWZ1bmN0aW9uKHQsbixpLHIsbyl7dmFyIGE9dGhpcztxYS50aGVuKGZ1bmN0aW9uKCl7d2luZG93LmdhcGkuY2xpZW50LnNldEFwaUtleShhLmMpO3ZhciBlPXdpbmRvdy5nYXBpLmF1dGguZ2V0VG9rZW4oKTt3aW5kb3cuZ2FwaS5hdXRoLnNldFRva2VuKG51bGwpLHdpbmRvdy5nYXBpLmNsaWVudC5yZXF1ZXN0KHtwYXRoOnQsbWV0aG9kOmksYm9keTpyLGhlYWRlcnM6byxhdXRoVHlwZTpcIm5vbmVcIixjYWxsYmFjazpmdW5jdGlvbih0KXt3aW5kb3cuZ2FwaS5hdXRoLnNldFRva2VuKGUpLG4mJm4odCl9fSl9KS5vKGZ1bmN0aW9uKHQpe24mJm4oe2Vycm9yOnttZXNzYWdlOnQmJnQubWVzc2FnZXx8XCJDT1JTX1VOU1VQUE9SVEVEXCJ9fSl9KX0sRmEucHJvdG90eXBlLnpiPWZ1bmN0aW9uKCl7cmV0dXJuIFhzKHRoaXMseHMse30pfSxGYS5wcm90b3R5cGUuQmI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gWHModGhpcyxQcyx7aWRUb2tlbjp0LGVtYWlsOmV9KX0sRmEucHJvdG90eXBlLkNiPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIFhzKHRoaXMsTHMse2lkVG9rZW46dCxwYXNzd29yZDplfSl9O3ZhciBvcz17ZGlzcGxheU5hbWU6XCJESVNQTEFZX05BTUVcIixwaG90b1VybDpcIlBIT1RPX1VSTFwifTtmdW5jdGlvbiBhcyh0KXtpZighdC5waG9uZVZlcmlmaWNhdGlvbkluZm8pdGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiKTtpZighdC5waG9uZVZlcmlmaWNhdGlvbkluZm8uc2Vzc2lvbkluZm8pdGhyb3cgbmV3IFQoXCJtaXNzaW5nLXZlcmlmaWNhdGlvbi1pZFwiKTtpZighdC5waG9uZVZlcmlmaWNhdGlvbkluZm8uY29kZSl0aHJvdyBuZXcgVChcIm1pc3NpbmctdmVyaWZpY2F0aW9uLWNvZGVcIil9ZnVuY3Rpb24gc3ModCl7aWYoIXQucmVxdWVzdFVyaXx8IXQuc2Vzc2lvbklkJiYhdC5wb3N0Qm9keSYmIXQucGVuZGluZ1Rva2VuKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIil9ZnVuY3Rpb24gdXModCxlKXtyZXR1cm4gZS5vYXV0aElkVG9rZW4mJmUucHJvdmlkZXJJZCYmMD09ZS5wcm92aWRlcklkLmluZGV4T2YoXCJvaWRjLlwiKSYmIWUucGVuZGluZ1Rva2VuJiYodC5zZXNzaW9uSWQ/ZS5ub25jZT10LnNlc3Npb25JZDp0LnBvc3RCb2R5JiYoS24odD1uZXcgVm4odC5wb3N0Qm9keSksXCJub25jZVwiKSYmKGUubm9uY2U9dC5nZXQoXCJub25jZVwiKSkpKSxlfWZ1bmN0aW9uIGNzKHQpe3ZhciBlPW51bGw7aWYodC5uZWVkQ29uZmlybWF0aW9uPyh0LmNvZGU9XCJhY2NvdW50LWV4aXN0cy13aXRoLWRpZmZlcmVudC1jcmVkZW50aWFsXCIsZT1qbyh0KSk6XCJGRURFUkFURURfVVNFUl9JRF9BTFJFQURZX0xJTktFRFwiPT10LmVycm9yTWVzc2FnZT8odC5jb2RlPVwiY3JlZGVudGlhbC1hbHJlYWR5LWluLXVzZVwiLGU9am8odCkpOlwiRU1BSUxfRVhJU1RTXCI9PXQuZXJyb3JNZXNzYWdlPyh0LmNvZGU9XCJlbWFpbC1hbHJlYWR5LWluLXVzZVwiLGU9am8odCkpOnQuZXJyb3JNZXNzYWdlJiYoZT1Kcyh0LmVycm9yTWVzc2FnZSkpLGUpdGhyb3cgZTtpcyh0KX1mdW5jdGlvbiBocyh0LGUpe3JldHVybiBlLnJldHVybklkcENyZWRlbnRpYWw9ITAsWHModCxVcyxlKX1mdW5jdGlvbiBscyh0LGUpe3JldHVybiBlLnJldHVybklkcENyZWRlbnRpYWw9ITAsWHModCxGcyxlKX1mdW5jdGlvbiBmcyh0LGUpe3JldHVybiBlLnJldHVybklkcENyZWRlbnRpYWw9ITAsZS5hdXRvQ3JlYXRlPSExLFhzKHQsVnMsZSl9ZnVuY3Rpb24gZHModCl7aWYoIXQub29iQ29kZSl0aHJvdyBuZXcgVChcImludmFsaWQtYWN0aW9uLWNvZGVcIil9KHQ9RmEucHJvdG90eXBlKS5EYj1mdW5jdGlvbih0LGkpe3ZhciByPXtpZFRva2VuOnR9LG89W107cmV0dXJuIHN0KG9zLGZ1bmN0aW9uKHQsZSl7dmFyIG49aVtlXTtudWxsPT09bj9vLnB1c2godCk6ZSBpbiBpJiYocltlXT1uKX0pLG8ubGVuZ3RoJiYoci5kZWxldGVBdHRyaWJ1dGU9byksWHModGhpcyxQcyxyKX0sdC52Yj1mdW5jdGlvbih0LGUpe3JldHVybiBsdCh0PXtyZXF1ZXN0VHlwZTpcIlBBU1NXT1JEX1JFU0VUXCIsZW1haWw6dH0sZSksWHModGhpcyxfcyx0KX0sdC53Yj1mdW5jdGlvbih0LGUpe3JldHVybiBsdCh0PXtyZXF1ZXN0VHlwZTpcIkVNQUlMX1NJR05JTlwiLGVtYWlsOnR9LGUpLFhzKHRoaXMsa3MsdCl9LHQudWI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbHQodD17cmVxdWVzdFR5cGU6XCJWRVJJRllfRU1BSUxcIixpZFRva2VuOnR9LGUpLFhzKHRoaXMsU3MsdCl9LHQuRWI9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBsdCh0PXtyZXF1ZXN0VHlwZTpcIlZFUklGWV9BTkRfQ0hBTkdFX0VNQUlMXCIsaWRUb2tlbjp0LG5ld0VtYWlsOmV9LG4pLFhzKHRoaXMsTnMsdCl9LHQuZmI9ZnVuY3Rpb24odCl7cmV0dXJuIFhzKHRoaXMsS3MsdCl9LHQubmI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gWHModGhpcyxScyx7b29iQ29kZTp0LG5ld1Bhc3N3b3JkOmV9KX0sdC5SYT1mdW5jdGlvbih0KXtyZXR1cm4gWHModGhpcyx2cyx7b29iQ29kZTp0fSl9LHQuamI9ZnVuY3Rpb24odCl7cmV0dXJuIFhzKHRoaXMscHMse29vYkNvZGU6dH0pfTt2YXIgcHM9e2VuZHBvaW50Olwic2V0QWNjb3VudEluZm9cIixBOmRzLFo6XCJlbWFpbFwiLEI6ITB9LHZzPXtlbmRwb2ludDpcInJlc2V0UGFzc3dvcmRcIixBOmRzLEc6ZnVuY3Rpb24odCl7dmFyIGU9dC5yZXF1ZXN0VHlwZTtpZighZXx8IXQuZW1haWwmJlwiRU1BSUxfU0lHTklOXCIhPWUmJlwiVkVSSUZZX0FORF9DSEFOR0VfRU1BSUxcIiE9ZSl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIpfSxCOiEwfSxtcz17ZW5kcG9pbnQ6XCJzaWdudXBOZXdVc2VyXCIsQTpmdW5jdGlvbih0KXtpZihlcyh0KSwhdC5wYXNzd29yZCl0aHJvdyBuZXcgVChcIndlYWstcGFzc3dvcmRcIil9LEc6aXMsVjohMCxCOiEwfSxncz17ZW5kcG9pbnQ6XCJjcmVhdGVBdXRoVXJpXCIsQjohMH0sYnM9e2VuZHBvaW50OlwiZGVsZXRlQWNjb3VudFwiLE46W1wiaWRUb2tlblwiXX0seXM9e2VuZHBvaW50Olwic2V0QWNjb3VudEluZm9cIixOOltcImlkVG9rZW5cIixcImRlbGV0ZVByb3ZpZGVyXCJdLEE6ZnVuY3Rpb24odCl7aWYoIUFycmF5LmlzQXJyYXkodC5kZWxldGVQcm92aWRlcikpdGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiKX19LHdzPXtlbmRwb2ludDpcImVtYWlsTGlua1NpZ25pblwiLE46W1wiZW1haWxcIixcIm9vYkNvZGVcIl0sQTplcyxHOmlzLFY6ITAsQjohMH0sSXM9e2VuZHBvaW50OlwiZW1haWxMaW5rU2lnbmluXCIsTjpbXCJpZFRva2VuXCIsXCJlbWFpbFwiLFwib29iQ29kZVwiXSxBOmVzLEc6aXMsVjohMH0sVHM9e2VuZHBvaW50OlwiYWNjb3VudHMvbWZhRW5yb2xsbWVudDpmaW5hbGl6ZVwiLE46W1wiaWRUb2tlblwiLFwicGhvbmVWZXJpZmljYXRpb25JbmZvXCJdLEE6YXMsRzppcyxCOiEwLE5hOiEwfSxFcz17ZW5kcG9pbnQ6XCJhY2NvdW50cy9tZmFTaWduSW46ZmluYWxpemVcIixOOltcIm1mYVBlbmRpbmdDcmVkZW50aWFsXCIsXCJwaG9uZVZlcmlmaWNhdGlvbkluZm9cIl0sQTphcyxHOmlzLEI6ITAsTmE6ITB9LEFzPXtlbmRwb2ludDpcImdldEFjY291bnRJbmZvXCJ9LGtzPXtlbmRwb2ludDpcImdldE9vYkNvbmZpcm1hdGlvbkNvZGVcIixOOltcInJlcXVlc3RUeXBlXCJdLEE6ZnVuY3Rpb24odCl7aWYoXCJFTUFJTF9TSUdOSU5cIiE9dC5yZXF1ZXN0VHlwZSl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIpO2VzKHQpfSxaOlwiZW1haWxcIixCOiEwfSxTcz17ZW5kcG9pbnQ6XCJnZXRPb2JDb25maXJtYXRpb25Db2RlXCIsTjpbXCJpZFRva2VuXCIsXCJyZXF1ZXN0VHlwZVwiXSxBOmZ1bmN0aW9uKHQpe2lmKFwiVkVSSUZZX0VNQUlMXCIhPXQucmVxdWVzdFR5cGUpdGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiKX0sWjpcImVtYWlsXCIsQjohMH0sTnM9e2VuZHBvaW50OlwiZ2V0T29iQ29uZmlybWF0aW9uQ29kZVwiLE46W1wiaWRUb2tlblwiLFwibmV3RW1haWxcIixcInJlcXVlc3RUeXBlXCJdLEE6ZnVuY3Rpb24odCl7aWYoXCJWRVJJRllfQU5EX0NIQU5HRV9FTUFJTFwiIT10LnJlcXVlc3RUeXBlKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIil9LFo6XCJlbWFpbFwiLEI6ITB9LF9zPXtlbmRwb2ludDpcImdldE9vYkNvbmZpcm1hdGlvbkNvZGVcIixOOltcInJlcXVlc3RUeXBlXCJdLEE6ZnVuY3Rpb24odCl7aWYoXCJQQVNTV09SRF9SRVNFVFwiIT10LnJlcXVlc3RUeXBlKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIik7ZXModCl9LFo6XCJlbWFpbFwiLEI6ITB9LE9zPXtsYjohMCxlbmRwb2ludDpcImdldFByb2plY3RDb25maWdcIixVYjpcIkdFVFwifSxDcz17bGI6ITAsZW5kcG9pbnQ6XCJnZXRSZWNhcHRjaGFQYXJhbVwiLFViOlwiR0VUXCIsRzpmdW5jdGlvbih0KXtpZighdC5yZWNhcHRjaGFTaXRlS2V5KXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIil9fSxScz17ZW5kcG9pbnQ6XCJyZXNldFBhc3N3b3JkXCIsQTpkcyxaOlwiZW1haWxcIixCOiEwfSxEcz17ZW5kcG9pbnQ6XCJzZW5kVmVyaWZpY2F0aW9uQ29kZVwiLE46W1wicGhvbmVOdW1iZXJcIixcInJlY2FwdGNoYVRva2VuXCJdLFo6XCJzZXNzaW9uSW5mb1wiLEI6ITB9LFBzPXtlbmRwb2ludDpcInNldEFjY291bnRJbmZvXCIsTjpbXCJpZFRva2VuXCJdLEE6bnMsVjohMH0sTHM9e2VuZHBvaW50Olwic2V0QWNjb3VudEluZm9cIixOOltcImlkVG9rZW5cIl0sQTpmdW5jdGlvbih0KXtpZihucyh0KSwhdC5wYXNzd29yZCl0aHJvdyBuZXcgVChcIndlYWstcGFzc3dvcmRcIil9LEc6aXMsVjohMH0seHM9e2VuZHBvaW50Olwic2lnbnVwTmV3VXNlclwiLEc6aXMsVjohMCxCOiEwfSxNcz17ZW5kcG9pbnQ6XCJhY2NvdW50cy9tZmFFbnJvbGxtZW50OnN0YXJ0XCIsTjpbXCJpZFRva2VuXCIsXCJwaG9uZUVucm9sbG1lbnRJbmZvXCJdLEE6ZnVuY3Rpb24odCl7aWYoIXQucGhvbmVFbnJvbGxtZW50SW5mbyl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIpO2lmKCF0LnBob25lRW5yb2xsbWVudEluZm8ucGhvbmVOdW1iZXIpdGhyb3cgbmV3IFQoXCJtaXNzaW5nLXBob25lLW51bWJlclwiKTtpZighdC5waG9uZUVucm9sbG1lbnRJbmZvLnJlY2FwdGNoYVRva2VuKXRocm93IG5ldyBUKFwibWlzc2luZy1hcHAtY3JlZGVudGlhbFwiKX0sRzpmdW5jdGlvbih0KXtpZighdC5waG9uZVNlc3Npb25JbmZvfHwhdC5waG9uZVNlc3Npb25JbmZvLnNlc3Npb25JbmZvKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIil9LEI6ITAsTmE6ITB9LGpzPXtlbmRwb2ludDpcImFjY291bnRzL21mYVNpZ25JbjpzdGFydFwiLE46W1wibWZhUGVuZGluZ0NyZWRlbnRpYWxcIixcIm1mYUVucm9sbG1lbnRJZFwiLFwicGhvbmVTaWduSW5JbmZvXCJdLEE6ZnVuY3Rpb24odCl7aWYoIXQucGhvbmVTaWduSW5JbmZvfHwhdC5waG9uZVNpZ25JbkluZm8ucmVjYXB0Y2hhVG9rZW4pdGhyb3cgbmV3IFQoXCJtaXNzaW5nLWFwcC1jcmVkZW50aWFsXCIpfSxHOmZ1bmN0aW9uKHQpe2lmKCF0LnBob25lUmVzcG9uc2VJbmZvfHwhdC5waG9uZVJlc3BvbnNlSW5mby5zZXNzaW9uSW5mbyl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIpfSxCOiEwLE5hOiEwfSxVcz17ZW5kcG9pbnQ6XCJ2ZXJpZnlBc3NlcnRpb25cIixBOnNzLFlhOnVzLEc6Y3MsVjohMCxCOiEwfSxWcz17ZW5kcG9pbnQ6XCJ2ZXJpZnlBc3NlcnRpb25cIixBOnNzLFlhOnVzLEc6ZnVuY3Rpb24odCl7aWYodC5lcnJvck1lc3NhZ2UmJlwiVVNFUl9OT1RfRk9VTkRcIj09dC5lcnJvck1lc3NhZ2UpdGhyb3cgbmV3IFQoXCJ1c2VyLW5vdC1mb3VuZFwiKTtpZih0LmVycm9yTWVzc2FnZSl0aHJvdyBKcyh0LmVycm9yTWVzc2FnZSk7aXModCl9LFY6ITAsQjohMH0sRnM9e2VuZHBvaW50OlwidmVyaWZ5QXNzZXJ0aW9uXCIsQTpmdW5jdGlvbih0KXtpZihzcyh0KSwhdC5pZFRva2VuKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIil9LFlhOnVzLEc6Y3MsVjohMH0scXM9e2VuZHBvaW50OlwidmVyaWZ5Q3VzdG9tVG9rZW5cIixBOmZ1bmN0aW9uKHQpe2lmKCF0LnRva2VuKXRocm93IG5ldyBUKFwiaW52YWxpZC1jdXN0b20tdG9rZW5cIil9LEc6aXMsVjohMCxCOiEwfSxIcz17ZW5kcG9pbnQ6XCJ2ZXJpZnlQYXNzd29yZFwiLEE6ZnVuY3Rpb24odCl7aWYoZXModCksIXQucGFzc3dvcmQpdGhyb3cgbmV3IFQoXCJ3cm9uZy1wYXNzd29yZFwiKX0sRzppcyxWOiEwLEI6ITB9LEtzPXtlbmRwb2ludDpcInZlcmlmeVBob25lTnVtYmVyXCIsQTpycyxHOmlzLEI6ITB9LEdzPXtlbmRwb2ludDpcInZlcmlmeVBob25lTnVtYmVyXCIsQTpmdW5jdGlvbih0KXtpZighdC5pZFRva2VuKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIik7cnModCl9LEc6ZnVuY3Rpb24odCl7aWYodC50ZW1wb3JhcnlQcm9vZil0aHJvdyB0LmNvZGU9XCJjcmVkZW50aWFsLWFscmVhZHktaW4tdXNlXCIsam8odCk7aXModCl9fSxCcz17SGI6e1VTRVJfTk9UX0ZPVU5EOlwidXNlci1ub3QtZm91bmRcIn0sZW5kcG9pbnQ6XCJ2ZXJpZnlQaG9uZU51bWJlclwiLEE6cnMsRzppcyxCOiEwfSxXcz17ZW5kcG9pbnQ6XCJhY2NvdW50cy9tZmFFbnJvbGxtZW50OndpdGhkcmF3XCIsTjpbXCJpZFRva2VuXCIsXCJtZmFFbnJvbGxtZW50SWRcIl0sRzpmdW5jdGlvbih0KXtpZighIXRbSGFdXiEhdC5yZWZyZXNoVG9rZW4pdGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiKX0sQjohMCxOYTohMH07ZnVuY3Rpb24gWHModCxlLG4pe2lmKCFmdW5jdGlvbih0LGUpe2lmKCFlfHwhZS5sZW5ndGgpcmV0dXJuIDE7aWYodCl7Zm9yKHZhciBuPTA7bjxlLmxlbmd0aDtuKyspe3ZhciBpPXRbZVtuXV07aWYobnVsbD09aXx8XCJcIj09PWkpcmV0dXJufXJldHVybiAxfX0obixlLk4pKXJldHVybiB3ZShuZXcgVChcImludGVybmFsLWVycm9yXCIpKTt2YXIgaSxyPSEhZS5OYSxvPWUuVWJ8fFwiUE9TVFwiO3JldHVybiB5ZShuKS50aGVuKGUuQSkudGhlbihmdW5jdGlvbigpe3JldHVybiBlLlYmJihuLnJldHVyblNlY3VyZVRva2VuPSEwKSxlLkImJnQuYiYmdm9pZCAwPT09bi50ZW5hbnRJZCYmKG4udGVuYW50SWQ9dC5iKSx0cyh0LHI/dC5pOnQuaCxlLmVuZHBvaW50LG8sbixlLkhiLGUubGJ8fCExKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGk9dCxlLllhP2UuWWEobixpKTppfSkudGhlbihlLkcpLnRoZW4oZnVuY3Rpb24oKXtpZighZS5aKXJldHVybiBpO2lmKCEoZS5aIGluIGkpKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIik7cmV0dXJuIGlbZS5aXX0pfWZ1bmN0aW9uIEpzKHQpe3JldHVybiBZcyh7ZXJyb3I6e2Vycm9yczpbe21lc3NhZ2U6dH1dLGNvZGU6NDAwLG1lc3NhZ2U6dH19KX1mdW5jdGlvbiBZcyh0LGUpe3ZhciBuLGk9KHQuZXJyb3ImJnQuZXJyb3IuZXJyb3JzJiZ0LmVycm9yLmVycm9yc1swXXx8e30pLnJlYXNvbnx8XCJcIixyPXtrZXlJbnZhbGlkOlwiaW52YWxpZC1hcGkta2V5XCIsaXBSZWZlcmVyQmxvY2tlZDpcImFwcC1ub3QtYXV0aG9yaXplZFwifTtpZihpPXJbaV0/bmV3IFQocltpXSk6bnVsbClyZXR1cm4gaTtmb3IobiBpbiBpPXQuZXJyb3ImJnQuZXJyb3IubWVzc2FnZXx8XCJcIixsdChyPXtJTlZBTElEX0NVU1RPTV9UT0tFTjpcImludmFsaWQtY3VzdG9tLXRva2VuXCIsQ1JFREVOVElBTF9NSVNNQVRDSDpcImN1c3RvbS10b2tlbi1taXNtYXRjaFwiLE1JU1NJTkdfQ1VTVE9NX1RPS0VOOlwiaW50ZXJuYWwtZXJyb3JcIixJTlZBTElEX0lERU5USUZJRVI6XCJpbnZhbGlkLWVtYWlsXCIsTUlTU0lOR19DT05USU5VRV9VUkk6XCJpbnRlcm5hbC1lcnJvclwiLElOVkFMSURfRU1BSUw6XCJpbnZhbGlkLWVtYWlsXCIsSU5WQUxJRF9QQVNTV09SRDpcIndyb25nLXBhc3N3b3JkXCIsVVNFUl9ESVNBQkxFRDpcInVzZXItZGlzYWJsZWRcIixNSVNTSU5HX1BBU1NXT1JEOlwiaW50ZXJuYWwtZXJyb3JcIixFTUFJTF9FWElTVFM6XCJlbWFpbC1hbHJlYWR5LWluLXVzZVwiLFBBU1NXT1JEX0xPR0lOX0RJU0FCTEVEOlwib3BlcmF0aW9uLW5vdC1hbGxvd2VkXCIsSU5WQUxJRF9JRFBfUkVTUE9OU0U6XCJpbnZhbGlkLWNyZWRlbnRpYWxcIixJTlZBTElEX1BFTkRJTkdfVE9LRU46XCJpbnZhbGlkLWNyZWRlbnRpYWxcIixGRURFUkFURURfVVNFUl9JRF9BTFJFQURZX0xJTktFRDpcImNyZWRlbnRpYWwtYWxyZWFkeS1pbi11c2VcIixNSVNTSU5HX09SX0lOVkFMSURfTk9OQ0U6XCJtaXNzaW5nLW9yLWludmFsaWQtbm9uY2VcIixJTlZBTElEX01FU1NBR0VfUEFZTE9BRDpcImludmFsaWQtbWVzc2FnZS1wYXlsb2FkXCIsSU5WQUxJRF9SRUNJUElFTlRfRU1BSUw6XCJpbnZhbGlkLXJlY2lwaWVudC1lbWFpbFwiLElOVkFMSURfU0VOREVSOlwiaW52YWxpZC1zZW5kZXJcIixFTUFJTF9OT1RfRk9VTkQ6XCJ1c2VyLW5vdC1mb3VuZFwiLFJFU0VUX1BBU1NXT1JEX0VYQ0VFRF9MSU1JVDpcInRvby1tYW55LXJlcXVlc3RzXCIsRVhQSVJFRF9PT0JfQ09ERTpcImV4cGlyZWQtYWN0aW9uLWNvZGVcIixJTlZBTElEX09PQl9DT0RFOlwiaW52YWxpZC1hY3Rpb24tY29kZVwiLE1JU1NJTkdfT09CX0NPREU6XCJpbnRlcm5hbC1lcnJvclwiLElOVkFMSURfUFJPVklERVJfSUQ6XCJpbnZhbGlkLXByb3ZpZGVyLWlkXCIsQ1JFREVOVElBTF9UT09fT0xEX0xPR0lOX0FHQUlOOlwicmVxdWlyZXMtcmVjZW50LWxvZ2luXCIsSU5WQUxJRF9JRF9UT0tFTjpcImludmFsaWQtdXNlci10b2tlblwiLFRPS0VOX0VYUElSRUQ6XCJ1c2VyLXRva2VuLWV4cGlyZWRcIixVU0VSX05PVF9GT1VORDpcInVzZXItdG9rZW4tZXhwaXJlZFwiLENPUlNfVU5TVVBQT1JURUQ6XCJjb3JzLXVuc3VwcG9ydGVkXCIsRFlOQU1JQ19MSU5LX05PVF9BQ1RJVkFURUQ6XCJkeW5hbWljLWxpbmstbm90LWFjdGl2YXRlZFwiLElOVkFMSURfQVBQX0lEOlwiaW52YWxpZC1hcHAtaWRcIixUT09fTUFOWV9BVFRFTVBUU19UUllfTEFURVI6XCJ0b28tbWFueS1yZXF1ZXN0c1wiLFdFQUtfUEFTU1dPUkQ6XCJ3ZWFrLXBhc3N3b3JkXCIsT1BFUkFUSU9OX05PVF9BTExPV0VEOlwib3BlcmF0aW9uLW5vdC1hbGxvd2VkXCIsVVNFUl9DQU5DRUxMRUQ6XCJ1c2VyLWNhbmNlbGxlZFwiLENBUFRDSEFfQ0hFQ0tfRkFJTEVEOlwiY2FwdGNoYS1jaGVjay1mYWlsZWRcIixJTlZBTElEX0FQUF9DUkVERU5USUFMOlwiaW52YWxpZC1hcHAtY3JlZGVudGlhbFwiLElOVkFMSURfQ09ERTpcImludmFsaWQtdmVyaWZpY2F0aW9uLWNvZGVcIixJTlZBTElEX1BIT05FX05VTUJFUjpcImludmFsaWQtcGhvbmUtbnVtYmVyXCIsSU5WQUxJRF9TRVNTSU9OX0lORk86XCJpbnZhbGlkLXZlcmlmaWNhdGlvbi1pZFwiLElOVkFMSURfVEVNUE9SQVJZX1BST09GOlwiaW52YWxpZC1jcmVkZW50aWFsXCIsTUlTU0lOR19BUFBfQ1JFREVOVElBTDpcIm1pc3NpbmctYXBwLWNyZWRlbnRpYWxcIixNSVNTSU5HX0NPREU6XCJtaXNzaW5nLXZlcmlmaWNhdGlvbi1jb2RlXCIsTUlTU0lOR19QSE9ORV9OVU1CRVI6XCJtaXNzaW5nLXBob25lLW51bWJlclwiLE1JU1NJTkdfU0VTU0lPTl9JTkZPOlwibWlzc2luZy12ZXJpZmljYXRpb24taWRcIixRVU9UQV9FWENFRURFRDpcInF1b3RhLWV4Y2VlZGVkXCIsU0VTU0lPTl9FWFBJUkVEOlwiY29kZS1leHBpcmVkXCIsUkVKRUNURURfQ1JFREVOVElBTDpcInJlamVjdGVkLWNyZWRlbnRpYWxcIixJTlZBTElEX0NPTlRJTlVFX1VSSTpcImludmFsaWQtY29udGludWUtdXJpXCIsTUlTU0lOR19BTkRST0lEX1BBQ0tBR0VfTkFNRTpcIm1pc3NpbmctYW5kcm9pZC1wa2ctbmFtZVwiLE1JU1NJTkdfSU9TX0JVTkRMRV9JRDpcIm1pc3NpbmctaW9zLWJ1bmRsZS1pZFwiLFVOQVVUSE9SSVpFRF9ET01BSU46XCJ1bmF1dGhvcml6ZWQtY29udGludWUtdXJpXCIsSU5WQUxJRF9EWU5BTUlDX0xJTktfRE9NQUlOOlwiaW52YWxpZC1keW5hbWljLWxpbmstZG9tYWluXCIsSU5WQUxJRF9PQVVUSF9DTElFTlRfSUQ6XCJpbnZhbGlkLW9hdXRoLWNsaWVudC1pZFwiLElOVkFMSURfQ0VSVF9IQVNIOlwiaW52YWxpZC1jZXJ0LWhhc2hcIixVTlNVUFBPUlRFRF9URU5BTlRfT1BFUkFUSU9OOlwidW5zdXBwb3J0ZWQtdGVuYW50LW9wZXJhdGlvblwiLElOVkFMSURfVEVOQU5UX0lEOlwiaW52YWxpZC10ZW5hbnQtaWRcIixURU5BTlRfSURfTUlTTUFUQ0g6XCJ0ZW5hbnQtaWQtbWlzbWF0Y2hcIixBRE1JTl9PTkxZX09QRVJBVElPTjpcImFkbWluLXJlc3RyaWN0ZWQtb3BlcmF0aW9uXCIsSU5WQUxJRF9NRkFfUEVORElOR19DUkVERU5USUFMOlwiaW52YWxpZC1tdWx0aS1mYWN0b3Itc2Vzc2lvblwiLE1GQV9FTlJPTExNRU5UX05PVF9GT1VORDpcIm11bHRpLWZhY3Rvci1pbmZvLW5vdC1mb3VuZFwiLE1JU1NJTkdfTUZBX1BFTkRJTkdfQ1JFREVOVElBTDpcIm1pc3NpbmctbXVsdGktZmFjdG9yLXNlc3Npb25cIixNSVNTSU5HX01GQV9FTlJPTExNRU5UX0lEOlwibWlzc2luZy1tdWx0aS1mYWN0b3ItaW5mb1wiLEVNQUlMX0NIQU5HRV9ORUVEU19WRVJJRklDQVRJT046XCJlbWFpbC1jaGFuZ2UtbmVlZHMtdmVyaWZpY2F0aW9uXCIsU0VDT05EX0ZBQ1RPUl9FWElTVFM6XCJzZWNvbmQtZmFjdG9yLWFscmVhZHktaW4tdXNlXCIsU0VDT05EX0ZBQ1RPUl9MSU1JVF9FWENFRURFRDpcIm1heGltdW0tc2Vjb25kLWZhY3Rvci1jb3VudC1leGNlZWRlZFwiLFVOU1VQUE9SVEVEX0ZJUlNUX0ZBQ1RPUjpcInVuc3VwcG9ydGVkLWZpcnN0LWZhY3RvclwiLFVOVkVSSUZJRURfRU1BSUw6XCJ1bnZlcmlmaWVkLWVtYWlsXCJ9LGV8fHt9KSxlPShlPWkubWF0Y2goL15bXlxcc10rXFxzKjpcXHMqKFtcXHNcXFNdKikkLykpJiYxPGUubGVuZ3RoP2VbMV06dm9pZCAwLHIpaWYoMD09PWkuaW5kZXhPZihuKSlyZXR1cm4gbmV3IFQocltuXSxlKTtyZXR1cm4gbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiLGU9IWUmJnQ/QWkodCk6ZSl9ZnVuY3Rpb24genModCl7dmFyIG87dGhpcy5iPXQsdGhpcy5hPW51bGwsdGhpcy5yYj0obz10aGlzLCh0dT10dXx8bmV3IGZlKGZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbigpe09pKCksYmkoXCJnYXBpLmxvYWRcIikoXCJnYXBpLmlmcmFtZXNcIix7Y2FsbGJhY2s6dCxvbnRpbWVvdXQ6ZnVuY3Rpb24oKXtPaSgpLGUoRXJyb3IoXCJOZXR3b3JrIEVycm9yXCIpKX0sdGltZW91dDpacy5nZXQoKX0pfXZhciBpO2JpKFwiZ2FwaS5pZnJhbWVzLklmcmFtZVwiKT90KCk6YmkoXCJnYXBpLmxvYWRcIik/bigpOihpPVwiX19pZnJhbWVmY2JcIitNYXRoLmZsb29yKDFlNipNYXRoLnJhbmRvbSgpKS50b1N0cmluZygpLGxbaV09ZnVuY3Rpb24oKXtiaShcImdhcGkubG9hZFwiKT9uKCk6ZShFcnJvcihcIk5ldHdvcmsgRXJyb3JcIikpfSx5ZShQYShpPUl0KCRzLHtvbmxvYWQ6aX0pKSkubyhmdW5jdGlvbigpe2UoRXJyb3IoXCJOZXR3b3JrIEVycm9yXCIpKX0pKX0pLm8oZnVuY3Rpb24odCl7dGhyb3cgdHU9bnVsbCx0fSkpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGZlKGZ1bmN0aW9uKGkscil7YmkoXCJnYXBpLmlmcmFtZXMuZ2V0Q29udGV4dFwiKSgpLm9wZW4oe3doZXJlOmRvY3VtZW50LmJvZHksdXJsOm8uYixtZXNzYWdlSGFuZGxlcnNGaWx0ZXI6YmkoXCJnYXBpLmlmcmFtZXMuQ1JPU1NfT1JJR0lOX0lGUkFNRVNfRklMVEVSXCIpLGF0dHJpYnV0ZXM6e3N0eWxlOntwb3NpdGlvbjpcImFic29sdXRlXCIsdG9wOlwiLTEwMHB4XCIsd2lkdGg6XCIxcHhcIixoZWlnaHQ6XCIxcHhcIn19LGRvbnRjbGVhcjohMH0sZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSgpe2NsZWFyVGltZW91dChuKSxpKCl9by5hPXQsby5hLnJlc3R5bGUoe3NldEhpZGVPbkxlYXZlOiExfSk7dmFyIG49c2V0VGltZW91dChmdW5jdGlvbigpe3IoRXJyb3IoXCJOZXR3b3JrIEVycm9yXCIpKX0sUXMuZ2V0KCkpO3QucGluZyhlKS50aGVuKGUsZnVuY3Rpb24oKXtyKEVycm9yKFwiTmV0d29yayBFcnJvclwiKSl9KX0pfSl9KSl9dmFyICRzPW5ldyBkdChndCxcImh0dHBzOi8vYXBpcy5nb29nbGUuY29tL2pzL2FwaS5qcz9vbmxvYWQ9JXtvbmxvYWR9XCIpLFpzPW5ldyBDaSgzZTQsNmU0KSxRcz1uZXcgQ2koNWUzLDE1ZTMpLHR1PW51bGw7ZnVuY3Rpb24gZXUodCxlLG4saSl7dGhpcy5sPXQsdGhpcy5oPWUsdGhpcy5pPW4sdGhpcy5nPWksdGhpcy5mPW51bGwsdD10aGlzLmc/Q24oKHQ9T24odGhpcy5nLnVybCkpLmMsdC5hLHQuZyxcIi9lbXVsYXRvci9hdXRoL2lmcmFtZVwiKTpDbihcImh0dHBzXCIsdGhpcy5sLG51bGwsXCIvX18vYXV0aC9pZnJhbWVcIiksdGhpcy5hPXQsTm4odGhpcy5hLFwiYXBpS2V5XCIsdGhpcy5oKSxObih0aGlzLmEsXCJhcHBOYW1lXCIsdGhpcy5pKSx0aGlzLmI9bnVsbCx0aGlzLmM9W119ZnVuY3Rpb24gbnUodCxlLG4saSxyLG8pe3RoaXMudT10LHRoaXMucz1lLHRoaXMuYz1uLHRoaXMubT1pLHRoaXMudj1vLHRoaXMuaT10aGlzLmc9dGhpcy5sPW51bGwsdGhpcy5hPXIsdGhpcy5oPXRoaXMuZj1udWxsfWZ1bmN0aW9uIGl1KHQpe3RyeXtyZXR1cm4gemwuZGVmYXVsdC5hcHAodCkuYXV0aCgpLkdhKCl9Y2F0Y2godCl7cmV0dXJuW119fWZ1bmN0aW9uIHJ1KHQsZSxuLGkscixvKXt0aGlzLnM9dCx0aGlzLmc9ZSx0aGlzLmI9bix0aGlzLmY9byx0aGlzLmM9aXx8bnVsbCx0aGlzLmk9cnx8bnVsbCx0aGlzLmw9dGhpcy51PXRoaXMuQz1udWxsLHRoaXMuaD1bXSx0aGlzLm09dGhpcy5hPW51bGx9ZnVuY3Rpb24gb3UodCl7dmFyIHM9UW4oKTtyZXR1cm4gWHModCxPcyx7fSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdC5hdXRob3JpemVkRG9tYWluc3x8W119KS50aGVuKGZ1bmN0aW9uKHQpe3Q6e2Zvcih2YXIgZT0obj1PbihzKSkuYyxuPW4uYSxpPTA7aTx0Lmxlbmd0aDtpKyspe3ZhciByPXRbaV0sbz1uLGE9ZTtpZihvPTA9PXIuaW5kZXhPZihcImNocm9tZS1leHRlbnNpb246Ly9cIik/T24ocikuYT09byYmXCJjaHJvbWUtZXh0ZW5zaW9uXCI9PWE6KFwiaHR0cFwiPT1hfHxcImh0dHBzXCI9PWEpJiYocmkudGVzdChyKT9vPT1yOihyPXIuc3BsaXQoXCIuXCIpLmpvaW4oXCJcXFxcLlwiKSxuZXcgUmVnRXhwKFwiXiguK1xcXFwuXCIrcitcInxcIityK1wiKSRcIixcImlcIikudGVzdChvKSkpKXt0PSEwO2JyZWFrIHR9fXQ9ITF9aWYoIXQpdGhyb3cgbmV3IHhvKFFuKCkpfSl9ZnVuY3Rpb24gYXUocil7cmV0dXJuIHIubXx8KHIubT1haSgpLnRoZW4oZnVuY3Rpb24oKXt2YXIgdCxlLG4saTtyLnV8fCh0PXIuYyxlPXIuaSxuPWl1KHIuYiksKGk9bmV3IGV1KHIucyxyLmcsci5iLHIuZikpLmY9dCxpLmI9ZSxpLmM9WChufHxbXSksci51PWkudG9TdHJpbmcoKSksci52PW5ldyB6cyhyLnUpLGZ1bmN0aW9uKGkpe2lmKCFpLnYpdGhyb3cgRXJyb3IoXCJJZmNIYW5kbGVyIG11c3QgYmUgaW5pdGlhbGl6ZWQhXCIpOyFmdW5jdGlvbih0LGUpe3QucmIudGhlbihmdW5jdGlvbigpe3QuYS5yZWdpc3RlcihcImF1dGhFdmVudFwiLGUsYmkoXCJnYXBpLmlmcmFtZXMuQ1JPU1NfT1JJR0lOX0lGUkFNRVNfRklMVEVSXCIpKX0pfShpLnYsZnVuY3Rpb24odCl7dmFyIGU9e307aWYodCYmdC5hdXRoRXZlbnQpe3ZhciBuPSExO2Zvcih0PVJvKHQuYXV0aEV2ZW50KSxlPTA7ZTxpLmgubGVuZ3RoO2UrKyluPWkuaFtlXSh0KXx8bjtyZXR1cm4oZT17fSkuc3RhdHVzPW4/XCJBQ0tcIjpcIkVSUk9SXCIseWUoZSl9cmV0dXJuIGUuc3RhdHVzPVwiRVJST1JcIix5ZShlKX0pfShyKX0pLHIubSl9ZnVuY3Rpb24gc3UodCl7cmV0dXJuIHQubHx8KHQuQz10LmM/bWkodC5jLGl1KHQuYikpOm51bGwsdC5sPW5ldyBGYSh0LmcsXyh0LmkpLHQuQyksdC5mJiZKYSh0LmwsdC5mKSksdC5sfWZ1bmN0aW9uIHV1KHQsZSxuLGkscixvLGEscyx1LGMsaCxsKXtyZXR1cm4odD1uZXcgbnUodCxlLG4saSxyLGwpKS5sPW8sdC5nPWEsdC5pPXMsdC5iPWN0KHV8fG51bGwpLHQuZj1jLHQueWIoaCkudG9TdHJpbmcoKX1mdW5jdGlvbiBjdSh0KXtpZih0aGlzLmE9dHx8emwuZGVmYXVsdC5JTlRFUk5BTC5yZWFjdE5hdGl2ZSYmemwuZGVmYXVsdC5JTlRFUk5BTC5yZWFjdE5hdGl2ZS5Bc3luY1N0b3JhZ2UsIXRoaXMuYSl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIsXCJUaGUgUmVhY3QgTmF0aXZlIGNvbXBhdGliaWxpdHkgbGlicmFyeSB3YXMgbm90IGZvdW5kLlwiKTt0aGlzLnR5cGU9XCJhc3luY1N0b3JhZ2VcIn1mdW5jdGlvbiBodSh0KXt0aGlzLmI9dCx0aGlzLmE9e30sdGhpcy5mPWIodGhpcy5jLHRoaXMpfWV1LnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmY/Tm4odGhpcy5hLFwidlwiLHRoaXMuZik6SG4odGhpcy5hLmIsXCJ2XCIpLHRoaXMuYj9Obih0aGlzLmEsXCJlaWRcIix0aGlzLmIpOkhuKHRoaXMuYS5iLFwiZWlkXCIpLHRoaXMuYy5sZW5ndGg/Tm4odGhpcy5hLFwiZndcIix0aGlzLmMuam9pbihcIixcIikpOkhuKHRoaXMuYS5iLFwiZndcIiksdGhpcy5hLnRvU3RyaW5nKCl9LG51LnByb3RvdHlwZS55Yj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5oPXQsdGhpc30sbnUucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHQ7aWYoTm4odD10aGlzLnY/Q24oKHQ9T24odGhpcy52LnVybCkpLmMsdC5hLHQuZyxcIi9lbXVsYXRvci9hdXRoL2hhbmRsZXJcIik6Q24oXCJodHRwc1wiLHRoaXMudSxudWxsLFwiL19fL2F1dGgvaGFuZGxlclwiKSxcImFwaUtleVwiLHRoaXMucyksTm4odCxcImFwcE5hbWVcIix0aGlzLmMpLE5uKHQsXCJhdXRoVHlwZVwiLHRoaXMubSksdGhpcy5hLmlzT0F1dGhQcm92aWRlcil7dmFyIGU9dGhpcy5hO3RyeXt2YXIgbj16bC5kZWZhdWx0LmFwcCh0aGlzLmMpLmF1dGgoKS5sYSgpfWNhdGNoKHQpe249bnVsbH1mb3IoaSBpbiBlLm9iPW4sTm4odCxcInByb3ZpZGVySWRcIix0aGlzLmEucHJvdmlkZXJJZCksZT1raSgobj10aGlzLmEpLkliKSllW2ldPWVbaV0udG9TdHJpbmcoKTtmb3IodmFyIGk9bi5RYyxlPWN0KGUpLHI9MDtyPGkubGVuZ3RoO3IrKyl7dmFyIG89aVtyXTtvIGluIGUmJmRlbGV0ZSBlW29dfW4ucGImJm4ub2ImJiFlW24ucGJdJiYoZVtuLnBiXT1uLm9iKSx1dChlKXx8Tm4odCxcImN1c3RvbVBhcmFtZXRlcnNcIixBaShlKSl9aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdGhpcy5hLlFiJiYoKG49dGhpcy5hLlFiKCkpLmxlbmd0aCYmTm4odCxcInNjb3Blc1wiLG4uam9pbihcIixcIikpKSx0aGlzLmw/Tm4odCxcInJlZGlyZWN0VXJsXCIsdGhpcy5sKTpIbih0LmIsXCJyZWRpcmVjdFVybFwiKSx0aGlzLmc/Tm4odCxcImV2ZW50SWRcIix0aGlzLmcpOkhuKHQuYixcImV2ZW50SWRcIiksdGhpcy5pP05uKHQsXCJ2XCIsdGhpcy5pKTpIbih0LmIsXCJ2XCIpLHRoaXMuYilmb3IodmFyIGEgaW4gdGhpcy5iKXRoaXMuYi5oYXNPd25Qcm9wZXJ0eShhKSYmIV9uKHQsYSkmJk5uKHQsYSx0aGlzLmJbYV0pO3JldHVybiB0aGlzLmg/Tm4odCxcInRpZFwiLHRoaXMuaCk6SG4odC5iLFwidGlkXCIpLHRoaXMuZj9Obih0LFwiZWlkXCIsdGhpcy5mKTpIbih0LmIsXCJlaWRcIiksKGE9aXUodGhpcy5jKSkubGVuZ3RoJiZObih0LFwiZndcIixhLmpvaW4oXCIsXCIpKSx0LnRvU3RyaW5nKCl9LCh0PXJ1LnByb3RvdHlwZSkuT2I9ZnVuY3Rpb24oZSxuLHQpe3ZhciBpPW5ldyBUKFwicG9wdXAtY2xvc2VkLWJ5LXVzZXJcIikscj1uZXcgVChcIndlYi1zdG9yYWdlLXVuc3VwcG9ydGVkXCIpLG89dGhpcyxhPSExO3JldHVybiB0aGlzLm1hKCkudGhlbihmdW5jdGlvbigpe3ZhciB0LGk7aT17dHlwZTpcIndlYlN0b3JhZ2VTdXBwb3J0XCJ9LGF1KHQ9bykudGhlbihmdW5jdGlvbigpe3JldHVybiBlPXQudixuPWksZS5yYi50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBmZShmdW5jdGlvbih0KXtlLmEuc2VuZChuLnR5cGUsbix0LGJpKFwiZ2FwaS5pZnJhbWVzLkNST1NTX09SSUdJTl9JRlJBTUVTX0ZJTFRFUlwiKSl9KX0pO3ZhciBlLG59KS50aGVuKGZ1bmN0aW9uKHQpe2lmKHQmJnQubGVuZ3RoJiZ2b2lkIDAhPT10WzBdLndlYlN0b3JhZ2VTdXBwb3J0KXJldHVybiB0WzBdLndlYlN0b3JhZ2VTdXBwb3J0O3Rocm93IEVycm9yKCl9KS50aGVuKGZ1bmN0aW9uKHQpe3R8fChlJiZuaShlKSxuKHIpLGE9ITApfSl9KS5vKGZ1bmN0aW9uKCl7fSkudGhlbihmdW5jdGlvbigpe2lmKCFhKXJldHVybiBuPWUsbmV3IGZlKGZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbiB0KCl7bW4oMmUzKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG4mJiFuLmNsb3NlZD90KCk6dm9pZCBlKCl9KX0oKX0pO3ZhciBufSkudGhlbihmdW5jdGlvbigpe2lmKCFhKXJldHVybiBtbih0KS50aGVuKGZ1bmN0aW9uKCl7bihpKX0pfSl9LHQuWGI9ZnVuY3Rpb24oKXt2YXIgdD1naSgpO3JldHVybiFFaSh0KSYmIV9pKHQpfSx0LlRiPWZ1bmN0aW9uKCl7cmV0dXJuITF9LHQuTWI9ZnVuY3Rpb24oZSx0LG4saSxyLG8sYSxzKXtpZighZSlyZXR1cm4gd2UobmV3IFQoXCJwb3B1cC1ibG9ja2VkXCIpKTtpZihhJiYhRWkoKSlyZXR1cm4gdGhpcy5tYSgpLm8oZnVuY3Rpb24odCl7bmkoZSkscih0KX0pLGkoKSx5ZSgpO3RoaXMuYXx8KHRoaXMuYT1vdShzdSh0aGlzKSkpO3ZhciB1PXRoaXM7cmV0dXJuIHRoaXMuYS50aGVuKGZ1bmN0aW9uKCl7dmFyIHQ9dS5tYSgpLm8oZnVuY3Rpb24odCl7dGhyb3cgbmkoZSkscih0KSx0fSk7cmV0dXJuIGkoKSx0fSkudGhlbihmdW5jdGlvbigpe09vKG4pLGF8fHRpKHV1KHUucyx1LmcsdS5iLHQsbixudWxsLG8sdS5jLHZvaWQgMCx1Lmkscyx1LmYpLGUpfSkubyhmdW5jdGlvbih0KXt0aHJvd1wiYXV0aC9uZXR3b3JrLXJlcXVlc3QtZmFpbGVkXCI9PXQuY29kZSYmKHUuYT1udWxsKSx0fSl9LHQuTmI9ZnVuY3Rpb24odCxlLG4saSl7dGhpcy5hfHwodGhpcy5hPW91KHN1KHRoaXMpKSk7dmFyIHI9dGhpcztyZXR1cm4gdGhpcy5hLnRoZW4oZnVuY3Rpb24oKXtPbyhlKSx0aSh1dShyLnMsci5nLHIuYix0LGUsUW4oKSxuLHIuYyx2b2lkIDAsci5pLGksci5mKSl9KS5vKGZ1bmN0aW9uKHQpe3Rocm93XCJhdXRoL25ldHdvcmstcmVxdWVzdC1mYWlsZWRcIj09dC5jb2RlJiYoci5hPW51bGwpLHR9KX0sdC5tYT1mdW5jdGlvbigpe3ZhciB0PXRoaXM7cmV0dXJuIGF1KHRoaXMpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdC52LnJifSkubyhmdW5jdGlvbigpe3Rocm93IHQuYT1udWxsLG5ldyBUKFwibmV0d29yay1yZXF1ZXN0LWZhaWxlZFwiKX0pfSx0LiRiPWZ1bmN0aW9uKCl7cmV0dXJuITB9LHQuRWE9ZnVuY3Rpb24odCl7dGhpcy5oLnB1c2godCl9LHQuU2E9ZnVuY3Rpb24oZSl7Qih0aGlzLmgsZnVuY3Rpb24odCl7cmV0dXJuIHQ9PWV9KX0sKHQ9Y3UucHJvdG90eXBlKS5nZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIHllKHRoaXMuYS5nZXRJdGVtKHQpKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0JiZTaSh0KX0pfSx0LnNldD1mdW5jdGlvbih0LGUpe3JldHVybiB5ZSh0aGlzLmEuc2V0SXRlbSh0LEFpKGUpKSl9LHQuVT1mdW5jdGlvbih0KXtyZXR1cm4geWUodGhpcy5hLnJlbW92ZUl0ZW0odCkpfSx0LmNhPWZ1bmN0aW9uKCl7fSx0LmlhPWZ1bmN0aW9uKCl7fTt2YXIgbHUsZnU9W107ZnVuY3Rpb24gZHUodCxlLG4pe3V0KHQuYSkmJnQuYi5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLHQuZiksdm9pZCAwPT09dC5hW2VdJiYodC5hW2VdPVtdKSx0LmFbZV0ucHVzaChuKX1mdW5jdGlvbiBwdSh0KXt0aGlzLmE9dH1mdW5jdGlvbiB2dSh0KXt0aGlzLmM9dCx0aGlzLmI9ITEsdGhpcy5hPVtdfWZ1bmN0aW9uIG11KGksdCxlLG4pe3ZhciByLG8sYSxzLHU9ZXx8e30sYz1udWxsO2lmKGkuYilyZXR1cm4gd2UoRXJyb3IoXCJjb25uZWN0aW9uX3VuYXZhaWxhYmxlXCIpKTt2YXIgaD1uPzgwMDo1MCxsPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBNZXNzYWdlQ2hhbm5lbD9uZXcgTWVzc2FnZUNoYW5uZWw6bnVsbDtyZXR1cm4gbmV3IGZlKGZ1bmN0aW9uKGUsbil7bD8ocj1NYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqTWF0aC5wb3coMTAsMjApKS50b1N0cmluZygpLGwucG9ydDEuc3RhcnQoKSxhPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtuKEVycm9yKFwidW5zdXBwb3J0ZWRfZXZlbnRcIikpfSxoKSxjPXttZXNzYWdlQ2hhbm5lbDpsLG9uTWVzc2FnZTpvPWZ1bmN0aW9uKHQpe3QuZGF0YS5ldmVudElkPT09ciYmKFwiYWNrXCI9PT10LmRhdGEuc3RhdHVzPyhjbGVhclRpbWVvdXQoYSkscz1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bihFcnJvcihcInRpbWVvdXRcIikpfSwzZTMpKTpcImRvbmVcIj09PXQuZGF0YS5zdGF0dXM/KGNsZWFyVGltZW91dChzKSx2b2lkIDAhPT10LmRhdGEucmVzcG9uc2U/ZSh0LmRhdGEucmVzcG9uc2UpOm4oRXJyb3IoXCJ1bmtub3duX2Vycm9yXCIpKSk6KGNsZWFyVGltZW91dChhKSxjbGVhclRpbWVvdXQocyksbihFcnJvcihcImludmFsaWRfcmVzcG9uc2VcIikpKSl9fSxpLmEucHVzaChjKSxsLnBvcnQxLmFkZEV2ZW50TGlzdGVuZXIoXCJtZXNzYWdlXCIsbyksaS5jLnBvc3RNZXNzYWdlKHtldmVudFR5cGU6dCxldmVudElkOnIsZGF0YTp1fSxbbC5wb3J0Ml0pKTpuKEVycm9yKFwiY29ubmVjdGlvbl91bmF2YWlsYWJsZVwiKSl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBndShpLGMpLHR9KS5vKGZ1bmN0aW9uKHQpe3Rocm93IGd1KGksYyksdH0pfWZ1bmN0aW9uIGd1KHQsZSl7dmFyIG4saTtlJiYobj1lLm1lc3NhZ2VDaGFubmVsLGk9ZS5vbk1lc3NhZ2UsbiYmKG4ucG9ydDEucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1lc3NhZ2VcIixpKSxuLnBvcnQxLmNsb3NlKCkpLEIodC5hLGZ1bmN0aW9uKHQpe3JldHVybiB0PT1lfSkpfWZ1bmN0aW9uIGJ1KCl7aWYoIVR1KCkpdGhyb3cgbmV3IFQoXCJ3ZWItc3RvcmFnZS11bnN1cHBvcnRlZFwiKTt0aGlzLmM9e30sdGhpcy5hPVtdLHRoaXMuYj0wLHRoaXMubT1sLmluZGV4ZWREQix0aGlzLnR5cGU9XCJpbmRleGVkREJcIix0aGlzLmc9dGhpcy52PXRoaXMuZj10aGlzLmw9bnVsbCx0aGlzLnM9ITEsdGhpcy5oPW51bGw7dmFyIHQsZSxuLGk9dGhpcztjaSgpJiZzZWxmPyh0aGlzLnY9KG49Y2koKT9zZWxmOm51bGwsVihmdSxmdW5jdGlvbih0KXt0LmI9PW4mJihlPXQpfSksZXx8KGU9bmV3IGh1KG4pLGZ1LnB1c2goZSkpLGUpLGR1KHRoaXMudixcImtleUNoYW5nZWRcIixmdW5jdGlvbih0LG4pe3JldHVybiBOdShpKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiAwPGUubGVuZ3RoJiZWKGkuYSxmdW5jdGlvbih0KXt0KGUpfSkse2tleVByb2Nlc3NlZDpLKGUsbi5rZXkpfX0pfSksZHUodGhpcy52LFwicGluZ1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHllKFtcImtleUNoYW5nZWRcIl0pfSkpOigodD1sLm5hdmlnYXRvcikmJnQuc2VydmljZVdvcmtlcj95ZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdC5zZXJ2aWNlV29ya2VyLnJlYWR5fSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdC5hY3RpdmV8fG51bGx9KS5vKGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9KTp5ZShudWxsKSkudGhlbihmdW5jdGlvbih0KXsoaS5oPXQpJiYoaS5nPW5ldyB2dShuZXcgcHUodCkpLG11KGkuZyxcInBpbmdcIixudWxsLCEwKS50aGVuKGZ1bmN0aW9uKHQpe3RbMF0uZnVsZmlsbGVkJiZLKHRbMF0udmFsdWUsXCJrZXlDaGFuZ2VkXCIpJiYoaS5zPSEwKX0pLm8oZnVuY3Rpb24oKXt9KSl9KX1mdW5jdGlvbiB5dShyKXtyZXR1cm4gbmV3IGZlKGZ1bmN0aW9uKGUsbil7dmFyIHQ9ci5tLm9wZW4oXCJmaXJlYmFzZUxvY2FsU3RvcmFnZURiXCIsMSk7dC5vbmVycm9yPWZ1bmN0aW9uKHQpe3RyeXt0LnByZXZlbnREZWZhdWx0KCl9Y2F0Y2godCl7fW4oRXJyb3IodC50YXJnZXQuZXJyb3IpKX0sdC5vbnVwZ3JhZGVuZWVkZWQ9ZnVuY3Rpb24odCl7dD10LnRhcmdldC5yZXN1bHQ7dHJ5e3QuY3JlYXRlT2JqZWN0U3RvcmUoXCJmaXJlYmFzZUxvY2FsU3RvcmFnZVwiLHtrZXlQYXRoOlwiZmJhc2Vfa2V5XCJ9KX1jYXRjaCh0KXtuKHQpfX0sdC5vbnN1Y2Nlc3M9ZnVuY3Rpb24odCl7dmFyIGk7KHQ9dC50YXJnZXQucmVzdWx0KS5vYmplY3RTdG9yZU5hbWVzLmNvbnRhaW5zKFwiZmlyZWJhc2VMb2NhbFN0b3JhZ2VcIik/ZSh0KTooaT1yLG5ldyBmZShmdW5jdGlvbih0LGUpe3ZhciBuPWkubS5kZWxldGVEYXRhYmFzZShcImZpcmViYXNlTG9jYWxTdG9yYWdlRGJcIik7bi5vbnN1Y2Nlc3M9ZnVuY3Rpb24oKXt0KCl9LG4ub25lcnJvcj1mdW5jdGlvbih0KXtlKEVycm9yKHQudGFyZ2V0LmVycm9yKSl9fSkudGhlbihmdW5jdGlvbigpe3JldHVybiB5dShyKX0pLnRoZW4oZnVuY3Rpb24odCl7ZSh0KX0pLm8oZnVuY3Rpb24odCl7bih0KX0pKX19KX1mdW5jdGlvbiB3dSh0KXtyZXR1cm4gdC5pfHwodC5pPXl1KHQpKSx0Lml9ZnVuY3Rpb24gSXUocix0KXt2YXIgbz0wO3JldHVybiBuZXcgZmUoZnVuY3Rpb24gZShuLGkpe3d1KHIpLnRoZW4odCkudGhlbihuKS5vKGZ1bmN0aW9uKHQpe3JldHVybiAzPCsrbz92b2lkIGkodCk6d3UocikudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdC5jbG9zZSgpLHIuaT12b2lkIDAsZShuLGkpfSkubyhmdW5jdGlvbih0KXtpKHQpfSl9KX0pfWZ1bmN0aW9uIFR1KCl7dHJ5e3JldHVybiBsLmluZGV4ZWREQn1jYXRjaCh0KXtyZXR1cm59fWZ1bmN0aW9uIEV1KHQpe3JldHVybiB0Lm9iamVjdFN0b3JlKFwiZmlyZWJhc2VMb2NhbFN0b3JhZ2VcIil9ZnVuY3Rpb24gQXUodCxlKXtyZXR1cm4gdC50cmFuc2FjdGlvbihbXCJmaXJlYmFzZUxvY2FsU3RvcmFnZVwiXSxlP1wicmVhZHdyaXRlXCI6XCJyZWFkb25seVwiKX1mdW5jdGlvbiBrdSh0KXtyZXR1cm4gbmV3IGZlKGZ1bmN0aW9uKGUsbil7dC5vbnN1Y2Nlc3M9ZnVuY3Rpb24odCl7dCYmdC50YXJnZXQ/ZSh0LnRhcmdldC5yZXN1bHQpOmUoKX0sdC5vbmVycm9yPWZ1bmN0aW9uKHQpe24odC50YXJnZXQuZXJyb3IpfX0pfWZ1bmN0aW9uIFN1KHQsZSl7cmV0dXJuIHQuZyYmdC5oJiYoKG49bC5uYXZpZ2F0b3IpJiZuLnNlcnZpY2VXb3JrZXImJm4uc2VydmljZVdvcmtlci5jb250cm9sbGVyfHxudWxsKT09PXQuaD9tdSh0LmcsXCJrZXlDaGFuZ2VkXCIse2tleTplfSx0LnMpLnRoZW4oZnVuY3Rpb24oKXt9KS5vKGZ1bmN0aW9uKCl7fSk6eWUoKTt2YXIgbn1mdW5jdGlvbiBOdShpKXtyZXR1cm4gd3UoaSkudGhlbihmdW5jdGlvbih0KXt2YXIgcj1FdShBdSh0LCExKSk7cmV0dXJuIHIuZ2V0QWxsP2t1KHIuZ2V0QWxsKCkpOm5ldyBmZShmdW5jdGlvbihlLG4pe3ZhciBpPVtdLHQ9ci5vcGVuQ3Vyc29yKCk7dC5vbnN1Y2Nlc3M9ZnVuY3Rpb24odCl7KHQ9dC50YXJnZXQucmVzdWx0KT8oaS5wdXNoKHQudmFsdWUpLHQuY29udGludWUoKSk6ZShpKX0sdC5vbmVycm9yPWZ1bmN0aW9uKHQpe24odC50YXJnZXQuZXJyb3IpfX0pfSkudGhlbihmdW5jdGlvbih0KXt2YXIgZT17fSxuPVtdO2lmKDA9PWkuYil7Zm9yKG49MDtuPHQubGVuZ3RoO24rKyllW3Rbbl0uZmJhc2Vfa2V5XT10W25dLnZhbHVlO249ZnVuY3Rpb24gdChlLG4pe3ZhciBpLHI9W107Zm9yKGkgaW4gZSlpIGluIG4mJnR5cGVvZiBlW2ldPT10eXBlb2YgbltpXT9cIm9iamVjdFwiPT10eXBlb2YgZVtpXSYmbnVsbCE9ZVtpXSYmbnVsbCE9bltpXT8wPHQoZVtpXSxuW2ldKS5sZW5ndGgmJnIucHVzaChpKTplW2ldIT09bltpXSYmci5wdXNoKGkpOnIucHVzaChpKTtmb3IoaSBpbiBuKWkgaW4gZXx8ci5wdXNoKGkpO3JldHVybiByfShpLmMsZSksaS5jPWV9cmV0dXJuIG59KX1mdW5jdGlvbiBfdSh0KXt0LmwmJnQubC5jYW5jZWwoXCJTVE9QX0VWRU5UXCIpLHQuZiYmKGNsZWFyVGltZW91dCh0LmYpLHQuZj1udWxsKX1mdW5jdGlvbiBPdSh0KXt2YXIgaT10aGlzLHI9bnVsbDt0aGlzLmE9W10sdGhpcy50eXBlPVwiaW5kZXhlZERCXCIsdGhpcy5jPXQsdGhpcy5iPXllKCkudGhlbihmdW5jdGlvbigpe2lmKFR1KCkpe3ZhciBlPU5pKCksbj1cIl9fc2FrXCIrZTtyZXR1cm4gbHU9bHV8fG5ldyBidSwocj1sdSkuc2V0KG4sZSkudGhlbihmdW5jdGlvbigpe3JldHVybiByLmdldChuKX0pLnRoZW4oZnVuY3Rpb24odCl7aWYodCE9PWUpdGhyb3cgRXJyb3IoXCJpbmRleGVkREIgbm90IHN1cHBvcnRlZCFcIik7cmV0dXJuIHIuVShuKX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gcn0pLm8oZnVuY3Rpb24oKXtyZXR1cm4gaS5jfSl9cmV0dXJuIGkuY30pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGkudHlwZT10LnR5cGUsdC5jYShmdW5jdGlvbihlKXtWKGkuYSxmdW5jdGlvbih0KXt0KGUpfSl9KSx0fSl9ZnVuY3Rpb24gQ3UoKXt0aGlzLmE9e30sdGhpcy50eXBlPVwiaW5NZW1vcnlcIn1mdW5jdGlvbiBSdSgpe2lmKCFmdW5jdGlvbigpe3ZhciB0PVwiTm9kZVwiPT1oaSgpO2lmKCEodD1EdSgpfHx0JiZ6bC5kZWZhdWx0LklOVEVSTkFMLm5vZGUmJnpsLmRlZmF1bHQuSU5URVJOQUwubm9kZS5sb2NhbFN0b3JhZ2UpKXJldHVybiExO3RyeXtyZXR1cm4gdC5zZXRJdGVtKFwiX19zYWtcIixcIjFcIiksdC5yZW1vdmVJdGVtKFwiX19zYWtcIiksITB9Y2F0Y2godCl7cmV0dXJuITF9fSgpKXtpZihcIk5vZGVcIj09aGkoKSl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIsXCJUaGUgTG9jYWxTdG9yYWdlIGNvbXBhdGliaWxpdHkgbGlicmFyeSB3YXMgbm90IGZvdW5kLlwiKTt0aHJvdyBuZXcgVChcIndlYi1zdG9yYWdlLXVuc3VwcG9ydGVkXCIpfXRoaXMuYT1EdSgpfHx6bC5kZWZhdWx0LklOVEVSTkFMLm5vZGUubG9jYWxTdG9yYWdlLHRoaXMudHlwZT1cImxvY2FsU3RvcmFnZVwifWZ1bmN0aW9uIER1KCl7dHJ5e3ZhciB0PWwubG9jYWxTdG9yYWdlLGU9TmkoKTtyZXR1cm4gdCYmKHQuc2V0SXRlbShlLFwiMVwiKSx0LnJlbW92ZUl0ZW0oZSkpLHR9Y2F0Y2godCl7cmV0dXJuIG51bGx9fWZ1bmN0aW9uIFB1KCl7dGhpcy50eXBlPVwibnVsbFN0b3JhZ2VcIn1mdW5jdGlvbiBMdSgpe2lmKCFmdW5jdGlvbigpe3ZhciB0PVwiTm9kZVwiPT1oaSgpO2lmKCEodD14dSgpfHx0JiZ6bC5kZWZhdWx0LklOVEVSTkFMLm5vZGUmJnpsLmRlZmF1bHQuSU5URVJOQUwubm9kZS5zZXNzaW9uU3RvcmFnZSkpcmV0dXJuITE7dHJ5e3JldHVybiB0LnNldEl0ZW0oXCJfX3Nha1wiLFwiMVwiKSx0LnJlbW92ZUl0ZW0oXCJfX3Nha1wiKSwhMH1jYXRjaCh0KXtyZXR1cm4hMX19KCkpe2lmKFwiTm9kZVwiPT1oaSgpKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIixcIlRoZSBTZXNzaW9uU3RvcmFnZSBjb21wYXRpYmlsaXR5IGxpYnJhcnkgd2FzIG5vdCBmb3VuZC5cIik7dGhyb3cgbmV3IFQoXCJ3ZWItc3RvcmFnZS11bnN1cHBvcnRlZFwiKX10aGlzLmE9eHUoKXx8emwuZGVmYXVsdC5JTlRFUk5BTC5ub2RlLnNlc3Npb25TdG9yYWdlLHRoaXMudHlwZT1cInNlc3Npb25TdG9yYWdlXCJ9ZnVuY3Rpb24geHUoKXt0cnl7dmFyIHQ9bC5zZXNzaW9uU3RvcmFnZSxlPU5pKCk7cmV0dXJuIHQmJih0LnNldEl0ZW0oZSxcIjFcIiksdC5yZW1vdmVJdGVtKGUpKSx0fWNhdGNoKHQpe3JldHVybiBudWxsfX1mdW5jdGlvbiBNdSgpe3ZhciB0PXt9O3QuQnJvd3Nlcj1WdSx0Lk5vZGU9RnUsdC5SZWFjdE5hdGl2ZT1xdSx0Lldvcmtlcj1IdSx0aGlzLmE9dFtoaSgpXX1odS5wcm90b3R5cGUuYz1mdW5jdGlvbihuKXt2YXIgZSxpPW4uZGF0YS5ldmVudFR5cGUscj1uLmRhdGEuZXZlbnRJZCx0PXRoaXMuYVtpXTt0JiYwPHQubGVuZ3RoJiYobi5wb3J0c1swXS5wb3N0TWVzc2FnZSh7c3RhdHVzOlwiYWNrXCIsZXZlbnRJZDpyLGV2ZW50VHlwZTppLHJlc3BvbnNlOm51bGx9KSxlPVtdLFYodCxmdW5jdGlvbih0KXtlLnB1c2goeWUoKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHQobi5vcmlnaW4sbi5kYXRhLmRhdGEpfSkpfSksVGUoZSkudGhlbihmdW5jdGlvbih0KXt2YXIgZT1bXTtWKHQsZnVuY3Rpb24odCl7ZS5wdXNoKHtmdWxmaWxsZWQ6dC5QYix2YWx1ZTp0LnZhbHVlLHJlYXNvbjp0LnJlYXNvbj90LnJlYXNvbi5tZXNzYWdlOnZvaWQgMH0pfSksVihlLGZ1bmN0aW9uKHQpe2Zvcih2YXIgZSBpbiB0KXZvaWQgMD09PXRbZV0mJmRlbGV0ZSB0W2VdfSksbi5wb3J0c1swXS5wb3N0TWVzc2FnZSh7c3RhdHVzOlwiZG9uZVwiLGV2ZW50SWQ6cixldmVudFR5cGU6aSxyZXNwb25zZTplfSl9KSl9LHB1LnByb3RvdHlwZS5wb3N0TWVzc2FnZT1mdW5jdGlvbih0LGUpe3RoaXMuYS5wb3N0TWVzc2FnZSh0LGUpfSx2dS5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oKXtmb3IoOzA8dGhpcy5hLmxlbmd0aDspZ3UodGhpcyx0aGlzLmFbMF0pO3RoaXMuYj0hMH0sKHQ9YnUucHJvdG90eXBlKS5zZXQ9ZnVuY3Rpb24oaSxyKXt2YXIgbz10aGlzLGE9ITE7cmV0dXJuIEl1KHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIGt1KCh0PUV1KEF1KHQsITApKSkuZ2V0KGkpKX0pLnRoZW4oZnVuY3Rpb24obil7cmV0dXJuIEl1KG8sZnVuY3Rpb24odCl7aWYodD1FdShBdSh0LCEwKSksbilyZXR1cm4gbi52YWx1ZT1yLGt1KHQucHV0KG4pKTtvLmIrKyxhPSEwO3ZhciBlPXt9O3JldHVybiBlLmZiYXNlX2tleT1pLGUudmFsdWU9cixrdSh0LmFkZChlKSl9KX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gby5jW2ldPXIsU3UobyxpKX0pLm9hKGZ1bmN0aW9uKCl7YSYmby5iLS19KX0sdC5nZXQ9ZnVuY3Rpb24oZSl7cmV0dXJuIEl1KHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIGt1KEV1KEF1KHQsITEpKS5nZXQoZSkpfSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdCYmdC52YWx1ZX0pfSx0LlU9ZnVuY3Rpb24oZSl7dmFyIG49dGhpcyxpPSExO3JldHVybiBJdSh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiBpPSEwLG4uYisrLGt1KEV1KEF1KHQsITApKS5kZWxldGUoZSkpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBkZWxldGUgbi5jW2VdLFN1KG4sZSl9KS5vYShmdW5jdGlvbigpe2kmJm4uYi0tfSl9LHQuY2E9ZnVuY3Rpb24odCl7dmFyIG47MD09dGhpcy5hLmxlbmd0aCYmKF91KG49dGhpcyksZnVuY3Rpb24gZSgpe24uZj1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bi5sPU51KG4pLnRoZW4oZnVuY3Rpb24oZSl7MDxlLmxlbmd0aCYmVihuLmEsZnVuY3Rpb24odCl7dChlKX0pfSkudGhlbihmdW5jdGlvbigpe2UoKX0pLm8oZnVuY3Rpb24odCl7XCJTVE9QX0VWRU5UXCIhPXQubWVzc2FnZSYmZSgpfSl9LDgwMCl9KCkpLHRoaXMuYS5wdXNoKHQpfSx0LmlhPWZ1bmN0aW9uKGUpe0IodGhpcy5hLGZ1bmN0aW9uKHQpe3JldHVybiB0PT1lfSksMD09dGhpcy5hLmxlbmd0aCYmX3UodGhpcyl9LCh0PU91LnByb3RvdHlwZSkuZ2V0PWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmIudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdC5nZXQoZSl9KX0sdC5zZXQ9ZnVuY3Rpb24oZSxuKXtyZXR1cm4gdGhpcy5iLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHQuc2V0KGUsbil9KX0sdC5VPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmIudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdC5VKGUpfSl9LHQuY2E9ZnVuY3Rpb24odCl7dGhpcy5hLnB1c2godCl9LHQuaWE9ZnVuY3Rpb24oZSl7Qih0aGlzLmEsZnVuY3Rpb24odCl7cmV0dXJuIHQ9PWV9KX0sKHQ9Q3UucHJvdG90eXBlKS5nZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIHllKHRoaXMuYVt0XSl9LHQuc2V0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuYVt0XT1lLHllKCl9LHQuVT1mdW5jdGlvbih0KXtyZXR1cm4gZGVsZXRlIHRoaXMuYVt0XSx5ZSgpfSx0LmNhPWZ1bmN0aW9uKCl7fSx0LmlhPWZ1bmN0aW9uKCl7fSwodD1SdS5wcm90b3R5cGUpLmdldD1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB5ZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gU2koZS5hLmdldEl0ZW0odCkpfSl9LHQuc2V0PWZ1bmN0aW9uKGUsbil7dmFyIGk9dGhpcztyZXR1cm4geWUoKS50aGVuKGZ1bmN0aW9uKCl7dmFyIHQ9QWkobik7bnVsbD09PXQ/aS5VKGUpOmkuYS5zZXRJdGVtKGUsdCl9KX0sdC5VPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIHllKCkudGhlbihmdW5jdGlvbigpe2UuYS5yZW1vdmVJdGVtKHQpfSl9LHQuY2E9ZnVuY3Rpb24odCl7bC53aW5kb3cmJlplKGwud2luZG93LFwic3RvcmFnZVwiLHQpfSx0LmlhPWZ1bmN0aW9uKHQpe2wud2luZG93JiZlbihsLndpbmRvdyxcInN0b3JhZ2VcIix0KX0sKHQ9UHUucHJvdG90eXBlKS5nZXQ9ZnVuY3Rpb24oKXtyZXR1cm4geWUobnVsbCl9LHQuc2V0PWZ1bmN0aW9uKCl7cmV0dXJuIHllKCl9LHQuVT1mdW5jdGlvbigpe3JldHVybiB5ZSgpfSx0LmNhPWZ1bmN0aW9uKCl7fSx0LmlhPWZ1bmN0aW9uKCl7fSwodD1MdS5wcm90b3R5cGUpLmdldD1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB5ZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gU2koZS5hLmdldEl0ZW0odCkpfSl9LHQuc2V0PWZ1bmN0aW9uKGUsbil7dmFyIGk9dGhpcztyZXR1cm4geWUoKS50aGVuKGZ1bmN0aW9uKCl7dmFyIHQ9QWkobik7bnVsbD09PXQ/aS5VKGUpOmkuYS5zZXRJdGVtKGUsdCl9KX0sdC5VPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIHllKCkudGhlbihmdW5jdGlvbigpe2UuYS5yZW1vdmVJdGVtKHQpfSl9LHQuY2E9ZnVuY3Rpb24oKXt9LHQuaWE9ZnVuY3Rpb24oKXt9O3ZhciBqdSxVdSxWdT17RjpSdSxiYjpMdX0sRnU9e0Y6UnUsYmI6THV9LHF1PXtGOmN1LGJiOlB1fSxIdT17RjpSdSxiYjpQdX0sS3U9e3JkOlwibG9jYWxcIixOT05FOlwibm9uZVwiLHRkOlwic2Vzc2lvblwifTtmdW5jdGlvbiBHdSgpe3ZhciB0PSEoX2koZ2koKSl8fCF1aSgpKSxlPUVpKCksbj15aSgpO3RoaXMubT10LHRoaXMuaD1lLHRoaXMubD1uLHRoaXMuYT17fSx0PWp1PWp1fHxuZXcgTXU7dHJ5e3RoaXMuZz0hWm4oKSYmTGkoKXx8IWwuaW5kZXhlZERCP25ldyB0LmEuRjpuZXcgT3UobmV3KGNpKCk/Q3U6dC5hLkYpKX1jYXRjaCh0KXt0aGlzLmc9bmV3IEN1LHRoaXMuaD0hMH10cnl7dGhpcy5pPW5ldyB0LmEuYmJ9Y2F0Y2godCl7dGhpcy5pPW5ldyBDdX10aGlzLnY9bmV3IEN1LHRoaXMuZj1iKHRoaXMuWWIsdGhpcyksdGhpcy5iPXt9fWZ1bmN0aW9uIEJ1KCl7cmV0dXJuIFV1PVV1fHxuZXcgR3V9ZnVuY3Rpb24gV3UodCxlKXtzd2l0Y2goZSl7Y2FzZVwic2Vzc2lvblwiOnJldHVybiB0Lmk7Y2FzZVwibm9uZVwiOnJldHVybiB0LnY7ZGVmYXVsdDpyZXR1cm4gdC5nfX1mdW5jdGlvbiBYdSh0LGUpe3JldHVyblwiZmlyZWJhc2U6XCIrdC5uYW1lKyhlP1wiOlwiK2U6XCJcIil9ZnVuY3Rpb24gSnUodCxlLG4pe3JldHVybiBuPVh1KGUsbiksXCJsb2NhbFwiPT1lLkYmJih0LmJbbl09bnVsbCksV3UodCxlLkYpLlUobil9ZnVuY3Rpb24gWXUodCl7dC5jJiYoY2xlYXJJbnRlcnZhbCh0LmMpLHQuYz1udWxsKX1mdW5jdGlvbiB6dSh0KXt0aGlzLmE9dCx0aGlzLmI9QnUoKX0odD1HdS5wcm90b3R5cGUpLmdldD1mdW5jdGlvbih0LGUpe3JldHVybiBXdSh0aGlzLHQuRikuZ2V0KFh1KHQsZSkpfSx0LnNldD1mdW5jdGlvbihlLHQsbil7dmFyIGk9WHUoZSxuKSxyPXRoaXMsbz1XdSh0aGlzLGUuRik7cmV0dXJuIG8uc2V0KGksdCkudGhlbihmdW5jdGlvbigpe3JldHVybiBvLmdldChpKX0pLnRoZW4oZnVuY3Rpb24odCl7XCJsb2NhbFwiPT1lLkYmJihyLmJbaV09dCl9KX0sdC5hZGRMaXN0ZW5lcj1mdW5jdGlvbih0LGUsbil7dmFyIGk7dD1YdSh0LGUpLHRoaXMubCYmKHRoaXMuYlt0XT1sLmxvY2FsU3RvcmFnZS5nZXRJdGVtKHQpKSx1dCh0aGlzLmEpJiYoV3UodGhpcyxcImxvY2FsXCIpLmNhKHRoaXMuZiksdGhpcy5ofHwoWm4oKXx8IUxpKCkpJiZsLmluZGV4ZWREQnx8IXRoaXMubHx8KFl1KGk9dGhpcyksaS5jPXNldEludGVydmFsKGZ1bmN0aW9uKCl7Zm9yKHZhciB0IGluIGkuYSl7dmFyIGU9bC5sb2NhbFN0b3JhZ2UuZ2V0SXRlbSh0KSxuPWkuYlt0XTtlIT1uJiYoaS5iW3RdPWUsZT1uZXcgcWUoe3R5cGU6XCJzdG9yYWdlXCIsa2V5OnQsdGFyZ2V0OndpbmRvdyxvbGRWYWx1ZTpuLG5ld1ZhbHVlOmUsYTohMH0pLGkuWWIoZSkpfX0sMWUzKSkpLHRoaXMuYVt0XXx8KHRoaXMuYVt0XT1bXSksdGhpcy5hW3RdLnB1c2gobil9LHQucmVtb3ZlTGlzdGVuZXI9ZnVuY3Rpb24odCxlLG4pe3Q9WHUodCxlKSx0aGlzLmFbdF0mJihCKHRoaXMuYVt0XSxmdW5jdGlvbih0KXtyZXR1cm4gdD09bn0pLDA9PXRoaXMuYVt0XS5sZW5ndGgmJmRlbGV0ZSB0aGlzLmFbdF0pLHV0KHRoaXMuYSkmJihXdSh0aGlzLFwibG9jYWxcIikuaWEodGhpcy5mKSxZdSh0aGlzKSl9LHQuWWI9ZnVuY3Rpb24odCl7aWYodCYmdC5nKXt2YXIgZT10LmEua2V5O2lmKG51bGw9PWUpZm9yKHZhciBuIGluIHRoaXMuYSl7dmFyIGk9dGhpcy5iW25dO3ZvaWQgMD09PWkmJihpPW51bGwpO3ZhciByPWwubG9jYWxTdG9yYWdlLmdldEl0ZW0obik7ciE9PWkmJih0aGlzLmJbbl09cix0aGlzLm1iKG4pKX1lbHNlIGlmKDA9PWUuaW5kZXhPZihcImZpcmViYXNlOlwiKSYmdGhpcy5hW2VdKXtpZih2b2lkIDAhPT10LmEuYT9XdSh0aGlzLFwibG9jYWxcIikuaWEodGhpcy5mKTpZdSh0aGlzKSx0aGlzLm0paWYobj1sLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpLChpPXQuYS5uZXdWYWx1ZSkhPT1uKW51bGwhPT1pP2wubG9jYWxTdG9yYWdlLnNldEl0ZW0oZSxpKTpsLmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGUpO2Vsc2UgaWYodGhpcy5iW2VdPT09aSYmdm9pZCAwPT09dC5hLmEpcmV0dXJuO3ZhciBvPXRoaXMsbj1mdW5jdGlvbigpe3ZvaWQgMD09PXQuYS5hJiZvLmJbZV09PT1sLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpfHwoby5iW2VdPWwubG9jYWxTdG9yYWdlLmdldEl0ZW0oZSksby5tYihlKSl9O0h0JiZadCYmMTA9PVp0JiZsLmxvY2FsU3RvcmFnZS5nZXRJdGVtKGUpIT09dC5hLm5ld1ZhbHVlJiZ0LmEubmV3VmFsdWUhPT10LmEub2xkVmFsdWU/c2V0VGltZW91dChuLDEwKTpuKCl9fWVsc2UgVih0LGIodGhpcy5tYix0aGlzKSl9LHQubWI9ZnVuY3Rpb24odCl7dGhpcy5hW3RdJiZWKHRoaXMuYVt0XSxmdW5jdGlvbih0KXt0KCl9KX07dmFyICR1LFp1PXtuYW1lOlwiYXV0aEV2ZW50XCIsRjpcImxvY2FsXCJ9O2Z1bmN0aW9uIFF1KCl7dGhpcy5hPUJ1KCl9ZnVuY3Rpb24gdGModCxlKXt0aGlzLmI9ZWMsdGhpcy5mPWwuVWludDhBcnJheT9uZXcgVWludDhBcnJheSh0aGlzLmIpOkFycmF5KHRoaXMuYiksdGhpcy5nPXRoaXMuYz0wLHRoaXMuYT1bXSx0aGlzLmk9dCx0aGlzLmg9ZSx0aGlzLmw9bC5JbnQzMkFycmF5P25ldyBJbnQzMkFycmF5KDY0KTpBcnJheSg2NCksdm9pZCAwPT09JHUmJigkdT1sLkludDMyQXJyYXk/bmV3IEludDMyQXJyYXkodWMpOnVjKSx0aGlzLnJlc2V0KCl9dyh0YyxmdW5jdGlvbigpe3RoaXMuYj0tMX0pO2Zvcih2YXIgZWM9NjQsbmM9ZWMtMSxpYz1bXSxyYz0wO3JjPG5jO3JjKyspaWNbcmNdPTA7dmFyIG9jPVcoMTI4LGljKTtmdW5jdGlvbiBhYyh0KXtmb3IodmFyIGU9dC5mLG49dC5sLGk9MCxyPTA7cjxlLmxlbmd0aDspbltpKytdPWVbcl08PDI0fGVbcisxXTw8MTZ8ZVtyKzJdPDw4fGVbciszXSxyPTQqaTtmb3IoZT0xNjtlPDY0O2UrKyl7dmFyIHI9MHxuW2UtMTVdLGk9MHxuW2UtMl0sbz0oMHxuW2UtMTZdKSsoKHI+Pj43fHI8PDI1KV4ocj4+PjE4fHI8PDE0KV5yPj4+Myl8MCxhPSgwfG5bZS03XSkrKChpPj4+MTd8aTw8MTUpXihpPj4+MTl8aTw8MTMpXmk+Pj4xMCl8MDtuW2VdPW8rYXwwfWk9MHx0LmFbMF0scj0wfHQuYVsxXTt2YXIgcz0wfHQuYVsyXSx1PTB8dC5hWzNdLGM9MHx0LmFbNF0saD0wfHQuYVs1XSxsPTB8dC5hWzZdO2ZvcihvPTB8dC5hWzddLGU9MDtlPDY0O2UrKyl7dmFyIGY9KChpPj4+MnxpPDwzMCleKGk+Pj4xM3xpPDwxOSleKGk+Pj4yMnxpPDwxMCkpKyhpJnJeaSZzXnImcyl8MDthPShvPW8rKChjPj4+NnxjPDwyNileKGM+Pj4xMXxjPDwyMSleKGM+Pj4yNXxjPDw3KSl8MCkrKChhPShhPWMmaF5+YyZsKSsoMHwkdVtlXSl8MCkrKDB8bltlXSl8MCl8MCxvPWwsbD1oLGg9YyxjPXUrYXwwLHU9cyxzPXIscj1pLGk9YStmfDB9dC5hWzBdPXQuYVswXStpfDAsdC5hWzFdPXQuYVsxXStyfDAsdC5hWzJdPXQuYVsyXStzfDAsdC5hWzNdPXQuYVszXSt1fDAsdC5hWzRdPXQuYVs0XStjfDAsdC5hWzVdPXQuYVs1XStofDAsdC5hWzZdPXQuYVs2XStsfDAsdC5hWzddPXQuYVs3XStvfDB9ZnVuY3Rpb24gc2ModCxlLG4pe3ZvaWQgMD09PW4mJihuPWUubGVuZ3RoKTt2YXIgaT0wLHI9dC5jO2lmKFwic3RyaW5nXCI9PXR5cGVvZiBlKWZvcig7aTxuOyl0LmZbcisrXT1lLmNoYXJDb2RlQXQoaSsrKSxyPT10LmImJihhYyh0KSxyPTApO2Vsc2V7aWYoIXAoZSkpdGhyb3cgRXJyb3IoXCJtZXNzYWdlIG11c3QgYmUgc3RyaW5nIG9yIGFycmF5XCIpO2Zvcig7aTxuOyl7dmFyIG89ZVtpKytdO2lmKCEoXCJudW1iZXJcIj09dHlwZW9mIG8mJjA8PW8mJm88PTI1NSYmbz09KDB8bykpKXRocm93IEVycm9yKFwibWVzc2FnZSBtdXN0IGJlIGEgYnl0ZSBhcnJheVwiKTt0LmZbcisrXT1vLHI9PXQuYiYmKGFjKHQpLHI9MCl9fXQuYz1yLHQuZys9bn10Yy5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLmc9dGhpcy5jPTAsdGhpcy5hPWwuSW50MzJBcnJheT9uZXcgSW50MzJBcnJheSh0aGlzLmgpOlgodGhpcy5oKX07dmFyIHVjPVsxMTE2MzUyNDA4LDE4OTk0NDc0NDEsMzA0OTMyMzQ3MSwzOTIxMDA5NTczLDk2MTk4NzE2MywxNTA4OTcwOTkzLDI0NTM2MzU3NDgsMjg3MDc2MzIyMSwzNjI0MzgxMDgwLDMxMDU5ODQwMSw2MDcyMjUyNzgsMTQyNjg4MTk4NywxOTI1MDc4Mzg4LDIxNjIwNzgyMDYsMjYxNDg4ODEwMywzMjQ4MjIyNTgwLDM4MzUzOTA0MDEsNDAyMjIyNDc3NCwyNjQzNDcwNzgsNjA0ODA3NjI4LDc3MDI1NTk4MywxMjQ5MTUwMTIyLDE1NTUwODE2OTIsMTk5NjA2NDk4NiwyNTU0MjIwODgyLDI4MjE4MzQzNDksMjk1Mjk5NjgwOCwzMjEwMzEzNjcxLDMzMzY1NzE4OTEsMzU4NDUyODcxMSwxMTM5MjY5OTMsMzM4MjQxODk1LDY2NjMwNzIwNSw3NzM1Mjk5MTIsMTI5NDc1NzM3MiwxMzk2MTgyMjkxLDE2OTUxODM3MDAsMTk4NjY2MTA1MSwyMTc3MDI2MzUwLDI0NTY5NTYwMzcsMjczMDQ4NTkyMSwyODIwMzAyNDExLDMyNTk3MzA4MDAsMzM0NTc2NDc3MSwzNTE2MDY1ODE3LDM2MDAzNTI4MDQsNDA5NDU3MTkwOSwyNzU0MjMzNDQsNDMwMjI3NzM0LDUwNjk0ODYxNiw2NTkwNjA1NTYsODgzOTk3ODc3LDk1ODEzOTU3MSwxMzIyODIyMjE4LDE1MzcwMDIwNjMsMTc0Nzg3Mzc3OSwxOTU1NTYyMjIyLDIwMjQxMDQ4MTUsMjIyNzczMDQ1MiwyMzYxODUyNDI0LDI0Mjg0MzY0NzQsMjc1NjczNDE4NywzMjA0MDMxNDc5LDMzMjkzMjUyOThdO2Z1bmN0aW9uIGNjKCl7dGMuY2FsbCh0aGlzLDgsaGMpfXcoY2MsdGMpO3ZhciBoYz1bMTc3OTAzMzcwMywzMTQ0MTM0Mjc3LDEwMTM5MDQyNDIsMjc3MzQ4MDc2MiwxMzU5ODkzMTE5LDI2MDA4MjI5MjQsNTI4NzM0NjM1LDE1NDE0NTkyMjVdO2Z1bmN0aW9uIGxjKHQsZSxuLGkscixvKXt0aGlzLnY9dCx0aGlzLmk9ZSx0aGlzLmw9bix0aGlzLm09aXx8bnVsbCx0aGlzLnU9cnx8bnVsbCx0aGlzLnM9byx0aGlzLmg9ZStcIjpcIituLHRoaXMuQz1uZXcgUXUsdGhpcy5nPW5ldyB6dSh0aGlzLmgpLHRoaXMuZj1udWxsLHRoaXMuYj1bXSx0aGlzLmE9dGhpcy5jPW51bGx9ZnVuY3Rpb24gZmModCl7cmV0dXJuIG5ldyBUKFwiaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIix0KX1mdW5jdGlvbiBkYyh0KXt2YXIgZT1uZXcgY2M7c2MoZSx0KSx0PVtdO3ZhciBuPTgqZS5nO2UuYzw1Nj9zYyhlLG9jLDU2LWUuYyk6c2MoZSxvYyxlLmItKGUuYy01NikpO2Zvcih2YXIgaT02Mzs1Njw9aTtpLS0pZS5mW2ldPTI1NSZuLG4vPTI1Njtmb3IoYWMoZSksaT1uPTA7aTxlLmk7aSsrKWZvcih2YXIgcj0yNDswPD1yO3ItPTgpdFtuKytdPWUuYVtpXT4+ciYyNTU7cmV0dXJuIHEodCxmdW5jdGlvbih0KXtyZXR1cm4gMTwodD10LnRvU3RyaW5nKDE2KSkubGVuZ3RoP3Q6XCIwXCIrdH0pLmpvaW4oXCJcIil9ZnVuY3Rpb24gcGModCxlKXtmb3IodmFyIG49MDtuPHQuYi5sZW5ndGg7bisrKXRyeXt0LmJbbl0oZSl9Y2F0Y2godCl7fX1mdW5jdGlvbiB2YyhzKXtyZXR1cm4gcy5mfHwocy5mPXMubWEoKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBmZShmdW5jdGlvbihuKXtmdW5jdGlvbiBlKGkpe3Q9ITAsYSYmYS5jYW5jZWwoKSxtYyhyKS50aGVuKGZ1bmN0aW9uKHQpe3ZhciBlLG49bzt0JiZpJiZpLnVybCYmKGU9bnVsbCxuPShlPS0xIT0obj1KcihpLnVybCkpLmluZGV4T2YoXCIvX18vYXV0aC9jYWxsYmFja1wiKT8oZT1cIm9iamVjdFwiPT10eXBlb2YoZT1TaShfbihlPU9uKG4pLFwiZmlyZWJhc2VFcnJvclwiKXx8bnVsbCkpP0UoZSk6bnVsbCk/bmV3IENvKHQuYyx0LmIsbnVsbCxudWxsLGUsbnVsbCx0LlQoKSk6bmV3IENvKHQuYyx0LmIsbix0LmYsbnVsbCxudWxsLHQuVCgpKTplKXx8bykscGMocixuKX0pfXZhciByLG8sdCxhLGk7cy5FYShmdW5jdGlvbiB0KGUpe3JldHVybiBuKGUpLHMuU2EodCksITF9KSxyPXMsbz1uZXcgQ28oXCJ1bmtub3duXCIsbnVsbCxudWxsLG51bGwsbmV3IFQoXCJuby1hdXRoLWV2ZW50XCIpKSx0PSExLGE9bW4oNTAwKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG1jKHIpLnRoZW4oZnVuY3Rpb24oKXt0fHxwYyhyLG8pfSl9KSxpPWwuaGFuZGxlT3BlblVSTCxsLmhhbmRsZU9wZW5VUkw9ZnVuY3Rpb24odCl7aWYoMD09dC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoYmkoXCJCdWlsZEluZm8ucGFja2FnZU5hbWVcIixsKS50b0xvd2VyQ2FzZSgpK1wiOi8vXCIpJiZlKHt1cmw6dH0pLFwiZnVuY3Rpb25cIj09dHlwZW9mIGkpdHJ5e2kodCl9Y2F0Y2godCl7Y29uc29sZS5lcnJvcih0KX19LExvPUxvfHxuZXcgRG8sZnVuY3Rpb24odCl7dmFyIG49TG87bi5hLnB1c2godCksbi5ifHwobi5iPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wO2U8bi5hLmxlbmd0aDtlKyspbi5hW2VdKHQpfSxcImZ1bmN0aW9uXCI9PXR5cGVvZih0PWJpKFwidW5pdmVyc2FsTGlua3Muc3Vic2NyaWJlXCIsbCkpJiZ0KG51bGwsbi5iKSl9KGUpfSl9KSkscy5mfWZ1bmN0aW9uIG1jKGUpe3ZhciB0LG49bnVsbDtyZXR1cm4odD1lLmcpLmIuZ2V0KFp1LHQuYSkudGhlbihSbykudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbj10LEp1KCh0PWUuZykuYixadSx0LmEpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBufSl9ZnVuY3Rpb24gZ2ModCl7dGhpcy5hPXQsdGhpcy5iPUJ1KCl9KHQ9bGMucHJvdG90eXBlKS5tYT1mdW5jdGlvbigpe3JldHVybiB0aGlzLklhfHwodGhpcy5JYT0oc2kodm9pZCAwKT9haSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGZlKGZ1bmN0aW9uKHQsZSl7dmFyIG49bC5kb2N1bWVudCxpPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKEVycm9yKFwiQ29yZG92YSBmcmFtZXdvcmsgaXMgbm90IHJlYWR5LlwiKSl9LDFlMyk7bi5hZGRFdmVudExpc3RlbmVyKFwiZGV2aWNlcmVhZHlcIixmdW5jdGlvbigpe2NsZWFyVGltZW91dChpKSx0KCl9LCExKX0pfSk6d2UoRXJyb3IoXCJDb3Jkb3ZhIG11c3QgcnVuIGluIGFuIEFuZHJvaWQgb3IgaU9TIGZpbGUgc2NoZW1lLlwiKSkpLnRoZW4oZnVuY3Rpb24oKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBiaShcInVuaXZlcnNhbExpbmtzLnN1YnNjcmliZVwiLGwpKXRocm93IGZjKFwiY29yZG92YS11bml2ZXJzYWwtbGlua3MtcGx1Z2luLWZpeCBpcyBub3QgaW5zdGFsbGVkXCIpO2lmKHZvaWQgMD09PWJpKFwiQnVpbGRJbmZvLnBhY2thZ2VOYW1lXCIsbCkpdGhyb3cgZmMoXCJjb3Jkb3ZhLXBsdWdpbi1idWlsZGluZm8gaXMgbm90IGluc3RhbGxlZFwiKTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBiaShcImNvcmRvdmEucGx1Z2lucy5icm93c2VydGFiLm9wZW5VcmxcIixsKSl0aHJvdyBmYyhcImNvcmRvdmEtcGx1Z2luLWJyb3dzZXJ0YWIgaXMgbm90IGluc3RhbGxlZFwiKTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBiaShcImNvcmRvdmEuSW5BcHBCcm93c2VyLm9wZW5cIixsKSl0aHJvdyBmYyhcImNvcmRvdmEtcGx1Z2luLWluYXBwYnJvd3NlciBpcyBub3QgaW5zdGFsbGVkXCIpfSxmdW5jdGlvbigpe3Rocm93IG5ldyBUKFwiY29yZG92YS1ub3QtcmVhZHlcIil9KSl9LHQuT2I9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZShuZXcgVChcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIikpLHllKCl9LHQuTWI9ZnVuY3Rpb24oKXtyZXR1cm4gd2UobmV3IFQoXCJvcGVyYXRpb24tbm90LXN1cHBvcnRlZC1pbi10aGlzLWVudmlyb25tZW50XCIpKX0sdC4kYj1mdW5jdGlvbigpe3JldHVybiExfSx0LlhiPWZ1bmN0aW9uKCl7cmV0dXJuITB9LHQuVGI9ZnVuY3Rpb24oKXtyZXR1cm4hMH0sdC5OYj1mdW5jdGlvbih0LGUsbixpKXtpZih0aGlzLmMpcmV0dXJuIHdlKG5ldyBUKFwicmVkaXJlY3Qtb3BlcmF0aW9uLXBlbmRpbmdcIikpO3ZhciByPXRoaXMsbz1sLmRvY3VtZW50LGE9bnVsbCxzPW51bGwsdT1udWxsLGM9bnVsbDtyZXR1cm4gdGhpcy5jPXllKCkudGhlbihmdW5jdGlvbigpe3JldHVybiBPbyhlKSx2YyhyKX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24obix0LGUsaSxyKXt2YXIgbz1mdW5jdGlvbigpe2Zvcih2YXIgdD0yMCxlPVtdOzA8dDspZS5wdXNoKFwiMTIzNDU2Nzg5MGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIi5jaGFyQXQoTWF0aC5mbG9vcig2MipNYXRoLnJhbmRvbSgpKSkpLHQtLTtyZXR1cm4gZS5qb2luKFwiXCIpfSgpLGE9bmV3IENvKHQsaSxudWxsLG8sbmV3IFQoXCJuby1hdXRoLWV2ZW50XCIpLG51bGwscikscz1iaShcIkJ1aWxkSW5mby5wYWNrYWdlTmFtZVwiLGwpO2lmKFwic3RyaW5nXCIhPXR5cGVvZiBzKXRocm93IG5ldyBUKFwiaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIik7dmFyIHU9YmkoXCJCdWlsZEluZm8uZGlzcGxheU5hbWVcIixsKSxjPXt9O2lmKGdpKCkudG9Mb3dlckNhc2UoKS5tYXRjaCgvaXBob25lfGlwYWR8aXBvZC8pKWMuaWJpPXM7ZWxzZXtpZighZ2koKS50b0xvd2VyQ2FzZSgpLm1hdGNoKC9hbmRyb2lkLykpcmV0dXJuIHdlKG5ldyBUKFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKSk7Yy5hcG49c311JiYoYy5hcHBEaXNwbGF5TmFtZT11KSxvPWRjKG8pLGMuc2Vzc2lvbklkPW87dmFyIGg9dXUobi52LG4uaSxuLmwsdCxlLG51bGwsaSxuLm0sYyxuLnUscixuLnMpO3JldHVybiBuLm1hKCkudGhlbihmdW5jdGlvbigpe3ZhciB0PW4uaDtyZXR1cm4gbi5DLmEuc2V0KFp1LGEudygpLHQpfSkudGhlbihmdW5jdGlvbigpe3ZhciB0PWJpKFwiY29yZG92YS5wbHVnaW5zLmJyb3dzZXJ0YWIuaXNBdmFpbGFibGVcIixsKTtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiB0KXRocm93IG5ldyBUKFwiaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIik7dmFyIGU9bnVsbDt0KGZ1bmN0aW9uKHQpe2lmKHQpe2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mKGU9YmkoXCJjb3Jkb3ZhLnBsdWdpbnMuYnJvd3NlcnRhYi5vcGVuVXJsXCIsbCkpKXRocm93IG5ldyBUKFwiaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIik7ZShoKX1lbHNle2lmKFwiZnVuY3Rpb25cIiE9dHlwZW9mKGU9YmkoXCJjb3Jkb3ZhLkluQXBwQnJvd3Nlci5vcGVuXCIsbCkpKXRocm93IG5ldyBUKFwiaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIik7dD1naSgpLG4uYT1lKGgsdC5tYXRjaCgvKGlQYWR8aVBob25lfGlQb2QpLipPUyA3X1xcZC9pKXx8dC5tYXRjaCgvKGlQYWR8aVBob25lfGlQb2QpLipPUyA4X1xcZC9pKT9cIl9ibGFua1wiOlwiX3N5c3RlbVwiLFwibG9jYXRpb249eWVzXCIpfX0pfSl9KHIsdCxlLG4saSl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBmZShmdW5jdGlvbihlLHQpe3M9ZnVuY3Rpb24oKXt2YXIgdD1iaShcImNvcmRvdmEucGx1Z2lucy5icm93c2VydGFiLmNsb3NlXCIsbCk7cmV0dXJuIGUoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0JiZ0KCksci5hJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiByLmEuY2xvc2UmJihyLmEuY2xvc2UoKSxyLmE9bnVsbCksITF9LHIuRWEocyksdT1mdW5jdGlvbigpe2E9YXx8bW4oMmUzKS50aGVuKGZ1bmN0aW9uKCl7dChuZXcgVChcInJlZGlyZWN0LWNhbmNlbGxlZC1ieS11c2VyXCIpKX0pfSxjPWZ1bmN0aW9uKCl7UmkoKSYmdSgpfSxvLmFkZEV2ZW50TGlzdGVuZXIoXCJyZXN1bWVcIix1LCExKSxnaSgpLnRvTG93ZXJDYXNlKCkubWF0Y2goL2FuZHJvaWQvKXx8by5hZGRFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLGMsITEpfSkubyhmdW5jdGlvbih0KXtyZXR1cm4gbWMocikudGhlbihmdW5jdGlvbigpe3Rocm93IHR9KX0pfSkub2EoZnVuY3Rpb24oKXt1JiZvLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJyZXN1bWVcIix1LCExKSxjJiZvLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsYywhMSksYSYmYS5jYW5jZWwoKSxzJiZyLlNhKHMpLHIuYz1udWxsfSl9LHQuRWE9ZnVuY3Rpb24oZSl7dGhpcy5iLnB1c2goZSksdmModGhpcykubyhmdW5jdGlvbih0KXtcImF1dGgvaW52YWxpZC1jb3Jkb3ZhLWNvbmZpZ3VyYXRpb25cIj09PXQuY29kZSYmKHQ9bmV3IENvKFwidW5rbm93blwiLG51bGwsbnVsbCxudWxsLG5ldyBUKFwibm8tYXV0aC1ldmVudFwiKSksZSh0KSl9KX0sdC5TYT1mdW5jdGlvbihlKXtCKHRoaXMuYixmdW5jdGlvbih0KXtyZXR1cm4gdD09ZX0pfTt2YXIgYmM9e25hbWU6XCJwZW5kaW5nUmVkaXJlY3RcIixGOlwic2Vzc2lvblwifTtmdW5jdGlvbiB5Yyh0KXtyZXR1cm4gSnUodC5iLGJjLHQuYSl9ZnVuY3Rpb24gd2ModCxlLG4saSl7dGhpcy5pPXt9LHRoaXMudT0wLHRoaXMuRD10LHRoaXMudj1lLHRoaXMubT1uLHRoaXMuSj1pLHRoaXMuaD1bXSx0aGlzLmY9ITEsdGhpcy5sPWIodGhpcy5zLHRoaXMpLHRoaXMuYj1uZXcgeGMsdGhpcy5DPW5ldyBGYyx0aGlzLmc9bmV3IGdjKFBjKHRoaXMudix0aGlzLm0pKSx0aGlzLmM9e30sdGhpcy5jLnVua25vd249dGhpcy5iLHRoaXMuYy5zaWduSW5WaWFSZWRpcmVjdD10aGlzLmIsdGhpcy5jLmxpbmtWaWFSZWRpcmVjdD10aGlzLmIsdGhpcy5jLnJlYXV0aFZpYVJlZGlyZWN0PXRoaXMuYix0aGlzLmMuc2lnbkluVmlhUG9wdXA9dGhpcy5DLHRoaXMuYy5saW5rVmlhUG9wdXA9dGhpcy5DLHRoaXMuYy5yZWF1dGhWaWFQb3B1cD10aGlzLkMsdGhpcy5hPUljKHRoaXMuRCx0aGlzLnYsdGhpcy5tLEEsdGhpcy5KKX1mdW5jdGlvbiBJYyh0LGUsbixpLHIpe3ZhciBvPXpsLmRlZmF1bHQuU0RLX1ZFUlNJT058fG51bGw7cmV0dXJuIG5ldyhzaSgpP2xjOnJ1KSh0LGUsbixvLGkscil9ZnVuY3Rpb24gVGMoZSl7ZS5mfHwoZS5mPSEwLGUuYS5FYShlLmwpKTt2YXIgbj1lLmE7cmV0dXJuIGUuYS5tYSgpLm8oZnVuY3Rpb24odCl7dGhyb3cgZS5hPT1uJiZlLnJlc2V0KCksdH0pfWZ1bmN0aW9uIEVjKG4pe24uYS5YYigpJiZUYyhuKS5vKGZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBDbyhcInVua25vd25cIixudWxsLG51bGwsbnVsbCxuZXcgVChcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIikpO09jKHQpJiZuLnMoZSl9KSxuLmEuVGIoKXx8TWMobi5iKX1mdW5jdGlvbiBBYyhuLHQpe0sobi5oLHQpfHxuLmgucHVzaCh0KSxuLmZ8fCh0PW4uZykuYi5nZXQoYmMsdC5hKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVyblwicGVuZGluZ1wiPT10fSkudGhlbihmdW5jdGlvbih0KXt0P3ljKG4uZykudGhlbihmdW5jdGlvbigpe1RjKG4pLm8oZnVuY3Rpb24odCl7dmFyIGU9bmV3IENvKFwidW5rbm93blwiLG51bGwsbnVsbCxudWxsLG5ldyBUKFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKSk7T2ModCkmJm4ucyhlKX0pfSk6RWMobil9KS5vKGZ1bmN0aW9uKCl7RWMobil9KX1mdW5jdGlvbiBrYyh0LGUpe0IodC5oLGZ1bmN0aW9uKHQpe3JldHVybiB0PT1lfSl9d2MucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5mPSExLHRoaXMuYS5TYSh0aGlzLmwpLHRoaXMuYT1JYyh0aGlzLkQsdGhpcy52LHRoaXMubSxudWxsLHRoaXMuSiksdGhpcy5pPXt9fSx3Yy5wcm90b3R5cGUucz1mdW5jdGlvbih0KXtpZighdCl0aHJvdyBuZXcgVChcImludmFsaWQtYXV0aC1ldmVudFwiKTtpZig2ZTU8PURhdGUubm93KCktdGhpcy51JiYodGhpcy5pPXt9LHRoaXMudT0wKSx0JiZ0LmdldFVpZCgpJiZ0aGlzLmkuaGFzT3duUHJvcGVydHkodC5nZXRVaWQoKSkpcmV0dXJuITE7Zm9yKHZhciBlPSExLG49MDtuPHRoaXMuaC5sZW5ndGg7bisrKXt2YXIgaT10aGlzLmhbbl07aWYoaS5GYih0LmMsdC5iKSl7KGU9dGhpcy5jW3QuY10pJiYoZS5oKHQsaSksdCYmKHQuZnx8dC5iKSYmKHRoaXMuaVt0LmdldFVpZCgpXT0hMCx0aGlzLnU9RGF0ZS5ub3coKSkpLGU9ITA7YnJlYWt9fXJldHVybiBNYyh0aGlzLmIpLGV9O3ZhciBTYz1uZXcgQ2koMmUzLDFlNCksTmM9bmV3IENpKDNlNCw2ZTQpO2Z1bmN0aW9uIF9jKHQsZSxuLGkscixvLGEpe3JldHVybiB0LmEuTWIoZSxuLGksZnVuY3Rpb24oKXt0LmZ8fCh0LmY9ITAsdC5hLkVhKHQubCkpfSxmdW5jdGlvbigpe3QucmVzZXQoKX0scixvLGEpfWZ1bmN0aW9uIE9jKHQpe3JldHVybiEoIXR8fFwiYXV0aC9jb3Jkb3ZhLW5vdC1yZWFkeVwiIT10LmNvZGUpfWZ1bmN0aW9uIENjKGUsdCxuLGkscil7dmFyIG8sYTtyZXR1cm4oYT1lLmcpLmIuc2V0KGJjLFwicGVuZGluZ1wiLGEuYSkudGhlbihmdW5jdGlvbigpe3JldHVybiBlLmEuTmIodCxuLGkscikubyhmdW5jdGlvbih0KXtpZihPYyh0KSl0aHJvdyBuZXcgVChcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIik7cmV0dXJuIG89dCx5YyhlLmcpLnRoZW4oZnVuY3Rpb24oKXt0aHJvdyBvfSl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGUuYS4kYigpP25ldyBmZShmdW5jdGlvbigpe30pOnljKGUuZykudGhlbihmdW5jdGlvbigpe3JldHVybiBlLnFhKCl9KS50aGVuKGZ1bmN0aW9uKCl7fSkubyhmdW5jdGlvbigpe30pfSl9KX1mdW5jdGlvbiBSYyh0LGUsbixpLHIpe3JldHVybiB0LmEuT2IoaSxmdW5jdGlvbih0KXtlLm5hKG4sbnVsbCx0LHIpfSxTYy5nZXQoKSl9d2MucHJvdG90eXBlLnFhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYi5xYSgpfTt2YXIgRGM9e307ZnVuY3Rpb24gUGModCxlLG4pe3JldHVybiB0PXQrXCI6XCIrZSx0PW4/dCtcIjpcIituLnVybDp0fWZ1bmN0aW9uIExjKHQsZSxuLGkpe3ZhciByPVBjKGUsbixpKTtyZXR1cm4gRGNbcl18fChEY1tyXT1uZXcgd2ModCxlLG4saSkpLERjW3JdfWZ1bmN0aW9uIHhjKCl7dGhpcy5iPW51bGwsdGhpcy5mPVtdLHRoaXMuYz1bXSx0aGlzLmE9bnVsbCx0aGlzLmk9dGhpcy5nPSExfWZ1bmN0aW9uIE1jKHQpe3QuZ3x8KHQuZz0hMCxWYyh0LCExLG51bGwsbnVsbCkpfWZ1bmN0aW9uIGpjKHQpe3QuZyYmIXQuaSYmVmModCwhMSxudWxsLG51bGwpfWZ1bmN0aW9uIFVjKHQsZSl7aWYodC5iPWZ1bmN0aW9uKCl7cmV0dXJuIHllKGUpfSx0LmYubGVuZ3RoKWZvcih2YXIgbj0wO248dC5mLmxlbmd0aDtuKyspdC5mW25dKGUpfWZ1bmN0aW9uIFZjKHQsZSxuLGkpe2U/aT9mdW5jdGlvbih0LGUpe2lmKHQuYj1mdW5jdGlvbigpe3JldHVybiB3ZShlKX0sdC5jLmxlbmd0aClmb3IodmFyIG49MDtuPHQuYy5sZW5ndGg7bisrKXQuY1tuXShlKX0odCxpKTpVYyh0LG4pOlVjKHQse3VzZXI6bnVsbH0pLHQuZj1bXSx0LmM9W119ZnVuY3Rpb24gRmMoKXt9ZnVuY3Rpb24gcWMoKXt0aGlzLmliPSExLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwiYXBwVmVyaWZpY2F0aW9uRGlzYWJsZWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaWJ9LHNldDpmdW5jdGlvbih0KXt0aGlzLmliPXR9LGVudW1lcmFibGU6ITF9KX1mdW5jdGlvbiBIYyh0LGUpe3RoaXMuYT1lLFZpKHRoaXMsXCJ2ZXJpZmljYXRpb25JZFwiLHQpfWZ1bmN0aW9uIEtjKHQsZSxuLGkpe3JldHVybiBuZXcgU28odCkuZmIoZSxuKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgSGModCxpKX0pfWZ1bmN0aW9uIEdjKHQpe3ZhciBlPUxyKHQpO2lmKCEoZSYmZS5leHAmJmUuYXV0aF90aW1lJiZlLmlhdCkpdGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiLFwiQW4gaW50ZXJuYWwgZXJyb3Igb2NjdXJyZWQuIFRoZSB0b2tlbiBvYnRhaW5lZCBieSBGaXJlYmFzZSBhcHBlYXJzIHRvIGJlIG1hbGZvcm1lZC4gUGxlYXNlIHJldHJ5IHRoZSBvcGVyYXRpb24uXCIpO0ZpKHRoaXMse3Rva2VuOnQsZXhwaXJhdGlvblRpbWU6UGkoMWUzKmUuZXhwKSxhdXRoVGltZTpQaSgxZTMqZS5hdXRoX3RpbWUpLGlzc3VlZEF0VGltZTpQaSgxZTMqZS5pYXQpLHNpZ25JblByb3ZpZGVyOmUuZmlyZWJhc2UmJmUuZmlyZWJhc2Uuc2lnbl9pbl9wcm92aWRlcj9lLmZpcmViYXNlLnNpZ25faW5fcHJvdmlkZXI6bnVsbCxzaWduSW5TZWNvbmRGYWN0b3I6ZS5maXJlYmFzZSYmZS5maXJlYmFzZS5zaWduX2luX3NlY29uZF9mYWN0b3I/ZS5maXJlYmFzZS5zaWduX2luX3NlY29uZF9mYWN0b3I6bnVsbCxjbGFpbXM6ZX0pfWZ1bmN0aW9uIEJjKHQsZSxuKXt2YXIgaT1lJiZlW1hjXTtpZighaSl0aHJvdyBuZXcgVChcImFyZ3VtZW50LWVycm9yXCIsXCJJbnRlcm5hbCBhc3NlcnQ6IEludmFsaWQgTXVsdGlGYWN0b3JSZXNvbHZlclwiKTt0aGlzLmE9dCx0aGlzLmY9Y3QoZSksdGhpcy5nPW4sdGhpcy5jPW5ldyBZcihudWxsLGkpLHRoaXMuYj1bXTt2YXIgcj10aGlzO1YoZVtXY118fFtdLGZ1bmN0aW9uKHQpeyh0PUdpKHQpKSYmci5iLnB1c2godCl9KSxWaSh0aGlzLFwiYXV0aFwiLHRoaXMuYSksVmkodGhpcyxcInNlc3Npb25cIix0aGlzLmMpLFZpKHRoaXMsXCJoaW50c1wiLHRoaXMuYil9eGMucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKCl7dGhpcy5iPW51bGwsdGhpcy5hJiYodGhpcy5hLmNhbmNlbCgpLHRoaXMuYT1udWxsKX0seGMucHJvdG90eXBlLmg9ZnVuY3Rpb24odCxlKXt2YXIgbixpLHIsbzt0Pyh0aGlzLnJlc2V0KCksdGhpcy5nPSEwLG49dC5jLGk9dC5iLHI9dC5hJiZcImF1dGgvd2ViLXN0b3JhZ2UtdW5zdXBwb3J0ZWRcIj09dC5hLmNvZGUsbz10LmEmJlwiYXV0aC9vcGVyYXRpb24tbm90LXN1cHBvcnRlZC1pbi10aGlzLWVudmlyb25tZW50XCI9PXQuYS5jb2RlLHRoaXMuaT0hKCFyJiYhbyksXCJ1bmtub3duXCIhPW58fHJ8fG8/dC5hPyhWYyh0aGlzLCEwLG51bGwsdC5hKSx5ZSgpKTplLkZhKG4saSk/ZnVuY3Rpb24oZSx0LG4pe249bi5GYSh0LmMsdC5iKTt2YXIgaT10Lmcscj10LmYsbz10LmksYT10LlQoKSxzPSEhdC5jLm1hdGNoKC9SZWRpcmVjdCQvKTtuKGkscixhLG8pLnRoZW4oZnVuY3Rpb24odCl7VmMoZSxzLHQsbnVsbCl9KS5vKGZ1bmN0aW9uKHQpe1ZjKGUscyxudWxsLHQpfSl9KHRoaXMsdCxlKTp3ZShuZXcgVChcImludmFsaWQtYXV0aC1ldmVudFwiKSk6KFZjKHRoaXMsITEsbnVsbCxudWxsKSx5ZSgpKSk6d2UobmV3IFQoXCJpbnZhbGlkLWF1dGgtZXZlbnRcIikpfSx4Yy5wcm90b3R5cGUucWE9ZnVuY3Rpb24oKXt2YXIgcj10aGlzO3JldHVybiBuZXcgZmUoZnVuY3Rpb24odCxlKXt2YXIgbixpO3IuYj9yLmIoKS50aGVuKHQsZSk6KHIuZi5wdXNoKHQpLHIuYy5wdXNoKGUpLG49cixpPW5ldyBUKFwidGltZW91dFwiKSxuLmEmJm4uYS5jYW5jZWwoKSxuLmE9bW4oTmMuZ2V0KCkpLnRoZW4oZnVuY3Rpb24oKXtuLmJ8fChuLmc9ITAsVmMobiwhMCxudWxsLGkpKX0pKX0pfSxGYy5wcm90b3R5cGUuaD1mdW5jdGlvbih0LGUpe3ZhciBuLGkscixvLGE7dD8obj10LmMsaT10LmIsdC5hPyhlLm5hKHQuYyxudWxsLHQuYSx0LmIpLHllKCkpOmUuRmEobixpKT8ocj1lLG89KHQ9dCkuYixhPXQuYyxyLkZhKGEsbykodC5nLHQuZix0LlQoKSx0LmkpLnRoZW4oZnVuY3Rpb24odCl7ci5uYShhLHQsbnVsbCxvKX0pLm8oZnVuY3Rpb24odCl7ci5uYShhLG51bGwsdCxvKX0pKTp3ZShuZXcgVChcImludmFsaWQtYXV0aC1ldmVudFwiKSkpOndlKG5ldyBUKFwiaW52YWxpZC1hdXRoLWV2ZW50XCIpKX0sSGMucHJvdG90eXBlLmNvbmZpcm09ZnVuY3Rpb24odCl7cmV0dXJuIHQ9Tm8odGhpcy52ZXJpZmljYXRpb25JZCx0KSx0aGlzLmEodCl9O3ZhciBXYz1cIm1mYUluZm9cIixYYz1cIm1mYVBlbmRpbmdDcmVkZW50aWFsXCI7ZnVuY3Rpb24gSmModCxlLG4saSl7VC5jYWxsKHRoaXMsXCJtdWx0aS1mYWN0b3ItYXV0aC1yZXF1aXJlZFwiLGksZSksdGhpcy5iPW5ldyBCYyh0LGUsbiksVmkodGhpcyxcInJlc29sdmVyXCIsdGhpcy5iKX1mdW5jdGlvbiBZYyh0LGUsbil7aWYodCYmbSh0LnNlcnZlclJlc3BvbnNlKSYmXCJhdXRoL211bHRpLWZhY3Rvci1hdXRoLXJlcXVpcmVkXCI9PT10LmNvZGUpdHJ5e3JldHVybiBuZXcgSmMoZSx0LnNlcnZlclJlc3BvbnNlLG4sdC5tZXNzYWdlKX1jYXRjaCh0KXt9cmV0dXJuIG51bGx9ZnVuY3Rpb24gemMoKXt9ZnVuY3Rpb24gJGModCl7VmkodGhpcyxcImZhY3RvcklkXCIsdC5mYSksdGhpcy5hPXR9ZnVuY3Rpb24gWmModCl7aWYoJGMuY2FsbCh0aGlzLHQpLHRoaXMuYS5mYSE9U28uUFJPVklERVJfSUQpdGhyb3cgbmV3IFQoXCJhcmd1bWVudC1lcnJvclwiLFwiZmlyZWJhc2UuYXV0aC5QaG9uZU11bHRpRmFjdG9yQXNzZXJ0aW9uIHJlcXVpcmVzIGEgdmFsaWQgZmlyZWJhc2UuYXV0aC5QaG9uZUF1dGhDcmVkZW50aWFsXCIpfWZ1bmN0aW9uIFFjKHQsZSl7Zm9yKHZhciBuIGluIEZlLmNhbGwodGhpcyx0KSxlKXRoaXNbbl09ZVtuXX1mdW5jdGlvbiB0aCh0LGUpe3RoaXMuYT10LHRoaXMuYj1bXSx0aGlzLmM9Yih0aGlzLnljLHRoaXMpLFplKHRoaXMuYSxcInVzZXJSZWxvYWRlZFwiLHRoaXMuYyk7dmFyIGk9W107ZSYmZS5tdWx0aUZhY3RvciYmZS5tdWx0aUZhY3Rvci5lbnJvbGxlZEZhY3RvcnMmJlYoZS5tdWx0aUZhY3Rvci5lbnJvbGxlZEZhY3RvcnMsZnVuY3Rpb24odCl7dmFyIGU9bnVsbCxuPXt9O2lmKHQpe3QudWlkJiYobltYaV09dC51aWQpLHQuZGlzcGxheU5hbWUmJihuW0JpXT10LmRpc3BsYXlOYW1lKSx0LmVucm9sbG1lbnRUaW1lJiYobltXaV09bmV3IERhdGUodC5lbnJvbGxtZW50VGltZSkudG9JU09TdHJpbmcoKSksdC5waG9uZU51bWJlciYmKG5bSmldPXQucGhvbmVOdW1iZXIpO3RyeXtlPW5ldyBZaShuKX1jYXRjaCh0KXt9dD1lfWVsc2UgdD1udWxsO3QmJmkucHVzaCh0KX0pLGVoKHRoaXMsaSl9ZnVuY3Rpb24gZWgodCxlKXt0LmI9ZSxWaSh0LFwiZW5yb2xsZWRGYWN0b3JzXCIsZSl9ZnVuY3Rpb24gbmgodCxlLG4pe2lmKHRoaXMuaD10LHRoaXMuaT1lLHRoaXMuZz1uLHRoaXMuYz0zZTQsdGhpcy5mPTk2ZTQsdGhpcy5iPW51bGwsdGhpcy5hPXRoaXMuYyx0aGlzLmY8dGhpcy5jKXRocm93IEVycm9yKFwiUHJvYWN0aXZlIHJlZnJlc2ggbG93ZXIgYm91bmQgZ3JlYXRlciB0aGFuIHVwcGVyIGJvdW5kIVwiKX1mdW5jdGlvbiBpaCh0LGUpe3JldHVybiBlPyh0LmE9dC5jLHQuZygpKTooZT10LmEsdC5hKj0yLHQuYT50LmYmJih0LmE9dC5mKSxlKX1mdW5jdGlvbiByaCh0KXt0aGlzLmY9dCx0aGlzLmI9dGhpcy5hPW51bGwsdGhpcy5jPURhdGUubm93KCl9ZnVuY3Rpb24gb2godCxlKXt2b2lkIDA9PT1lJiYoZT10LmI/KGU9dC5iKS5hLWUuZzowKSx0LmM9RGF0ZS5ub3coKSsxZTMqZX1mdW5jdGlvbiBhaCh0LGUpe3QuYj1QcihlW0hhXXx8XCJcIiksdC5hPWUucmVmcmVzaFRva2VuLG9oKHQsdm9pZCAwIT09KGU9ZS5leHBpcmVzSW4pP051bWJlcihlKTp2b2lkIDApfWZ1bmN0aW9uIHNoKGUsdCl7cmV0dXJuIGk9ZS5mLHI9dCxuZXcgZmUoZnVuY3Rpb24oZSxuKXtcInJlZnJlc2hfdG9rZW5cIj09ci5ncmFudF90eXBlJiZyLnJlZnJlc2hfdG9rZW58fFwiYXV0aG9yaXphdGlvbl9jb2RlXCI9PXIuZ3JhbnRfdHlwZSYmci5jb2RlPyRhKGksaS5sK1wiP2tleT1cIitlbmNvZGVVUklDb21wb25lbnQoaS5jKSxmdW5jdGlvbih0KXt0P3QuZXJyb3I/bihZcyh0KSk6dC5hY2Nlc3NfdG9rZW4mJnQucmVmcmVzaF90b2tlbj9lKHQpOm4obmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiKSk6bihuZXcgVChcIm5ldHdvcmstcmVxdWVzdC1mYWlsZWRcIikpfSxcIlBPU1RcIixxbihyKS50b1N0cmluZygpLGkuZyxpLm0uZ2V0KCkpOm4obmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiKSl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlLmI9UHIodC5hY2Nlc3NfdG9rZW4pLGUuYT10LnJlZnJlc2hfdG9rZW4sb2goZSx0LmV4cGlyZXNfaW4pLHthY2Nlc3NUb2tlbjplLmIudG9TdHJpbmcoKSxyZWZyZXNoVG9rZW46ZS5hfX0pLm8oZnVuY3Rpb24odCl7dGhyb3dcImF1dGgvdXNlci10b2tlbi1leHBpcmVkXCI9PXQuY29kZSYmKGUuYT1udWxsKSx0fSk7dmFyIGkscn1mdW5jdGlvbiB1aCh0LGUpe3RoaXMuYT10fHxudWxsLHRoaXMuYj1lfHxudWxsLEZpKHRoaXMse2xhc3RTaWduSW5UaW1lOlBpKGV8fG51bGwpLGNyZWF0aW9uVGltZTpQaSh0fHxudWxsKX0pfWZ1bmN0aW9uIGNoKHQsZSxuLGkscixvKXtGaSh0aGlzLHt1aWQ6dCxkaXNwbGF5TmFtZTppfHxudWxsLHBob3RvVVJMOnJ8fG51bGwsZW1haWw6bnx8bnVsbCxwaG9uZU51bWJlcjpvfHxudWxsLHByb3ZpZGVySWQ6ZX0pfWZ1bmN0aW9uIGhoKHQsZSxuKXt0aGlzLko9W10sdGhpcy5sPXQuYXBpS2V5LHRoaXMubT10LmFwcE5hbWUsdGhpcy5zPXQuYXV0aERvbWFpbnx8bnVsbDt2YXIgaSxyPXpsLmRlZmF1bHQuU0RLX1ZFUlNJT04/bWkoemwuZGVmYXVsdC5TREtfVkVSU0lPTik6bnVsbDt0aGlzLmE9bmV3IEZhKHRoaXMubCxfKEEpLHIpLHQuZW11bGF0b3JDb25maWcmJkphKHRoaXMuYSx0LmVtdWxhdG9yQ29uZmlnKSx0aGlzLmI9bmV3IHJoKHRoaXMuYSksYmgodGhpcyxlW0hhXSksYWgodGhpcy5iLGUpLFZpKHRoaXMsXCJyZWZyZXNoVG9rZW5cIix0aGlzLmIuYSksSWgodGhpcyxufHx7fSksbG4uY2FsbCh0aGlzKSx0aGlzLlI9ITEsdGhpcy5zJiZ3aSgpJiYodGhpcy5pPUxjKHRoaXMucyx0aGlzLmwsdGhpcy5tKSksdGhpcy5TPVtdLHRoaXMuaD1udWxsLHRoaXMudT0oaT10aGlzLG5ldyBuaChmdW5jdGlvbigpe3JldHVybiBpLkkoITApfSxmdW5jdGlvbih0KXtyZXR1cm4hKCF0fHxcImF1dGgvbmV0d29yay1yZXF1ZXN0LWZhaWxlZFwiIT10LmNvZGUpfSxmdW5jdGlvbigpe3ZhciB0PWkuYi5jLURhdGUubm93KCktM2U1O3JldHVybiAwPHQ/dDowfSkpLHRoaXMuYWE9Yih0aGlzLmhiLHRoaXMpO3ZhciBvPXRoaXM7dGhpcy55YT1udWxsLHRoaXMuT2E9ZnVuY3Rpb24odCl7by53YSh0LmgpfSx0aGlzLmphPW51bGwsdGhpcy5BYT1mdW5jdGlvbih0KXtKYShvLmEsdC5jKX0sdGhpcy5YPW51bGwsdGhpcy4kPVtdLHRoaXMuQmE9ZnVuY3Rpb24odCl7ZGgobyx0LmYpfSx0aGlzLmJhPW51bGwsdGhpcy5PPW5ldyB0aCh0aGlzLG4pLFZpKHRoaXMsXCJtdWx0aUZhY3RvclwiLHRoaXMuTyl9ZnVuY3Rpb24gbGgodCxlKXt0LmphJiZlbih0LmphLFwibGFuZ3VhZ2VDb2RlQ2hhbmdlZFwiLHQuT2EpLCh0LmphPWUpJiZaZShlLFwibGFuZ3VhZ2VDb2RlQ2hhbmdlZFwiLHQuT2EpfWZ1bmN0aW9uIGZoKHQsZSl7dC5YJiZlbih0LlgsXCJlbXVsYXRvckNvbmZpZ0NoYW5nZWRcIix0LkFhKSwodC5YPWUpJiZaZShlLFwiZW11bGF0b3JDb25maWdDaGFuZ2VkXCIsdC5BYSl9ZnVuY3Rpb24gZGgodCxlKXt0LiQ9ZSx6YSh0LmEsemwuZGVmYXVsdC5TREtfVkVSU0lPTj9taSh6bC5kZWZhdWx0LlNES19WRVJTSU9OLHQuJCk6bnVsbCl9ZnVuY3Rpb24gcGgodCxlKXt0LmJhJiZlbih0LmJhLFwiZnJhbWV3b3JrQ2hhbmdlZFwiLHQuQmEpLCh0LmJhPWUpJiZaZShlLFwiZnJhbWV3b3JrQ2hhbmdlZFwiLHQuQmEpfWZ1bmN0aW9uIHZoKGUpe3RyeXtyZXR1cm4gemwuZGVmYXVsdC5hcHAoZS5tKS5hdXRoKCl9Y2F0Y2godCl7dGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiLFwiTm8gZmlyZWJhc2UuYXV0aC5BdXRoIGluc3RhbmNlIGlzIGF2YWlsYWJsZSBmb3IgdGhlIEZpcmViYXNlIEFwcCAnXCIrZS5tK1wiJyFcIil9fWZ1bmN0aW9uIG1oKHQpe3QuRHx8dC51LmJ8fCh0LnUuc3RhcnQoKSxlbih0LFwidG9rZW5DaGFuZ2VkXCIsdC5hYSksWmUodCxcInRva2VuQ2hhbmdlZFwiLHQuYWEpKX1mdW5jdGlvbiBnaCh0KXtlbih0LFwidG9rZW5DaGFuZ2VkXCIsdC5hYSksdC51LnN0b3AoKX1mdW5jdGlvbiBiaCh0LGUpe3QuemE9ZSxWaSh0LFwiX2xhdFwiLGUpfWZ1bmN0aW9uIHloKHQpe2Zvcih2YXIgZT1bXSxuPTA7bjx0LlMubGVuZ3RoO24rKyllLnB1c2godC5TW25dKHQpKTtyZXR1cm4gVGUoZSkudGhlbihmdW5jdGlvbigpe3JldHVybiB0fSl9ZnVuY3Rpb24gd2godCl7dC5pJiYhdC5SJiYodC5SPSEwLEFjKHQuaSx0KSl9ZnVuY3Rpb24gSWgodCxlKXtGaSh0LHt1aWQ6ZS51aWQsZGlzcGxheU5hbWU6ZS5kaXNwbGF5TmFtZXx8bnVsbCxwaG90b1VSTDplLnBob3RvVVJMfHxudWxsLGVtYWlsOmUuZW1haWx8fG51bGwsZW1haWxWZXJpZmllZDplLmVtYWlsVmVyaWZpZWR8fCExLHBob25lTnVtYmVyOmUucGhvbmVOdW1iZXJ8fG51bGwsaXNBbm9ueW1vdXM6ZS5pc0Fub255bW91c3x8ITEsdGVuYW50SWQ6ZS50ZW5hbnRJZHx8bnVsbCxtZXRhZGF0YTpuZXcgdWgoZS5jcmVhdGVkQXQsZS5sYXN0TG9naW5BdCkscHJvdmlkZXJEYXRhOltdfSksdC5hLmI9dC50ZW5hbnRJZH1mdW5jdGlvbiBUaCgpe31mdW5jdGlvbiBFaCh0KXtyZXR1cm4geWUoKS50aGVuKGZ1bmN0aW9uKCl7aWYodC5EKXRocm93IG5ldyBUKFwiYXBwLWRlbGV0ZWRcIil9KX1mdW5jdGlvbiBBaCh0KXtyZXR1cm4gcSh0LnByb3ZpZGVyRGF0YSxmdW5jdGlvbih0KXtyZXR1cm4gdC5wcm92aWRlcklkfSl9ZnVuY3Rpb24ga2godCxlKXtlJiYoU2godCxlLnByb3ZpZGVySWQpLHQucHJvdmlkZXJEYXRhLnB1c2goZSkpfWZ1bmN0aW9uIFNoKHQsZSl7Qih0LnByb3ZpZGVyRGF0YSxmdW5jdGlvbih0KXtyZXR1cm4gdC5wcm92aWRlcklkPT1lfSl9ZnVuY3Rpb24gTmgodCxlLG4peyhcInVpZFwiIT1lfHxuKSYmdC5oYXNPd25Qcm9wZXJ0eShlKSYmVmkodCxlLG4pfWZ1bmN0aW9uIF9oKGUsdCl7dmFyIG4saTtlIT10JiYoRmkoZSx7dWlkOnQudWlkLGRpc3BsYXlOYW1lOnQuZGlzcGxheU5hbWUscGhvdG9VUkw6dC5waG90b1VSTCxlbWFpbDp0LmVtYWlsLGVtYWlsVmVyaWZpZWQ6dC5lbWFpbFZlcmlmaWVkLHBob25lTnVtYmVyOnQucGhvbmVOdW1iZXIsaXNBbm9ueW1vdXM6dC5pc0Fub255bW91cyx0ZW5hbnRJZDp0LnRlbmFudElkLHByb3ZpZGVyRGF0YTpbXX0pLHQubWV0YWRhdGE/VmkoZSxcIm1ldGFkYXRhXCIsbmV3IHVoKChpPXQubWV0YWRhdGEpLmEsaS5iKSk6VmkoZSxcIm1ldGFkYXRhXCIsbmV3IHVoKSxWKHQucHJvdmlkZXJEYXRhLGZ1bmN0aW9uKHQpe2toKGUsdCl9KSxuPWUuYixpPXQuYixuLmI9aS5iLG4uYT1pLmEsbi5jPWkuYyxWaShlLFwicmVmcmVzaFRva2VuXCIsZS5iLmEpLGVoKGUuTyx0Lk8uYikpfWZ1bmN0aW9uIE9oKHIpe3JldHVybiByLkkoKS50aGVuKGZ1bmN0aW9uKHQpe3ZhciBlLG4saT1yLmlzQW5vbnltb3VzO3JldHVybiBuPXQsWHMoKGU9cikuYSxBcyx7aWRUb2tlbjpufSkudGhlbihiKGUuS2MsZSkpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gaXx8TmgocixcImlzQW5vbnltb3VzXCIsITEpLHR9KX0pfWZ1bmN0aW9uIENoKHQsZSl7ZVtIYV0mJnQuemEhPWVbSGFdJiYoYWgodC5iLGUpLHQuZGlzcGF0Y2hFdmVudChuZXcgUWMoXCJ0b2tlbkNoYW5nZWRcIikpLGJoKHQsZVtIYV0pLE5oKHQsXCJyZWZyZXNoVG9rZW5cIix0LmIuYSkpfWZ1bmN0aW9uIFJoKHQsZSl7cmV0dXJuIE9oKHQpLnRoZW4oZnVuY3Rpb24oKXtpZihLKEFoKHQpLGUpKXJldHVybiB5aCh0KS50aGVuKGZ1bmN0aW9uKCl7dGhyb3cgbmV3IFQoXCJwcm92aWRlci1hbHJlYWR5LWxpbmtlZFwiKX0pfSl9ZnVuY3Rpb24gRGgodCxlLG4pe3JldHVybiBxaSh7dXNlcjp0LGNyZWRlbnRpYWw6X28oZSksYWRkaXRpb25hbFVzZXJJbmZvOmU9VnIoZSksb3BlcmF0aW9uVHlwZTpufSl9ZnVuY3Rpb24gUGgodCxlKXtyZXR1cm4gQ2godCxlKSx0LnJlbG9hZCgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdH0pfWZ1bmN0aW9uIExoKG4saSx0LGUscil7aWYoIXdpKCkpcmV0dXJuIHdlKG5ldyBUKFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKSk7aWYobi5oJiYhcilyZXR1cm4gd2Uobi5oKTt2YXIgbz1Vcih0LnByb3ZpZGVySWQpLGE9Tmkobi51aWQrXCI6OjpcIikscz1udWxsLHU9aWkocz0oIUVpKCl8fHVpKCkpJiZuLnMmJnQuaXNPQXV0aFByb3ZpZGVyP3V1KG4ucyxuLmwsbi5tLGksdCxudWxsLGEsemwuZGVmYXVsdC5TREtfVkVSU0lPTnx8bnVsbCxudWxsLG51bGwsbi50ZW5hbnRJZCk6cyxvJiZvLnVhLG8mJm8udGEpO3JldHVybiBlPWUoKS50aGVuKGZ1bmN0aW9uKCl7aWYoTWgobiksIXIpcmV0dXJuIG4uSSgpLnRoZW4oZnVuY3Rpb24oKXt9KX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gX2Mobi5pLHUsaSx0LGEsISFzLG4udGVuYW50SWQpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBuZXcgZmUoZnVuY3Rpb24odCxlKXtuLm5hKGksbnVsbCxuZXcgVChcImNhbmNlbGxlZC1wb3B1cC1yZXF1ZXN0XCIpLG4uZ3x8bnVsbCksbi5mPXQsbi5DPWUsbi5nPWEsbi5jPVJjKG4uaSxuLGksdSxhKX0pfSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdSYmbmkodSksdD9xaSh0KTpudWxsfSkubyhmdW5jdGlvbih0KXt0aHJvdyB1JiZuaSh1KSx0fSksamgobixlLHIpfWZ1bmN0aW9uIHhoKGUsdCxuLGkscil7aWYoIXdpKCkpcmV0dXJuIHdlKG5ldyBUKFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKSk7aWYoZS5oJiYhcilyZXR1cm4gd2UoZS5oKTt2YXIgbz1udWxsLGE9TmkoZS51aWQrXCI6OjpcIik7cmV0dXJuIGk9aSgpLnRoZW4oZnVuY3Rpb24oKXtpZihNaChlKSwhcilyZXR1cm4gZS5JKCkudGhlbihmdW5jdGlvbigpe30pfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBlLmdhPWEseWgoZSl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0PWUuaGE/KHQ9ZS5oYSkuYi5zZXQoRmgsZS53KCksdC5hKTp0fSkudGhlbihmdW5jdGlvbigpe3JldHVybiBDYyhlLmksdCxuLGEsZS50ZW5hbnRJZCl9KS5vKGZ1bmN0aW9uKHQpe2lmKG89dCxlLmhhKXJldHVybiBxaChlLmhhKTt0aHJvdyBvfSkudGhlbihmdW5jdGlvbigpe2lmKG8pdGhyb3cgb30pLGpoKGUsaSxyKX1mdW5jdGlvbiBNaCh0KXtpZighdC5pfHwhdC5SKXtpZih0LmkmJiF0LlIpdGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiKTt0aHJvdyBuZXcgVChcImF1dGgtZG9tYWluLWNvbmZpZy1yZXF1aXJlZFwiKX19ZnVuY3Rpb24gamgobix0LGUpe3ZhciBpLHI9KHQ9dCxlPWUsKGk9bikuaCYmIWU/KHQuY2FuY2VsKCksd2UoaS5oKSk6dC5vKGZ1bmN0aW9uKHQpe3Rocm93IXR8fFwiYXV0aC91c2VyLWRpc2FibGVkXCIhPXQuY29kZSYmXCJhdXRoL3VzZXItdG9rZW4tZXhwaXJlZFwiIT10LmNvZGV8fChpLmh8fGkuZGlzcGF0Y2hFdmVudChuZXcgUWMoXCJ1c2VySW52YWxpZGF0ZWRcIikpLGkuaD10KSx0fSkpO3JldHVybiBuLkoucHVzaChyKSxyLm9hKGZ1bmN0aW9uKCl7RyhuLkoscil9KSxyLm8oZnVuY3Rpb24odCl7dmFyIGU9bnVsbDt0aHJvdyhlPXQmJlwiYXV0aC9tdWx0aS1mYWN0b3ItYXV0aC1yZXF1aXJlZFwiPT09dC5jb2RlP1ljKHQudygpLHZoKG4pLGIobi5qYyxuKSk6ZSl8fHR9KX1mdW5jdGlvbiBVaCh0KXtpZighdC5hcGlLZXkpcmV0dXJuIG51bGw7dmFyIGU9e2FwaUtleTp0LmFwaUtleSxhdXRoRG9tYWluOnQuYXV0aERvbWFpbixhcHBOYW1lOnQuYXBwTmFtZSxlbXVsYXRvckNvbmZpZzp0LmVtdWxhdG9yQ29uZmlnfSxuPXt9O2lmKCF0LnN0c1Rva2VuTWFuYWdlcnx8IXQuc3RzVG9rZW5NYW5hZ2VyLmFjY2Vzc1Rva2VuKXJldHVybiBudWxsO25bSGFdPXQuc3RzVG9rZW5NYW5hZ2VyLmFjY2Vzc1Rva2VuLG4ucmVmcmVzaFRva2VuPXQuc3RzVG9rZW5NYW5hZ2VyLnJlZnJlc2hUb2tlbnx8bnVsbDt2YXIgaT10LnN0c1Rva2VuTWFuYWdlci5leHBpcmF0aW9uVGltZTtpJiYobi5leHBpcmVzSW49KGktRGF0ZS5ub3coKSkvMWUzKTt2YXIgcj1uZXcgaGgoZSxuLHQpO3JldHVybiB0LnByb3ZpZGVyRGF0YSYmVih0LnByb3ZpZGVyRGF0YSxmdW5jdGlvbih0KXt0JiZraChyLHFpKHQpKX0pLHQucmVkaXJlY3RFdmVudElkJiYoci5nYT10LnJlZGlyZWN0RXZlbnRJZCkscn1mdW5jdGlvbiBWaCh0KXt0aGlzLmE9dCx0aGlzLmI9QnUoKX1CYy5wcm90b3R5cGUuUmM9ZnVuY3Rpb24odCl7dmFyIG49dGhpcztyZXR1cm4gdC5zYih0aGlzLmEuYSx0aGlzLmMpLnRoZW4oZnVuY3Rpb24odCl7dmFyIGU9Y3Qobi5mKTtyZXR1cm4gZGVsZXRlIGVbV2NdLGRlbGV0ZSBlW1hjXSxsdChlLHQpLG4uZyhlKX0pfSx3KEpjLFQpLHpjLnByb3RvdHlwZS5zYj1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGUudHlwZT09enI/KG89dGhpcyxhPXQscz1uLGUuSGEoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0PXtpZFRva2VuOnR9LHZvaWQgMCE9PXMmJih0LmRpc3BsYXlOYW1lPXMpLGx0KHQse3Bob25lVmVyaWZpY2F0aW9uSW5mbzprbyhvLmEpfSksWHMoYSxUcyx0KX0pKTooaT10aGlzLHI9dCxlLkhhKCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbHQodD17bWZhUGVuZGluZ0NyZWRlbnRpYWw6dH0se3Bob25lVmVyaWZpY2F0aW9uSW5mbzprbyhpLmEpfSksWHMocixFcyx0KX0pKTt2YXIgaSxyLG8sYSxzfSx3KCRjLHpjKSx3KFpjLCRjKSx3KFFjLEZlKSwodD10aC5wcm90b3R5cGUpLnljPWZ1bmN0aW9uKHQpe3ZhciBlO2VoKHRoaXMsKHQ9dC5oZCxlPVtdLFYodC5tZmFJbmZvfHxbXSxmdW5jdGlvbih0KXsodD1HaSh0KSkmJmUucHVzaCh0KX0pLGUpKX0sdC5SYj1mdW5jdGlvbigpe3JldHVybiB0aGlzLmEuSSgpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBZcih0LG51bGwpfSl9LHQuZmM9ZnVuY3Rpb24oZSxuKXt2YXIgaT10aGlzLHI9dGhpcy5hLmE7cmV0dXJuIHRoaXMuUmIoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlLnNiKHIsdCxuKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIENoKGkuYSx0KSxpLmEucmVsb2FkKCl9KX0sdC5iZD1mdW5jdGlvbih0KXt2YXIgbj10aGlzLGk9XCJzdHJpbmdcIj09dHlwZW9mIHQ/dDp0LnVpZCxlPXRoaXMuYS5hO3JldHVybiB0aGlzLmEuSSgpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIFhzKGUsV3Mse2lkVG9rZW46dCxtZmFFbnJvbGxtZW50SWQ6aX0pfSkudGhlbihmdW5jdGlvbih0KXt2YXIgZT1GKG4uYixmdW5jdGlvbih0KXtyZXR1cm4gdC51aWQhPWl9KTtyZXR1cm4gZWgobixlKSxDaChuLmEsdCksbi5hLnJlbG9hZCgpLm8oZnVuY3Rpb24odCl7aWYoXCJhdXRoL3VzZXItdG9rZW4tZXhwaXJlZFwiIT10LmNvZGUpdGhyb3cgdH0pfSl9LHQudz1mdW5jdGlvbigpe3JldHVybnttdWx0aUZhY3Rvcjp7ZW5yb2xsZWRGYWN0b3JzOnEodGhpcy5iLGZ1bmN0aW9uKHQpe3JldHVybiB0LncoKX0pfX19LG5oLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbigpe3RoaXMuYT10aGlzLmMsZnVuY3Rpb24gZShuLHQpe24uc3RvcCgpO24uYj1tbihpaChuLHQpKS50aGVuKERpKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG4uaCgpfSkudGhlbihmdW5jdGlvbigpe2UobiwhMCl9KS5vKGZ1bmN0aW9uKHQpe24uaSh0KSYmZShuLCExKX0pfSh0aGlzLCEwKX0sbmgucHJvdG90eXBlLnN0b3A9ZnVuY3Rpb24oKXt0aGlzLmImJih0aGlzLmIuY2FuY2VsKCksdGhpcy5iPW51bGwpfSxyaC5wcm90b3R5cGUudz1mdW5jdGlvbigpe3JldHVybnthcGlLZXk6dGhpcy5mLmMscmVmcmVzaFRva2VuOnRoaXMuYSxhY2Nlc3NUb2tlbjp0aGlzLmImJnRoaXMuYi50b1N0cmluZygpLGV4cGlyYXRpb25UaW1lOnRoaXMuY319LHJoLnByb3RvdHlwZS5nZXRUb2tlbj1mdW5jdGlvbih0KXtyZXR1cm4gdD0hIXQsdGhpcy5iJiYhdGhpcy5hP3dlKG5ldyBUKFwidXNlci10b2tlbi1leHBpcmVkXCIpKTp0fHwhdGhpcy5ifHxEYXRlLm5vdygpPnRoaXMuYy0zZTQ/dGhpcy5hP3NoKHRoaXMse2dyYW50X3R5cGU6XCJyZWZyZXNoX3Rva2VuXCIscmVmcmVzaF90b2tlbjp0aGlzLmF9KTp5ZShudWxsKTp5ZSh7YWNjZXNzVG9rZW46dGhpcy5iLnRvU3RyaW5nKCkscmVmcmVzaFRva2VuOnRoaXMuYX0pfSx1aC5wcm90b3R5cGUudz1mdW5jdGlvbigpe3JldHVybntsYXN0TG9naW5BdDp0aGlzLmIsY3JlYXRlZEF0OnRoaXMuYX19LHcoaGgsbG4pLGhoLnByb3RvdHlwZS53YT1mdW5jdGlvbih0KXt0aGlzLnlhPXQsWGEodGhpcy5hLHQpfSxoaC5wcm90b3R5cGUubGE9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy55YX0saGgucHJvdG90eXBlLkdhPWZ1bmN0aW9uKCl7cmV0dXJuIFgodGhpcy4kKX0saGgucHJvdG90eXBlLmhiPWZ1bmN0aW9uKCl7dGhpcy51LmImJih0aGlzLnUuc3RvcCgpLHRoaXMudS5zdGFydCgpKX0sVmkoaGgucHJvdG90eXBlLFwicHJvdmlkZXJJZFwiLFwiZmlyZWJhc2VcIiksKHQ9aGgucHJvdG90eXBlKS5yZWxvYWQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiBqaCh0aGlzLEVoKHRoaXMpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gT2godCkudGhlbihmdW5jdGlvbigpe3JldHVybiB5aCh0KX0pLnRoZW4oVGgpfSkpfSx0Lm9jPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLkkodCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEdjKHQpfSl9LHQuST1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiBqaCh0aGlzLEVoKHRoaXMpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZS5iLmdldFRva2VuKHQpfSkudGhlbihmdW5jdGlvbih0KXtpZighdCl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIpO3JldHVybiB0LmFjY2Vzc1Rva2VuIT1lLnphJiYoYmgoZSx0LmFjY2Vzc1Rva2VuKSxlLmRpc3BhdGNoRXZlbnQobmV3IFFjKFwidG9rZW5DaGFuZ2VkXCIpKSksTmgoZSxcInJlZnJlc2hUb2tlblwiLHQucmVmcmVzaFRva2VuKSx0LmFjY2Vzc1Rva2VufSkpfSx0LktjPWZ1bmN0aW9uKHQpe2lmKCEodD10LnVzZXJzKXx8IXQubGVuZ3RoKXRocm93IG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIik7SWgodGhpcyx7dWlkOih0PXRbMF0pLmxvY2FsSWQsZGlzcGxheU5hbWU6dC5kaXNwbGF5TmFtZSxwaG90b1VSTDp0LnBob3RvVXJsLGVtYWlsOnQuZW1haWwsZW1haWxWZXJpZmllZDohIXQuZW1haWxWZXJpZmllZCxwaG9uZU51bWJlcjp0LnBob25lTnVtYmVyLGxhc3RMb2dpbkF0OnQubGFzdExvZ2luQXQsY3JlYXRlZEF0OnQuY3JlYXRlZEF0LHRlbmFudElkOnQudGVuYW50SWR9KTtmb3IodmFyIGUsbj0oZT0oZT10KS5wcm92aWRlclVzZXJJbmZvKSYmZS5sZW5ndGg/cShlLGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgY2godC5yYXdJZCx0LnByb3ZpZGVySWQsdC5lbWFpbCx0LmRpc3BsYXlOYW1lLHQucGhvdG9VcmwsdC5waG9uZU51bWJlcil9KTpbXSxpPTA7aTxuLmxlbmd0aDtpKyspa2godGhpcyxuW2ldKTtOaCh0aGlzLFwiaXNBbm9ueW1vdXNcIiwhKHRoaXMuZW1haWwmJnQucGFzc3dvcmRIYXNofHx0aGlzLnByb3ZpZGVyRGF0YSYmdGhpcy5wcm92aWRlckRhdGEubGVuZ3RoKSksdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBRYyhcInVzZXJSZWxvYWRlZFwiLHtoZDp0fSkpfSx0LkxjPWZ1bmN0aW9uKHQpe3JldHVybiBqaShcImZpcmViYXNlLlVzZXIucHJvdG90eXBlLnJlYXV0aGVudGljYXRlQW5kUmV0cmlldmVEYXRhV2l0aENyZWRlbnRpYWwgaXMgZGVwcmVjYXRlZC4gUGxlYXNlIHVzZSBmaXJlYmFzZS5Vc2VyLnByb3RvdHlwZS5yZWF1dGhlbnRpY2F0ZVdpdGhDcmVkZW50aWFsIGluc3RlYWQuXCIpLHRoaXMudGIodCl9LHQudGI9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPW51bGw7cmV0dXJuIGpoKHRoaXMsdC5jKHRoaXMuYSx0aGlzLnVpZCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gQ2goZSx0KSxuPURoKGUsdCxcInJlYXV0aGVudGljYXRlXCIpLGUuaD1udWxsLGUucmVsb2FkKCl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG59KSwhMCl9LHQuQ2M9ZnVuY3Rpb24odCl7cmV0dXJuIGppKFwiZmlyZWJhc2UuVXNlci5wcm90b3R5cGUubGlua0FuZFJldHJpZXZlRGF0YVdpdGhDcmVkZW50aWFsIGlzIGRlcHJlY2F0ZWQuIFBsZWFzZSB1c2UgZmlyZWJhc2UuVXNlci5wcm90b3R5cGUubGlua1dpdGhDcmVkZW50aWFsIGluc3RlYWQuXCIpLHRoaXMucWIodCl9LHQucWI9ZnVuY3Rpb24oZSl7dmFyIG49dGhpcyxpPW51bGw7cmV0dXJuIGpoKHRoaXMsUmgodGhpcyxlLnByb3ZpZGVySWQpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gbi5JKCl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlLmIobi5hLHQpfSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gaT1EaChuLHQsXCJsaW5rXCIpLFBoKG4sdCl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGl9KSl9LHQuRGM9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiBqaCh0aGlzLFJoKHRoaXMsXCJwaG9uZVwiKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIEtjKHZoKG4pLHQsZSxiKG4ucWIsbikpfSkpfSx0Lk1jPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gamgodGhpcyx5ZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gS2ModmgobiksdCxlLGIobi50YixuKSl9KSwhMCl9LHQuQmI9ZnVuY3Rpb24oZSl7dmFyIG49dGhpcztyZXR1cm4gamgodGhpcyx0aGlzLkkoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBuLmEuQmIodCxlKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIENoKG4sdCksbi5yZWxvYWQoKX0pKX0sdC5lZD1mdW5jdGlvbihlKXt2YXIgbj10aGlzO3JldHVybiBqaCh0aGlzLHRoaXMuSSgpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGUuYihuLmEsdCl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBDaChuLHQpLG4ucmVsb2FkKCl9KSl9LHQuQ2I9ZnVuY3Rpb24oZSl7dmFyIG49dGhpcztyZXR1cm4gamgodGhpcyx0aGlzLkkoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBuLmEuQ2IodCxlKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIENoKG4sdCksbi5yZWxvYWQoKX0pKX0sdC5EYj1mdW5jdGlvbihlKXtpZih2b2lkIDA9PT1lLmRpc3BsYXlOYW1lJiZ2b2lkIDA9PT1lLnBob3RvVVJMKXJldHVybiBFaCh0aGlzKTt2YXIgbj10aGlzO3JldHVybiBqaCh0aGlzLHRoaXMuSSgpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG4uYS5EYih0LHtkaXNwbGF5TmFtZTplLmRpc3BsYXlOYW1lLHBob3RvVXJsOmUucGhvdG9VUkx9KX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIENoKG4sdCksTmgobixcImRpc3BsYXlOYW1lXCIsdC5kaXNwbGF5TmFtZXx8bnVsbCksTmgobixcInBob3RvVVJMXCIsdC5waG90b1VybHx8bnVsbCksVihuLnByb3ZpZGVyRGF0YSxmdW5jdGlvbih0KXtcInBhc3N3b3JkXCI9PT10LnByb3ZpZGVySWQmJihWaSh0LFwiZGlzcGxheU5hbWVcIixuLmRpc3BsYXlOYW1lKSxWaSh0LFwicGhvdG9VUkxcIixuLnBob3RvVVJMKSl9KSx5aChuKX0pLnRoZW4oVGgpKX0sdC5jZD1mdW5jdGlvbihlKXt2YXIgbj10aGlzO3JldHVybiBqaCh0aGlzLE9oKHRoaXMpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIEsoQWgobiksZSk/WHMobi5hLHlzLHtpZFRva2VuOnQsZGVsZXRlUHJvdmlkZXI6W2VdfSkudGhlbihmdW5jdGlvbih0KXt2YXIgZT17fTtyZXR1cm4gVih0LnByb3ZpZGVyVXNlckluZm98fFtdLGZ1bmN0aW9uKHQpe2VbdC5wcm92aWRlcklkXT0hMH0pLFYoQWgobiksZnVuY3Rpb24odCl7ZVt0XXx8U2gobix0KX0pLGVbU28uUFJPVklERVJfSURdfHxWaShuLFwicGhvbmVOdW1iZXJcIixudWxsKSx5aChuKX0pOnloKG4pLnRoZW4oZnVuY3Rpb24oKXt0aHJvdyBuZXcgVChcIm5vLXN1Y2gtcHJvdmlkZXJcIil9KX0pKX0sdC5kZWxldGU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBqaCh0aGlzLHRoaXMuSSgpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIFhzKGUuYSxicyx7aWRUb2tlbjp0fSl9KS50aGVuKGZ1bmN0aW9uKCl7ZS5kaXNwYXRjaEV2ZW50KG5ldyBRYyhcInVzZXJEZWxldGVkXCIpKX0pKS50aGVuKGZ1bmN0aW9uKCl7Zm9yKHZhciB0PTA7dDxlLkoubGVuZ3RoO3QrKyllLkpbdF0uY2FuY2VsKFwiYXBwLWRlbGV0ZWRcIik7bGgoZSxudWxsKSxmaChlLG51bGwpLHBoKGUsbnVsbCksZS5KPVtdLGUuRD0hMCxnaChlKSxWaShlLFwicmVmcmVzaFRva2VuXCIsbnVsbCksZS5pJiZrYyhlLmksZSl9KX0sdC5GYj1mdW5jdGlvbih0LGUpe3JldHVybiEhKFwibGlua1ZpYVBvcHVwXCI9PXQmJih0aGlzLmd8fG51bGwpPT1lJiZ0aGlzLmZ8fFwicmVhdXRoVmlhUG9wdXBcIj09dCYmKHRoaXMuZ3x8bnVsbCk9PWUmJnRoaXMuZnx8XCJsaW5rVmlhUmVkaXJlY3RcIj09dCYmKHRoaXMuZ2F8fG51bGwpPT1lfHxcInJlYXV0aFZpYVJlZGlyZWN0XCI9PXQmJih0aGlzLmdhfHxudWxsKT09ZSl9LHQubmE9ZnVuY3Rpb24odCxlLG4saSl7XCJsaW5rVmlhUG9wdXBcIiE9dCYmXCJyZWF1dGhWaWFQb3B1cFwiIT10fHxpIT0odGhpcy5nfHxudWxsKXx8KG4mJnRoaXMuQz90aGlzLkMobik6ZSYmIW4mJnRoaXMuZiYmdGhpcy5mKGUpLHRoaXMuYyYmKHRoaXMuYy5jYW5jZWwoKSx0aGlzLmM9bnVsbCksZGVsZXRlIHRoaXMuZixkZWxldGUgdGhpcy5DKX0sdC5GYT1mdW5jdGlvbih0LGUpe3JldHVyblwibGlua1ZpYVBvcHVwXCI9PXQmJmU9PSh0aGlzLmd8fG51bGwpP2IodGhpcy5LYix0aGlzKTpcInJlYXV0aFZpYVBvcHVwXCI9PXQmJmU9PSh0aGlzLmd8fG51bGwpP2IodGhpcy5MYix0aGlzKTpcImxpbmtWaWFSZWRpcmVjdFwiPT10JiYodGhpcy5nYXx8bnVsbCk9PWU/Yih0aGlzLktiLHRoaXMpOlwicmVhdXRoVmlhUmVkaXJlY3RcIj09dCYmKHRoaXMuZ2F8fG51bGwpPT1lP2IodGhpcy5MYix0aGlzKTpudWxsfSx0LkVjPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIExoKHRoaXMsXCJsaW5rVmlhUG9wdXBcIix0LGZ1bmN0aW9uKCl7cmV0dXJuIFJoKGUsdC5wcm92aWRlcklkKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHloKGUpfSl9LCExKX0sdC5OYz1mdW5jdGlvbih0KXtyZXR1cm4gTGgodGhpcyxcInJlYXV0aFZpYVBvcHVwXCIsdCxmdW5jdGlvbigpe3JldHVybiB5ZSgpfSwhMCl9LHQuRmM9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztyZXR1cm4geGgodGhpcyxcImxpbmtWaWFSZWRpcmVjdFwiLHQsZnVuY3Rpb24oKXtyZXR1cm4gUmgoZSx0LnByb3ZpZGVySWQpfSwhMSl9LHQuT2M9ZnVuY3Rpb24odCl7cmV0dXJuIHhoKHRoaXMsXCJyZWF1dGhWaWFSZWRpcmVjdFwiLHQsZnVuY3Rpb24oKXtyZXR1cm4geWUoKX0sITApfSx0LktiPWZ1bmN0aW9uKGUsbix0LGkpe3ZhciByPXRoaXM7dGhpcy5jJiYodGhpcy5jLmNhbmNlbCgpLHRoaXMuYz1udWxsKTt2YXIgbz1udWxsO3JldHVybiB0PXRoaXMuSSgpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGxzKHIuYSx7cmVxdWVzdFVyaTplLHBvc3RCb2R5Omksc2Vzc2lvbklkOm4saWRUb2tlbjp0fSl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBvPURoKHIsdCxcImxpbmtcIiksUGgocix0KX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gb30pLGpoKHRoaXMsdCl9LHQuTGI9ZnVuY3Rpb24odCxlLG4saSl7dmFyIHI9dGhpczt0aGlzLmMmJih0aGlzLmMuY2FuY2VsKCksdGhpcy5jPW51bGwpO3ZhciBvPW51bGw7cmV0dXJuIGpoKHRoaXMseWUoKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIFFyKGZzKHIuYSx7cmVxdWVzdFVyaTp0LHNlc3Npb25JZDplLHBvc3RCb2R5OmksdGVuYW50SWQ6bn0pLHIudWlkKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG89RGgocix0LFwicmVhdXRoZW50aWNhdGVcIiksQ2gocix0KSxyLmg9bnVsbCxyLnJlbG9hZCgpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBvfSksITApfSx0LnViPWZ1bmN0aW9uKGUpe3ZhciBuPXRoaXMsaT1udWxsO3JldHVybiBqaCh0aGlzLHRoaXMuSSgpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGk9dCx2b2lkIDA9PT1lfHx1dChlKT97fTpPcihuZXcgeXIoZSkpfSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbi5hLnViKGksdCl9KS50aGVuKGZ1bmN0aW9uKHQpe2lmKG4uZW1haWwhPXQpcmV0dXJuIG4ucmVsb2FkKCl9KS50aGVuKGZ1bmN0aW9uKCl7fSkpfSx0LkViPWZ1bmN0aW9uKGUsbil7dmFyIGk9dGhpcyxyPW51bGw7cmV0dXJuIGpoKHRoaXMsdGhpcy5JKCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gcj10LHZvaWQgMD09PW58fHV0KG4pP3t9Ok9yKG5ldyB5cihuKSl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBpLmEuRWIocixlLHQpfSkudGhlbihmdW5jdGlvbih0KXtpZihpLmVtYWlsIT10KXJldHVybiBpLnJlbG9hZCgpfSkudGhlbihmdW5jdGlvbigpe30pKX0sdC5qYz1mdW5jdGlvbih0KXt2YXIgZT1udWxsLG49dGhpcztyZXR1cm4gamgodGhpcyx0PVFyKHllKHQpLG4udWlkKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlPURoKG4sdCxcInJlYXV0aGVudGljYXRlXCIpLENoKG4sdCksbi5oPW51bGwsbi5yZWxvYWQoKX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZX0pLCEwKX0sdC50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy53KCl9LHQudz1mdW5jdGlvbigpe3ZhciBlPXt1aWQ6dGhpcy51aWQsZGlzcGxheU5hbWU6dGhpcy5kaXNwbGF5TmFtZSxwaG90b1VSTDp0aGlzLnBob3RvVVJMLGVtYWlsOnRoaXMuZW1haWwsZW1haWxWZXJpZmllZDp0aGlzLmVtYWlsVmVyaWZpZWQscGhvbmVOdW1iZXI6dGhpcy5waG9uZU51bWJlcixpc0Fub255bW91czp0aGlzLmlzQW5vbnltb3VzLHRlbmFudElkOnRoaXMudGVuYW50SWQscHJvdmlkZXJEYXRhOltdLGFwaUtleTp0aGlzLmwsYXBwTmFtZTp0aGlzLm0sYXV0aERvbWFpbjp0aGlzLnMsc3RzVG9rZW5NYW5hZ2VyOnRoaXMuYi53KCkscmVkaXJlY3RFdmVudElkOnRoaXMuZ2F8fG51bGx9O3JldHVybiB0aGlzLm1ldGFkYXRhJiZsdChlLHRoaXMubWV0YWRhdGEudygpKSxWKHRoaXMucHJvdmlkZXJEYXRhLGZ1bmN0aW9uKHQpe2UucHJvdmlkZXJEYXRhLnB1c2goZnVuY3Rpb24odCl7dmFyIGUsbj17fTtmb3IoZSBpbiB0KXQuaGFzT3duUHJvcGVydHkoZSkmJihuW2VdPXRbZV0pO3JldHVybiBufSh0KSl9KSxsdChlLHRoaXMuTy53KCkpLGV9O3ZhciBGaD17bmFtZTpcInJlZGlyZWN0VXNlclwiLEY6XCJzZXNzaW9uXCJ9O2Z1bmN0aW9uIHFoKHQpe3JldHVybiBKdSh0LmIsRmgsdC5hKX1mdW5jdGlvbiBIaCh0KXt2YXIgZSxuLGkscjt0aGlzLmE9dCx0aGlzLmI9QnUoKSx0aGlzLmM9bnVsbCx0aGlzLmY9KG49QmgoXCJsb2NhbFwiKSxpPUJoKFwic2Vzc2lvblwiKSxyPUJoKFwibm9uZVwiKSxmdW5jdGlvbihuLGkscil7dmFyIG89WHUoaSxyKSxhPVd1KG4saS5GKTtyZXR1cm4gbi5nZXQoaSxyKS50aGVuKGZ1bmN0aW9uKHQpe3ZhciBlPW51bGw7dHJ5e2U9U2kobC5sb2NhbFN0b3JhZ2UuZ2V0SXRlbShvKSl9Y2F0Y2godCl7fWlmKGUmJiF0KXJldHVybiBsLmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKG8pLG4uc2V0KGksZSxyKTtlJiZ0JiZcImxvY2FsU3RvcmFnZVwiIT1hLnR5cGUmJmwubG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0obyl9KX0oKGU9dGhpcykuYixuLGUuYSkudGhlbihmdW5jdGlvbigpe3JldHVybiBlLmIuZ2V0KGksZS5hKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHQ/aTplLmIuZ2V0KHIsZS5hKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0P3I6ZS5iLmdldChuLGUuYSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdD9uOmUuYi5nZXQoR2gsZS5hKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0P0JoKHQpOm59KX0pfSl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlLmM9dCxLaChlLHQuRil9KS5vKGZ1bmN0aW9uKCl7ZS5jfHwoZS5jPW4pfSkpLHRoaXMuYi5hZGRMaXN0ZW5lcihCaChcImxvY2FsXCIpLHRoaXMuYSxiKHRoaXMuZyx0aGlzKSl9ZnVuY3Rpb24gS2godCxlKXt2YXIgbixzLGk9W107Zm9yKG4gaW4gS3UpS3Vbbl0hPT1lJiZpLnB1c2goSnUodC5iLEJoKEt1W25dKSx0LmEpKTtyZXR1cm4gaS5wdXNoKEp1KHQuYixHaCx0LmEpKSxzPWksbmV3IGZlKGZ1bmN0aW9uKG4sZSl7dmFyIGk9cy5sZW5ndGgscj1bXTtpZihpKWZvcih2YXIgdD1mdW5jdGlvbih0LGUpe2ktLSxyW3RdPWUsMD09aSYmbihyKX0sbz1mdW5jdGlvbih0KXtlKHQpfSxhPTA7YTxzLmxlbmd0aDthKyspSWUoc1thXSx5KHQsYSksbyk7ZWxzZSBuKHIpfSl9SGgucHJvdG90eXBlLmc9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLG49QmgoXCJsb2NhbFwiKTtZaCh0aGlzLGZ1bmN0aW9uKCl7cmV0dXJuIHllKCkudGhlbihmdW5jdGlvbigpe3JldHVybiBlLmMmJlwibG9jYWxcIiE9ZS5jLkY/ZS5iLmdldChuLGUuYSk6bnVsbH0pLnRoZW4oZnVuY3Rpb24odCl7aWYodClyZXR1cm4gS2goZSxcImxvY2FsXCIpLnRoZW4oZnVuY3Rpb24oKXtlLmM9bn0pfSl9KX07dmFyIEdoPXtuYW1lOlwicGVyc2lzdGVuY2VcIixGOlwic2Vzc2lvblwifTtmdW5jdGlvbiBCaCh0KXtyZXR1cm57bmFtZTpcImF1dGhVc2VyXCIsRjp0fX1mdW5jdGlvbiBXaCh0LGUpe3JldHVybiBZaCh0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuYi5zZXQodC5jLGUudygpLHQuYSl9KX1mdW5jdGlvbiBYaCh0KXtyZXR1cm4gWWgodCxmdW5jdGlvbigpe3JldHVybiBKdSh0LmIsdC5jLHQuYSl9KX1mdW5jdGlvbiBKaCh0LGUsbil7cmV0dXJuIFloKHQsZnVuY3Rpb24oKXtyZXR1cm4gdC5iLmdldCh0LmMsdC5hKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0JiZlJiYodC5hdXRoRG9tYWluPWUpLHQmJm4mJih0LmVtdWxhdG9yQ29uZmlnPW4pLFVoKHR8fHt9KX0pfSl9ZnVuY3Rpb24gWWgodCxlKXtyZXR1cm4gdC5mPXQuZi50aGVuKGUsZSksdC5mfWZ1bmN0aW9uIHpoKHQpe2lmKHRoaXMubD0hMSxWaSh0aGlzLFwic2V0dGluZ3NcIixuZXcgcWMpLFZpKHRoaXMsXCJhcHBcIix0KSwhdGhpcy5hcHAub3B0aW9uc3x8IXRoaXMuYXBwLm9wdGlvbnMuYXBpS2V5KXRocm93IG5ldyBUKFwiaW52YWxpZC1hcGkta2V5XCIpO3ZhciBuLGUsaSxyLG8sYTt0PXpsLmRlZmF1bHQuU0RLX1ZFUlNJT04/bWkoemwuZGVmYXVsdC5TREtfVkVSU0lPTik6bnVsbCx0aGlzLmE9bmV3IEZhKHRoaXMuYXBwLm9wdGlvbnMmJnRoaXMuYXBwLm9wdGlvbnMuYXBpS2V5LF8oQSksdCksdGhpcy5SPVtdLHRoaXMucz1bXSx0aGlzLk89W10sdGhpcy5oYj16bC5kZWZhdWx0LklOVEVSTkFMLmNyZWF0ZVN1YnNjcmliZShiKHRoaXMuemMsdGhpcykpLHRoaXMuWD12b2lkIDAsdGhpcy5iYz16bC5kZWZhdWx0LklOVEVSTkFMLmNyZWF0ZVN1YnNjcmliZShiKHRoaXMuQWMsdGhpcykpLGlsKHRoaXMsbnVsbCksdGhpcy5pPW5ldyBIaCh0aGlzLmFwcC5vcHRpb25zLmFwaUtleStcIjpcIit0aGlzLmFwcC5uYW1lKSx0aGlzLkQ9bmV3IFZoKHRoaXMuYXBwLm9wdGlvbnMuYXBpS2V5K1wiOlwiK3RoaXMuYXBwLm5hbWUpLHRoaXMuJD11bCh0aGlzLChlPShuPXRoaXMpLmFwcC5vcHRpb25zLmF1dGhEb21haW4sdD1mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbih0LGUpe3JldHVybiB0LmIuZ2V0KEZoLHQuYSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdCYmZSYmKHQuYXV0aERvbWFpbj1lKSxVaCh0fHx7fSl9KX0oZS5ELGUuYXBwLm9wdGlvbnMuYXV0aERvbWFpbikudGhlbihmdW5jdGlvbih0KXtyZXR1cm4oZS5tPXQpJiYodC5oYT1lLkQpLHFoKGUuRCl9KTtyZXR1cm4gdWwoZSx0KX0obikudGhlbihmdW5jdGlvbigpe3JldHVybiBKaChuLmksZSxuLlApfSkudGhlbihmdW5jdGlvbihlKXtyZXR1cm4gZT8oZS5oYT1uLkQsbi5tJiYobi5tLmdhfHxudWxsKT09KGUuZ2F8fG51bGwpP2U6ZS5yZWxvYWQoKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIFdoKG4uaSxlKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGV9KX0pLm8oZnVuY3Rpb24odCl7cmV0dXJuXCJhdXRoL25ldHdvcmstcmVxdWVzdC1mYWlsZWRcIj09dC5jb2RlP2U6WGgobi5pKX0pKTpudWxsfSkudGhlbihmdW5jdGlvbih0KXtpbChuLHR8fG51bGwpfSksdWwobix0KSkpLHRoaXMuaD11bCh0aGlzLChpPXRoaXMpLiQudGhlbihmdW5jdGlvbigpe3JldHVybiBlbChpKX0pLm8oZnVuY3Rpb24oKXt9KS50aGVuKGZ1bmN0aW9uKCl7aWYoIWkubClyZXR1cm4gaS5qYSgpfSkubyhmdW5jdGlvbigpe30pLnRoZW4oZnVuY3Rpb24oKXt2YXIgdDtpLmx8fChpLmJhPSEwLCh0PWkuaSkuYi5hZGRMaXN0ZW5lcihCaChcImxvY2FsXCIpLHQuYSxpLmphKSl9KSksdGhpcy5iYT0hMSx0aGlzLmphPWIodGhpcy5aYyx0aGlzKSx0aGlzLkJhPWIodGhpcy5kYSx0aGlzKSx0aGlzLnlhPWIodGhpcy5tYyx0aGlzKSx0aGlzLnphPWIodGhpcy53Yyx0aGlzKSx0aGlzLkFhPWIodGhpcy54Yyx0aGlzKSx0aGlzLmI9bnVsbCxvPShyPXRoaXMpLmFwcC5vcHRpb25zLmF1dGhEb21haW4sYT1yLmFwcC5vcHRpb25zLmFwaUtleSxvJiZ3aSgpJiYoci5PYT1yLiQudGhlbihmdW5jdGlvbigpe3ZhciB0O2lmKCFyLmwpcmV0dXJuIHIuYj1MYyhvLGEsci5hcHAubmFtZSxyLlApLEFjKHIuYixyKSxvbChyKSYmd2gob2wocikpLHIubSYmKHdoKHIubSksKHQ9ci5tKS53YShyLmxhKCkpLGxoKHQsciksZGgodD1yLm0sci5KKSxwaCh0LHIpLEphKCh0PXIubSkuYSxyLlApLGZoKHQsciksci5tPW51bGwpLHIuYn0pKSx0aGlzLklOVEVSTkFMPXt9LHRoaXMuSU5URVJOQUwuZGVsZXRlPWIodGhpcy5kZWxldGUsdGhpcyksdGhpcy5JTlRFUk5BTC5sb2dGcmFtZXdvcms9Yih0aGlzLkdjLHRoaXMpLHRoaXMudT0wLGxuLmNhbGwodGhpcyksdD10aGlzLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LFwibGNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubGEoKX0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMud2EodCl9LGVudW1lcmFibGU6ITF9KSx0LmFhPW51bGwsT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJ0aVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5UKCl9LHNldDpmdW5jdGlvbih0KXt0aGlzLnliKHQpfSxlbnVtZXJhYmxlOiExfSksdC5TPW51bGwsT2JqZWN0LmRlZmluZVByb3BlcnR5KHQsXCJlbXVsYXRvckNvbmZpZ1wiLHtnZXQ6ZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm4gdD10aGlzLlA/cWkoe3Byb3RvY29sOih0PU9uKHRoaXMuUC51cmwpKS5jLGhvc3Q6dC5hLHBvcnQ6dC5nLG9wdGlvbnM6cWkoe2Rpc2FibGVXYXJuaW5nczp0aGlzLlAuZWN9KX0pOm51bGx9LGVudW1lcmFibGU6ITF9KSx0aGlzLko9W10sdGhpcy5QPW51bGx9ZnVuY3Rpb24gJGgodCl7RmUuY2FsbCh0aGlzLFwibGFuZ3VhZ2VDb2RlQ2hhbmdlZFwiKSx0aGlzLmg9dH1mdW5jdGlvbiBaaCh0KXtGZS5jYWxsKHRoaXMsXCJlbXVsYXRvckNvbmZpZ0NoYW5nZWRcIiksdGhpcy5jPXR9ZnVuY3Rpb24gUWgodCl7RmUuY2FsbCh0aGlzLFwiZnJhbWV3b3JrQ2hhbmdlZFwiKSx0aGlzLmY9dH1mdW5jdGlvbiB0bCh0KXtyZXR1cm4gdC5PYXx8d2UobmV3IFQoXCJhdXRoLWRvbWFpbi1jb25maWctcmVxdWlyZWRcIikpfWZ1bmN0aW9uIGVsKHQpe2lmKCF3aSgpKXJldHVybiB3ZShuZXcgVChcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIikpO3ZhciBlPXRsKHQpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdC5iLnFhKCl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0P3FpKHQpOm51bGx9KTtyZXR1cm4gdWwodCxlKX1mdW5jdGlvbiBubChvLGEpe3ZhciBzPXt9O3JldHVybiBzLmFwaUtleT1vLmFwcC5vcHRpb25zLmFwaUtleSxzLmF1dGhEb21haW49by5hcHAub3B0aW9ucy5hdXRoRG9tYWluLHMuYXBwTmFtZT1vLmFwcC5uYW1lLG8uUCYmKHMuZW11bGF0b3JDb25maWc9by5QKSxvLiQudGhlbihmdW5jdGlvbigpe3JldHVybiB0PXMsZT1hLG49by5ELGk9by5HYSgpLHI9bmV3IGhoKHQsZSksbiYmKHIuaGE9biksaSYmZGgocixpKSxyLnJlbG9hZCgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gcn0pO3ZhciB0LGUsbixpLHJ9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBvbChvKSYmdC51aWQ9PW9sKG8pLnVpZD9faChvbChvKSx0KTooaWwobyx0KSx3aCh0KSksby5kYSh0KX0pLnRoZW4oZnVuY3Rpb24oKXtzbChvKX0pfWZ1bmN0aW9uIGlsKHQsZSl7dmFyIG4saTtvbCh0KSYmKG49b2wodCksaT10LkJhLEIobi5TLGZ1bmN0aW9uKHQpe3JldHVybiB0PT1pfSksZW4ob2wodCksXCJ0b2tlbkNoYW5nZWRcIix0LnlhKSxlbihvbCh0KSxcInVzZXJEZWxldGVkXCIsdC56YSksZW4ob2wodCksXCJ1c2VySW52YWxpZGF0ZWRcIix0LkFhKSxnaChvbCh0KSkpLGUmJihlLlMucHVzaCh0LkJhKSxaZShlLFwidG9rZW5DaGFuZ2VkXCIsdC55YSksWmUoZSxcInVzZXJEZWxldGVkXCIsdC56YSksWmUoZSxcInVzZXJJbnZhbGlkYXRlZFwiLHQuQWEpLDA8dC51JiZtaChlKSksVmkodCxcImN1cnJlbnRVc2VyXCIsZSksZSYmKGUud2EodC5sYSgpKSxsaChlLHQpLGRoKGUsdC5KKSxwaChlLHQpLEphKGUuYSx0LlApLGZoKGUsdCkpfWZ1bmN0aW9uIHJsKG4sdCl7dmFyIGU9bnVsbCxpPW51bGw7cmV0dXJuIHVsKG4sdC50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlPV9vKHQpLGk9VnIodCksbmwobix0KX0sZnVuY3Rpb24odCl7dmFyIGU9bnVsbDt0aHJvdyhlPXQmJlwiYXV0aC9tdWx0aS1mYWN0b3ItYXV0aC1yZXF1aXJlZFwiPT09dC5jb2RlP1ljKHQudygpLG4sYihuLmtjLG4pKTplKXx8dH0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gcWkoe3VzZXI6b2wobiksY3JlZGVudGlhbDplLGFkZGl0aW9uYWxVc2VySW5mbzppLG9wZXJhdGlvblR5cGU6XCJzaWduSW5cIn0pfSkpfWZ1bmN0aW9uIG9sKHQpe3JldHVybiB0LmN1cnJlbnRVc2VyfWZ1bmN0aW9uIGFsKHQpe3JldHVybiBvbCh0KSYmb2wodCkuX2xhdHx8bnVsbH1mdW5jdGlvbiBzbCh0KXtpZih0LmJhKXtmb3IodmFyIGU9MDtlPHQucy5sZW5ndGg7ZSsrKXQuc1tlXSYmdC5zW2VdKGFsKHQpKTtpZih0LlghPT10LmdldFVpZCgpJiZ0Lk8ubGVuZ3RoKWZvcih0Llg9dC5nZXRVaWQoKSxlPTA7ZTx0Lk8ubGVuZ3RoO2UrKyl0Lk9bZV0mJnQuT1tlXShhbCh0KSl9fWZ1bmN0aW9uIHVsKHQsZSl7cmV0dXJuIHQuUi5wdXNoKGUpLGUub2EoZnVuY3Rpb24oKXtHKHQuUixlKX0pLGV9ZnVuY3Rpb24gY2woKXt9ZnVuY3Rpb24gaGwoKXt0aGlzLmE9e30sdGhpcy5iPTFlMTJ9SGgucHJvdG90eXBlLnhiPWZ1bmN0aW9uKGUpe3ZhciBuPW51bGwsaT10aGlzO3JldHVybiBmdW5jdGlvbih0KXt2YXIgZT1uZXcgVChcImludmFsaWQtcGVyc2lzdGVuY2UtdHlwZVwiKSxuPW5ldyBUKFwidW5zdXBwb3J0ZWQtcGVyc2lzdGVuY2UtdHlwZVwiKTt0Ontmb3IoaSBpbiBLdSlpZihLdVtpXT09dCl7dmFyIGk9ITA7YnJlYWsgdH1pPSExfWlmKCFpfHxcInN0cmluZ1wiIT10eXBlb2YgdCl0aHJvdyBlO3N3aXRjaChoaSgpKXtjYXNlXCJSZWFjdE5hdGl2ZVwiOmlmKFwic2Vzc2lvblwiPT09dCl0aHJvdyBuO2JyZWFrO2Nhc2VcIk5vZGVcIjppZihcIm5vbmVcIiE9PXQpdGhyb3cgbjticmVhaztjYXNlXCJXb3JrZXJcIjppZihcInNlc3Npb25cIj09PXR8fCFUdSgpJiZcIm5vbmVcIiE9PXQpdGhyb3cgbjticmVhaztkZWZhdWx0OmlmKCF5aSgpJiZcIm5vbmVcIiE9PXQpdGhyb3cgbn19KGUpLFloKHRoaXMsZnVuY3Rpb24oKXtyZXR1cm4gZSE9aS5jLkY/aS5iLmdldChpLmMsaS5hKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBuPXQsS2goaSxlKX0pLnRoZW4oZnVuY3Rpb24oKXtpZihpLmM9QmgoZSksbilyZXR1cm4gaS5iLnNldChpLmMsbixpLmEpfSk6eWUoKX0pfSx3KHpoLGxuKSx3KCRoLEZlKSx3KFpoLEZlKSx3KFFoLEZlKSwodD16aC5wcm90b3R5cGUpLnhiPWZ1bmN0aW9uKHQpe3JldHVybiB0PXRoaXMuaS54Yih0KSx1bCh0aGlzLHQpfSx0LndhPWZ1bmN0aW9uKHQpe3RoaXMuYWE9PT10fHx0aGlzLmx8fCh0aGlzLmFhPXQsWGEodGhpcy5hLHRoaXMuYWEpLHRoaXMuZGlzcGF0Y2hFdmVudChuZXcgJGgodGhpcy5sYSgpKSkpfSx0LmxhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYWF9LHQuZmQ9ZnVuY3Rpb24oKXt2YXIgdD1sLm5hdmlnYXRvcjt0aGlzLndhKHQmJih0Lmxhbmd1YWdlcyYmdC5sYW5ndWFnZXNbMF18fHQubGFuZ3VhZ2V8fHQudXNlckxhbmd1YWdlKXx8bnVsbCl9LHQuZ2Q9ZnVuY3Rpb24odCxlKXtpZighdGhpcy5QKXtpZighL15odHRwcz86XFwvXFwvLy50ZXN0KHQpKXRocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixcIkVtdWxhdG9yIFVSTCBtdXN0IHN0YXJ0IHdpdGggYSB2YWxpZCBzY2hlbWUgKGh0dHA6Ly8gb3IgaHR0cHM6Ly8pLlwiKTtlPSEhZSYmISFlLmRpc2FibGVXYXJuaW5ncyxuPWUsXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGNvbnNvbGUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIGNvbnNvbGUuaW5mbyYmY29uc29sZS5pbmZvKFwiV0FSTklORzogWW91IGFyZSB1c2luZyB0aGUgQXV0aCBFbXVsYXRvciwgd2hpY2ggaXMgaW50ZW5kZWQgZm9yIGxvY2FsIHRlc3Rpbmcgb25seS4gIERvIG5vdCB1c2Ugd2l0aCBwcm9kdWN0aW9uIGNyZWRlbnRpYWxzLlwiKSxsLmRvY3VtZW50JiYhbiYmYWkoKS50aGVuKGZ1bmN0aW9uKCl7dmFyIHQ9bC5kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO3QuaW5uZXJUZXh0PVwiUnVubmluZyBpbiBlbXVsYXRvciBtb2RlLiBEbyBub3QgdXNlIHdpdGggcHJvZHVjdGlvbiBjcmVkZW50aWFscy5cIix0LnN0eWxlLnBvc2l0aW9uPVwiZml4ZWRcIix0LnN0eWxlLndpZHRoPVwiMTAwJVwiLHQuc3R5bGUuYmFja2dyb3VuZENvbG9yPVwiI2ZmZmZmZlwiLHQuc3R5bGUuYm9yZGVyPVwiLjFlbSBzb2xpZCAjMDAwMDAwXCIsdC5zdHlsZS5jb2xvcj1cIiNmZjAwMDBcIix0LnN0eWxlLmJvdHRvbT1cIjBweFwiLHQuc3R5bGUubGVmdD1cIjBweFwiLHQuc3R5bGUubWFyZ2luPVwiMHB4XCIsdC5zdHlsZS56SW5kZXg9MWU0LHQuc3R5bGUudGV4dEFsaWduPVwiY2VudGVyXCIsdC5jbGFzc0xpc3QuYWRkKFwiZmlyZWJhc2UtZW11bGF0b3Itd2FybmluZ1wiKSxsLmRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodCl9KSx0aGlzLlA9e3VybDp0LGVjOmV9LHRoaXMuc2V0dGluZ3MuaWI9ITAsSmEodGhpcy5hLHRoaXMuUCksdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBaaCh0aGlzLlApKX12YXIgbn0sdC5HYz1mdW5jdGlvbih0KXt0aGlzLkoucHVzaCh0KSx6YSh0aGlzLmEsemwuZGVmYXVsdC5TREtfVkVSU0lPTj9taSh6bC5kZWZhdWx0LlNES19WRVJTSU9OLHRoaXMuSik6bnVsbCksdGhpcy5kaXNwYXRjaEV2ZW50KG5ldyBRaCh0aGlzLkopKX0sdC5HYT1mdW5jdGlvbigpe3JldHVybiBYKHRoaXMuSil9LHQueWI9ZnVuY3Rpb24odCl7dGhpcy5TPT09dHx8dGhpcy5sfHwodGhpcy5TPXQsdGhpcy5hLmI9dGhpcy5TKX0sdC5UPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuU30sdC50b0pTT049ZnVuY3Rpb24oKXtyZXR1cm57YXBpS2V5OnRoaXMuYXBwLm9wdGlvbnMuYXBpS2V5LGF1dGhEb21haW46dGhpcy5hcHAub3B0aW9ucy5hdXRoRG9tYWluLGFwcE5hbWU6dGhpcy5hcHAubmFtZSxjdXJyZW50VXNlcjpvbCh0aGlzKSYmb2wodGhpcykudygpfX0sdC5GYj1mdW5jdGlvbih0LGUpe3N3aXRjaCh0KXtjYXNlXCJ1bmtub3duXCI6Y2FzZVwic2lnbkluVmlhUmVkaXJlY3RcIjpyZXR1cm4hMDtjYXNlXCJzaWduSW5WaWFQb3B1cFwiOnJldHVybiB0aGlzLmc9PWUmJiEhdGhpcy5mO2RlZmF1bHQ6cmV0dXJuITF9fSx0Lm5hPWZ1bmN0aW9uKHQsZSxuLGkpe1wic2lnbkluVmlhUG9wdXBcIj09dCYmdGhpcy5nPT1pJiYobiYmdGhpcy5DP3RoaXMuQyhuKTplJiYhbiYmdGhpcy5mJiZ0aGlzLmYoZSksdGhpcy5jJiYodGhpcy5jLmNhbmNlbCgpLHRoaXMuYz1udWxsKSxkZWxldGUgdGhpcy5mLGRlbGV0ZSB0aGlzLkMpfSx0LkZhPWZ1bmN0aW9uKHQsZSl7cmV0dXJuXCJzaWduSW5WaWFSZWRpcmVjdFwiPT10fHxcInNpZ25JblZpYVBvcHVwXCI9PXQmJnRoaXMuZz09ZSYmdGhpcy5mP2IodGhpcy5pYyx0aGlzKTpudWxsfSx0LmljPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciByPXRoaXMsbz17cmVxdWVzdFVyaTp0LHBvc3RCb2R5Omksc2Vzc2lvbklkOmUsdGVuYW50SWQ6bn07cmV0dXJuIHRoaXMuYyYmKHRoaXMuYy5jYW5jZWwoKSx0aGlzLmM9bnVsbCksci4kLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gcmwocixocyhyLmEsbykpfSl9LHQuWGM9ZnVuY3Rpb24oZSl7aWYoIXdpKCkpcmV0dXJuIHdlKG5ldyBUKFwib3BlcmF0aW9uLW5vdC1zdXBwb3J0ZWQtaW4tdGhpcy1lbnZpcm9ubWVudFwiKSk7dmFyIG49dGhpcyx0PVVyKGUucHJvdmlkZXJJZCksaT1OaSgpLHI9bnVsbCxvPWlpKHI9KCFFaSgpfHx1aSgpKSYmdGhpcy5hcHAub3B0aW9ucy5hdXRoRG9tYWluJiZlLmlzT0F1dGhQcm92aWRlcj91dSh0aGlzLmFwcC5vcHRpb25zLmF1dGhEb21haW4sdGhpcy5hcHAub3B0aW9ucy5hcGlLZXksdGhpcy5hcHAubmFtZSxcInNpZ25JblZpYVBvcHVwXCIsZSxudWxsLGksemwuZGVmYXVsdC5TREtfVkVSU0lPTnx8bnVsbCxudWxsLG51bGwsdGhpcy5UKCksdGhpcy5QKTpyLHQmJnQudWEsdCYmdC50YSk7cmV0dXJuIHVsKHRoaXMsdD10bCh0aGlzKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBfYyh0LG8sXCJzaWduSW5WaWFQb3B1cFwiLGUsaSwhIXIsbi5UKCkpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiBuZXcgZmUoZnVuY3Rpb24odCxlKXtuLm5hKFwic2lnbkluVmlhUG9wdXBcIixudWxsLG5ldyBUKFwiY2FuY2VsbGVkLXBvcHVwLXJlcXVlc3RcIiksbi5nKSxuLmY9dCxuLkM9ZSxuLmc9aSxuLmM9UmMobi5iLG4sXCJzaWduSW5WaWFQb3B1cFwiLG8saSl9KX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG8mJm5pKG8pLHQ/cWkodCk6bnVsbH0pLm8oZnVuY3Rpb24odCl7dGhyb3cgbyYmbmkobyksdH0pKX0sdC5ZYz1mdW5jdGlvbih0KXtpZighd2koKSlyZXR1cm4gd2UobmV3IFQoXCJvcGVyYXRpb24tbm90LXN1cHBvcnRlZC1pbi10aGlzLWVudmlyb25tZW50XCIpKTt2YXIgZT10aGlzO3JldHVybiB1bCh0aGlzLHRsKHRoaXMpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gWWgodD1lLmksZnVuY3Rpb24oKXtyZXR1cm4gdC5iLnNldChHaCx0LmMuRix0LmEpfSk7dmFyIHR9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIENjKGUuYixcInNpZ25JblZpYVJlZGlyZWN0XCIsdCx2b2lkIDAsZS5UKCkpfSkpfSx0LnFhPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gZWwodGhpcykudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZS5iJiZqYyhlLmIuYiksdH0pLm8oZnVuY3Rpb24odCl7dGhyb3cgZS5iJiZqYyhlLmIuYiksdH0pfSx0LmRkPWZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiB3ZShuZXcgVChcIm51bGwtdXNlclwiKSk7aWYodGhpcy5TIT10LnRlbmFudElkKXJldHVybiB3ZShuZXcgVChcInRlbmFudC1pZC1taXNtYXRjaFwiKSk7dmFyIGU9dGhpcyxuPXt9O24uYXBpS2V5PXRoaXMuYXBwLm9wdGlvbnMuYXBpS2V5LG4uYXV0aERvbWFpbj10aGlzLmFwcC5vcHRpb25zLmF1dGhEb21haW4sbi5hcHBOYW1lPXRoaXMuYXBwLm5hbWU7dmFyIGkscixvLGEscyx1PShpPXQscj1uLG89ZS5ELGE9ZS5HYSgpLHM9aS5iLChuPXt9KVtIYV09cy5iJiZzLmIudG9TdHJpbmcoKSxuLnJlZnJlc2hUb2tlbj1zLmEscj1uZXcgaGgocnx8e2FwaUtleTppLmwsYXV0aERvbWFpbjppLnMsYXBwTmFtZTppLm19LG4pLG8mJihyLmhhPW8pLGEmJmRoKHIsYSksX2gocixpKSxyKTtyZXR1cm4gdWwodGhpcyx0aGlzLmgudGhlbihmdW5jdGlvbigpe2lmKGUuYXBwLm9wdGlvbnMuYXBpS2V5IT10LmwpcmV0dXJuIHUucmVsb2FkKCl9KS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIG9sKGUpJiZ0LnVpZD09b2woZSkudWlkPyhfaChvbChlKSx0KSxlLmRhKHQpKTooaWwoZSx1KSx3aCh1KSxlLmRhKHUpKX0pLnRoZW4oZnVuY3Rpb24oKXtzbChlKX0pKX0sdC5BYj1mdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10aGlzLmgudGhlbihmdW5jdGlvbigpe3JldHVybiB0LmImJmpjKHQuYi5iKSxvbCh0KT8oaWwodCxudWxsKSxYaCh0LmkpLnRoZW4oZnVuY3Rpb24oKXtzbCh0KX0pKTp5ZSgpfSk7cmV0dXJuIHVsKHRoaXMsZSl9LHQuWmM9ZnVuY3Rpb24oKXt2YXIgaT10aGlzO3JldHVybiBKaCh0aGlzLmksdGhpcy5hcHAub3B0aW9ucy5hdXRoRG9tYWluKS50aGVuKGZ1bmN0aW9uKHQpe2lmKCFpLmwpe3ZhciBlLG47aWYoKGU9b2woaSkmJnQpJiYoZT1vbChpKS51aWQsbj10LnVpZCxlPW51bGwhPWUmJlwiXCIhPT1lJiZudWxsIT1uJiZcIlwiIT09biYmZT09biksZSlyZXR1cm4gX2gob2woaSksdCksb2woaSkuSSgpOyhvbChpKXx8dCkmJihpbChpLHQpLHQmJih3aCh0KSx0LmhhPWkuRCksaS5iJiZBYyhpLmIsaSksc2woaSkpfX0pfSx0LmRhPWZ1bmN0aW9uKHQpe3JldHVybiBXaCh0aGlzLmksdCl9LHQubWM9ZnVuY3Rpb24oKXtzbCh0aGlzKSx0aGlzLmRhKG9sKHRoaXMpKX0sdC53Yz1mdW5jdGlvbigpe3RoaXMuQWIoKX0sdC54Yz1mdW5jdGlvbigpe3RoaXMuQWIoKX0sdC5rYz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB0aGlzLmgudGhlbihmdW5jdGlvbigpe3JldHVybiBybChlLHllKHQpKX0pfSx0LnpjPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy5hZGRBdXRoVG9rZW5MaXN0ZW5lcihmdW5jdGlvbigpe3QubmV4dChvbChlKSl9KX0sdC5BYz1mdW5jdGlvbih0KXt2YXIgZSxuLGk9dGhpcztuPWZ1bmN0aW9uKCl7dC5uZXh0KG9sKGkpKX0sKGU9dGhpcykuTy5wdXNoKG4pLHVsKGUsZS5oLnRoZW4oZnVuY3Rpb24oKXshZS5sJiZLKGUuTyxuKSYmZS5YIT09ZS5nZXRVaWQoKSYmKGUuWD1lLmdldFVpZCgpLG4oYWwoZSkpKX0pKX0sdC5JYz1mdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcztyZXR1cm4gdGhpcy5iYSYmUHJvbWlzZS5yZXNvbHZlKCkudGhlbihmdW5jdGlvbigpe1wiZnVuY3Rpb25cIj09dHlwZW9mIHQ/dChvbChpKSk6XCJmdW5jdGlvblwiPT10eXBlb2YgdC5uZXh0JiZ0Lm5leHQob2woaSkpfSksdGhpcy5oYih0LGUsbil9LHQuSGM9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXM7cmV0dXJuIHRoaXMuYmEmJlByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24oKXtpLlg9aS5nZXRVaWQoKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiB0P3Qob2woaSkpOlwiZnVuY3Rpb25cIj09dHlwZW9mIHQubmV4dCYmdC5uZXh0KG9sKGkpKX0pLHRoaXMuYmModCxlLG4pfSx0Lm5jPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzLmgudGhlbihmdW5jdGlvbigpe3JldHVybiBvbChlKT9vbChlKS5JKHQpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJue2FjY2Vzc1Rva2VuOnR9fSk6bnVsbH0pO3JldHVybiB1bCh0aGlzLG4pfSx0LlRjPWZ1bmN0aW9uKHQpe3ZhciBuPXRoaXM7cmV0dXJuIHRoaXMuaC50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHJsKG4sWHMobi5hLHFzLHt0b2tlbjp0fSkpfSkudGhlbihmdW5jdGlvbih0KXt2YXIgZT10LnVzZXI7cmV0dXJuIE5oKGUsXCJpc0Fub255bW91c1wiLCExKSxuLmRhKGUpLHR9KX0sdC5VYz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIHRoaXMuaC50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHJsKG4sWHMobi5hLEhzLHtlbWFpbDp0LHBhc3N3b3JkOmV9KSl9KX0sdC5kYz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIHRoaXMuaC50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHJsKG4sWHMobi5hLG1zLHtlbWFpbDp0LHBhc3N3b3JkOmV9KSl9KX0sdC4kYT1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB0aGlzLmgudGhlbihmdW5jdGlvbigpe3JldHVybiBybChlLHQua2EoZS5hKSl9KX0sdC5TYz1mdW5jdGlvbih0KXtyZXR1cm4gamkoXCJmaXJlYmFzZS5hdXRoLkF1dGgucHJvdG90eXBlLnNpZ25JbkFuZFJldHJpZXZlRGF0YVdpdGhDcmVkZW50aWFsIGlzIGRlcHJlY2F0ZWQuIFBsZWFzZSB1c2UgZmlyZWJhc2UuYXV0aC5BdXRoLnByb3RvdHlwZS5zaWduSW5XaXRoQ3JlZGVudGlhbCBpbnN0ZWFkLlwiKSx0aGlzLiRhKHQpfSx0LnpiPWZ1bmN0aW9uKCl7dmFyIG49dGhpcztyZXR1cm4gdGhpcy5oLnRoZW4oZnVuY3Rpb24oKXt2YXIgdD1vbChuKTtpZih0JiZ0LmlzQW5vbnltb3VzKXt2YXIgZT1xaSh7cHJvdmlkZXJJZDpudWxsLGlzTmV3VXNlcjohMX0pO3JldHVybiBxaSh7dXNlcjp0LGNyZWRlbnRpYWw6bnVsbCxhZGRpdGlvbmFsVXNlckluZm86ZSxvcGVyYXRpb25UeXBlOlwic2lnbkluXCJ9KX1yZXR1cm4gcmwobixuLmEuemIoKSkudGhlbihmdW5jdGlvbih0KXt2YXIgZT10LnVzZXI7cmV0dXJuIE5oKGUsXCJpc0Fub255bW91c1wiLCEwKSxuLmRhKGUpLHR9KX0pfSx0LmdldFVpZD1mdW5jdGlvbigpe3JldHVybiBvbCh0aGlzKSYmb2wodGhpcykudWlkfHxudWxsfSx0LmNjPWZ1bmN0aW9uKHQpe3RoaXMuYWRkQXV0aFRva2VuTGlzdGVuZXIodCksdGhpcy51KyssMDx0aGlzLnUmJm9sKHRoaXMpJiZtaChvbCh0aGlzKSl9LHQuUGM9ZnVuY3Rpb24oZSl7dmFyIG49dGhpcztWKHRoaXMucyxmdW5jdGlvbih0KXt0PT1lJiZuLnUtLX0pLHRoaXMudTwwJiYodGhpcy51PTApLDA9PXRoaXMudSYmb2wodGhpcykmJmdoKG9sKHRoaXMpKSx0aGlzLnJlbW92ZUF1dGhUb2tlbkxpc3RlbmVyKGUpfSx0LmFkZEF1dGhUb2tlbkxpc3RlbmVyPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy5zLnB1c2godCksdWwodGhpcyx0aGlzLmgudGhlbihmdW5jdGlvbigpe2UubHx8SyhlLnMsdCkmJnQoYWwoZSkpfSkpfSx0LnJlbW92ZUF1dGhUb2tlbkxpc3RlbmVyPWZ1bmN0aW9uKGUpe0IodGhpcy5zLGZ1bmN0aW9uKHQpe3JldHVybiB0PT1lfSl9LHQuZGVsZXRlPWZ1bmN0aW9uKCl7dGhpcy5sPSEwO2Zvcih2YXIgdD0wO3Q8dGhpcy5SLmxlbmd0aDt0KyspdGhpcy5SW3RdLmNhbmNlbChcImFwcC1kZWxldGVkXCIpO3JldHVybiB0aGlzLlI9W10sdGhpcy5pJiYodD10aGlzLmkpLmIucmVtb3ZlTGlzdGVuZXIoQmgoXCJsb2NhbFwiKSx0LmEsdGhpcy5qYSksdGhpcy5iJiYoa2ModGhpcy5iLHRoaXMpLGpjKHRoaXMuYi5iKSksUHJvbWlzZS5yZXNvbHZlKCl9LHQuaGM9ZnVuY3Rpb24odCl7cmV0dXJuIHVsKHRoaXMsWHModGhpcy5hLGdzLHtpZGVudGlmaWVyOnQsY29udGludWVVcmk6SWkoKT9RbigpOlwiaHR0cDovL2xvY2FsaG9zdFwifSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdC5zaWduaW5NZXRob2RzfHxbXX0pKX0sdC5CYz1mdW5jdGlvbih0KXtyZXR1cm4hIVRvKHQpfSx0LndiPWZ1bmN0aW9uKGUsbil7dmFyIGk9dGhpcztyZXR1cm4gdWwodGhpcyx5ZSgpLnRoZW4oZnVuY3Rpb24oKXt2YXIgdD1uZXcgeXIobik7aWYoIXQuYyl0aHJvdyBuZXcgVChcImFyZ3VtZW50LWVycm9yXCIsVHIrXCIgbXVzdCBiZSB0cnVlIHdoZW4gc2VuZGluZyBzaWduIGluIGxpbmsgdG8gZW1haWxcIik7cmV0dXJuIE9yKHQpfSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gaS5hLndiKGUsdCl9KS50aGVuKGZ1bmN0aW9uKCl7fSkpfSx0LmpkPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLlJhKHQpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHQuZGF0YS5lbWFpbH0pfSx0Lm5iPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHVsKHRoaXMsdGhpcy5hLm5iKHQsZSkudGhlbihmdW5jdGlvbigpe30pKX0sdC5SYT1mdW5jdGlvbih0KXtyZXR1cm4gdWwodGhpcyx0aGlzLmEuUmEodCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbmV3IHppKHQpfSkpfSx0LmpiPWZ1bmN0aW9uKHQpe3JldHVybiB1bCh0aGlzLHRoaXMuYS5qYih0KS50aGVuKGZ1bmN0aW9uKCl7fSkpfSx0LnZiPWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcztyZXR1cm4gdWwodGhpcyx5ZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwPT09dHx8dXQodCk/e306T3IobmV3IHlyKHQpKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG4uYS52YihlLHQpfSkudGhlbihmdW5jdGlvbigpe30pKX0sdC5XYz1mdW5jdGlvbih0LGUpe3JldHVybiB1bCh0aGlzLEtjKHRoaXMsdCxlLGIodGhpcy4kYSx0aGlzKSkpfSx0LlZjPWZ1bmN0aW9uKG4saSl7dmFyIHI9dGhpcztyZXR1cm4gdWwodGhpcyx5ZSgpLnRoZW4oZnVuY3Rpb24oKXt2YXIgdD1pfHxRbigpLGU9SW8obix0KTtpZighKHQ9VG8odCkpKXRocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixcIkludmFsaWQgZW1haWwgbGluayFcIik7aWYodC50ZW5hbnRJZCE9PXIuVCgpKXRocm93IG5ldyBUKFwidGVuYW50LWlkLW1pc21hdGNoXCIpO3JldHVybiByLiRhKGUpfSkpfSxjbC5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKCl7fSxjbC5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt9LGNsLnByb3RvdHlwZS5nZXRSZXNwb25zZT1mdW5jdGlvbigpe30sY2wucHJvdG90eXBlLmV4ZWN1dGU9ZnVuY3Rpb24oKXt9O3ZhciBsbD1udWxsO2Z1bmN0aW9uIGZsKHQsZSl7cmV0dXJuKGU9ZGwoZSkpJiZ0LmFbZV18fG51bGx9ZnVuY3Rpb24gZGwodCl7cmV0dXJuKHQ9dm9pZCAwPT09dD8xZTEyOnQpP3QudG9TdHJpbmcoKTpudWxsfWZ1bmN0aW9uIHBsKHQsZSl7dGhpcy5nPSExLHRoaXMuYz1lLHRoaXMuYT10aGlzLmI9bnVsbCx0aGlzLmg9XCJpbnZpc2libGVcIiE9PXRoaXMuYy5zaXplLHRoaXMuZj10ZSh0KTt2YXIgbj10aGlzO3RoaXMuaT1mdW5jdGlvbigpe24uZXhlY3V0ZSgpfSx0aGlzLmg/dGhpcy5leGVjdXRlKCk6WmUodGhpcy5mLFwiY2xpY2tcIix0aGlzLmkpfWZ1bmN0aW9uIHZsKHQpe2lmKHQuZyl0aHJvdyBFcnJvcihcInJlQ0FQVENIQSBtb2NrIHdhcyBhbHJlYWR5IGRlbGV0ZWQhXCIpfWZ1bmN0aW9uIG1sKCl7fWZ1bmN0aW9uIGdsKCl7fWhsLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hW3RoaXMuYi50b1N0cmluZygpXT1uZXcgcGwodCxlKSx0aGlzLmIrK30saGwucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKHQpe3ZhciBlPWZsKHRoaXMsdCk7dD1kbCh0KSxlJiZ0JiYoZS5kZWxldGUoKSxkZWxldGUgdGhpcy5hW3RdKX0saGwucHJvdG90eXBlLmdldFJlc3BvbnNlPWZ1bmN0aW9uKHQpe3JldHVybih0PWZsKHRoaXMsdCkpP3QuZ2V0UmVzcG9uc2UoKTpudWxsfSxobC5wcm90b3R5cGUuZXhlY3V0ZT1mdW5jdGlvbih0KXsodD1mbCh0aGlzLHQpKSYmdC5leGVjdXRlKCl9LHBsLnByb3RvdHlwZS5nZXRSZXNwb25zZT1mdW5jdGlvbigpe3JldHVybiB2bCh0aGlzKSx0aGlzLmJ9LHBsLnByb3RvdHlwZS5leGVjdXRlPWZ1bmN0aW9uKCl7dmwodGhpcyk7dmFyIG49dGhpczt0aGlzLmF8fCh0aGlzLmE9c2V0VGltZW91dChmdW5jdGlvbigpe24uYj1mdW5jdGlvbigpe2Zvcih2YXIgdD01MCxlPVtdOzA8dDspZS5wdXNoKFwiMTIzNDU2Nzg5MGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6QUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVpcIi5jaGFyQXQoTWF0aC5mbG9vcig2MipNYXRoLnJhbmRvbSgpKSkpLHQtLTtyZXR1cm4gZS5qb2luKFwiXCIpfSgpO3ZhciB0PW4uYy5jYWxsYmFjayxlPW4uY1tcImV4cGlyZWQtY2FsbGJhY2tcIl07aWYodCl0cnl7dChuLmIpfWNhdGNoKHQpe31uLmE9c2V0VGltZW91dChmdW5jdGlvbigpe2lmKG4uYT1udWxsLG4uYj1udWxsLGUpdHJ5e2UoKX1jYXRjaCh0KXt9bi5oJiZuLmV4ZWN1dGUoKX0sNmU0KX0sNTAwKSl9LHBsLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24oKXt2bCh0aGlzKSx0aGlzLmc9ITAsY2xlYXJUaW1lb3V0KHRoaXMuYSksdGhpcy5hPW51bGwsZW4odGhpcy5mLFwiY2xpY2tcIix0aGlzLmkpfSxWaShtbCxcIkZBQ1RPUl9JRFwiLFwicGhvbmVcIiksZ2wucHJvdG90eXBlLmc9ZnVuY3Rpb24oKXtyZXR1cm4geWUobGw9bGx8fG5ldyBobCl9LGdsLnByb3RvdHlwZS5jPWZ1bmN0aW9uKCl7fTt2YXIgYmw9bnVsbDtmdW5jdGlvbiB5bCgpe3RoaXMuYj1sLmdyZWNhcHRjaGE/MS8wOjAsdGhpcy5mPW51bGwsdGhpcy5hPVwiX19yY2JcIitNYXRoLmZsb29yKDFlNipNYXRoLnJhbmRvbSgpKS50b1N0cmluZygpfXZhciB3bD1uZXcgZHQoZ3QsXCJodHRwczovL3d3dy5nb29nbGUuY29tL3JlY2FwdGNoYS9hcGkuanM/b25sb2FkPSV7b25sb2FkfSZyZW5kZXI9ZXhwbGljaXQmaGw9JXtobH1cIiksSWw9bmV3IENpKDNlNCw2ZTQpO3lsLnByb3RvdHlwZS5nPWZ1bmN0aW9uKHIpe3ZhciBvPXRoaXM7cmV0dXJuIG5ldyBmZShmdW5jdGlvbih0LGUpe3ZhciBpPXNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKG5ldyBUKFwibmV0d29yay1yZXF1ZXN0LWZhaWxlZFwiKSl9LElsLmdldCgpKTshbC5ncmVjYXB0Y2hhfHxyIT09by5mJiYhby5iPyhsW28uYV09ZnVuY3Rpb24oKXt2YXIgbjtsLmdyZWNhcHRjaGE/KG8uZj1yLG49bC5ncmVjYXB0Y2hhLnJlbmRlcixsLmdyZWNhcHRjaGEucmVuZGVyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ9bih0LGUpLG8uYisrLHR9LGNsZWFyVGltZW91dChpKSx0KGwuZ3JlY2FwdGNoYSkpOihjbGVhclRpbWVvdXQoaSksZShuZXcgVChcImludGVybmFsLWVycm9yXCIpKSksZGVsZXRlIGxbby5hXX0seWUoUGEoSXQod2wse29ubG9hZDpvLmEsaGw6cnx8XCJcIn0pKSkubyhmdW5jdGlvbigpe2NsZWFyVGltZW91dChpKSxlKG5ldyBUKFwiaW50ZXJuYWwtZXJyb3JcIixcIlVuYWJsZSB0byBsb2FkIGV4dGVybmFsIHJlQ0FQVENIQSBkZXBlbmRlbmNpZXMhXCIpKX0pKTooY2xlYXJUaW1lb3V0KGkpLHQobC5ncmVjYXB0Y2hhKSl9KX0seWwucHJvdG90eXBlLmM9ZnVuY3Rpb24oKXt0aGlzLmItLX07dmFyIFRsPW51bGw7ZnVuY3Rpb24gRWwodCxlLG4saSxyLG8sYSl7aWYoVmkodGhpcyxcInR5cGVcIixcInJlY2FwdGNoYVwiKSx0aGlzLmM9dGhpcy5mPW51bGwsdGhpcy5EPSExLHRoaXMudj1lLHRoaXMuZz1udWxsLGE9YT9ibD1ibHx8bmV3IGdsOlRsPVRsfHxuZXcgeWwsdGhpcy5tPWEsdGhpcy5hPW58fHt0aGVtZTpcImxpZ2h0XCIsdHlwZTpcImltYWdlXCJ9LHRoaXMuaD1bXSx0aGlzLmFbU2xdKXRocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixcInNpdGVrZXkgc2hvdWxkIG5vdCBiZSBwcm92aWRlZCBmb3IgcmVDQVBUQ0hBIGFzIG9uZSBpcyBhdXRvbWF0aWNhbGx5IHByb3Zpc2lvbmVkIGZvciB0aGUgY3VycmVudCBwcm9qZWN0LlwiKTtpZih0aGlzLmk9XCJpbnZpc2libGVcIj09PXRoaXMuYVtObF0sIWwuZG9jdW1lbnQpdGhyb3cgbmV3IFQoXCJvcGVyYXRpb24tbm90LXN1cHBvcnRlZC1pbi10aGlzLWVudmlyb25tZW50XCIsXCJSZWNhcHRjaGFWZXJpZmllciBpcyBvbmx5IHN1cHBvcnRlZCBpbiBhIGJyb3dzZXIgSFRUUC9IVFRQUyBlbnZpcm9ubWVudCB3aXRoIERPTSBzdXBwb3J0LlwiKTtpZighdGUoZSl8fCF0aGlzLmkmJnRlKGUpLmhhc0NoaWxkTm9kZXMoKSl0aHJvdyBuZXcgVChcImFyZ3VtZW50LWVycm9yXCIsXCJyZUNBUFRDSEEgY29udGFpbmVyIGlzIGVpdGhlciBub3QgZm91bmQgb3IgYWxyZWFkeSBjb250YWlucyBpbm5lciBlbGVtZW50cyFcIik7dGhpcy5zPW5ldyBGYSh0LG98fG51bGwscnx8bnVsbCksdGhpcy51PWl8fGZ1bmN0aW9uKCl7cmV0dXJuIG51bGx9O3ZhciBzPXRoaXM7dGhpcy5sPVtdO3ZhciB1PXRoaXMuYVtBbF07dGhpcy5hW0FsXT1mdW5jdGlvbih0KXt2YXIgZTtfbChzLHQpLFwiZnVuY3Rpb25cIj09dHlwZW9mIHU/dSh0KTpcInN0cmluZ1wiIT10eXBlb2YgdXx8XCJmdW5jdGlvblwiPT10eXBlb2YoZT1iaSh1LGwpKSYmZSh0KX07dmFyIGM9dGhpcy5hW2tsXTt0aGlzLmFba2xdPWZ1bmN0aW9uKCl7dmFyIHQ7X2wocyxudWxsKSxcImZ1bmN0aW9uXCI9PXR5cGVvZiBjP2MoKTpcInN0cmluZ1wiIT10eXBlb2YgY3x8XCJmdW5jdGlvblwiPT10eXBlb2YodD1iaShjLGwpKSYmdCgpfX12YXIgQWw9XCJjYWxsYmFja1wiLGtsPVwiZXhwaXJlZC1jYWxsYmFja1wiLFNsPVwic2l0ZWtleVwiLE5sPVwic2l6ZVwiO2Z1bmN0aW9uIF9sKHQsZSl7Zm9yKHZhciBuPTA7bjx0LmwubGVuZ3RoO24rKyl0cnl7dC5sW25dKGUpfWNhdGNoKHQpe319ZnVuY3Rpb24gT2wodCxlKXtyZXR1cm4gdC5oLnB1c2goZSksZS5vYShmdW5jdGlvbigpe0codC5oLGUpfSksZX1mdW5jdGlvbiBDbCh0KXtpZih0LkQpdGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiLFwiUmVjYXB0Y2hhVmVyaWZpZXIgaW5zdGFuY2UgaGFzIGJlZW4gZGVzdHJveWVkLlwiKX1mdW5jdGlvbiBSbCh0LGUsbil7dmFyIGk9ITE7dHJ5e3RoaXMuYj1ufHx6bC5kZWZhdWx0LmFwcCgpfWNhdGNoKHQpe3Rocm93IG5ldyBUKFwiYXJndW1lbnQtZXJyb3JcIixcIk5vIGZpcmViYXNlLmFwcC5BcHAgaW5zdGFuY2UgaXMgY3VycmVudGx5IGluaXRpYWxpemVkLlwiKX1pZighdGhpcy5iLm9wdGlvbnN8fCF0aGlzLmIub3B0aW9ucy5hcGlLZXkpdGhyb3cgbmV3IFQoXCJpbnZhbGlkLWFwaS1rZXlcIik7bj10aGlzLmIub3B0aW9ucy5hcGlLZXk7dmFyIHI9dGhpcyxvPW51bGw7dHJ5e289dGhpcy5iLmF1dGgoKS5HYSgpfWNhdGNoKHQpe310cnl7aT10aGlzLmIuYXV0aCgpLnNldHRpbmdzLmFwcFZlcmlmaWNhdGlvbkRpc2FibGVkRm9yVGVzdGluZ31jYXRjaCh0KXt9bz16bC5kZWZhdWx0LlNES19WRVJTSU9OP21pKHpsLmRlZmF1bHQuU0RLX1ZFUlNJT04sbyk6bnVsbCxFbC5jYWxsKHRoaXMsbix0LGUsZnVuY3Rpb24oKXt0cnl7dmFyIGU9ci5iLmF1dGgoKS5sYSgpfWNhdGNoKHQpe2U9bnVsbH1yZXR1cm4gZX0sbyxfKEEpLGkpfWZ1bmN0aW9uIERsKHQsZSxuLGkpe3Q6e249QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwobik7Zm9yKHZhciByPTAsbz0hMSxhPTA7YTxlLmxlbmd0aDthKyspaWYoZVthXS5vcHRpb25hbClvPSEwO2Vsc2V7aWYobyl0aHJvdyBuZXcgVChcImludGVybmFsLWVycm9yXCIsXCJBcmd1bWVudCB2YWxpZGF0b3IgZW5jb3VudGVyZWQgYSByZXF1aXJlZCBhcmd1bWVudCBhZnRlciBhbiBvcHRpb25hbCBhcmd1bWVudC5cIik7cisrfWlmKG89ZS5sZW5ndGgsbi5sZW5ndGg8cnx8bzxuLmxlbmd0aClpPVwiRXhwZWN0ZWQgXCIrKHI9PW8/MT09cj9cIjEgYXJndW1lbnRcIjpyK1wiIGFyZ3VtZW50c1wiOnIrXCItXCIrbytcIiBhcmd1bWVudHNcIikrXCIgYnV0IGdvdCBcIituLmxlbmd0aCtcIi5cIjtlbHNle2ZvcihyPTA7cjxuLmxlbmd0aDtyKyspaWYobz1lW3JdLm9wdGlvbmFsJiZ2b2lkIDA9PT1uW3JdLCFlW3JdLk0obltyXSkmJiFvKXtpZihlPWVbcl0scjwwfHxyPj1QbC5sZW5ndGgpdGhyb3cgbmV3IFQoXCJpbnRlcm5hbC1lcnJvclwiLFwiQXJndW1lbnQgdmFsaWRhdG9yIHJlY2VpdmVkIGFuIHVuc3VwcG9ydGVkIG51bWJlciBvZiBhcmd1bWVudHMuXCIpO249UGxbcl0saT0oaT9cIlwiOm4rXCIgYXJndW1lbnQgXCIpKyhlLm5hbWU/J1wiJytlLm5hbWUrJ1wiICc6XCJcIikrXCJtdXN0IGJlIFwiK2UuSytcIi5cIjticmVhayB0fWk9bnVsbH19aWYoaSl0aHJvdyBuZXcgVChcImFyZ3VtZW50LWVycm9yXCIsdCtcIiBmYWlsZWQ6IFwiK2kpfSh0PUVsLnByb3RvdHlwZSkuSWE9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiB0aGlzLmZ8fCh0aGlzLmY9T2wodGhpcyx5ZSgpLnRoZW4oZnVuY3Rpb24oKXtpZihJaSgpJiYhY2koKSlyZXR1cm4gYWkoKTt0aHJvdyBuZXcgVChcIm9wZXJhdGlvbi1ub3Qtc3VwcG9ydGVkLWluLXRoaXMtZW52aXJvbm1lbnRcIixcIlJlY2FwdGNoYVZlcmlmaWVyIGlzIG9ubHkgc3VwcG9ydGVkIGluIGEgYnJvd3NlciBIVFRQL0hUVFBTIGVudmlyb25tZW50LlwiKX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZS5tLmcoZS51KCkpfSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZS5nPXQsWHMoZS5zLENzLHt9KX0pLnRoZW4oZnVuY3Rpb24odCl7ZS5hW1NsXT10LnJlY2FwdGNoYVNpdGVLZXl9KS5vKGZ1bmN0aW9uKHQpe3Rocm93IGUuZj1udWxsLHR9KSkpfSx0LnJlbmRlcj1mdW5jdGlvbigpe0NsKHRoaXMpO3ZhciBuPXRoaXM7cmV0dXJuIE9sKHRoaXMsdGhpcy5JYSgpLnRoZW4oZnVuY3Rpb24oKXt2YXIgdCxlO3JldHVybiBudWxsPT09bi5jJiYoZT1uLnYsbi5pfHwodD10ZShlKSxlPW9lKFwiRElWXCIpLHQuYXBwZW5kQ2hpbGQoZSkpLG4uYz1uLmcucmVuZGVyKGUsbi5hKSksbi5jfSkpfSx0LnZlcmlmeT1mdW5jdGlvbigpe0NsKHRoaXMpO3ZhciByPXRoaXM7cmV0dXJuIE9sKHRoaXMsdGhpcy5yZW5kZXIoKS50aGVuKGZ1bmN0aW9uKGUpe3JldHVybiBuZXcgZmUoZnVuY3Rpb24obil7dmFyIGksdD1yLmcuZ2V0UmVzcG9uc2UoZSk7dD9uKHQpOihpPWZ1bmN0aW9uKHQpe3ZhciBlO3QmJihlPWksQihyLmwsZnVuY3Rpb24odCl7cmV0dXJuIHQ9PWV9KSxuKHQpKX0sci5sLnB1c2goaSksci5pJiZyLmcuZXhlY3V0ZShyLmMpKX0pfSkpfSx0LnJlc2V0PWZ1bmN0aW9uKCl7Q2wodGhpcyksbnVsbCE9PXRoaXMuYyYmdGhpcy5nLnJlc2V0KHRoaXMuYyl9LHQuY2xlYXI9ZnVuY3Rpb24oKXtDbCh0aGlzKSx0aGlzLkQ9ITAsdGhpcy5tLmMoKTtmb3IodmFyIHQsZT0wO2U8dGhpcy5oLmxlbmd0aDtlKyspdGhpcy5oW2VdLmNhbmNlbChcIlJlY2FwdGNoYVZlcmlmaWVyIGluc3RhbmNlIGhhcyBiZWVuIGRlc3Ryb3llZC5cIik7aWYoIXRoaXMuaSl7ZT10ZSh0aGlzLnYpO2Zvcig7dD1lLmZpcnN0Q2hpbGQ7KWUucmVtb3ZlQ2hpbGQodCl9fSx3KFJsLEVsKTt2YXIgUGw9XCJGaXJzdCBTZWNvbmQgVGhpcmQgRm91cnRoIEZpZnRoIFNpeHRoIFNldmVudGggRWlnaHRoIE5pbnRoXCIuc3BsaXQoXCIgXCIpO2Z1bmN0aW9uIExsKHQsZSl7cmV0dXJue25hbWU6dHx8XCJcIixLOlwiYSB2YWxpZCBzdHJpbmdcIixvcHRpb25hbDohIWUsTTpmdW5jdGlvbih0KXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdH19fWZ1bmN0aW9uIHhsKHQsZSl7cmV0dXJue25hbWU6dHx8XCJcIixLOlwiYSBib29sZWFuXCIsb3B0aW9uYWw6ISFlLE06ZnVuY3Rpb24odCl7cmV0dXJuXCJib29sZWFuXCI9PXR5cGVvZiB0fX19ZnVuY3Rpb24gTWwodCxlKXtyZXR1cm57bmFtZTp0fHxcIlwiLEs6XCJhIHZhbGlkIG9iamVjdFwiLG9wdGlvbmFsOiEhZSxNOm19fWZ1bmN0aW9uIGpsKHQsZSl7cmV0dXJue25hbWU6dHx8XCJcIixLOlwiYSBmdW5jdGlvblwiLG9wdGlvbmFsOiEhZSxNOmZ1bmN0aW9uKHQpe3JldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIHR9fX1mdW5jdGlvbiBVbCh0LGUpe3JldHVybntuYW1lOnR8fFwiXCIsSzpcIm51bGxcIixvcHRpb25hbDohIWUsTTpmdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09PXR9fX1mdW5jdGlvbiBWbChuKXtyZXR1cm57bmFtZTpuP24rXCJDcmVkZW50aWFsXCI6XCJjcmVkZW50aWFsXCIsSzpuP1wiYSB2YWxpZCBcIituK1wiIGNyZWRlbnRpYWxcIjpcImEgdmFsaWQgY3JlZGVudGlhbFwiLG9wdGlvbmFsOiExLE06ZnVuY3Rpb24odCl7aWYoIXQpcmV0dXJuITE7dmFyIGU9IW58fHQucHJvdmlkZXJJZD09PW47cmV0dXJuISghdC5rYXx8IWUpfX19ZnVuY3Rpb24gRmwoKXtyZXR1cm57bmFtZTpcIm11bHRpRmFjdG9yQXNzZXJ0aW9uXCIsSzpcImEgdmFsaWQgbXVsdGlGYWN0b3JBc3NlcnRpb25cIixvcHRpb25hbDohMSxNOmZ1bmN0aW9uKHQpe3JldHVybiEhdCYmISF0LnNifX19ZnVuY3Rpb24gcWwoKXtyZXR1cm57bmFtZTpcImF1dGhQcm92aWRlclwiLEs6XCJhIHZhbGlkIEF1dGggcHJvdmlkZXJcIixvcHRpb25hbDohMSxNOmZ1bmN0aW9uKHQpe3JldHVybiEhKHQmJnQucHJvdmlkZXJJZCYmdC5oYXNPd25Qcm9wZXJ0eSYmdC5oYXNPd25Qcm9wZXJ0eShcImlzT0F1dGhQcm92aWRlclwiKSl9fX1mdW5jdGlvbiBIbCh0LGUpe3JldHVybiBtKHQpJiZcInN0cmluZ1wiPT10eXBlb2YgdC50eXBlJiZ0LnR5cGU9PT1lJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LkhhfWZ1bmN0aW9uIEtsKHQpe3JldHVybiBtKHQpJiZcInN0cmluZ1wiPT10eXBlb2YgdC51aWR9ZnVuY3Rpb24gR2woKXtyZXR1cm57bmFtZTpcImFwcGxpY2F0aW9uVmVyaWZpZXJcIixLOlwiYW4gaW1wbGVtZW50YXRpb24gb2YgZmlyZWJhc2UuYXV0aC5BcHBsaWNhdGlvblZlcmlmaWVyXCIsb3B0aW9uYWw6ITEsTTpmdW5jdGlvbih0KXtyZXR1cm4hKCF0fHxcInN0cmluZ1wiIT10eXBlb2YgdC50eXBlfHxcImZ1bmN0aW9uXCIhPXR5cGVvZiB0LnZlcmlmeSl9fX1mdW5jdGlvbiBCbChlLG4sdCxpKXtyZXR1cm57bmFtZTp0fHxcIlwiLEs6ZS5LK1wiIG9yIFwiK24uSyxvcHRpb25hbDohIWksTTpmdW5jdGlvbih0KXtyZXR1cm4gZS5NKHQpfHxuLk0odCl9fX1mdW5jdGlvbiBXbCh0LGUpe2Zvcih2YXIgbiBpbiBlKXt2YXIgaT1lW25dLm5hbWU7dFtpXT1ZbChpLHRbbl0sZVtuXS5qKX19ZnVuY3Rpb24gWGwodCxlKXtmb3IodmFyIG4gaW4gZSl7dmFyIGk9ZVtuXS5uYW1lO2khPT1uJiZPYmplY3QuZGVmaW5lUHJvcGVydHkodCxpLHtnZXQ6eShmdW5jdGlvbih0KXtyZXR1cm4gdGhpc1t0XX0sbiksc2V0OnkoZnVuY3Rpb24odCxlLG4saSl7RGwodCxbbl0sW2ldLCEwKSx0aGlzW2VdPWl9LGksbixlW25dLmtiKSxlbnVtZXJhYmxlOiEwfSl9fWZ1bmN0aW9uIEpsKHQsZSxuLGkpe3RbZV09WWwoZSxuLGkpfWZ1bmN0aW9uIFlsKHQsZSxuKXtmdW5jdGlvbiBpKCl7dmFyIHQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKTtyZXR1cm4gRGwobyxuLHQpLGUuYXBwbHkodGhpcyx0KX1pZighbilyZXR1cm4gZTt2YXIgcixvPSh0PSh0PXQpLnNwbGl0KFwiLlwiKSlbdC5sZW5ndGgtMV07Zm9yKHIgaW4gZSlpW3JdPWVbcl07Zm9yKHIgaW4gZS5wcm90b3R5cGUpaS5wcm90b3R5cGVbcl09ZS5wcm90b3R5cGVbcl07cmV0dXJuIGl9V2woemgucHJvdG90eXBlLHtqYjp7bmFtZTpcImFwcGx5QWN0aW9uQ29kZVwiLGo6W0xsKFwiY29kZVwiKV19LFJhOntuYW1lOlwiY2hlY2tBY3Rpb25Db2RlXCIsajpbTGwoXCJjb2RlXCIpXX0sbmI6e25hbWU6XCJjb25maXJtUGFzc3dvcmRSZXNldFwiLGo6W0xsKFwiY29kZVwiKSxMbChcIm5ld1Bhc3N3b3JkXCIpXX0sZGM6e25hbWU6XCJjcmVhdGVVc2VyV2l0aEVtYWlsQW5kUGFzc3dvcmRcIixqOltMbChcImVtYWlsXCIpLExsKFwicGFzc3dvcmRcIildfSxoYzp7bmFtZTpcImZldGNoU2lnbkluTWV0aG9kc0ZvckVtYWlsXCIsajpbTGwoXCJlbWFpbFwiKV19LHFhOntuYW1lOlwiZ2V0UmVkaXJlY3RSZXN1bHRcIixqOltdfSxCYzp7bmFtZTpcImlzU2lnbkluV2l0aEVtYWlsTGlua1wiLGo6W0xsKFwiZW1haWxMaW5rXCIpXX0sSGM6e25hbWU6XCJvbkF1dGhTdGF0ZUNoYW5nZWRcIixqOltCbChNbCgpLGpsKCksXCJuZXh0T3JPYnNlcnZlclwiKSxqbChcIm9wdF9lcnJvclwiLCEwKSxqbChcIm9wdF9jb21wbGV0ZWRcIiwhMCldfSxJYzp7bmFtZTpcIm9uSWRUb2tlbkNoYW5nZWRcIixqOltCbChNbCgpLGpsKCksXCJuZXh0T3JPYnNlcnZlclwiKSxqbChcIm9wdF9lcnJvclwiLCEwKSxqbChcIm9wdF9jb21wbGV0ZWRcIiwhMCldfSx2Yjp7bmFtZTpcInNlbmRQYXNzd29yZFJlc2V0RW1haWxcIixqOltMbChcImVtYWlsXCIpLEJsKE1sKFwib3B0X2FjdGlvbkNvZGVTZXR0aW5nc1wiLCEwKSxVbChudWxsLCEwKSxcIm9wdF9hY3Rpb25Db2RlU2V0dGluZ3NcIiwhMCldfSx3Yjp7bmFtZTpcInNlbmRTaWduSW5MaW5rVG9FbWFpbFwiLGo6W0xsKFwiZW1haWxcIiksTWwoXCJhY3Rpb25Db2RlU2V0dGluZ3NcIildfSx4Yjp7bmFtZTpcInNldFBlcnNpc3RlbmNlXCIsajpbTGwoXCJwZXJzaXN0ZW5jZVwiKV19LFNjOntuYW1lOlwic2lnbkluQW5kUmV0cmlldmVEYXRhV2l0aENyZWRlbnRpYWxcIixqOltWbCgpXX0semI6e25hbWU6XCJzaWduSW5Bbm9ueW1vdXNseVwiLGo6W119LCRhOntuYW1lOlwic2lnbkluV2l0aENyZWRlbnRpYWxcIixqOltWbCgpXX0sVGM6e25hbWU6XCJzaWduSW5XaXRoQ3VzdG9tVG9rZW5cIixqOltMbChcInRva2VuXCIpXX0sVWM6e25hbWU6XCJzaWduSW5XaXRoRW1haWxBbmRQYXNzd29yZFwiLGo6W0xsKFwiZW1haWxcIiksTGwoXCJwYXNzd29yZFwiKV19LFZjOntuYW1lOlwic2lnbkluV2l0aEVtYWlsTGlua1wiLGo6W0xsKFwiZW1haWxcIiksTGwoXCJlbWFpbExpbmtcIiwhMCldfSxXYzp7bmFtZTpcInNpZ25JbldpdGhQaG9uZU51bWJlclwiLGo6W0xsKFwicGhvbmVOdW1iZXJcIiksR2woKV19LFhjOntuYW1lOlwic2lnbkluV2l0aFBvcHVwXCIsajpbcWwoKV19LFljOntuYW1lOlwic2lnbkluV2l0aFJlZGlyZWN0XCIsajpbcWwoKV19LGRkOntuYW1lOlwidXBkYXRlQ3VycmVudFVzZXJcIixqOltCbCh7bmFtZTpcInVzZXJcIixLOlwiYW4gaW5zdGFuY2Ugb2YgRmlyZWJhc2UgVXNlclwiLG9wdGlvbmFsOiExLE06ZnVuY3Rpb24odCl7cmV0dXJuISEodCYmdCBpbnN0YW5jZW9mIGhoKX19LFVsKCksXCJ1c2VyXCIpXX0sQWI6e25hbWU6XCJzaWduT3V0XCIsajpbXX0sdG9KU09OOntuYW1lOlwidG9KU09OXCIsajpbTGwobnVsbCwhMCldfSxmZDp7bmFtZTpcInVzZURldmljZUxhbmd1YWdlXCIsajpbXX0sZ2Q6e25hbWU6XCJ1c2VFbXVsYXRvclwiLGo6W0xsKFwidXJsXCIpLE1sKFwib3B0aW9uc1wiLCEwKV19LGpkOntuYW1lOlwidmVyaWZ5UGFzc3dvcmRSZXNldENvZGVcIixqOltMbChcImNvZGVcIildfX0pLFhsKHpoLnByb3RvdHlwZSx7bGM6e25hbWU6XCJsYW5ndWFnZUNvZGVcIixrYjpCbChMbCgpLFVsKCksXCJsYW5ndWFnZUNvZGVcIil9LHRpOntuYW1lOlwidGVuYW50SWRcIixrYjpCbChMbCgpLFVsKCksXCJ0ZW5hbnRJZFwiKX19KSwoemguUGVyc2lzdGVuY2U9S3UpLkxPQ0FMPVwibG9jYWxcIix6aC5QZXJzaXN0ZW5jZS5TRVNTSU9OPVwic2Vzc2lvblwiLHpoLlBlcnNpc3RlbmNlLk5PTkU9XCJub25lXCIsV2woaGgucHJvdG90eXBlLHtkZWxldGU6e25hbWU6XCJkZWxldGVcIixqOltdfSxvYzp7bmFtZTpcImdldElkVG9rZW5SZXN1bHRcIixqOlt4bChcIm9wdF9mb3JjZVJlZnJlc2hcIiwhMCldfSxJOntuYW1lOlwiZ2V0SWRUb2tlblwiLGo6W3hsKFwib3B0X2ZvcmNlUmVmcmVzaFwiLCEwKV19LENjOntuYW1lOlwibGlua0FuZFJldHJpZXZlRGF0YVdpdGhDcmVkZW50aWFsXCIsajpbVmwoKV19LHFiOntuYW1lOlwibGlua1dpdGhDcmVkZW50aWFsXCIsajpbVmwoKV19LERjOntuYW1lOlwibGlua1dpdGhQaG9uZU51bWJlclwiLGo6W0xsKFwicGhvbmVOdW1iZXJcIiksR2woKV19LEVjOntuYW1lOlwibGlua1dpdGhQb3B1cFwiLGo6W3FsKCldfSxGYzp7bmFtZTpcImxpbmtXaXRoUmVkaXJlY3RcIixqOltxbCgpXX0sTGM6e25hbWU6XCJyZWF1dGhlbnRpY2F0ZUFuZFJldHJpZXZlRGF0YVdpdGhDcmVkZW50aWFsXCIsajpbVmwoKV19LHRiOntuYW1lOlwicmVhdXRoZW50aWNhdGVXaXRoQ3JlZGVudGlhbFwiLGo6W1ZsKCldfSxNYzp7bmFtZTpcInJlYXV0aGVudGljYXRlV2l0aFBob25lTnVtYmVyXCIsajpbTGwoXCJwaG9uZU51bWJlclwiKSxHbCgpXX0sTmM6e25hbWU6XCJyZWF1dGhlbnRpY2F0ZVdpdGhQb3B1cFwiLGo6W3FsKCldfSxPYzp7bmFtZTpcInJlYXV0aGVudGljYXRlV2l0aFJlZGlyZWN0XCIsajpbcWwoKV19LHJlbG9hZDp7bmFtZTpcInJlbG9hZFwiLGo6W119LHViOntuYW1lOlwic2VuZEVtYWlsVmVyaWZpY2F0aW9uXCIsajpbQmwoTWwoXCJvcHRfYWN0aW9uQ29kZVNldHRpbmdzXCIsITApLFVsKG51bGwsITApLFwib3B0X2FjdGlvbkNvZGVTZXR0aW5nc1wiLCEwKV19LHRvSlNPTjp7bmFtZTpcInRvSlNPTlwiLGo6W0xsKG51bGwsITApXX0sY2Q6e25hbWU6XCJ1bmxpbmtcIixqOltMbChcInByb3ZpZGVyXCIpXX0sQmI6e25hbWU6XCJ1cGRhdGVFbWFpbFwiLGo6W0xsKFwiZW1haWxcIildfSxDYjp7bmFtZTpcInVwZGF0ZVBhc3N3b3JkXCIsajpbTGwoXCJwYXNzd29yZFwiKV19LGVkOntuYW1lOlwidXBkYXRlUGhvbmVOdW1iZXJcIixqOltWbChcInBob25lXCIpXX0sRGI6e25hbWU6XCJ1cGRhdGVQcm9maWxlXCIsajpbTWwoXCJwcm9maWxlXCIpXX0sRWI6e25hbWU6XCJ2ZXJpZnlCZWZvcmVVcGRhdGVFbWFpbFwiLGo6W0xsKFwiZW1haWxcIiksQmwoTWwoXCJvcHRfYWN0aW9uQ29kZVNldHRpbmdzXCIsITApLFVsKG51bGwsITApLFwib3B0X2FjdGlvbkNvZGVTZXR0aW5nc1wiLCEwKV19fSksV2woaGwucHJvdG90eXBlLHtleGVjdXRlOntuYW1lOlwiZXhlY3V0ZVwifSxyZW5kZXI6e25hbWU6XCJyZW5kZXJcIn0scmVzZXQ6e25hbWU6XCJyZXNldFwifSxnZXRSZXNwb25zZTp7bmFtZTpcImdldFJlc3BvbnNlXCJ9fSksV2woY2wucHJvdG90eXBlLHtleGVjdXRlOntuYW1lOlwiZXhlY3V0ZVwifSxyZW5kZXI6e25hbWU6XCJyZW5kZXJcIn0scmVzZXQ6e25hbWU6XCJyZXNldFwifSxnZXRSZXNwb25zZTp7bmFtZTpcImdldFJlc3BvbnNlXCJ9fSksV2woZmUucHJvdG90eXBlLHtvYTp7bmFtZTpcImZpbmFsbHlcIn0sbzp7bmFtZTpcImNhdGNoXCJ9LHRoZW46e25hbWU6XCJ0aGVuXCJ9fSksWGwocWMucHJvdG90eXBlLHthcHBWZXJpZmljYXRpb25EaXNhYmxlZDp7bmFtZTpcImFwcFZlcmlmaWNhdGlvbkRpc2FibGVkRm9yVGVzdGluZ1wiLGtiOnhsKFwiYXBwVmVyaWZpY2F0aW9uRGlzYWJsZWRGb3JUZXN0aW5nXCIpfX0pLFdsKEhjLnByb3RvdHlwZSx7Y29uZmlybTp7bmFtZTpcImNvbmZpcm1cIixqOltMbChcInZlcmlmaWNhdGlvbkNvZGVcIildfX0pLEpsKFpyLFwiZnJvbUpTT05cIixmdW5jdGlvbih0KXt0PVwic3RyaW5nXCI9PXR5cGVvZiB0P0pTT04ucGFyc2UodCk6dDtmb3IodmFyIGUsbj1bb28seW8sQW8sbm9dLGk9MDtpPG4ubGVuZ3RoO2krKylpZihlPW5baV0odCkpcmV0dXJuIGU7cmV0dXJuIG51bGx9LFtCbChMbCgpLE1sKCksXCJqc29uXCIpXSksSmwod28sXCJjcmVkZW50aWFsXCIsZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IGJvKHQsZSl9LFtMbChcImVtYWlsXCIpLExsKFwicGFzc3dvcmRcIildKSxXbChiby5wcm90b3R5cGUse3c6e25hbWU6XCJ0b0pTT05cIixqOltMbChudWxsLCEwKV19fSksV2woY28ucHJvdG90eXBlLHtDYTp7bmFtZTpcImFkZFNjb3BlXCIsajpbTGwoXCJzY29wZVwiKV19LEthOntuYW1lOlwic2V0Q3VzdG9tUGFyYW1ldGVyc1wiLGo6W01sKFwiY3VzdG9tT0F1dGhQYXJhbWV0ZXJzXCIpXX19KSxKbChjbyxcImNyZWRlbnRpYWxcIixobyxbQmwoTGwoKSxNbCgpLFwidG9rZW5cIildKSxKbCh3byxcImNyZWRlbnRpYWxXaXRoTGlua1wiLElvLFtMbChcImVtYWlsXCIpLExsKFwiZW1haWxMaW5rXCIpXSksV2wobG8ucHJvdG90eXBlLHtDYTp7bmFtZTpcImFkZFNjb3BlXCIsajpbTGwoXCJzY29wZVwiKV19LEthOntuYW1lOlwic2V0Q3VzdG9tUGFyYW1ldGVyc1wiLGo6W01sKFwiY3VzdG9tT0F1dGhQYXJhbWV0ZXJzXCIpXX19KSxKbChsbyxcImNyZWRlbnRpYWxcIixmbyxbQmwoTGwoKSxNbCgpLFwidG9rZW5cIildKSxXbChwby5wcm90b3R5cGUse0NhOntuYW1lOlwiYWRkU2NvcGVcIixqOltMbChcInNjb3BlXCIpXX0sS2E6e25hbWU6XCJzZXRDdXN0b21QYXJhbWV0ZXJzXCIsajpbTWwoXCJjdXN0b21PQXV0aFBhcmFtZXRlcnNcIildfX0pLEpsKHBvLFwiY3JlZGVudGlhbFwiLHZvLFtCbChMbCgpLEJsKE1sKCksVWwoKSksXCJpZFRva2VuXCIpLEJsKExsKCksVWwoKSxcImFjY2Vzc1Rva2VuXCIsITApXSksV2wobW8ucHJvdG90eXBlLHtLYTp7bmFtZTpcInNldEN1c3RvbVBhcmFtZXRlcnNcIixqOltNbChcImN1c3RvbU9BdXRoUGFyYW1ldGVyc1wiKV19fSksSmwobW8sXCJjcmVkZW50aWFsXCIsZ28sW0JsKExsKCksTWwoKSxcInRva2VuXCIpLExsKFwic2VjcmV0XCIsITApXSksV2wodW8ucHJvdG90eXBlLHtDYTp7bmFtZTpcImFkZFNjb3BlXCIsajpbTGwoXCJzY29wZVwiKV19LGNyZWRlbnRpYWw6e25hbWU6XCJjcmVkZW50aWFsXCIsajpbQmwoTGwoKSxCbChNbCgpLFVsKCkpLFwib3B0aW9uc09ySWRUb2tlblwiKSxCbChMbCgpLFVsKCksXCJhY2Nlc3NUb2tlblwiLCEwKV19LEthOntuYW1lOlwic2V0Q3VzdG9tUGFyYW1ldGVyc1wiLGo6W01sKFwiY3VzdG9tT0F1dGhQYXJhbWV0ZXJzXCIpXX19KSxXbChpby5wcm90b3R5cGUse3c6e25hbWU6XCJ0b0pTT05cIixqOltMbChudWxsLCEwKV19fSksV2wodG8ucHJvdG90eXBlLHt3OntuYW1lOlwidG9KU09OXCIsajpbTGwobnVsbCwhMCldfX0pLEpsKFNvLFwiY3JlZGVudGlhbFwiLE5vLFtMbChcInZlcmlmaWNhdGlvbklkXCIpLExsKFwidmVyaWZpY2F0aW9uQ29kZVwiKV0pLFdsKFNvLnByb3RvdHlwZSx7ZmI6e25hbWU6XCJ2ZXJpZnlQaG9uZU51bWJlclwiLGo6W0JsKExsKCkse25hbWU6XCJwaG9uZUluZm9PcHRpb25zXCIsSzpcInZhbGlkIHBob25lIGluZm8gb3B0aW9uc1wiLG9wdGlvbmFsOiExLE06ZnVuY3Rpb24odCl7cmV0dXJuISF0JiYodC5zZXNzaW9uJiZ0LnBob25lTnVtYmVyP0hsKHQuc2Vzc2lvbix6cikmJlwic3RyaW5nXCI9PXR5cGVvZiB0LnBob25lTnVtYmVyOnQuc2Vzc2lvbiYmdC5tdWx0aUZhY3RvckhpbnQ/SGwodC5zZXNzaW9uLCRyKSYmS2wodC5tdWx0aUZhY3RvckhpbnQpOnQuc2Vzc2lvbiYmdC5tdWx0aUZhY3RvclVpZD9IbCh0LnNlc3Npb24sJHIpJiZcInN0cmluZ1wiPT10eXBlb2YgdC5tdWx0aUZhY3RvclVpZDohIXQucGhvbmVOdW1iZXImJlwic3RyaW5nXCI9PXR5cGVvZiB0LnBob25lTnVtYmVyKX19LFwicGhvbmVJbmZvT3B0aW9uc1wiKSxHbCgpXX19KSxXbChFby5wcm90b3R5cGUse3c6e25hbWU6XCJ0b0pTT05cIixqOltMbChudWxsLCEwKV19fSksV2woVC5wcm90b3R5cGUse3RvSlNPTjp7bmFtZTpcInRvSlNPTlwiLGo6W0xsKG51bGwsITApXX19KSxXbChNby5wcm90b3R5cGUse3RvSlNPTjp7bmFtZTpcInRvSlNPTlwiLGo6W0xsKG51bGwsITApXX19KSxXbCh4by5wcm90b3R5cGUse3RvSlNPTjp7bmFtZTpcInRvSlNPTlwiLGo6W0xsKG51bGwsITApXX19KSxXbChKYy5wcm90b3R5cGUse3RvSlNPTjp7bmFtZTpcInRvSlNPTlwiLGo6W0xsKG51bGwsITApXX19KSxXbChCYy5wcm90b3R5cGUse1JjOntuYW1lOlwicmVzb2x2ZVNpZ25JblwiLGo6W0ZsKCldfX0pLFdsKHRoLnByb3RvdHlwZSx7UmI6e25hbWU6XCJnZXRTZXNzaW9uXCIsajpbXX0sZmM6e25hbWU6XCJlbnJvbGxcIixqOltGbCgpLExsKFwiZGlzcGxheU5hbWVcIiwhMCldfSxiZDp7bmFtZTpcInVuZW5yb2xsXCIsajpbQmwoe25hbWU6XCJtdWx0aUZhY3RvckluZm9cIixLOlwiYSB2YWxpZCBtdWx0aUZhY3RvckluZm9cIixvcHRpb25hbDohMSxNOktsfSxMbCgpLFwibXVsdGlGYWN0b3JJbmZvSWRlbnRpZmllclwiKV19fSksV2woUmwucHJvdG90eXBlLHtjbGVhcjp7bmFtZTpcImNsZWFyXCIsajpbXX0scmVuZGVyOntuYW1lOlwicmVuZGVyXCIsajpbXX0sdmVyaWZ5OntuYW1lOlwidmVyaWZ5XCIsajpbXX19KSxKbChocixcInBhcnNlTGlua1wiLGJyLFtMbChcImxpbmtcIildKSxKbChtbCxcImFzc2VydGlvblwiLGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgWmModCl9LFtWbChcInBob25lXCIpXSksZnVuY3Rpb24oKXtpZih2b2lkIDA9PT16bC5kZWZhdWx0fHwhemwuZGVmYXVsdC5JTlRFUk5BTHx8IXpsLmRlZmF1bHQuSU5URVJOQUwucmVnaXN0ZXJDb21wb25lbnQpdGhyb3cgRXJyb3IoXCJDYW5ub3QgZmluZCB0aGUgZmlyZWJhc2UgbmFtZXNwYWNlOyBiZSBzdXJlIHRvIGluY2x1ZGUgZmlyZWJhc2UtYXBwLmpzIGJlZm9yZSB0aGlzIGxpYnJhcnkuXCIpO3ZhciB0PXtBY3Rpb25Db2RlSW5mbzp7T3BlcmF0aW9uOntFTUFJTF9TSUdOSU46WmksUEFTU1dPUkRfUkVTRVQ6XCJQQVNTV09SRF9SRVNFVFwiLFJFQ09WRVJfRU1BSUw6XCJSRUNPVkVSX0VNQUlMXCIsUkVWRVJUX1NFQ09ORF9GQUNUT1JfQURESVRJT046JGksVkVSSUZZX0FORF9DSEFOR0VfRU1BSUw6UWksVkVSSUZZX0VNQUlMOlwiVkVSSUZZX0VNQUlMXCJ9fSxBdXRoOnpoLEF1dGhDcmVkZW50aWFsOlpyLEVycm9yOlR9O0psKHQsXCJFbWFpbEF1dGhQcm92aWRlclwiLHdvLFtdKSxKbCh0LFwiRmFjZWJvb2tBdXRoUHJvdmlkZXJcIixjbyxbXSksSmwodCxcIkdpdGh1YkF1dGhQcm92aWRlclwiLGxvLFtdKSxKbCh0LFwiR29vZ2xlQXV0aFByb3ZpZGVyXCIscG8sW10pLEpsKHQsXCJUd2l0dGVyQXV0aFByb3ZpZGVyXCIsbW8sW10pLEpsKHQsXCJPQXV0aFByb3ZpZGVyXCIsdW8sW0xsKFwicHJvdmlkZXJJZFwiKV0pLEpsKHQsXCJTQU1MQXV0aFByb3ZpZGVyXCIsc28sW0xsKFwicHJvdmlkZXJJZFwiKV0pLEpsKHQsXCJQaG9uZUF1dGhQcm92aWRlclwiLFNvLFt7bmFtZTpcImF1dGhcIixLOlwiYW4gaW5zdGFuY2Ugb2YgRmlyZWJhc2UgQXV0aFwiLG9wdGlvbmFsOiEwLE06ZnVuY3Rpb24odCl7cmV0dXJuISEodCYmdCBpbnN0YW5jZW9mIHpoKX19XSksSmwodCxcIlJlY2FwdGNoYVZlcmlmaWVyXCIsUmwsW0JsKExsKCkse25hbWU6XCJcIixLOlwiYW4gSFRNTCBlbGVtZW50XCIsb3B0aW9uYWw6ITEsTTpmdW5jdGlvbih0KXtyZXR1cm4hISh0JiZ0IGluc3RhbmNlb2YgRWxlbWVudCl9fSxcInJlY2FwdGNoYUNvbnRhaW5lclwiKSxNbChcInJlY2FwdGNoYVBhcmFtZXRlcnNcIiwhMCkse25hbWU6XCJhcHBcIixLOlwiYW4gaW5zdGFuY2Ugb2YgRmlyZWJhc2UgQXBwXCIsb3B0aW9uYWw6ITAsTTpmdW5jdGlvbih0KXtyZXR1cm4hISh0JiZ0IGluc3RhbmNlb2YgemwuZGVmYXVsdC5hcHAuQXBwKX19XSksSmwodCxcIkFjdGlvbkNvZGVVUkxcIixocixbXSksSmwodCxcIlBob25lTXVsdGlGYWN0b3JHZW5lcmF0b3JcIixtbCxbXSksemwuZGVmYXVsdC5JTlRFUk5BTC5yZWdpc3RlckNvbXBvbmVudCh7bmFtZTpcImF1dGhcIixpbnN0YW5jZUZhY3Rvcnk6ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB6aCh0PXQuZ2V0UHJvdmlkZXIoXCJhcHBcIikuZ2V0SW1tZWRpYXRlKCkpfSxtdWx0aXBsZUluc3RhbmNlczohMSxzZXJ2aWNlUHJvcHM6dCxpbnN0YW50aWF0aW9uTW9kZTpcIkxBWllcIix0eXBlOlwiUFVCTElDXCJ9KSx6bC5kZWZhdWx0LklOVEVSTkFMLnJlZ2lzdGVyQ29tcG9uZW50KHtuYW1lOlwiYXV0aC1pbnRlcm5hbFwiLGluc3RhbmNlRmFjdG9yeTpmdW5jdGlvbih0KXtyZXR1cm57Z2V0VWlkOmIoKHQ9dC5nZXRQcm92aWRlcihcImF1dGhcIikuZ2V0SW1tZWRpYXRlKCkpLmdldFVpZCx0KSxnZXRUb2tlbjpiKHQubmMsdCksYWRkQXV0aFRva2VuTGlzdGVuZXI6Yih0LmNjLHQpLHJlbW92ZUF1dGhUb2tlbkxpc3RlbmVyOmIodC5QYyx0KX19LG11bHRpcGxlSW5zdGFuY2VzOiExLGluc3RhbnRpYXRpb25Nb2RlOlwiTEFaWVwiLHR5cGU6XCJQUklWQVRFXCJ9KSx6bC5kZWZhdWx0LnJlZ2lzdGVyVmVyc2lvbihcIkBmaXJlYmFzZS9hdXRoXCIsXCIwLjE2LjVcIiksemwuZGVmYXVsdC5JTlRFUk5BTC5leHRlbmROYW1lc3BhY2Uoe1VzZXI6aGh9KX0oKX0uYXBwbHkoXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbD9nbG9iYWw6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHNlbGY/c2VsZjpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fSl9LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaCh0KXt0aHJvdyBjb25zb2xlLmVycm9yKHQpLG5ldyBFcnJvcihcIkNhbm5vdCBpbnN0YW50aWF0ZSBmaXJlYmFzZS1hdXRoLmpzIC0gYmUgc3VyZSB0byBsb2FkIGZpcmViYXNlLWFwcC5qcyBmaXJzdC5cIil9fSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1maXJlYmFzZS1hdXRoLmpzLm1hcFxuIiwiIWZ1bmN0aW9uKHQsZSl7XCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGU/ZShyZXF1aXJlKFwiQGZpcmViYXNlL2FwcFwiKSk6XCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kP2RlZmluZShbXCJAZmlyZWJhc2UvYXBwXCJdLGUpOmUoKHQ9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpczp0fHxzZWxmKS5maXJlYmFzZSl9KHRoaXMsZnVuY3Rpb24ob20pe1widXNlIHN0cmljdFwiO3RyeXshZnVuY3Rpb24oKXtmdW5jdGlvbiB0KHQpe3JldHVybiB0JiZcIm9iamVjdFwiPT10eXBlb2YgdCYmXCJkZWZhdWx0XCJpbiB0P3Q6e2RlZmF1bHQ6dH19dmFyIGU9dChvbSkscj1mdW5jdGlvbih0LGUpe3JldHVybihyPU9iamVjdC5zZXRQcm90b3R5cGVPZnx8e19fcHJvdG9fXzpbXX1pbnN0YW5jZW9mIEFycmF5JiZmdW5jdGlvbih0LGUpe3QuX19wcm90b19fPWV9fHxmdW5jdGlvbih0LGUpe2Zvcih2YXIgbiBpbiBlKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pJiYodFtuXT1lW25dKX0pKHQsZSl9O2Z1bmN0aW9uIG4odCxlKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZiBlJiZudWxsIT09ZSl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xhc3MgZXh0ZW5kcyB2YWx1ZSBcIitTdHJpbmcoZSkrXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtmdW5jdGlvbiBuKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fXIodCxlKSx0LnByb3RvdHlwZT1udWxsPT09ZT9PYmplY3QuY3JlYXRlKGUpOihuLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuZXcgbil9ZnVuY3Rpb24geSh0LHMsYSx1KXtyZXR1cm4gbmV3KGE9YXx8UHJvbWlzZSkoZnVuY3Rpb24obixlKXtmdW5jdGlvbiByKHQpe3RyeXtvKHUubmV4dCh0KSl9Y2F0Y2godCl7ZSh0KX19ZnVuY3Rpb24gaSh0KXt0cnl7byh1LnRocm93KHQpKX1jYXRjaCh0KXtlKHQpfX1mdW5jdGlvbiBvKHQpe3ZhciBlO3QuZG9uZT9uKHQudmFsdWUpOigoZT10LnZhbHVlKWluc3RhbmNlb2YgYT9lOm5ldyBhKGZ1bmN0aW9uKHQpe3QoZSl9KSkudGhlbihyLGkpfW8oKHU9dS5hcHBseSh0LHN8fFtdKSkubmV4dCgpKX0pfWZ1bmN0aW9uIGcobixyKXt2YXIgaSxvLHMsYT17bGFiZWw6MCxzZW50OmZ1bmN0aW9uKCl7aWYoMSZzWzBdKXRocm93IHNbMV07cmV0dXJuIHNbMV19LHRyeXM6W10sb3BzOltdfSx0PXtuZXh0OmUoMCksdGhyb3c6ZSgxKSxyZXR1cm46ZSgyKX07cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgU3ltYm9sJiYodFtTeW1ib2wuaXRlcmF0b3JdPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXN9KSx0O2Z1bmN0aW9uIGUoZSl7cmV0dXJuIGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihlKXtpZihpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBleGVjdXRpbmcuXCIpO2Zvcig7YTspdHJ5e2lmKGk9MSxvJiYocz0yJmVbMF0/by5yZXR1cm46ZVswXT9vLnRocm93fHwoKHM9by5yZXR1cm4pJiZzLmNhbGwobyksMCk6by5uZXh0KSYmIShzPXMuY2FsbChvLGVbMV0pKS5kb25lKXJldHVybiBzO3N3aXRjaChvPTAsKGU9cz9bMiZlWzBdLHMudmFsdWVdOmUpWzBdKXtjYXNlIDA6Y2FzZSAxOnM9ZTticmVhaztjYXNlIDQ6cmV0dXJuIGEubGFiZWwrKyx7dmFsdWU6ZVsxXSxkb25lOiExfTtjYXNlIDU6YS5sYWJlbCsrLG89ZVsxXSxlPVswXTtjb250aW51ZTtjYXNlIDc6ZT1hLm9wcy5wb3AoKSxhLnRyeXMucG9wKCk7Y29udGludWU7ZGVmYXVsdDppZighKHM9MDwocz1hLnRyeXMpLmxlbmd0aCYmc1tzLmxlbmd0aC0xXSkmJig2PT09ZVswXXx8Mj09PWVbMF0pKXthPTA7Y29udGludWV9aWYoMz09PWVbMF0mJighc3x8ZVsxXT5zWzBdJiZlWzFdPHNbM10pKXthLmxhYmVsPWVbMV07YnJlYWt9aWYoNj09PWVbMF0mJmEubGFiZWw8c1sxXSl7YS5sYWJlbD1zWzFdLHM9ZTticmVha31pZihzJiZhLmxhYmVsPHNbMl0pe2EubGFiZWw9c1syXSxhLm9wcy5wdXNoKGUpO2JyZWFrfXNbMl0mJmEub3BzLnBvcCgpLGEudHJ5cy5wb3AoKTtjb250aW51ZX1lPXIuY2FsbChuLGEpfWNhdGNoKHQpe2U9WzYsdF0sbz0wfWZpbmFsbHl7aT1zPTB9aWYoNSZlWzBdKXRocm93IGVbMV07cmV0dXJue3ZhbHVlOmVbMF0/ZVsxXTp2b2lkIDAsZG9uZTohMH19KFtlLHRdKX19fWZ1bmN0aW9uIHModCxlKXtmb3IodmFyIG49MCxyPWUubGVuZ3RoLGk9dC5sZW5ndGg7bjxyO24rKyxpKyspdFtpXT1lW25dO3JldHVybiB0fWZ1bmN0aW9uIGgoKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgbmF2aWdhdG9yJiZcInN0cmluZ1wiPT10eXBlb2YgbmF2aWdhdG9yLnVzZXJBZ2VudD9uYXZpZ2F0b3IudXNlckFnZW50OlwiXCJ9dmFyIGksbz1cIkZpcmViYXNlRXJyb3JcIixhPShuKHUsaT1FcnJvciksdSk7ZnVuY3Rpb24gdSh0LGUsbil7ZT1pLmNhbGwodGhpcyxlKXx8dGhpcztyZXR1cm4gZS5jb2RlPXQsZS5jdXN0b21EYXRhPW4sZS5uYW1lPW8sT2JqZWN0LnNldFByb3RvdHlwZU9mKGUsdS5wcm90b3R5cGUpLEVycm9yLmNhcHR1cmVTdGFja1RyYWNlJiZFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShlLGMucHJvdG90eXBlLmNyZWF0ZSksZX12YXIgYz0obC5wcm90b3R5cGUuY3JlYXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1bXSxuPTE7bjxhcmd1bWVudHMubGVuZ3RoO24rKyllW24tMV09YXJndW1lbnRzW25dO3ZhciByLGk9ZVswXXx8e30sbz10aGlzLnNlcnZpY2UrXCIvXCIrdCx0PXRoaXMuZXJyb3JzW3RdLHQ9dD8ocj1pLHQucmVwbGFjZShkLGZ1bmN0aW9uKHQsZSl7dmFyIG49cltlXTtyZXR1cm4gbnVsbCE9bj9TdHJpbmcobik6XCI8XCIrZStcIj8+XCJ9KSk6XCJFcnJvclwiLHQ9dGhpcy5zZXJ2aWNlTmFtZStcIjogXCIrdCtcIiAoXCIrbytcIikuXCI7cmV0dXJuIG5ldyBhKG8sdCxpKX0sbCk7ZnVuY3Rpb24gbCh0LGUsbil7dGhpcy5zZXJ2aWNlPXQsdGhpcy5zZXJ2aWNlTmFtZT1lLHRoaXMuZXJyb3JzPW59dmFyIGYsZD0vXFx7XFwkKFtefV0rKX0vZztmdW5jdGlvbiBtKHQpe3JldHVybiB0JiZ0Ll9kZWxlZ2F0ZT90Ll9kZWxlZ2F0ZTp0fShFZT1mPWZ8fHt9KVtFZS5ERUJVRz0wXT1cIkRFQlVHXCIsRWVbRWUuVkVSQk9TRT0xXT1cIlZFUkJPU0VcIixFZVtFZS5JTkZPPTJdPVwiSU5GT1wiLEVlW0VlLldBUk49M109XCJXQVJOXCIsRWVbRWUuRVJST1I9NF09XCJFUlJPUlwiLEVlW0VlLlNJTEVOVD01XT1cIlNJTEVOVFwiO2Z1bmN0aW9uIHAodCxlKXtmb3IodmFyIG49W10scj0yO3I8YXJndW1lbnRzLmxlbmd0aDtyKyspbltyLTJdPWFyZ3VtZW50c1tyXTtpZighKGU8dC5sb2dMZXZlbCkpe3ZhciBpPShuZXcgRGF0ZSkudG9JU09TdHJpbmcoKSxvPXdbZV07aWYoIW8pdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGVkIHRvIGxvZyBhIG1lc3NhZ2Ugd2l0aCBhbiBpbnZhbGlkIGxvZ1R5cGUgKHZhbHVlOiBcIitlK1wiKVwiKTtjb25zb2xlW29dLmFwcGx5KGNvbnNvbGUscyhbXCJbXCIraStcIl0gIFwiK3QubmFtZStcIjpcIl0sbikpfX12YXIgdj17ZGVidWc6Zi5ERUJVRyx2ZXJib3NlOmYuVkVSQk9TRSxpbmZvOmYuSU5GTyx3YXJuOmYuV0FSTixlcnJvcjpmLkVSUk9SLHNpbGVudDpmLlNJTEVOVH0sYj1mLklORk8sdz0oKFRlPXt9KVtmLkRFQlVHXT1cImxvZ1wiLFRlW2YuVkVSQk9TRV09XCJsb2dcIixUZVtmLklORk9dPVwiaW5mb1wiLFRlW2YuV0FSTl09XCJ3YXJuXCIsVGVbZi5FUlJPUl09XCJlcnJvclwiLFRlKSxJPShPYmplY3QuZGVmaW5lUHJvcGVydHkoRS5wcm90b3R5cGUsXCJsb2dMZXZlbFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fbG9nTGV2ZWx9LHNldDpmdW5jdGlvbih0KXtpZighKHQgaW4gZikpdGhyb3cgbmV3IFR5cGVFcnJvcignSW52YWxpZCB2YWx1ZSBcIicrdCsnXCIgYXNzaWduZWQgdG8gYGxvZ0xldmVsYCcpO3RoaXMuX2xvZ0xldmVsPXR9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksRS5wcm90b3R5cGUuc2V0TG9nTGV2ZWw9ZnVuY3Rpb24odCl7dGhpcy5fbG9nTGV2ZWw9XCJzdHJpbmdcIj09dHlwZW9mIHQ/dlt0XTp0fSxPYmplY3QuZGVmaW5lUHJvcGVydHkoRS5wcm90b3R5cGUsXCJsb2dIYW5kbGVyXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb2dIYW5kbGVyfSxzZXQ6ZnVuY3Rpb24odCl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiVmFsdWUgYXNzaWduZWQgdG8gYGxvZ0hhbmRsZXJgIG11c3QgYmUgYSBmdW5jdGlvblwiKTt0aGlzLl9sb2dIYW5kbGVyPXR9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEUucHJvdG90eXBlLFwidXNlckxvZ0hhbmRsZXJcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3VzZXJMb2dIYW5kbGVyfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fdXNlckxvZ0hhbmRsZXI9dH0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxFLnByb3RvdHlwZS5kZWJ1Zz1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTt0aGlzLl91c2VyTG9nSGFuZGxlciYmdGhpcy5fdXNlckxvZ0hhbmRsZXIuYXBwbHkodGhpcyxzKFt0aGlzLGYuREVCVUddLHQpKSx0aGlzLl9sb2dIYW5kbGVyLmFwcGx5KHRoaXMscyhbdGhpcyxmLkRFQlVHXSx0KSl9LEUucHJvdG90eXBlLmxvZz1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTt0aGlzLl91c2VyTG9nSGFuZGxlciYmdGhpcy5fdXNlckxvZ0hhbmRsZXIuYXBwbHkodGhpcyxzKFt0aGlzLGYuVkVSQk9TRV0sdCkpLHRoaXMuX2xvZ0hhbmRsZXIuYXBwbHkodGhpcyxzKFt0aGlzLGYuVkVSQk9TRV0sdCkpfSxFLnByb3RvdHlwZS5pbmZvPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRbZV09YXJndW1lbnRzW2VdO3RoaXMuX3VzZXJMb2dIYW5kbGVyJiZ0aGlzLl91c2VyTG9nSGFuZGxlci5hcHBseSh0aGlzLHMoW3RoaXMsZi5JTkZPXSx0KSksdGhpcy5fbG9nSGFuZGxlci5hcHBseSh0aGlzLHMoW3RoaXMsZi5JTkZPXSx0KSl9LEUucHJvdG90eXBlLndhcm49ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07dGhpcy5fdXNlckxvZ0hhbmRsZXImJnRoaXMuX3VzZXJMb2dIYW5kbGVyLmFwcGx5KHRoaXMscyhbdGhpcyxmLldBUk5dLHQpKSx0aGlzLl9sb2dIYW5kbGVyLmFwcGx5KHRoaXMscyhbdGhpcyxmLldBUk5dLHQpKX0sRS5wcm90b3R5cGUuZXJyb3I9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07dGhpcy5fdXNlckxvZ0hhbmRsZXImJnRoaXMuX3VzZXJMb2dIYW5kbGVyLmFwcGx5KHRoaXMscyhbdGhpcyxmLkVSUk9SXSx0KSksdGhpcy5fbG9nSGFuZGxlci5hcHBseSh0aGlzLHMoW3RoaXMsZi5FUlJPUl0sdCkpfSxFKTtmdW5jdGlvbiBFKHQpe3RoaXMubmFtZT10LHRoaXMuX2xvZ0xldmVsPWIsdGhpcy5fbG9nSGFuZGxlcj1wLHRoaXMuX3VzZXJMb2dIYW5kbGVyPW51bGx9dmFyIFQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4oVD1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxlKXt0Ll9fcHJvdG9fXz1lfXx8ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4gaW4gZSlPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxuKSYmKHRbbl09ZVtuXSl9KSh0LGUpfTtmdW5jdGlvbiBfKHQpe3ZhciBlPVwiZnVuY3Rpb25cIj09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yLG49ZSYmdFtlXSxyPTA7aWYobilyZXR1cm4gbi5jYWxsKHQpO2lmKHQmJlwibnVtYmVyXCI9PXR5cGVvZiB0Lmxlbmd0aClyZXR1cm57bmV4dDpmdW5jdGlvbigpe3JldHVybnt2YWx1ZToodD10JiZyPj10Lmxlbmd0aD92b2lkIDA6dCkmJnRbcisrXSxkb25lOiF0fX19O3Rocm93IG5ldyBUeXBlRXJyb3IoZT9cIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCI6XCJTeW1ib2wuaXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpfXZhciBTLE49XCJ1bmRlZmluZWRcIiE9dHlwZW9mIGdsb2JhbFRoaXM/Z2xvYmFsVGhpczpcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzpcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnt9LEQ9e30sQT1OfHxzZWxmO2Z1bmN0aW9uIGsoKXt9ZnVuY3Rpb24gQyh0KXt2YXIgZT10eXBlb2YgdDtyZXR1cm5cImFycmF5XCI9PShlPVwib2JqZWN0XCIhPWU/ZTp0P0FycmF5LmlzQXJyYXkodCk/XCJhcnJheVwiOmU6XCJudWxsXCIpfHxcIm9iamVjdFwiPT1lJiZcIm51bWJlclwiPT10eXBlb2YgdC5sZW5ndGh9ZnVuY3Rpb24gUih0KXt2YXIgZT10eXBlb2YgdDtyZXR1cm5cIm9iamVjdFwiPT1lJiZudWxsIT10fHxcImZ1bmN0aW9uXCI9PWV9dmFyIHg9XCJjbG9zdXJlX3VpZF9cIisoMWU5Kk1hdGgucmFuZG9tKCk+Pj4wKSxPPTA7ZnVuY3Rpb24gTCh0LGUsbil7cmV0dXJuIHQuY2FsbC5hcHBseSh0LmJpbmQsYXJndW1lbnRzKX1mdW5jdGlvbiBQKGUsbix0KXtpZighZSl0aHJvdyBFcnJvcigpO2lmKDI8YXJndW1lbnRzLmxlbmd0aCl7dmFyIHI9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDIpO3JldHVybiBmdW5jdGlvbigpe3ZhciB0PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cmV0dXJuIEFycmF5LnByb3RvdHlwZS51bnNoaWZ0LmFwcGx5KHQsciksZS5hcHBseShuLHQpfX1yZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gZS5hcHBseShuLGFyZ3VtZW50cyl9fWZ1bmN0aW9uIE0odCxlLG4pe3JldHVybihNPUZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kJiYtMSE9RnVuY3Rpb24ucHJvdG90eXBlLmJpbmQudG9TdHJpbmcoKS5pbmRleE9mKFwibmF0aXZlIGNvZGVcIik/TDpQKS5hcHBseShudWxsLGFyZ3VtZW50cyl9ZnVuY3Rpb24gRihlKXt2YXIgbj1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMSk7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIHQ9bi5zbGljZSgpO3JldHVybiB0LnB1c2guYXBwbHkodCxhcmd1bWVudHMpLGUuYXBwbHkodGhpcyx0KX19ZnVuY3Rpb24gVigpe3JldHVybiBEYXRlLm5vdygpfWZ1bmN0aW9uIFUodCxvKXtmdW5jdGlvbiBlKCl7fWUucHJvdG90eXBlPW8ucHJvdG90eXBlLHQuWD1vLnByb3RvdHlwZSx0LnByb3RvdHlwZT1uZXcgZSwodC5wcm90b3R5cGUuY29uc3RydWN0b3I9dCkuS2I9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1BcnJheShhcmd1bWVudHMubGVuZ3RoLTIpLGk9MjtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXJbaS0yXT1hcmd1bWVudHNbaV07cmV0dXJuIG8ucHJvdG90eXBlW2VdLmFwcGx5KHQscil9fWZ1bmN0aW9uIHEoKXt0aGlzLmo9dGhpcy5qLHRoaXMuaT10aGlzLml9cS5wcm90b3R5cGUuaj0hMSxxLnByb3RvdHlwZS5qYT1mdW5jdGlvbigpe3ZhciB0OyF0aGlzLmomJih0aGlzLmo9ITAsdGhpcy5HKCksMCkmJih0PXRoaXMsT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQseCkmJnRbeF18fCh0W3hdPSsrTykpfSxxLnByb3RvdHlwZS5HPWZ1bmN0aW9uKCl7aWYodGhpcy5pKWZvcig7dGhpcy5pLmxlbmd0aDspdGhpcy5pLnNoaWZ0KCkoKX07dmFyIEI9QXJyYXkucHJvdG90eXBlLmluZGV4T2Y/ZnVuY3Rpb24odCxlKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmluZGV4T2YuY2FsbCh0LGUsdm9pZCAwKX06ZnVuY3Rpb24odCxlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgdClyZXR1cm5cInN0cmluZ1wiIT10eXBlb2YgZXx8MSE9ZS5sZW5ndGg/LTE6dC5pbmRleE9mKGUsMCk7Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDtuKyspaWYobiBpbiB0JiZ0W25dPT09ZSlyZXR1cm4gbjtyZXR1cm4tMX0saj1BcnJheS5wcm90b3R5cGUuZm9yRWFjaD9mdW5jdGlvbih0LGUsbil7QXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbCh0LGUsbil9OmZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9dC5sZW5ndGgsaT1cInN0cmluZ1wiPT10eXBlb2YgdD90LnNwbGl0KFwiXCIpOnQsbz0wO288cjtvKyspbyBpbiBpJiZlLmNhbGwobixpW29dLG8sdCl9O2Z1bmN0aW9uIEsoKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLmNvbmNhdC5hcHBseShbXSxhcmd1bWVudHMpfWZ1bmN0aW9uIEcodCl7dmFyIGU9dC5sZW5ndGg7aWYoMDxlKXtmb3IodmFyIG49QXJyYXkoZSkscj0wO3I8ZTtyKyspbltyXT10W3JdO3JldHVybiBufXJldHVybltdfWZ1bmN0aW9uIFEodCl7cmV0dXJuL15bXFxzXFx4YTBdKiQvLnRlc3QodCl9dmFyIHosSD1TdHJpbmcucHJvdG90eXBlLnRyaW0/ZnVuY3Rpb24odCl7cmV0dXJuIHQudHJpbSgpfTpmdW5jdGlvbih0KXtyZXR1cm4vXltcXHNcXHhhMF0qKFtcXHNcXFNdKj8pW1xcc1xceGEwXSokLy5leGVjKHQpWzFdfTtmdW5jdGlvbiBXKHQsZSl7cmV0dXJuLTEhPXQuaW5kZXhPZihlKX1mdW5jdGlvbiBZKHQsZSl7cmV0dXJuIHQ8ZT8tMTplPHQ/MTowfXQ6e3ZhciBYPUEubmF2aWdhdG9yO2lmKFgpe1g9WC51c2VyQWdlbnQ7aWYoWCl7ej1YO2JyZWFrIHR9fXo9XCJcIn1mdW5jdGlvbiBKKHQsZSxuKXtmb3IodmFyIHIgaW4gdCllLmNhbGwobix0W3JdLHIsdCl9ZnVuY3Rpb24gJCh0KXt2YXIgZSxuPXt9O2ZvcihlIGluIHQpbltlXT10W2VdO3JldHVybiBufXZhciBaPVwiY29uc3RydWN0b3IgaGFzT3duUHJvcGVydHkgaXNQcm90b3R5cGVPZiBwcm9wZXJ0eUlzRW51bWVyYWJsZSB0b0xvY2FsZVN0cmluZyB0b1N0cmluZyB2YWx1ZU9mXCIuc3BsaXQoXCIgXCIpO2Z1bmN0aW9uIHR0KHQpe2Zvcih2YXIgZSxuLHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKXtmb3IoZSBpbiBuPWFyZ3VtZW50c1tyXSl0W2VdPW5bZV07Zm9yKHZhciBpPTA7aTxaLmxlbmd0aDtpKyspZT1aW2ldLE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLGUpJiYodFtlXT1uW2VdKX19ZnVuY3Rpb24gZXQodCl7cmV0dXJuIGV0W1wiIFwiXSh0KSx0fWV0W1wiIFwiXT1rO3ZhciBudCxydD1XKHosXCJPcGVyYVwiKSxpdD1XKHosXCJUcmlkZW50XCIpfHxXKHosXCJNU0lFXCIpLG90PVcoeixcIkVkZ2VcIiksc3Q9b3R8fGl0LGF0PVcoeixcIkdlY2tvXCIpJiYhKFcoei50b0xvd2VyQ2FzZSgpLFwid2Via2l0XCIpJiYhVyh6LFwiRWRnZVwiKSkmJiEoVyh6LFwiVHJpZGVudFwiKXx8Vyh6LFwiTVNJRVwiKSkmJiFXKHosXCJFZGdlXCIpLHV0PVcoei50b0xvd2VyQ2FzZSgpLFwid2Via2l0XCIpJiYhVyh6LFwiRWRnZVwiKTtmdW5jdGlvbiBjdCgpe3ZhciB0PUEuZG9jdW1lbnQ7cmV0dXJuIHQ/dC5kb2N1bWVudE1vZGU6dm9pZCAwfXQ6e3ZhciBodD1cIlwiLGx0PShsdD16LGF0Py9ydjooW15cXCk7XSspKFxcKXw7KS8uZXhlYyhsdCk6b3Q/L0VkZ2VcXC8oW1xcZFxcLl0rKS8uZXhlYyhsdCk6aXQ/L1xcYig/Ok1TSUV8cnYpWzogXShbXlxcKTtdKykoXFwpfDspLy5leGVjKGx0KTp1dD8vV2ViS2l0XFwvKFxcUyspLy5leGVjKGx0KTpydD8vKD86VmVyc2lvbilbIFxcL10/KFxcUyspLy5leGVjKGx0KTp2b2lkIDApO2lmKGx0JiYoaHQ9bHQ/bHRbMV06XCJcIiksaXQpe2x0PWN0KCk7aWYobnVsbCE9bHQmJmx0PnBhcnNlRmxvYXQoaHQpKXtudD1TdHJpbmcobHQpO2JyZWFrIHR9fW50PWh0fXZhciBmdD17fTtmdW5jdGlvbiBkdChhKXtyZXR1cm4gdD1hLGU9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9MCxlPUgoU3RyaW5nKG50KSkuc3BsaXQoXCIuXCIpLG49SChTdHJpbmcoYSkpLnNwbGl0KFwiLlwiKSxyPU1hdGgubWF4KGUubGVuZ3RoLG4ubGVuZ3RoKSxpPTA7MD09dCYmaTxyO2krKylmb3IodmFyIG89ZVtpXXx8XCJcIixzPW5baV18fFwiXCI7bz0vKFxcZCopKFxcRCopKC4qKS8uZXhlYyhvKXx8W1wiXCIsXCJcIixcIlwiLFwiXCJdLHM9LyhcXGQqKShcXEQqKSguKikvLmV4ZWMocyl8fFtcIlwiLFwiXCIsXCJcIixcIlwiXSwoMCE9b1swXS5sZW5ndGh8fDAhPXNbMF0ubGVuZ3RoKSYmKHQ9WSgwPT1vWzFdLmxlbmd0aD8wOnBhcnNlSW50KG9bMV0sMTApLDA9PXNbMV0ubGVuZ3RoPzA6cGFyc2VJbnQoc1sxXSwxMCkpfHxZKDA9PW9bMl0ubGVuZ3RoLDA9PXNbMl0ubGVuZ3RoKXx8WShvWzJdLHNbMl0pLG89b1szXSxzPXNbM10sMD09dCk7KTtyZXR1cm4gMDw9dH0sbj1mdCxPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobix0KT9uW3RdOm5bdF09ZSh0KTt2YXIgdCxlLG59dmFyIHB0PUEuZG9jdW1lbnQmJml0JiYoY3QoKXx8cGFyc2VJbnQobnQsMTApKXx8dm9pZCAwLHl0PSFpdHx8OTw9TnVtYmVyKHB0KSxndD1pdCYmIWR0KFwiOVwiKSxtdD1mdW5jdGlvbigpe2lmKCFBLmFkZEV2ZW50TGlzdGVuZXJ8fCFPYmplY3QuZGVmaW5lUHJvcGVydHkpcmV0dXJuITE7dmFyIHQ9ITEsZT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe3Q9ITB9fSk7dHJ5e0EuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RcIixrLGUpLEEucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInRlc3RcIixrLGUpfWNhdGNoKHQpe31yZXR1cm4gdH0oKTtmdW5jdGlvbiB2dCh0LGUpe3RoaXMudHlwZT10LHRoaXMuYT10aGlzLnRhcmdldD1lLHRoaXMuZGVmYXVsdFByZXZlbnRlZD0hMX1mdW5jdGlvbiBidCh0LGUpe2lmKHZ0LmNhbGwodGhpcyx0P3QudHlwZTpcIlwiKSx0aGlzLnJlbGF0ZWRUYXJnZXQ9dGhpcy5hPXRoaXMudGFyZ2V0PW51bGwsdGhpcy5idXR0b249dGhpcy5zY3JlZW5ZPXRoaXMuc2NyZWVuWD10aGlzLmNsaWVudFk9dGhpcy5jbGllbnRYPTAsdGhpcy5rZXk9XCJcIix0aGlzLm1ldGFLZXk9dGhpcy5zaGlmdEtleT10aGlzLmFsdEtleT10aGlzLmN0cmxLZXk9ITEsdGhpcy5wb2ludGVySWQ9MCx0aGlzLnBvaW50ZXJUeXBlPVwiXCIsdGhpcy5jPW51bGwsdCl7dmFyIG49dGhpcy50eXBlPXQudHlwZSxyPXQuY2hhbmdlZFRvdWNoZXMmJnQuY2hhbmdlZFRvdWNoZXMubGVuZ3RoP3QuY2hhbmdlZFRvdWNoZXNbMF06bnVsbDtpZih0aGlzLnRhcmdldD10LnRhcmdldHx8dC5zcmNFbGVtZW50LHRoaXMuYT1lLGU9dC5yZWxhdGVkVGFyZ2V0KXtpZihhdCl7dDp7dHJ5e2V0KGUubm9kZU5hbWUpO3ZhciBpPSEwO2JyZWFrIHR9Y2F0Y2godCl7fWk9ITF9aXx8KGU9bnVsbCl9fWVsc2VcIm1vdXNlb3ZlclwiPT1uP2U9dC5mcm9tRWxlbWVudDpcIm1vdXNlb3V0XCI9PW4mJihlPXQudG9FbGVtZW50KTt0aGlzLnJlbGF0ZWRUYXJnZXQ9ZSxyPyh0aGlzLmNsaWVudFg9dm9pZCAwIT09ci5jbGllbnRYP3IuY2xpZW50WDpyLnBhZ2VYLHRoaXMuY2xpZW50WT12b2lkIDAhPT1yLmNsaWVudFk/ci5jbGllbnRZOnIucGFnZVksdGhpcy5zY3JlZW5YPXIuc2NyZWVuWHx8MCx0aGlzLnNjcmVlblk9ci5zY3JlZW5ZfHwwKToodGhpcy5jbGllbnRYPXZvaWQgMCE9PXQuY2xpZW50WD90LmNsaWVudFg6dC5wYWdlWCx0aGlzLmNsaWVudFk9dm9pZCAwIT09dC5jbGllbnRZP3QuY2xpZW50WTp0LnBhZ2VZLHRoaXMuc2NyZWVuWD10LnNjcmVlblh8fDAsdGhpcy5zY3JlZW5ZPXQuc2NyZWVuWXx8MCksdGhpcy5idXR0b249dC5idXR0b24sdGhpcy5rZXk9dC5rZXl8fFwiXCIsdGhpcy5jdHJsS2V5PXQuY3RybEtleSx0aGlzLmFsdEtleT10LmFsdEtleSx0aGlzLnNoaWZ0S2V5PXQuc2hpZnRLZXksdGhpcy5tZXRhS2V5PXQubWV0YUtleSx0aGlzLnBvaW50ZXJJZD10LnBvaW50ZXJJZHx8MCx0aGlzLnBvaW50ZXJUeXBlPVwic3RyaW5nXCI9PXR5cGVvZiB0LnBvaW50ZXJUeXBlP3QucG9pbnRlclR5cGU6d3RbdC5wb2ludGVyVHlwZV18fFwiXCIsKHRoaXMuYz10KS5kZWZhdWx0UHJldmVudGVkJiZ0aGlzLmIoKX19dnQucHJvdG90eXBlLmI9ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITB9LFUoYnQsdnQpO3ZhciB3dD17MjpcInRvdWNoXCIsMzpcInBlblwiLDQ6XCJtb3VzZVwifTtidC5wcm90b3R5cGUuYj1mdW5jdGlvbigpe2J0LlguYi5jYWxsKHRoaXMpO3ZhciB0PXRoaXMuYztpZih0LnByZXZlbnREZWZhdWx0KXQucHJldmVudERlZmF1bHQoKTtlbHNlIGlmKHQucmV0dXJuVmFsdWU9ITEsZ3QpdHJ5eyh0LmN0cmxLZXl8fDExMjw9dC5rZXlDb2RlJiZ0LmtleUNvZGU8PTEyMykmJih0LmtleUNvZGU9LTEpfWNhdGNoKHQpe319O3ZhciBJdD1cImNsb3N1cmVfbGlzdGVuYWJsZV9cIisoMWU2Kk1hdGgucmFuZG9tKCl8MCksRXQ9MDtmdW5jdGlvbiBUdCh0LGUsbixyLGkpe3RoaXMubGlzdGVuZXI9dCx0aGlzLnByb3h5PW51bGwsdGhpcy5zcmM9ZSx0aGlzLnR5cGU9bix0aGlzLmNhcHR1cmU9ISFyLHRoaXMuY2E9aSx0aGlzLmtleT0rK0V0LHRoaXMuWT10aGlzLlo9ITF9ZnVuY3Rpb24gX3QodCl7dC5ZPSEwLHQubGlzdGVuZXI9bnVsbCx0LnByb3h5PW51bGwsdC5zcmM9bnVsbCx0LmNhPW51bGx9ZnVuY3Rpb24gU3QodCl7dGhpcy5zcmM9dCx0aGlzLmE9e30sdGhpcy5iPTB9ZnVuY3Rpb24gTnQodCxlKXt2YXIgbixyLGksbz1lLnR5cGU7byBpbiB0LmEmJihuPXQuYVtvXSwoaT0wPD0ocj1CKG4sZSkpKSYmQXJyYXkucHJvdG90eXBlLnNwbGljZS5jYWxsKG4sciwxKSxpJiYoX3QoZSksMD09dC5hW29dLmxlbmd0aCYmKGRlbGV0ZSB0LmFbb10sdC5iLS0pKSl9ZnVuY3Rpb24gRHQodCxlLG4scil7Zm9yKHZhciBpPTA7aTx0Lmxlbmd0aDsrK2kpe3ZhciBvPXRbaV07aWYoIW8uWSYmby5saXN0ZW5lcj09ZSYmby5jYXB0dXJlPT0hIW4mJm8uY2E9PXIpcmV0dXJuIGl9cmV0dXJuLTF9U3QucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0LGUsbixyLGkpe3ZhciBvPXQudG9TdHJpbmcoKTsodD10aGlzLmFbb10pfHwodD10aGlzLmFbb109W10sdGhpcy5iKyspO3ZhciBzPUR0KHQsZSxyLGkpO3JldHVybi0xPHM/KGU9dFtzXSxufHwoZS5aPSExKSk6KChlPW5ldyBUdChlLHRoaXMuc3JjLG8sISFyLGkpKS5aPW4sdC5wdXNoKGUpKSxlfTt2YXIgQXQ9XCJjbG9zdXJlX2xtX1wiKygxZTYqTWF0aC5yYW5kb20oKXwwKSxrdD17fTtmdW5jdGlvbiBDdCh0LGUsbixyLGkpe2lmKHImJnIub25jZSlyZXR1cm4gZnVuY3Rpb24gdChlLG4scixpLG8pe2lmKEFycmF5LmlzQXJyYXkobikpe2Zvcih2YXIgcz0wO3M8bi5sZW5ndGg7cysrKXQoZSxuW3NdLHIsaSxvKTtyZXR1cm4gbnVsbH1yPVZ0KHIpO3JldHVybiBlJiZlW0l0XT9lLndhKG4scixSKGkpPyEhaS5jYXB0dXJlOiEhaSxvKTpSdChlLG4sciwhMCxpLG8pfSh0LGUsbixyLGkpO2lmKEFycmF5LmlzQXJyYXkoZSkpe2Zvcih2YXIgbz0wO288ZS5sZW5ndGg7bysrKUN0KHQsZVtvXSxuLHIsaSk7cmV0dXJuIG51bGx9cmV0dXJuIG49VnQobiksdCYmdFtJdF0/dC52YShlLG4sUihyKT8hIXIuY2FwdHVyZTohIXIsaSk6UnQodCxlLG4sITEscixpKX1mdW5jdGlvbiBSdCh0LGUsbixyLGksbyl7aWYoIWUpdGhyb3cgRXJyb3IoXCJJbnZhbGlkIGV2ZW50IHR5cGVcIik7dmFyIHM9UihpKT8hIWkuY2FwdHVyZTohIWk7aWYocyYmIXl0KXJldHVybiBudWxsO3ZhciBhLHUsYz1NdCh0KTtpZihjfHwodFtBdF09Yz1uZXcgU3QodCkpLChuPWMuYWRkKGUsbixyLHMsbykpLnByb3h5KXJldHVybiBuO2lmKGE9UHQscj11PXl0P2Z1bmN0aW9uKHQpe3JldHVybiBhLmNhbGwodS5zcmMsdS5saXN0ZW5lcix0KX06ZnVuY3Rpb24odCl7aWYoISh0PWEuY2FsbCh1LnNyYyx1Lmxpc3RlbmVyLHQpKSlyZXR1cm4gdH0sKG4ucHJveHk9cikuc3JjPXQsci5saXN0ZW5lcj1uLHQuYWRkRXZlbnRMaXN0ZW5lcil2b2lkIDA9PT0oaT0hbXQ/czppKSYmKGk9ITEpLHQuYWRkRXZlbnRMaXN0ZW5lcihlLnRvU3RyaW5nKCkscixpKTtlbHNlIGlmKHQuYXR0YWNoRXZlbnQpdC5hdHRhY2hFdmVudChPdChlLnRvU3RyaW5nKCkpLHIpO2Vsc2V7aWYoIXQuYWRkTGlzdGVuZXJ8fCF0LnJlbW92ZUxpc3RlbmVyKXRocm93IEVycm9yKFwiYWRkRXZlbnRMaXN0ZW5lciBhbmQgYXR0YWNoRXZlbnQgYXJlIHVuYXZhaWxhYmxlLlwiKTt0LmFkZExpc3RlbmVyKHIpfXJldHVybiBufWZ1bmN0aW9uIHh0KHQpe3ZhciBlLG4scjtcIm51bWJlclwiIT10eXBlb2YgdCYmdCYmIXQuWSYmKChlPXQuc3JjKSYmZVtJdF0/TnQoZS5jLHQpOihuPXQudHlwZSxyPXQucHJveHksZS5yZW1vdmVFdmVudExpc3RlbmVyP2UucmVtb3ZlRXZlbnRMaXN0ZW5lcihuLHIsdC5jYXB0dXJlKTplLmRldGFjaEV2ZW50P2UuZGV0YWNoRXZlbnQoT3Qobikscik6ZS5hZGRMaXN0ZW5lciYmZS5yZW1vdmVMaXN0ZW5lciYmZS5yZW1vdmVMaXN0ZW5lcihyKSwobj1NdChlKSk/KE50KG4sdCksMD09bi5iJiYobi5zcmM9bnVsbCxlW0F0XT1udWxsKSk6X3QodCkpKX1mdW5jdGlvbiBPdCh0KXtyZXR1cm4gdCBpbiBrdD9rdFt0XTprdFt0XT1cIm9uXCIrdH1mdW5jdGlvbiBMdCh0LGUpe3ZhciBuPXQubGlzdGVuZXIscj10LmNhfHx0LnNyYztyZXR1cm4gdC5aJiZ4dCh0KSxuLmNhbGwocixlKX1mdW5jdGlvbiBQdCh0LGUpe2lmKHQuWSlyZXR1cm4hMDtpZih5dClyZXR1cm4gTHQodCxuZXcgYnQoZSx0aGlzKSk7aWYoIWUpdDp7ZT1bXCJ3aW5kb3dcIixcImV2ZW50XCJdO2Zvcih2YXIgbj1BLHI9MDtyPGUubGVuZ3RoO3IrKylpZihudWxsPT0obj1uW2Vbcl1dKSl7ZT1udWxsO2JyZWFrIHR9ZT1ufXJldHVybiBMdCh0LGU9bmV3IGJ0KGUsdGhpcykpfWZ1bmN0aW9uIE10KHQpe3JldHVybih0PXRbQXRdKWluc3RhbmNlb2YgU3Q/dDpudWxsfXZhciBGdD1cIl9fY2xvc3VyZV9ldmVudHNfZm5fXCIrKDFlOSpNYXRoLnJhbmRvbSgpPj4+MCk7ZnVuY3Rpb24gVnQoZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZT9lOihlW0Z0XXx8KGVbRnRdPWZ1bmN0aW9uKHQpe3JldHVybiBlLmhhbmRsZUV2ZW50KHQpfSksZVtGdF0pfWZ1bmN0aW9uIFV0KCl7cS5jYWxsKHRoaXMpLHRoaXMuYz1uZXcgU3QodGhpcyksKHRoaXMuSj10aGlzKS5DPW51bGx9ZnVuY3Rpb24gcXQodCxlKXt2YXIgbixyPXQuQztpZihyKWZvcihuPVtdO3I7cj1yLkMpbi5wdXNoKHIpO2lmKHQ9dC5KLHI9ZS50eXBlfHxlLFwic3RyaW5nXCI9PXR5cGVvZiBlP2U9bmV3IHZ0KGUsdCk6ZSBpbnN0YW5jZW9mIHZ0P2UudGFyZ2V0PWUudGFyZ2V0fHx0OihzPWUsdHQoZT1uZXcgdnQocix0KSxzKSkscz0hMCxuKWZvcih2YXIgaT1uLmxlbmd0aC0xOzA8PWk7aS0tKXZhciBvPWUuYT1uW2ldLHM9QnQobyxyLCEwLGUpJiZzO2lmKHM9QnQobz1lLmE9dCxyLCEwLGUpJiZzLHM9QnQobyxyLCExLGUpJiZzLG4pZm9yKGk9MDtpPG4ubGVuZ3RoO2krKylzPUJ0KG89ZS5hPW5baV0sciwhMSxlKSYmc31mdW5jdGlvbiBCdCh0LGUsbixyKXtpZighKGU9dC5jLmFbU3RyaW5nKGUpXSkpcmV0dXJuITA7ZT1lLmNvbmNhdCgpO2Zvcih2YXIgaT0hMCxvPTA7bzxlLmxlbmd0aDsrK28pe3ZhciBzLGEsdT1lW29dO3UmJiF1LlkmJnUuY2FwdHVyZT09biYmKHM9dS5saXN0ZW5lcixhPXUuY2F8fHUuc3JjLHUuWiYmTnQodC5jLHUpLGk9ITEhPT1zLmNhbGwoYSxyKSYmaSl9cmV0dXJuIGkmJiFyLmRlZmF1bHRQcmV2ZW50ZWR9VShVdCxxKSxVdC5wcm90b3R5cGVbSXRdPSEwLChTPVV0LnByb3RvdHlwZSkuYWRkRXZlbnRMaXN0ZW5lcj1mdW5jdGlvbih0LGUsbixyKXtDdCh0aGlzLHQsZSxuLHIpfSxTLnJlbW92ZUV2ZW50TGlzdGVuZXI9ZnVuY3Rpb24odCxlLG4scil7IWZ1bmN0aW9uIHQoZSxuLHIsaSxvKXtpZihBcnJheS5pc0FycmF5KG4pKWZvcih2YXIgcz0wO3M8bi5sZW5ndGg7cysrKXQoZSxuW3NdLHIsaSxvKTtlbHNlIGk9UihpKT8hIWkuY2FwdHVyZTohIWkscj1WdChyKSxlJiZlW0l0XT8oZT1lLmMsKG49U3RyaW5nKG4pLnRvU3RyaW5nKCkpaW4gZS5hJiYtMTwocj1EdChzPWUuYVtuXSxyLGksbykpJiYoX3Qoc1tyXSksQXJyYXkucHJvdG90eXBlLnNwbGljZS5jYWxsKHMsciwxKSwwPT1zLmxlbmd0aCYmKGRlbGV0ZSBlLmFbbl0sZS5iLS0pKSk6KGU9ZSYmTXQoZSkpJiYobj1lLmFbbi50b1N0cmluZygpXSwocj0oZT0tMSk8KGU9bj9EdChuLHIsaSxvKTplKT9uW2VdOm51bGwpJiZ4dChyKSl9KHRoaXMsdCxlLG4scil9LFMuRz1mdW5jdGlvbigpe2lmKFV0LlguRy5jYWxsKHRoaXMpLHRoaXMuYyl7dmFyIHQsZT10aGlzLmM7Zm9yKHQgaW4gZS5hKXtmb3IodmFyIG49ZS5hW3RdLHI9MDtyPG4ubGVuZ3RoO3IrKylfdChuW3JdKTtkZWxldGUgZS5hW3RdLGUuYi0tfX10aGlzLkM9bnVsbH0sUy52YT1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gdGhpcy5jLmFkZChTdHJpbmcodCksZSwhMSxuLHIpfSxTLndhPWZ1bmN0aW9uKHQsZSxuLHIpe3JldHVybiB0aGlzLmMuYWRkKFN0cmluZyh0KSxlLCEwLG4scil9O3ZhciBqdD1BLkpTT04uc3RyaW5naWZ5O2Z1bmN0aW9uIEt0KCl7dGhpcy5iPXRoaXMuYT1udWxsfXZhciBHdCxRdD0oenQucHJvdG90eXBlLmdldD1mdW5jdGlvbigpe3ZhciB0O3JldHVybiAwPHRoaXMuYj8odGhpcy5iLS0sdD10aGlzLmEsdGhpcy5hPXQubmV4dCx0Lm5leHQ9bnVsbCk6dD10aGlzLmMoKSx0fSxuZXcgenQoZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEh0fSxmdW5jdGlvbih0KXt0LnJlc2V0KCl9KSk7ZnVuY3Rpb24genQodCxlKXt0aGlzLmM9dCx0aGlzLmY9ZSx0aGlzLmI9MCx0aGlzLmE9bnVsbH1mdW5jdGlvbiBIdCgpe3RoaXMubmV4dD10aGlzLmI9dGhpcy5hPW51bGx9ZnVuY3Rpb24gV3QodCxlKXt2YXIgbjtHdHx8KG49QS5Qcm9taXNlLnJlc29sdmUodm9pZCAwKSxHdD1mdW5jdGlvbigpe24udGhlbihKdCl9KSxZdHx8KEd0KCksWXQ9ITApLFh0LmFkZCh0LGUpfUt0LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCxlKXt2YXIgbj1RdC5nZXQoKTtuLnNldCh0LGUpLHRoaXMuYj90aGlzLmIubmV4dD1uOnRoaXMuYT1uLHRoaXMuYj1ufSxIdC5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQsZSl7dGhpcy5hPXQsdGhpcy5iPWUsdGhpcy5uZXh0PW51bGx9O3ZhciBZdD0hKEh0LnByb3RvdHlwZS5yZXNldD1mdW5jdGlvbigpe3RoaXMubmV4dD10aGlzLmI9dGhpcy5hPW51bGx9KSxYdD1uZXcgS3Q7ZnVuY3Rpb24gSnQoKXtmb3IodmFyIHQsZTtuPWU9dm9pZCAwLG49bnVsbCwoZT1YdCkuYSYmKG49ZS5hLGUuYT1lLmEubmV4dCxlLmF8fChlLmI9bnVsbCksbi5uZXh0PW51bGwpLHQ9bjspe3RyeXt0LmEuY2FsbCh0LmIpfWNhdGNoKHQpeyFmdW5jdGlvbih0KXtBLnNldFRpbWVvdXQoZnVuY3Rpb24oKXt0aHJvdyB0fSwwKX0odCl9dmFyIG49UXQ7bi5mKHQpLG4uYjwxMDAmJihuLmIrKyx0Lm5leHQ9bi5hLG4uYT10KX1ZdD0hMX1mdW5jdGlvbiAkdCh0LGUpe1V0LmNhbGwodGhpcyksdGhpcy5iPXR8fDEsdGhpcy5hPWV8fEEsdGhpcy5mPU0odGhpcy5aYSx0aGlzKSx0aGlzLmc9VigpfWZ1bmN0aW9uIFp0KHQpe3QuYWE9ITEsdC5NJiYodC5hLmNsZWFyVGltZW91dCh0Lk0pLHQuTT1udWxsKX1mdW5jdGlvbiB0ZSh0LGUsbil7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgdCluJiYodD1NKHQsbikpO2Vsc2V7aWYoIXR8fFwiZnVuY3Rpb25cIiE9dHlwZW9mIHQuaGFuZGxlRXZlbnQpdGhyb3cgRXJyb3IoXCJJbnZhbGlkIGxpc3RlbmVyIGFyZ3VtZW50XCIpO3Q9TSh0LmhhbmRsZUV2ZW50LHQpfXJldHVybiAyMTQ3NDgzNjQ3PE51bWJlcihlKT8tMTpBLnNldFRpbWVvdXQodCxlfHwwKX1VKCR0LFV0KSwoUz0kdC5wcm90b3R5cGUpLmFhPSExLFMuTT1udWxsLFMuWmE9ZnVuY3Rpb24oKXt2YXIgdDt0aGlzLmFhJiYoMDwodD1WKCktdGhpcy5nKSYmdDwuOCp0aGlzLmI/dGhpcy5NPXRoaXMuYS5zZXRUaW1lb3V0KHRoaXMuZix0aGlzLmItdCk6KHRoaXMuTSYmKHRoaXMuYS5jbGVhclRpbWVvdXQodGhpcy5NKSx0aGlzLk09bnVsbCkscXQodGhpcyxcInRpY2tcIiksdGhpcy5hYSYmKFp0KHRoaXMpLHRoaXMuc3RhcnQoKSkpKX0sUy5zdGFydD1mdW5jdGlvbigpe3RoaXMuYWE9ITAsdGhpcy5NfHwodGhpcy5NPXRoaXMuYS5zZXRUaW1lb3V0KHRoaXMuZix0aGlzLmIpLHRoaXMuZz1WKCkpfSxTLkc9ZnVuY3Rpb24oKXskdC5YLkcuY2FsbCh0aGlzKSxadCh0aGlzKSxkZWxldGUgdGhpcy5hfTt2YXIgZWUsbmUscmUsaWU9KFQobmU9c2UscmU9ZWU9cSksbmUucHJvdG90eXBlPW51bGw9PT1yZT9PYmplY3QuY3JlYXRlKHJlKToob2UucHJvdG90eXBlPXJlLnByb3RvdHlwZSxuZXcgb2UpLHNlLnByb3RvdHlwZS5mPWZ1bmN0aW9uKHQpe3RoaXMuYj1hcmd1bWVudHMsdGhpcy5hP3RoaXMuYz0hMDpmdW5jdGlvbiB0KGUpe2UuYT10ZShmdW5jdGlvbigpe2UuYT1udWxsLGUuYyYmKGUuYz0hMSx0KGUpKX0sZS5oKTt2YXIgbj1lLmI7ZS5iPW51bGwsZS5nLmFwcGx5KG51bGwsbil9KHRoaXMpfSxzZS5wcm90b3R5cGUuRz1mdW5jdGlvbigpe2VlLnByb3RvdHlwZS5HLmNhbGwodGhpcyksdGhpcy5hJiYoQS5jbGVhclRpbWVvdXQodGhpcy5hKSx0aGlzLmE9bnVsbCx0aGlzLmM9ITEsdGhpcy5iPW51bGwpfSxzZSk7ZnVuY3Rpb24gb2UoKXt0aGlzLmNvbnN0cnVjdG9yPW5lfWZ1bmN0aW9uIHNlKHQsZSl7dmFyIG49ZWUuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gbi5nPXQsbi5oPWUsbi5iPW51bGwsbi5jPSExLG4uYT1udWxsLG59ZnVuY3Rpb24gYWUodCl7cS5jYWxsKHRoaXMpLHRoaXMuYj10LHRoaXMuYT17fX1VKGFlLHEpO3ZhciB1ZT1bXTtmdW5jdGlvbiBjZSh0LGUsbixyKXtBcnJheS5pc0FycmF5KG4pfHwobiYmKHVlWzBdPW4udG9TdHJpbmcoKSksbj11ZSk7Zm9yKHZhciBpPTA7aTxuLmxlbmd0aDtpKyspe3ZhciBvPUN0KGUsbltpXSxyfHx0LmhhbmRsZUV2ZW50LCExLHQuYnx8dCk7aWYoIW8pYnJlYWs7dC5hW28ua2V5XT1vfX1mdW5jdGlvbiBoZSh0KXtKKHQuYSxmdW5jdGlvbih0LGUpe3RoaXMuYS5oYXNPd25Qcm9wZXJ0eShlKSYmeHQodCl9LHQpLHQuYT17fX1mdW5jdGlvbiBsZSgpe3RoaXMuYT0hMH1mdW5jdGlvbiBmZSh0LGUsbixyKXt0LmluZm8oZnVuY3Rpb24oKXtyZXR1cm5cIlhNTEhUVFAgVEVYVCAoXCIrZStcIik6IFwiK2Z1bmN0aW9uKHQsZSl7aWYoIXQuYSlyZXR1cm4gZTtpZighZSlyZXR1cm4gbnVsbDt0cnl7dmFyIG49SlNPTi5wYXJzZShlKTtpZihuKWZvcih0PTA7dDxuLmxlbmd0aDt0KyspaWYoQXJyYXkuaXNBcnJheShuW3RdKSl7dmFyIHI9blt0XTtpZighKHIubGVuZ3RoPDIpKXt2YXIgaT1yWzFdO2lmKEFycmF5LmlzQXJyYXkoaSkmJiEoaS5sZW5ndGg8MSkpe3I9aVswXTtpZihcIm5vb3BcIiE9ciYmXCJzdG9wXCIhPXImJlwiY2xvc2VcIiE9cilmb3IodmFyIG89MTtvPGkubGVuZ3RoO28rKylpW29dPVwiXCJ9fX1yZXR1cm4ganQobil9Y2F0Y2godCl7cmV0dXJuIGV9fSh0LG4pKyhyP1wiIFwiK3I6XCJcIil9KX1hZS5wcm90b3R5cGUuRz1mdW5jdGlvbigpe2FlLlguRy5jYWxsKHRoaXMpLGhlKHRoaXMpfSxhZS5wcm90b3R5cGUuaGFuZGxlRXZlbnQ9ZnVuY3Rpb24oKXt0aHJvdyBFcnJvcihcIkV2ZW50SGFuZGxlci5oYW5kbGVFdmVudCBub3QgaW1wbGVtZW50ZWRcIil9LGxlLnByb3RvdHlwZS5pbmZvPWZ1bmN0aW9uKCl7fTt2YXIgZGU9e30scGU9bnVsbDtmdW5jdGlvbiB5ZSgpe3JldHVybiBwZT1wZXx8bmV3IFV0fWZ1bmN0aW9uIGdlKHQpe3Z0LmNhbGwodGhpcyxkZS5GYSx0KX1mdW5jdGlvbiBtZSh0KXt2YXIgZT15ZSgpO3F0KGUsbmV3IGdlKGUpKX1mdW5jdGlvbiB2ZSh0LGUpe3Z0LmNhbGwodGhpcyxkZS5TVEFUX0VWRU5ULHQpLHRoaXMuc3RhdD1lfWZ1bmN0aW9uIGJlKHQpe3ZhciBlPXllKCk7cXQoZSxuZXcgdmUoZSx0KSl9ZnVuY3Rpb24gd2UodCl7dnQuY2FsbCh0aGlzLGRlLkdhLHQpfWZ1bmN0aW9uIEllKHQsZSl7aWYoXCJmdW5jdGlvblwiIT10eXBlb2YgdCl0aHJvdyBFcnJvcihcIkZuIG11c3Qgbm90IGJlIG51bGwgYW5kIG11c3QgYmUgYSBmdW5jdGlvblwiKTtyZXR1cm4gQS5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dCgpfSxlKX1kZS5GYT1cInNlcnZlcnJlYWNoYWJpbGl0eVwiLFUoZ2UsdnQpLGRlLlNUQVRfRVZFTlQ9XCJzdGF0ZXZlbnRcIixVKHZlLHZ0KSxkZS5HYT1cInRpbWluZ2V2ZW50XCIsVSh3ZSx2dCk7dmFyIEVlPXtOT19FUlJPUjowLCRhOjEsbmI6MixtYjozLGhiOjQsbGI6NSxvYjo2LERhOjcsVElNRU9VVDo4LHJiOjl9LFRlPXtmYjpcImNvbXBsZXRlXCIsQmI6XCJzdWNjZXNzXCIsRWE6XCJlcnJvclwiLERhOlwiYWJvcnRcIix0YjpcInJlYWR5XCIsdWI6XCJyZWFkeXN0YXRlY2hhbmdlXCIsVElNRU9VVDpcInRpbWVvdXRcIixwYjpcImluY3JlbWVudGFsZGF0YVwiLHNiOlwicHJvZ3Jlc3NcIixpYjpcImRvd25sb2FkcHJvZ3Jlc3NcIixKYjpcInVwbG9hZHByb2dyZXNzXCJ9O2Z1bmN0aW9uIF9lKCl7fWZ1bmN0aW9uIFNlKHQpe3ZhciBlO3JldHVybiBlPSEoZT10LmEpP3QuYT17fTplfWZ1bmN0aW9uIE5lKCl7fV9lLnByb3RvdHlwZS5hPW51bGw7Tj17T1BFTjpcImFcIixlYjpcImJcIixFYTpcImNcIixxYjpcImRcIn07ZnVuY3Rpb24gRGUoKXt2dC5jYWxsKHRoaXMsXCJkXCIpfWZ1bmN0aW9uIEFlKCl7dnQuY2FsbCh0aGlzLFwiY1wiKX1mdW5jdGlvbiBrZSgpe31mdW5jdGlvbiBDZSh0LGUsbixyKXt0aGlzLmc9dCx0aGlzLmM9ZSx0aGlzLmY9bix0aGlzLlM9cnx8MSx0aGlzLko9bmV3IGFlKHRoaXMpLHRoaXMuUD14ZSx0PXN0PzEyNTp2b2lkIDAsdGhpcy5SPW5ldyAkdCh0KSx0aGlzLkI9bnVsbCx0aGlzLmI9ITEsdGhpcy5qPXRoaXMubD10aGlzLmk9dGhpcy5IPXRoaXMudT10aGlzLlQ9dGhpcy5vPW51bGwsdGhpcy5zPVtdLHRoaXMuYT1udWxsLHRoaXMuRD0wLHRoaXMuaD10aGlzLm09bnVsbCx0aGlzLk49LTEsdGhpcy5BPSExLHRoaXMuTz0wLHRoaXMuRj1udWxsLHRoaXMuVj10aGlzLkM9dGhpcy5VPXRoaXMuST0hMX1VKERlLHZ0KSxVKEFlLHZ0KSxVKGtlLF9lKTt2YXIgUmU9bmV3IGtlLHhlPTQ1ZTMsT2U9e30sTGU9e307ZnVuY3Rpb24gUGUodCxlLG4pe3QuSD0xLHQuaT1ubihYZShlKSksdC5qPW4sdC5JPSEwLE1lKHQsbnVsbCl9ZnVuY3Rpb24gTWUodCxlKXt0LnU9VigpLFZlKHQpLHQubD1YZSh0LmkpO3ZhciBzLGEsdSxjLGgsbCxuPXQubCxyPXQuUztBcnJheS5pc0FycmF5KHIpfHwocj1bU3RyaW5nKHIpXSksZ24obi5iLFwidFwiLHIpLHQuRD0wLHQuYT1jcih0LmcsdC5nLkM/ZTpudWxsKSwwPHQuTyYmKHQuRj1uZXcgaWUoTSh0LkNhLHQsdC5hKSx0Lk8pKSxjZSh0LkosdC5hLFwicmVhZHlzdGF0ZWNoYW5nZVwiLHQuWGEpLGU9dC5CPyQodC5CKTp7fSx0Lmo/KHQubXx8KHQubT1cIlBPU1RcIiksZVtcIkNvbnRlbnQtVHlwZVwiXT1cImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLHQuYS5iYSh0LmwsdC5tLHQuaixlKSk6KHQubT1cIkdFVFwiLHQuYS5iYSh0LmwsdC5tLG51bGwsZSkpLG1lKDEpLHM9dC5jLGE9dC5tLHU9dC5sLGM9dC5mLGg9dC5TLGw9dC5qLHMuaW5mbyhmdW5jdGlvbigpe2lmKHMuYSlpZihsKWZvcih2YXIgdD1cIlwiLGU9bC5zcGxpdChcIiZcIiksbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgcixpLG89ZVtuXS5zcGxpdChcIj1cIik7MTxvLmxlbmd0aCYmKHI9b1swXSxvPW9bMV0sdD0yPD0oaT1yLnNwbGl0KFwiX1wiKSkubGVuZ3RoJiZcInR5cGVcIj09aVsxXT90KyhyK1wiPVwiKStvK1wiJlwiOnQrKHIrXCI9cmVkYWN0ZWQmXCIpKX1lbHNlIHQ9bnVsbDtlbHNlIHQ9bDtyZXR1cm5cIlhNTEhUVFAgUkVRIChcIitjK1wiKSBbYXR0ZW1wdCBcIitoK1wiXTogXCIrYStcIlxcblwiK3UrXCJcXG5cIit0fSl9ZnVuY3Rpb24gRmUodCxlLG4pe2Zvcih2YXIgcixpLG8scz0hMDshdC5BJiZ0LkQ8bi5sZW5ndGg7KXt2YXIgYT0oYT1uLG89aT12b2lkIDAsaT0ocj10KS5ELC0xPT0obz1hLmluZGV4T2YoXCJcXG5cIixpKSk/TGU6KGk9TnVtYmVyKGEuc3Vic3RyaW5nKGksbykpLGlzTmFOKGkpP09lOihvKz0xKStpPmEubGVuZ3RoP0xlOihhPWEuc3Vic3RyKG8saSksci5EPW8raSxhKSkpO2lmKGE9PUxlKXs0PT1lJiYodC5oPTQsYmUoMTQpLHM9ITEpLGZlKHQuYyx0LmYsbnVsbCxcIltJbmNvbXBsZXRlIFJlc3BvbnNlXVwiKTticmVha31pZihhPT1PZSl7dC5oPTQsYmUoMTUpLGZlKHQuYyx0LmYsbixcIltJbnZhbGlkIENodW5rXVwiKSxzPSExO2JyZWFrfWZlKHQuYyx0LmYsYSxudWxsKSxLZSh0LGEpfTQ9PWUmJjA9PW4ubGVuZ3RoJiYodC5oPTEsYmUoMTYpLHM9ITEpLHQuYj10LmImJnMscz8wPG4ubGVuZ3RoJiYhdC5WJiYodC5WPSEwLChlPXQuZykuYT09dCYmZS5VJiYhZS5GJiYoZS5jLmluZm8oXCJHcmVhdCwgbm8gYnVmZmVyaW5nIHByb3h5IGRldGVjdGVkLiBCeXRlcyByZWNlaXZlZDogXCIrbi5sZW5ndGgpLGVyKGUpLGUuRj0hMCxiZSgxMSkpKTooZmUodC5jLHQuZixuLFwiW0ludmFsaWQgQ2h1bmtlZCBSZXNwb25zZV1cIiksamUodCksQmUodCkpfWZ1bmN0aW9uIFZlKHQpe3QuVD1WKCkrdC5QLFVlKHQsdC5QKX1mdW5jdGlvbiBVZSh0LGUpe2lmKG51bGwhPXQubyl0aHJvdyBFcnJvcihcIldhdGNoRG9nIHRpbWVyIG5vdCBudWxsXCIpO3Qubz1JZShNKHQuVmEsdCksZSl9ZnVuY3Rpb24gcWUodCl7dC5vJiYoQS5jbGVhclRpbWVvdXQodC5vKSx0Lm89bnVsbCl9ZnVuY3Rpb24gQmUodCl7MD09dC5nLnZ8fHQuQXx8aXIodC5nLHQpfWZ1bmN0aW9uIGplKHQpe3FlKHQpO3ZhciBlPXQuRjtlJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBlLmphJiZlLmphKCksdC5GPW51bGwsWnQodC5SKSxoZSh0LkopLHQuYSYmKGU9dC5hLHQuYT1udWxsLGUuYWJvcnQoKSxlLmphKCkpfWZ1bmN0aW9uIEtlKHQsZSl7dHJ5e3ZhciBuLHIsaSxvLHMsYT10Lmc7aWYoMCE9YS52JiYoYS5hPT10fHxUbihhLmIsdCkpKWlmKGEuST10Lk4sIXQuQyYmVG4oYS5iLHQpJiYzPT1hLnYpe3RyeXt2YXIgdT1hLmthLmEucGFyc2UoZSl9Y2F0Y2godCl7dT1udWxsfWlmKEFycmF5LmlzQXJyYXkodSkmJjM9PXUubGVuZ3RoKXt2YXIgYz11O2lmKDA9PWNbMF0pe3Q6aWYoIWEuail7aWYoYS5hKXtpZighKGEuYS51KzNlMzx0LnUpKWJyZWFrIHQ7cnIoYSksem4oYSl9dHIoYSksYmUoMTgpfX1lbHNlIGEub2E9Y1sxXSwwPGEub2EtYS5QJiZjWzJdPDM3NTAwJiZhLkgmJjA9PWEubyYmIWEubSYmKGEubT1JZShNKGEuU2EsYSksNmUzKSk7aWYoRW4oYS5iKTw9MSYmYS5lYSl7dHJ5e2EuZWEoKX1jYXRjaCh0KXt9YS5lYT12b2lkIDB9fWVsc2Ugc3IoYSwxMSl9ZWxzZSBpZighdC5DJiZhLmEhPXR8fHJyKGEpLCFRKGUpKWZvcihlPXU9YS5rYS5hLnBhcnNlKGUpLHU9MDt1PGUubGVuZ3RoO3UrKyljPWVbdV0sYS5QPWNbMF0sYz1jWzFdLDI9PWEudj9cImNcIj09Y1swXT8oYS5KPWNbMV0sYS5nYT1jWzJdLG51bGwhPShyPWNbM10pJiYoYS5oYT1yLGEuYy5pbmZvKFwiVkVSPVwiK2EuaGEpKSxudWxsIT0obz1jWzRdKSYmKGEucGE9byxhLmMuaW5mbyhcIlNWRVI9XCIrYS5wYSkpLG51bGwhPShyPWNbNV0pJiZcIm51bWJlclwiPT10eXBlb2YgciYmMDxyJiYobj0xLjUqcixhLkQ9bixhLmMuaW5mbyhcImJhY2tDaGFubmVsUmVxdWVzdFRpbWVvdXRNc189XCIrbikpLG49YSwobz10LmEpJiYoIShyPW8uYT9vLmEuZ2V0UmVzcG9uc2VIZWFkZXIoXCJYLUNsaWVudC1XaXJlLVByb3RvY29sXCIpOm51bGwpfHwhKGk9bi5iKS5hJiYoVyhyLFwic3BkeVwiKXx8VyhyLFwicXVpY1wiKXx8VyhyLFwiaDJcIikpJiYoaS5mPWkuZyxpLmE9bmV3IFNldCxpLmImJihfbihpLGkuYiksaS5iPW51bGwpKSwhbi5BfHwocz1vLmE/by5hLmdldFJlc3BvbnNlSGVhZGVyKFwiWC1IVFRQLVNlc3Npb24tSWRcIik6bnVsbCkmJihuLm5hPXMsZW4obi5CLG4uQSxzKSkpLGEudj0zLGEuZiYmYS5mLnRhKCksYS5VJiYoYS5OPVYoKS10LnUsYS5jLmluZm8oXCJIYW5kc2hha2UgUlRUOiBcIithLk4rXCJtc1wiKSksaT10LChuPWEpLmxhPXVyKG4sbi5DP24uZ2E6bnVsbCxuLmZhKSxpLkM/KFNuKG4uYixpKSxvPWksKHM9bi5EKSYmby5zZXRUaW1lb3V0KHMpLG8ubyYmKHFlKG8pLFZlKG8pKSxuLmE9aSk6Wm4obiksMDxhLmcubGVuZ3RoJiZZbihhKSk6XCJzdG9wXCIhPWNbMF0mJlwiY2xvc2VcIiE9Y1swXXx8c3IoYSw3KTozPT1hLnYmJihcInN0b3BcIj09Y1swXXx8XCJjbG9zZVwiPT1jWzBdP1wic3RvcFwiPT1jWzBdP3NyKGEsNyk6UW4oYSk6XCJub29wXCIhPWNbMF0mJmEuZiYmYS5mLnNhKGMpLGEubz0wKTttZSg0KX1jYXRjaCh0KXt9fWZ1bmN0aW9uIEdlKHQsZSl7aWYodC5mb3JFYWNoJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LmZvckVhY2gpdC5mb3JFYWNoKGUsdm9pZCAwKTtlbHNlIGlmKEModCl8fFwic3RyaW5nXCI9PXR5cGVvZiB0KWoodCxlLHZvaWQgMCk7ZWxzZXtpZih0LkwmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuTCl2YXIgbj10LkwoKTtlbHNlIGlmKHQuSyYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5LKW49dm9pZCAwO2Vsc2UgaWYoQyh0KXx8XCJzdHJpbmdcIj09dHlwZW9mIHQpZm9yKHZhciBuPVtdLHI9dC5sZW5ndGgsaT0wO2k8cjtpKyspbi5wdXNoKGkpO2Vsc2UgZm9yKGkgaW4gbj1bXSxyPTAsdCluW3IrK109aTtmb3IodmFyIGk9KHI9ZnVuY3Rpb24odCl7aWYodC5LJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0LkspcmV0dXJuIHQuSygpO2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybiB0LnNwbGl0KFwiXCIpO2lmKEModCkpe2Zvcih2YXIgZT1bXSxuPXQubGVuZ3RoLHI9MDtyPG47cisrKWUucHVzaCh0W3JdKTtyZXR1cm4gZX1mb3IociBpbiBlPVtdLG49MCx0KWVbbisrXT10W3JdO3JldHVybiBlfSh0KSkubGVuZ3RoLG89MDtvPGk7bysrKWUuY2FsbCh2b2lkIDAscltvXSxuJiZuW29dLHQpfX1mdW5jdGlvbiBRZSh0LGUpe3RoaXMuYj17fSx0aGlzLmE9W10sdGhpcy5jPTA7dmFyIG49YXJndW1lbnRzLmxlbmd0aDtpZigxPG4pe2lmKG4lMil0aHJvdyBFcnJvcihcIlVuZXZlbiBudW1iZXIgb2YgYXJndW1lbnRzXCIpO2Zvcih2YXIgcj0wO3I8bjtyKz0yKXRoaXMuc2V0KGFyZ3VtZW50c1tyXSxhcmd1bWVudHNbcisxXSl9ZWxzZSBpZih0KWlmKHQgaW5zdGFuY2VvZiBRZSlmb3Iobj10LkwoKSxyPTA7cjxuLmxlbmd0aDtyKyspdGhpcy5zZXQobltyXSx0LmdldChuW3JdKSk7ZWxzZSBmb3IociBpbiB0KXRoaXMuc2V0KHIsdFtyXSl9ZnVuY3Rpb24gemUodCl7aWYodC5jIT10LmEubGVuZ3RoKXtmb3IodmFyIGU9MCxuPTA7ZTx0LmEubGVuZ3RoOyl7dmFyIHI9dC5hW2VdO0hlKHQuYixyKSYmKHQuYVtuKytdPXIpLGUrK310LmEubGVuZ3RoPW59aWYodC5jIT10LmEubGVuZ3RoKXtmb3IodmFyIGk9e30sbj1lPTA7ZTx0LmEubGVuZ3RoOylIZShpLHI9dC5hW2VdKXx8KGlbdC5hW24rK109cl09MSksZSsrO3QuYS5sZW5ndGg9bn19ZnVuY3Rpb24gSGUodCxlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSl9KFM9Q2UucHJvdG90eXBlKS5zZXRUaW1lb3V0PWZ1bmN0aW9uKHQpe3RoaXMuUD10fSxTLlhhPWZ1bmN0aW9uKHQpe3Q9dC50YXJnZXQ7dmFyIGU9dGhpcy5GO2UmJjM9PUJuKHQpP2UuZigpOnRoaXMuQ2EodCl9LFMuQ2E9ZnVuY3Rpb24odCl7dHJ5e2lmKHQ9PXRoaXMuYSl0Ont2YXIgZT1Cbih0aGlzLmEpLG49dGhpcy5hLnVhKCkscj10aGlzLmEuVygpO2lmKCEoZTwzfHwzPT1lJiYhc3QmJiF0aGlzLmEuJCgpKSl7dGhpcy5BfHw0IT1lfHw3PT1ufHxtZSg4PT1ufHxyPD0wPzM6MikscWUodGhpcyk7dmFyIGk9dGhpcy5hLlcoKTt0aGlzLk49aTt2YXIgbz10aGlzLmEuJCgpO2lmKHRoaXMuYj0yMDA9PWkscj10aGlzLmMsdT10aGlzLm0sYz10aGlzLmwsaD10aGlzLmYsbD10aGlzLlMsZj1lLGQ9aSxyLmluZm8oZnVuY3Rpb24oKXtyZXR1cm5cIlhNTEhUVFAgUkVTUCAoXCIraCtcIikgWyBhdHRlbXB0IFwiK2wrXCJdOiBcIit1K1wiXFxuXCIrYytcIlxcblwiK2YrXCIgXCIrZH0pLHRoaXMuYil7aWYodGhpcy5VJiYhdGhpcy5DKXtlOntpZih0aGlzLmEpe3ZhciBzPXRoaXMuYTtpZigocz1zLmE/cy5hLmdldFJlc3BvbnNlSGVhZGVyKFwiWC1IVFRQLUluaXRpYWwtUmVzcG9uc2VcIik6bnVsbCkmJiFRKHMpKXt2YXIgYT1zO2JyZWFrIGV9fWE9bnVsbH1pZighYSl7dGhpcy5iPSExLHRoaXMuaD0zLGJlKDEyKSxqZSh0aGlzKSxCZSh0aGlzKTticmVhayB0fWZlKHRoaXMuYyx0aGlzLmYsYSxcIkluaXRpYWwgaGFuZHNoYWtlIHJlc3BvbnNlIHZpYSBYLUhUVFAtSW5pdGlhbC1SZXNwb25zZVwiKSx0aGlzLkM9ITAsS2UodGhpcyxhKX10aGlzLkk/KEZlKHRoaXMsZSxvKSxzdCYmdGhpcy5iJiYzPT1lJiYoY2UodGhpcy5KLHRoaXMuUixcInRpY2tcIix0aGlzLldhKSx0aGlzLlIuc3RhcnQoKSkpOihmZSh0aGlzLmMsdGhpcy5mLG8sbnVsbCksS2UodGhpcyxvKSksND09ZSYmamUodGhpcyksdGhpcy5iJiYhdGhpcy5BJiYoND09ZT9pcih0aGlzLmcsdGhpcyk6KHRoaXMuYj0hMSxWZSh0aGlzKSkpfWVsc2UgNDAwPT1pJiYwPG8uaW5kZXhPZihcIlVua25vd24gU0lEXCIpPyh0aGlzLmg9MyxiZSgxMikpOih0aGlzLmg9MCxiZSgxMykpLGplKHRoaXMpLEJlKHRoaXMpfX19Y2F0Y2godCl7fXZhciB1LGMsaCxsLGYsZH0sUy5XYT1mdW5jdGlvbigpe3ZhciB0LGU7dGhpcy5hJiYodD1Cbih0aGlzLmEpLGU9dGhpcy5hLiQoKSx0aGlzLkQ8ZS5sZW5ndGgmJihxZSh0aGlzKSxGZSh0aGlzLHQsZSksdGhpcy5iJiY0IT10JiZWZSh0aGlzKSkpfSxTLmNhbmNlbD1mdW5jdGlvbigpe3RoaXMuQT0hMCxqZSh0aGlzKX0sUy5WYT1mdW5jdGlvbigpe3RoaXMubz1udWxsO3ZhciB0LGUsbj1WKCk7MDw9bi10aGlzLlQ/KHQ9dGhpcy5jLGU9dGhpcy5sLHQuaW5mbyhmdW5jdGlvbigpe3JldHVyblwiVElNRU9VVDogXCIrZX0pLDIhPXRoaXMuSCYmKG1lKDMpLGJlKDE3KSksamUodGhpcyksdGhpcy5oPTIsQmUodGhpcykpOlVlKHRoaXMsdGhpcy5ULW4pfSwoUz1RZS5wcm90b3R5cGUpLks9ZnVuY3Rpb24oKXt6ZSh0aGlzKTtmb3IodmFyIHQ9W10sZT0wO2U8dGhpcy5hLmxlbmd0aDtlKyspdC5wdXNoKHRoaXMuYlt0aGlzLmFbZV1dKTtyZXR1cm4gdH0sUy5MPWZ1bmN0aW9uKCl7cmV0dXJuIHplKHRoaXMpLHRoaXMuYS5jb25jYXQoKX0sUy5nZXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gSGUodGhpcy5iLHQpP3RoaXMuYlt0XTplfSxTLnNldD1mdW5jdGlvbih0LGUpe0hlKHRoaXMuYix0KXx8KHRoaXMuYysrLHRoaXMuYS5wdXNoKHQpKSx0aGlzLmJbdF09ZX0sUy5mb3JFYWNoPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXRoaXMuTCgpLHI9MDtyPG4ubGVuZ3RoO3IrKyl7dmFyIGk9bltyXSxvPXRoaXMuZ2V0KGkpO3QuY2FsbChlLG8saSx0aGlzKX19O3ZhciBXZT0vXig/OihbXjovPyMuXSspOik/KD86XFwvXFwvKD86KFteXFxcXC8/I10qKUApPyhbXlxcXFwvPyNdKj8pKD86OihbMC05XSspKT8oPz1bXFxcXC8/I118JCkpPyhbXj8jXSspPyg/OlxcPyhbXiNdKikpPyg/OiMoW1xcc1xcU10qKSk/JC87ZnVuY3Rpb24gWWUodCxlKXt2YXIgbjt0aGlzLmM9dGhpcy5qPXRoaXMuZj1cIlwiLHRoaXMuaD1udWxsLHRoaXMuaT10aGlzLmc9XCJcIix0aGlzLmE9ITEsdCBpbnN0YW5jZW9mIFllPyh0aGlzLmE9dm9pZCAwIT09ZT9lOnQuYSxKZSh0aGlzLHQuZiksdGhpcy5qPXQuaiwkZSh0aGlzLHQuYyksWmUodGhpcyx0LmgpLHRoaXMuZz10LmcsZT10LmIsKG49bmV3IGZuKS5jPWUuYyxlLmEmJihuLmE9bmV3IFFlKGUuYSksbi5iPWUuYiksdG4odGhpcyxuKSx0aGlzLmk9dC5pKTp0JiYobj1TdHJpbmcodCkubWF0Y2goV2UpKT8odGhpcy5hPSEhZSxKZSh0aGlzLG5bMV18fFwiXCIsITApLHRoaXMuaj1ybihuWzJdfHxcIlwiKSwkZSh0aGlzLG5bM118fFwiXCIsITApLFplKHRoaXMsbls0XSksdGhpcy5nPXJuKG5bNV18fFwiXCIsITApLHRuKHRoaXMsbls2XXx8XCJcIiwhMCksdGhpcy5pPXJuKG5bN118fFwiXCIpKToodGhpcy5hPSEhZSx0aGlzLmI9bmV3IGZuKG51bGwsdGhpcy5hKSl9ZnVuY3Rpb24gWGUodCl7cmV0dXJuIG5ldyBZZSh0KX1mdW5jdGlvbiBKZSh0LGUsbil7dC5mPW4/cm4oZSwhMCk6ZSx0LmYmJih0LmY9dC5mLnJlcGxhY2UoLzokLyxcIlwiKSl9ZnVuY3Rpb24gJGUodCxlLG4pe3QuYz1uP3JuKGUsITApOmV9ZnVuY3Rpb24gWmUodCxlKXtpZihlKXtpZihlPU51bWJlcihlKSxpc05hTihlKXx8ZTwwKXRocm93IEVycm9yKFwiQmFkIHBvcnQgbnVtYmVyIFwiK2UpO3QuaD1lfWVsc2UgdC5oPW51bGx9ZnVuY3Rpb24gdG4odCxlLG4pe3ZhciByLGk7ZSBpbnN0YW5jZW9mIGZuPyh0LmI9ZSxyPXQuYiwoaT10LmEpJiYhci5mJiYoZG4ociksci5jPW51bGwsci5hLmZvckVhY2goZnVuY3Rpb24odCxlKXt2YXIgbj1lLnRvTG93ZXJDYXNlKCk7ZSE9biYmKHBuKHRoaXMsZSksZ24odGhpcyxuLHQpKX0scikpLHIuZj1pKToobnx8KGU9b24oZSxobikpLHQuYj1uZXcgZm4oZSx0LmEpKX1mdW5jdGlvbiBlbih0LGUsbil7dC5iLnNldChlLG4pfWZ1bmN0aW9uIG5uKHQpe3JldHVybiBlbih0LFwienhcIixNYXRoLmZsb29yKDIxNDc0ODM2NDgqTWF0aC5yYW5kb20oKSkudG9TdHJpbmcoMzYpK01hdGguYWJzKE1hdGguZmxvb3IoMjE0NzQ4MzY0OCpNYXRoLnJhbmRvbSgpKV5WKCkpLnRvU3RyaW5nKDM2KSksdH1mdW5jdGlvbiBybih0LGUpe3JldHVybiB0P2U/ZGVjb2RlVVJJKHQucmVwbGFjZSgvJTI1L2csXCIlMjUyNVwiKSk6ZGVjb2RlVVJJQ29tcG9uZW50KHQpOlwiXCJ9ZnVuY3Rpb24gb24odCxlLG4pe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0Pyh0PWVuY29kZVVSSSh0KS5yZXBsYWNlKGUsc24pLHQ9bj90LnJlcGxhY2UoLyUyNShbMC05YS1mQS1GXXsyfSkvZyxcIiUkMVwiKTp0KTpudWxsfWZ1bmN0aW9uIHNuKHQpe3JldHVyblwiJVwiKygodD10LmNoYXJDb2RlQXQoMCkpPj40JjE1KS50b1N0cmluZygxNikrKDE1JnQpLnRvU3RyaW5nKDE2KX1ZZS5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXt2YXIgdD1bXSxlPXRoaXMuZjtlJiZ0LnB1c2gob24oZSxhbiwhMCksXCI6XCIpO3ZhciBuPXRoaXMuYztyZXR1cm4hbiYmXCJmaWxlXCIhPWV8fCh0LnB1c2goXCIvL1wiKSwoZT10aGlzLmopJiZ0LnB1c2gob24oZSxhbiwhMCksXCJAXCIpLHQucHVzaChlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKG4pKS5yZXBsYWNlKC8lMjUoWzAtOWEtZkEtRl17Mn0pL2csXCIlJDFcIikpLG51bGwhPShuPXRoaXMuaCkmJnQucHVzaChcIjpcIixTdHJpbmcobikpKSwobj10aGlzLmcpJiYodGhpcy5jJiZcIi9cIiE9bi5jaGFyQXQoMCkmJnQucHVzaChcIi9cIiksdC5wdXNoKG9uKG4sXCIvXCI9PW4uY2hhckF0KDApP2NuOnVuLCEwKSkpLChuPXRoaXMuYi50b1N0cmluZygpKSYmdC5wdXNoKFwiP1wiLG4pLChuPXRoaXMuaSkmJnQucHVzaChcIiNcIixvbihuLGxuKSksdC5qb2luKFwiXCIpfTt2YXIgYW49L1sjXFwvXFw/QF0vZyx1bj0vWyNcXD86XS9nLGNuPS9bI1xcP10vZyxobj0vWyNcXD9AXS9nLGxuPS8jL2c7ZnVuY3Rpb24gZm4odCxlKXt0aGlzLmI9dGhpcy5hPW51bGwsdGhpcy5jPXR8fG51bGwsdGhpcy5mPSEhZX1mdW5jdGlvbiBkbihuKXtuLmF8fChuLmE9bmV3IFFlLG4uYj0wLG4uYyYmZnVuY3Rpb24odCxlKXtpZih0KXt0PXQuc3BsaXQoXCImXCIpO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKXt2YXIgcixpPXRbbl0uaW5kZXhPZihcIj1cIiksbz1udWxsOzA8PWk/KHI9dFtuXS5zdWJzdHJpbmcoMCxpKSxvPXRbbl0uc3Vic3RyaW5nKGkrMSkpOnI9dFtuXSxlKHIsbz9kZWNvZGVVUklDb21wb25lbnQoby5yZXBsYWNlKC9cXCsvZyxcIiBcIikpOlwiXCIpfX19KG4uYyxmdW5jdGlvbih0LGUpe24uYWRkKGRlY29kZVVSSUNvbXBvbmVudCh0LnJlcGxhY2UoL1xcKy9nLFwiIFwiKSksZSl9KSl9ZnVuY3Rpb24gcG4odCxlKXtkbih0KSxlPW1uKHQsZSksSGUodC5hLmIsZSkmJih0LmM9bnVsbCx0LmItPXQuYS5nZXQoZSkubGVuZ3RoLEhlKCh0PXQuYSkuYixlKSYmKGRlbGV0ZSB0LmJbZV0sdC5jLS0sdC5hLmxlbmd0aD4yKnQuYyYmemUodCkpKX1mdW5jdGlvbiB5bih0LGUpe3JldHVybiBkbih0KSxlPW1uKHQsZSksSGUodC5hLmIsZSl9ZnVuY3Rpb24gZ24odCxlLG4pe3BuKHQsZSksMDxuLmxlbmd0aCYmKHQuYz1udWxsLHQuYS5zZXQobW4odCxlKSxHKG4pKSx0LmIrPW4ubGVuZ3RoKX1mdW5jdGlvbiBtbih0LGUpe3JldHVybiBlPVN0cmluZyhlKSxlPXQuZj9lLnRvTG93ZXJDYXNlKCk6ZX0oUz1mbi5wcm90b3R5cGUpLmFkZD1mdW5jdGlvbih0LGUpe2RuKHRoaXMpLHRoaXMuYz1udWxsLHQ9bW4odGhpcyx0KTt2YXIgbj10aGlzLmEuZ2V0KHQpO3JldHVybiBufHx0aGlzLmEuc2V0KHQsbj1bXSksbi5wdXNoKGUpLHRoaXMuYis9MSx0aGlzfSxTLmZvckVhY2g9ZnVuY3Rpb24obixyKXtkbih0aGlzKSx0aGlzLmEuZm9yRWFjaChmdW5jdGlvbih0LGUpe2oodCxmdW5jdGlvbih0KXtuLmNhbGwocix0LGUsdGhpcyl9LHRoaXMpfSx0aGlzKX0sUy5MPWZ1bmN0aW9uKCl7ZG4odGhpcyk7Zm9yKHZhciB0PXRoaXMuYS5LKCksZT10aGlzLmEuTCgpLG49W10scj0wO3I8ZS5sZW5ndGg7cisrKWZvcih2YXIgaT10W3JdLG89MDtvPGkubGVuZ3RoO28rKyluLnB1c2goZVtyXSk7cmV0dXJuIG59LFMuSz1mdW5jdGlvbih0KXtkbih0aGlzKTt2YXIgZT1bXTtpZihcInN0cmluZ1wiPT10eXBlb2YgdCl5bih0aGlzLHQpJiYoZT1LKGUsdGhpcy5hLmdldChtbih0aGlzLHQpKSkpO2Vsc2V7dD10aGlzLmEuSygpO2Zvcih2YXIgbj0wO248dC5sZW5ndGg7bisrKWU9SyhlLHRbbl0pfXJldHVybiBlfSxTLnNldD1mdW5jdGlvbih0LGUpe3JldHVybiBkbih0aGlzKSx0aGlzLmM9bnVsbCx5bih0aGlzLHQ9bW4odGhpcyx0KSkmJih0aGlzLmItPXRoaXMuYS5nZXQodCkubGVuZ3RoKSx0aGlzLmEuc2V0KHQsW2VdKSx0aGlzLmIrPTEsdGhpc30sUy5nZXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdCYmMDwodD10aGlzLksodCkpLmxlbmd0aD9TdHJpbmcodFswXSk6ZX0sUy50b1N0cmluZz1mdW5jdGlvbigpe2lmKHRoaXMuYylyZXR1cm4gdGhpcy5jO2lmKCF0aGlzLmEpcmV0dXJuXCJcIjtmb3IodmFyIHQ9W10sZT10aGlzLmEuTCgpLG49MDtuPGUubGVuZ3RoO24rKylmb3IodmFyIHI9ZVtuXSxpPWVuY29kZVVSSUNvbXBvbmVudChTdHJpbmcocikpLHI9dGhpcy5LKHIpLG89MDtvPHIubGVuZ3RoO28rKyl7dmFyIHM9aTtcIlwiIT09cltvXSYmKHMrPVwiPVwiK2VuY29kZVVSSUNvbXBvbmVudChTdHJpbmcocltvXSkpKSx0LnB1c2gocyl9cmV0dXJuIHRoaXMuYz10LmpvaW4oXCImXCIpfTt2YXIgdm49ZnVuY3Rpb24odCxlKXt0aGlzLmI9dCx0aGlzLmE9ZX07ZnVuY3Rpb24gYm4odCl7dGhpcy5nPXR8fHduLHQ9QS5QZXJmb3JtYW5jZU5hdmlnYXRpb25UaW1pbmc/MDwodD1BLnBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUoXCJuYXZpZ2F0aW9uXCIpKS5sZW5ndGgmJihcImhxXCI9PXRbMF0ubmV4dEhvcFByb3RvY29sfHxcImgyXCI9PXRbMF0ubmV4dEhvcFByb3RvY29sKTohIShBLmlhJiZBLmlhLnlhJiZBLmlhLnlhKCkmJkEuaWEueWEoKS5MYiksdGhpcy5mPXQ/dGhpcy5nOjEsdGhpcy5hPW51bGwsMTx0aGlzLmYmJih0aGlzLmE9bmV3IFNldCksdGhpcy5iPW51bGwsdGhpcy5jPVtdfXZhciB3bj0xMDtmdW5jdGlvbiBJbih0KXtyZXR1cm4gdC5ifHx0LmEmJnQuYS5zaXplPj10LmZ9ZnVuY3Rpb24gRW4odCl7cmV0dXJuIHQuYj8xOnQuYT90LmEuc2l6ZTowfWZ1bmN0aW9uIFRuKHQsZSl7cmV0dXJuIHQuYj90LmI9PWU6dC5hJiZ0LmEuaGFzKGUpfWZ1bmN0aW9uIF9uKHQsZSl7dC5hP3QuYS5hZGQoZSk6dC5iPWV9ZnVuY3Rpb24gU24odCxlKXt0LmImJnQuYj09ZT90LmI9bnVsbDp0LmEmJnQuYS5oYXMoZSkmJnQuYS5kZWxldGUoZSl9ZnVuY3Rpb24gTm4odCl7dmFyIGUsbjtpZihudWxsIT10LmIpcmV0dXJuIHQuYy5jb25jYXQodC5iLnMpO2lmKG51bGw9PXQuYXx8MD09PXQuYS5zaXplKXJldHVybiBHKHQuYyk7dmFyIHI9dC5jO3RyeXtmb3IodmFyIGk9Xyh0LmEudmFsdWVzKCkpLG89aS5uZXh0KCk7IW8uZG9uZTtvPWkubmV4dCgpKXZhciBzPW8udmFsdWUscj1yLmNvbmNhdChzLnMpfWNhdGNoKHQpe2U9e2Vycm9yOnR9fWZpbmFsbHl7dHJ5e28mJiFvLmRvbmUmJihuPWkucmV0dXJuKSYmbi5jYWxsKGkpfWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yfX1yZXR1cm4gcn1mdW5jdGlvbiBEbigpe31mdW5jdGlvbiBBbigpe3RoaXMuYT1uZXcgRG59ZnVuY3Rpb24ga24odCxlLG4scixpKXt0cnl7ZS5vbmxvYWQ9bnVsbCxlLm9uZXJyb3I9bnVsbCxlLm9uYWJvcnQ9bnVsbCxlLm9udGltZW91dD1udWxsLGkocil9Y2F0Y2godCl7fX1ibi5wcm90b3R5cGUuY2FuY2VsPWZ1bmN0aW9uKCl7dmFyIGUsdDtpZih0aGlzLmM9Tm4odGhpcyksdGhpcy5iKXRoaXMuYi5jYW5jZWwoKSx0aGlzLmI9bnVsbDtlbHNlIGlmKHRoaXMuYSYmMCE9PXRoaXMuYS5zaXplKXt0cnl7Zm9yKHZhciBuPV8odGhpcy5hLnZhbHVlcygpKSxyPW4ubmV4dCgpOyFyLmRvbmU7cj1uLm5leHQoKSlyLnZhbHVlLmNhbmNlbCgpfWNhdGNoKHQpe2U9e2Vycm9yOnR9fWZpbmFsbHl7dHJ5e3ImJiFyLmRvbmUmJih0PW4ucmV0dXJuKSYmdC5jYWxsKG4pfWZpbmFsbHl7aWYoZSl0aHJvdyBlLmVycm9yfX10aGlzLmEuY2xlYXIoKX19LERuLnByb3RvdHlwZS5zdHJpbmdpZnk9ZnVuY3Rpb24odCl7cmV0dXJuIEEuSlNPTi5zdHJpbmdpZnkodCx2b2lkIDApfSxEbi5wcm90b3R5cGUucGFyc2U9ZnVuY3Rpb24odCl7cmV0dXJuIEEuSlNPTi5wYXJzZSh0LHZvaWQgMCl9O3ZhciBDbj1BLkpTT04ucGFyc2U7ZnVuY3Rpb24gUm4odCl7VXQuY2FsbCh0aGlzKSx0aGlzLmhlYWRlcnM9bmV3IFFlLHRoaXMuSD10fHxudWxsLHRoaXMuYj0hMSx0aGlzLnM9dGhpcy5hPW51bGwsdGhpcy5CPVwiXCIsdGhpcy5oPTAsdGhpcy5mPVwiXCIsdGhpcy5nPXRoaXMuQT10aGlzLmw9dGhpcy51PSExLHRoaXMubz0wLHRoaXMubT1udWxsLHRoaXMuST14bix0aGlzLkQ9dGhpcy5GPSExfVUoUm4sVXQpO3ZhciB4bj1cIlwiLE9uPS9eaHR0cHM/JC9pLExuPVtcIlBPU1RcIixcIlBVVFwiXTtmdW5jdGlvbiBQbih0KXtyZXR1cm5cImNvbnRlbnQtdHlwZVwiPT10LnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gTW4odCxlKXt0LmI9ITEsdC5hJiYodC5nPSEwLHQuYS5hYm9ydCgpLHQuZz0hMSksdC5mPWUsdC5oPTUsRm4odCksVW4odCl9ZnVuY3Rpb24gRm4odCl7dC51fHwodC51PSEwLHF0KHQsXCJjb21wbGV0ZVwiKSxxdCh0LFwiZXJyb3JcIikpfWZ1bmN0aW9uIFZuKHQpe2lmKHQuYiYmdm9pZCAwIT09RCYmKCF0LnNbMV18fDQhPUJuKHQpfHwyIT10LlcoKSkpaWYodC5sJiY0PT1Cbih0KSl0ZSh0LnphLDAsdCk7ZWxzZSBpZihxdCh0LFwicmVhZHlzdGF0ZWNoYW5nZVwiKSw0PT1Cbih0KSl7dC5iPSExO3RyeXt2YXIgZSxuLHIsaSxvPXQuVygpO3Q6c3dpdGNoKG8pe2Nhc2UgMjAwOmNhc2UgMjAxOmNhc2UgMjAyOmNhc2UgMjA0OmNhc2UgMjA2OmNhc2UgMzA0OmNhc2UgMTIyMzp2YXIgcz0hMDticmVhayB0O2RlZmF1bHQ6cz0hMX0oZT1zKXx8KChuPTA9PT1vKSYmKCEoaT1TdHJpbmcodC5CKS5tYXRjaChXZSlbMV18fG51bGwpJiZBLnNlbGYmJkEuc2VsZi5sb2NhdGlvbiYmKGk9KHI9QS5zZWxmLmxvY2F0aW9uLnByb3RvY29sKS5zdWJzdHIoMCxyLmxlbmd0aC0xKSksbj0hT24udGVzdChpP2kudG9Mb3dlckNhc2UoKTpcIlwiKSksZT1uKTtpZihlKXF0KHQsXCJjb21wbGV0ZVwiKSxxdCh0LFwic3VjY2Vzc1wiKTtlbHNle3QuaD02O3RyeXt2YXIgYT0yPEJuKHQpP3QuYS5zdGF0dXNUZXh0OlwiXCJ9Y2F0Y2gobyl7YT1cIlwifXQuZj1hK1wiIFtcIit0LlcoKStcIl1cIixGbih0KX19ZmluYWxseXtVbih0KX19fWZ1bmN0aW9uIFVuKHQsZSl7aWYodC5hKXtxbih0KTt2YXIgbj10LmEscj10LnNbMF0/azpudWxsO3QuYT1udWxsLHQucz1udWxsLGV8fHF0KHQsXCJyZWFkeVwiKTt0cnl7bi5vbnJlYWR5c3RhdGVjaGFuZ2U9cn1jYXRjaCh0KXt9fX1mdW5jdGlvbiBxbih0KXt0LmEmJnQuRCYmKHQuYS5vbnRpbWVvdXQ9bnVsbCksdC5tJiYoQS5jbGVhclRpbWVvdXQodC5tKSx0Lm09bnVsbCl9ZnVuY3Rpb24gQm4odCl7cmV0dXJuIHQuYT90LmEucmVhZHlTdGF0ZTowfWZ1bmN0aW9uIGpuKHQsZSxuKXt0Ontmb3IociBpbiBuKXt2YXIgcj0hMTticmVhayB0fXI9ITB9dmFyIGk7cnx8KGk9XCJcIixKKG4sZnVuY3Rpb24odCxlKXtpKz1lLGkrPVwiOlwiLGkrPXQsaSs9XCJcXHJcXG5cIn0pLG49aSxcInN0cmluZ1wiPT10eXBlb2YgdD9udWxsIT1uJiZlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKG4pKTplbih0LGUsbikpfWZ1bmN0aW9uIEtuKHQsZSxuKXtyZXR1cm4gbiYmbi5pbnRlcm5hbENoYW5uZWxQYXJhbXMmJm4uaW50ZXJuYWxDaGFubmVsUGFyYW1zW3RdfHxlfWZ1bmN0aW9uIEduKHQpe3RoaXMucGE9MCx0aGlzLmc9W10sdGhpcy5jPW5ldyBsZSx0aGlzLmdhPXRoaXMubGE9dGhpcy5CPXRoaXMuZmE9dGhpcy5hPXRoaXMubmE9dGhpcy5BPXRoaXMuVj10aGlzLmk9dGhpcy5PPXRoaXMubD1udWxsLHRoaXMuT2E9dGhpcy5SPTAsdGhpcy5MYT1LbihcImZhaWxGYXN0XCIsITEsdCksdGhpcy5IPXRoaXMubT10aGlzLmo9dGhpcy5oPXRoaXMuZj1udWxsLHRoaXMuUz0hMCx0aGlzLkk9dGhpcy5vYT10aGlzLlA9LTEsdGhpcy5UPXRoaXMubz10aGlzLnU9MCx0aGlzLkhhPUtuKFwiYmFzZVJldHJ5RGVsYXlNc1wiLDVlMyx0KSx0aGlzLlJhPUtuKFwicmV0cnlEZWxheVNlZWRNc1wiLDFlNCx0KSx0aGlzLk1hPUtuKFwiZm9yd2FyZENoYW5uZWxNYXhSZXRyaWVzXCIsMix0KSx0aGlzLm1hPUtuKFwiZm9yd2FyZENoYW5uZWxSZXF1ZXN0VGltZW91dE1zXCIsMmU0LHQpLHRoaXMuTmE9dCYmdC5nfHx2b2lkIDAsdGhpcy5EPXZvaWQgMCx0aGlzLkM9dCYmdC5zdXBwb3J0c0Nyb3NzRG9tYWluWGhyfHwhMSx0aGlzLko9XCJcIix0aGlzLmI9bmV3IGJuKHQmJnQuY29uY3VycmVudFJlcXVlc3RMaW1pdCksdGhpcy5rYT1uZXcgQW4sdGhpcy5kYT10JiZ0LmZhc3RIYW5kc2hha2V8fCExLHRoaXMuSWE9dCYmdC5ifHwhMSx0JiZ0LmYmJih0aGlzLmMuYT0hMSksdCYmdC5mb3JjZUxvbmdQb2xsaW5nJiYodGhpcy5TPSExKSx0aGlzLlU9IXRoaXMuZGEmJnRoaXMuUyYmdCYmdC5kZXRlY3RCdWZmZXJpbmdQcm94eXx8ITEsdGhpcy5lYT12b2lkIDAsdGhpcy5OPTAsdGhpcy5GPSExLHRoaXMucz1udWxsLCh0aGlzLkthPXQmJnQuY3x8ITEpJiZ0aGlzLmMuaW5mbyhcIk9wdC1pbiB0byBlbmFibGUgQ2hyb21lIE9yaWdpbiBUcmlhbHMuXCIpfWZ1bmN0aW9uIFFuKHQpe3ZhciBlLG47SG4odCksMz09dC52JiYoZT10LlIrKyxlbihuPVhlKHQuQiksXCJTSURcIix0LkopLGVuKG4sXCJSSURcIixlKSxlbihuLFwiVFlQRVwiLFwidGVybWluYXRlXCIpLEpuKHQsbiksKGU9bmV3IENlKHQsdC5jLGUsdm9pZCAwKSkuSD0yLGUuaT1ubihYZShuKSksbj0hMSwhKG49QS5uYXZpZ2F0b3ImJkEubmF2aWdhdG9yLnNlbmRCZWFjb24/QS5uYXZpZ2F0b3Iuc2VuZEJlYWNvbihlLmkudG9TdHJpbmcoKSxcIlwiKTpuKSYmQS5JbWFnZSYmKChuZXcgSW1hZ2UpLnNyYz1lLmksbj0hMCksbnx8KGUuYT1jcihlLmcsbnVsbCksZS5hLmJhKGUuaSkpLGUudT1WKCksVmUoZSkpLGFyKHQpfWZ1bmN0aW9uIHpuKHQpe3QuYSYmKGVyKHQpLHQuYS5jYW5jZWwoKSx0LmE9bnVsbCl9ZnVuY3Rpb24gSG4odCl7em4odCksdC5qJiYoQS5jbGVhclRpbWVvdXQodC5qKSx0Lmo9bnVsbCkscnIodCksdC5iLmNhbmNlbCgpLHQuaCYmKFwibnVtYmVyXCI9PXR5cGVvZiB0LmgmJkEuY2xlYXJUaW1lb3V0KHQuaCksdC5oPW51bGwpfWZ1bmN0aW9uIFduKHQsZSl7dC5nLnB1c2gobmV3IHZuKHQuT2ErKyxlKSksMz09dC52JiZZbih0KX1mdW5jdGlvbiBZbih0KXtJbih0LmIpfHx0Lmh8fCh0Lmg9ITAsV3QodC5CYSx0KSx0LnU9MCl9ZnVuY3Rpb24gWG4odCxlKXt2YXIgbj1lP2UuZjp0LlIrKyxyPVhlKHQuQik7ZW4ocixcIlNJRFwiLHQuSiksZW4ocixcIlJJRFwiLG4pLGVuKHIsXCJBSURcIix0LlApLEpuKHQsciksdC5pJiZ0LmwmJmpuKHIsdC5pLHQubCksbj1uZXcgQ2UodCx0LmMsbix0LnUrMSksbnVsbD09PXQuaSYmKG4uQj10LmwpLGUmJih0Lmc9ZS5zLmNvbmNhdCh0LmcpKSxlPSRuKHQsbiwxZTMpLG4uc2V0VGltZW91dChNYXRoLnJvdW5kKC41KnQubWEpK01hdGgucm91bmQoLjUqdC5tYSpNYXRoLnJhbmRvbSgpKSksX24odC5iLG4pLFBlKG4scixlKX1mdW5jdGlvbiBKbih0LG4pe3QuZiYmR2Uoe30sZnVuY3Rpb24odCxlKXtlbihuLGUsdCl9KX1mdW5jdGlvbiAkbih0LGUsbil7bj1NYXRoLm1pbih0LmcubGVuZ3RoLG4pO3ZhciByPXQuZj9NKHQuZi5KYSx0LmYsdCk6bnVsbDt0OmZvcih2YXIgaT10Lmcsbz0tMTs7KXt2YXIgcz1bXCJjb3VudD1cIituXTstMT09bz8wPG4/KG89aVswXS5iLHMucHVzaChcIm9mcz1cIitvKSk6bz0wOnMucHVzaChcIm9mcz1cIitvKTtmb3IodmFyIGE9ITAsdT0wO3U8bjt1Kyspe3ZhciBjPWlbdV0uYixoPWlbdV0uYTtpZigoYy09byk8MClvPU1hdGgubWF4KDAsaVt1XS5iLTEwMCksYT0hMTtlbHNlIHRyeXshZnVuY3Rpb24odCxyLGUpe3ZhciBpPWV8fFwiXCI7dHJ5e0dlKHQsZnVuY3Rpb24odCxlKXt2YXIgbj10O1IodCkmJihuPWp0KHQpKSxyLnB1c2goaStlK1wiPVwiK2VuY29kZVVSSUNvbXBvbmVudChuKSl9KX1jYXRjaCh0KXt0aHJvdyByLnB1c2goaStcInR5cGU9XCIrZW5jb2RlVVJJQ29tcG9uZW50KFwiX2JhZG1hcFwiKSksdH19KGgscyxcInJlcVwiK2MrXCJfXCIpfWNhdGNoKHQpe3ImJnIoaCl9fWlmKGEpe3I9cy5qb2luKFwiJlwiKTticmVhayB0fX1yZXR1cm4gdD10Lmcuc3BsaWNlKDAsbiksZS5zPXQscn1mdW5jdGlvbiBabih0KXt0LmF8fHQuanx8KHQuVD0xLFd0KHQuQWEsdCksdC5vPTApfWZ1bmN0aW9uIHRyKHQpe3JldHVybiEodC5hfHx0Lmp8fDM8PXQubykmJih0LlQrKyx0Lmo9SWUoTSh0LkFhLHQpLG9yKHQsdC5vKSksdC5vKyssMSl9ZnVuY3Rpb24gZXIodCl7bnVsbCE9dC5zJiYoQS5jbGVhclRpbWVvdXQodC5zKSx0LnM9bnVsbCl9ZnVuY3Rpb24gbnIodCl7dC5hPW5ldyBDZSh0LHQuYyxcInJwY1wiLHQuVCksbnVsbD09PXQuaSYmKHQuYS5CPXQubCksdC5hLk89MDt2YXIgZT1YZSh0LmxhKTtlbihlLFwiUklEXCIsXCJycGNcIiksZW4oZSxcIlNJRFwiLHQuSiksZW4oZSxcIkNJXCIsdC5IP1wiMFwiOlwiMVwiKSxlbihlLFwiQUlEXCIsdC5QKSxKbih0LGUpLGVuKGUsXCJUWVBFXCIsXCJ4bWxodHRwXCIpLHQuaSYmdC5sJiZqbihlLHQuaSx0LmwpLHQuRCYmdC5hLnNldFRpbWVvdXQodC5EKTt2YXIgbj10LmE7dD10LmdhLG4uSD0xLG4uaT1ubihYZShlKSksbi5qPW51bGwsbi5JPSEwLE1lKG4sdCl9ZnVuY3Rpb24gcnIodCl7bnVsbCE9dC5tJiYoQS5jbGVhclRpbWVvdXQodC5tKSx0Lm09bnVsbCl9ZnVuY3Rpb24gaXIodCxlKXt2YXIgbixyLGksbz1udWxsO2lmKHQuYT09ZSl7cnIodCksZXIodCksdC5hPW51bGw7dmFyIHM9Mn1lbHNle2lmKCFUbih0LmIsZSkpcmV0dXJuO289ZS5zLFNuKHQuYixlKSxzPTF9aWYodC5JPWUuTiwwIT10LnYpaWYoZS5iKTE9PXM/KG89ZS5qP2Uuai5sZW5ndGg6MCxlPVYoKS1lLnUsbj10LnUscXQocz15ZSgpLG5ldyB3ZShzKSksWW4odCkpOlpuKHQpO2Vsc2UgaWYoMz09KG49ZS5oKXx8MD09biYmMDx0Lkl8fCgxIT1zfHwoaT1lLEVuKChyPXQpLmIpPj1yLmIuZi0oci5oPzE6MCl8fChyLmg/KHIuZz1pLnMuY29uY2F0KHIuZyksMCk6MT09ci52fHwyPT1yLnZ8fHIudT49KHIuTGE/MDpyLk1hKXx8KHIuaD1JZShNKHIuQmEscixpKSxvcihyLHIudSkpLHIudSsrLDApKSkpJiYoMiE9c3x8IXRyKHQpKSlzd2l0Y2gobyYmMDxvLmxlbmd0aCYmKGU9dC5iLGUuYz1lLmMuY29uY2F0KG8pKSxuKXtjYXNlIDE6c3IodCw1KTticmVhaztjYXNlIDQ6c3IodCwxMCk7YnJlYWs7Y2FzZSAzOnNyKHQsNik7YnJlYWs7ZGVmYXVsdDpzcih0LDIpfX1mdW5jdGlvbiBvcih0LGUpe3ZhciBuPXQuSGErTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpKnQuUmEpO3JldHVybiB0LmZ8fChuKj0yKSxuKmV9ZnVuY3Rpb24gc3IodCxlKXt2YXIgbixyLGksbzt0LmMuaW5mbyhcIkVycm9yIGNvZGUgXCIrZSksMj09ZT8ocj1udWxsLHQuZiYmKHI9bnVsbCksbz1NKHQuWWEsdCkscnx8KHI9bmV3IFllKFwiLy93d3cuZ29vZ2xlLmNvbS9pbWFnZXMvY2xlYXJkb3QuZ2lmXCIpLEEubG9jYXRpb24mJlwiaHR0cFwiPT1BLmxvY2F0aW9uLnByb3RvY29sfHxKZShyLFwiaHR0cHNcIiksbm4ocikpLG49ci50b1N0cmluZygpLHI9byxvPW5ldyBsZSxBLkltYWdlPygoaT1uZXcgSW1hZ2UpLm9ubG9hZD1GKGtuLG8saSxcIlRlc3RMb2FkSW1hZ2U6IGxvYWRlZFwiLCEwLHIpLGkub25lcnJvcj1GKGtuLG8saSxcIlRlc3RMb2FkSW1hZ2U6IGVycm9yXCIsITEsciksaS5vbmFib3J0PUYoa24sbyxpLFwiVGVzdExvYWRJbWFnZTogYWJvcnRcIiwhMSxyKSxpLm9udGltZW91dD1GKGtuLG8saSxcIlRlc3RMb2FkSW1hZ2U6IHRpbWVvdXRcIiwhMSxyKSxBLnNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLm9udGltZW91dCYmaS5vbnRpbWVvdXQoKX0sMWU0KSxpLnNyYz1uKTpyKCExKSk6YmUoMiksdC52PTAsdC5mJiZ0LmYucmEoZSksYXIodCksSG4odCl9ZnVuY3Rpb24gYXIodCl7dC52PTAsdC5JPS0xLHQuZiYmKDA9PU5uKHQuYikubGVuZ3RoJiYwPT10LmcubGVuZ3RofHwodC5iLmMubGVuZ3RoPTAsRyh0LmcpLHQuZy5sZW5ndGg9MCksdC5mLnFhKCkpfWZ1bmN0aW9uIHVyKHQsZSxuKXt2YXIgcixpLG8scyxhLHU9KHM9bilpbnN0YW5jZW9mIFllP1hlKHMpOm5ldyBZZShzLHZvaWQgMCk7cmV0dXJuXCJcIiE9dS5jPyhlJiYkZSh1LGUrXCIuXCIrdS5jKSxaZSh1LHUuaCkpOihhPUEubG9jYXRpb24scj1hLnByb3RvY29sLGk9ZT9lK1wiLlwiK2EuaG9zdG5hbWU6YS5ob3N0bmFtZSxvPSthLnBvcnQscz1uLGE9bmV3IFllKG51bGwsdm9pZCAwKSxyJiZKZShhLHIpLGkmJiRlKGEsaSksbyYmWmUoYSxvKSxzJiYoYS5nPXMpLHU9YSksdC5WJiZKKHQuVixmdW5jdGlvbih0LGUpe2VuKHUsZSx0KX0pLGU9dC5BLG49dC5uYSxlJiZuJiZlbih1LGUsbiksZW4odSxcIlZFUlwiLHQuaGEpLEpuKHQsdSksdX1mdW5jdGlvbiBjcih0LGUpe2lmKGUmJiF0LkMpdGhyb3cgRXJyb3IoXCJDYW4ndCBjcmVhdGUgc2Vjb25kYXJ5IGRvbWFpbiBjYXBhYmxlIFhocklvIG9iamVjdC5cIik7cmV0dXJuKGU9bmV3IFJuKHQuTmEpKS5GPXQuQyxlfWZ1bmN0aW9uIGhyKCl7fWZ1bmN0aW9uIGxyKCl7aWYoaXQmJiEoMTA8PU51bWJlcihwdCkpKXRocm93IEVycm9yKFwiRW52aXJvbm1lbnRhbCBlcnJvcjogbm8gYXZhaWxhYmxlIHRyYW5zcG9ydC5cIil9ZnVuY3Rpb24gZnIodCxlKXtVdC5jYWxsKHRoaXMpLHRoaXMuYT1uZXcgR24oZSksdGhpcy5vPXQsdGhpcy5iPWUmJmUubWVzc2FnZVVybFBhcmFtc3x8bnVsbCx0PWUmJmUubWVzc2FnZUhlYWRlcnN8fG51bGwsZSYmZS5jbGllbnRQcm90b2NvbEhlYWRlclJlcXVpcmVkJiYodD90W1wiWC1DbGllbnQtUHJvdG9jb2xcIl09XCJ3ZWJjaGFubmVsXCI6dD17XCJYLUNsaWVudC1Qcm90b2NvbFwiOlwid2ViY2hhbm5lbFwifSksdGhpcy5hLmw9dCx0PWUmJmUuaW5pdE1lc3NhZ2VIZWFkZXJzfHxudWxsLGUmJmUubWVzc2FnZUNvbnRlbnRUeXBlJiYodD90W1wiWC1XZWJDaGFubmVsLUNvbnRlbnQtVHlwZVwiXT1lLm1lc3NhZ2VDb250ZW50VHlwZTp0PXtcIlgtV2ViQ2hhbm5lbC1Db250ZW50LVR5cGVcIjplLm1lc3NhZ2VDb250ZW50VHlwZX0pLGUmJmUuYSYmKHQ/dFtcIlgtV2ViQ2hhbm5lbC1DbGllbnQtUHJvZmlsZVwiXT1lLmE6dD17XCJYLVdlYkNoYW5uZWwtQ2xpZW50LVByb2ZpbGVcIjplLmF9KSx0aGlzLmEuTz10LCh0PWUmJmUuaHR0cEhlYWRlcnNPdmVyd3JpdGVQYXJhbSkmJiFRKHQpJiYodGhpcy5hLmk9dCksdGhpcy5tPWUmJmUuc3VwcG9ydHNDcm9zc0RvbWFpblhocnx8ITEsdGhpcy5sPWUmJmUuc2VuZFJhd0pzb258fCExLChlPWUmJmUuaHR0cFNlc3Npb25JZFBhcmFtKSYmIVEoZSkmJih0aGlzLmEuQT1lLG51bGwhPT0odD10aGlzLmIpJiZlIGluIHQmJihlIGluKHQ9dGhpcy5iKSYmZGVsZXRlIHRbZV0pKSx0aGlzLmY9bmV3IHlyKHRoaXMpfWZ1bmN0aW9uIGRyKHQpe0RlLmNhbGwodGhpcyk7dmFyIGU9dC5fX3NtX187aWYoZSl7dDp7Zm9yKHZhciBuIGluIGUpe3Q9bjticmVhayB0fXQ9dm9pZCAwfSh0aGlzLmM9dCk/KHQ9dGhpcy5jLHRoaXMuZGF0YT1udWxsIT09ZSYmdCBpbiBlP2VbdF06dm9pZCAwKTp0aGlzLmRhdGE9ZX1lbHNlIHRoaXMuZGF0YT10fWZ1bmN0aW9uIHByKCl7QWUuY2FsbCh0aGlzKSx0aGlzLnN0YXR1cz0xfWZ1bmN0aW9uIHlyKHQpe3RoaXMuYT10fShTPVJuLnByb3RvdHlwZSkuYmE9ZnVuY3Rpb24odCxlLG4scil7aWYodGhpcy5hKXRocm93IEVycm9yKFwiW2dvb2cubmV0LlhocklvXSBPYmplY3QgaXMgYWN0aXZlIHdpdGggYW5vdGhlciByZXF1ZXN0PVwiK3RoaXMuQitcIjsgbmV3VXJpPVwiK3QpO2U9ZT9lLnRvVXBwZXJDYXNlKCk6XCJHRVRcIix0aGlzLkI9dCx0aGlzLmY9XCJcIix0aGlzLmg9MCx0aGlzLnU9ITEsdGhpcy5iPSEwLHRoaXMuYT1uZXcgWE1MSHR0cFJlcXVlc3QsdGhpcy5zPXRoaXMuSD9TZSh0aGlzLkgpOlNlKFJlKSx0aGlzLmEub25yZWFkeXN0YXRlY2hhbmdlPU0odGhpcy56YSx0aGlzKTt0cnl7dGhpcy5BPSEwLHRoaXMuYS5vcGVuKGUsU3RyaW5nKHQpLCEwKSx0aGlzLkE9ITF9Y2F0Y2godCl7cmV0dXJuIHZvaWQgTW4odGhpcyx0KX10PW58fFwiXCI7dmFyIGksbz1uZXcgUWUodGhpcy5oZWFkZXJzKTtyJiZHZShyLGZ1bmN0aW9uKHQsZSl7by5zZXQoZSx0KX0pLHI9ZnVuY3Rpb24odCl7dDp7Zm9yKHZhciBlPVBuLG49dC5sZW5ndGgscj1cInN0cmluZ1wiPT10eXBlb2YgdD90LnNwbGl0KFwiXCIpOnQsaT0wO2k8bjtpKyspaWYoaSBpbiByJiZlLmNhbGwodm9pZCAwLHJbaV0saSx0KSl7ZT1pO2JyZWFrIHR9ZT0tMX1yZXR1cm4gZTwwP251bGw6XCJzdHJpbmdcIj09dHlwZW9mIHQ/dC5jaGFyQXQoZSk6dFtlXX0oby5MKCkpLG49QS5Gb3JtRGF0YSYmdCBpbnN0YW5jZW9mIEEuRm9ybURhdGEsMDw9QihMbixlKSYmIXImJiFuJiZvLnNldChcIkNvbnRlbnQtVHlwZVwiLFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkO2NoYXJzZXQ9dXRmLThcIiksby5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7dGhpcy5hLnNldFJlcXVlc3RIZWFkZXIoZSx0KX0sdGhpcyksdGhpcy5JJiYodGhpcy5hLnJlc3BvbnNlVHlwZT10aGlzLkkpLFwid2l0aENyZWRlbnRpYWxzXCJpbiB0aGlzLmEmJnRoaXMuYS53aXRoQ3JlZGVudGlhbHMhPT10aGlzLkYmJih0aGlzLmEud2l0aENyZWRlbnRpYWxzPXRoaXMuRik7dHJ5e3FuKHRoaXMpLDA8dGhpcy5vJiYoKHRoaXMuRD0oaT10aGlzLmEsaXQmJmR0KDkpJiZcIm51bWJlclwiPT10eXBlb2YgaS50aW1lb3V0JiZ2b2lkIDAhPT1pLm9udGltZW91dCkpPyh0aGlzLmEudGltZW91dD10aGlzLm8sdGhpcy5hLm9udGltZW91dD1NKHRoaXMueGEsdGhpcykpOnRoaXMubT10ZSh0aGlzLnhhLHRoaXMubyx0aGlzKSksdGhpcy5sPSEwLHRoaXMuYS5zZW5kKHQpLHRoaXMubD0hMX1jYXRjaCh0KXtNbih0aGlzLHQpfX0sUy54YT1mdW5jdGlvbigpe3ZvaWQgMCE9PUQmJnRoaXMuYSYmKHRoaXMuZj1cIlRpbWVkIG91dCBhZnRlciBcIit0aGlzLm8rXCJtcywgYWJvcnRpbmdcIix0aGlzLmg9OCxxdCh0aGlzLFwidGltZW91dFwiKSx0aGlzLmFib3J0KDgpKX0sUy5hYm9ydD1mdW5jdGlvbih0KXt0aGlzLmEmJnRoaXMuYiYmKHRoaXMuYj0hMSx0aGlzLmc9ITAsdGhpcy5hLmFib3J0KCksdGhpcy5nPSExLHRoaXMuaD10fHw3LHF0KHRoaXMsXCJjb21wbGV0ZVwiKSxxdCh0aGlzLFwiYWJvcnRcIiksVW4odGhpcykpfSxTLkc9ZnVuY3Rpb24oKXt0aGlzLmEmJih0aGlzLmImJih0aGlzLmI9ITEsdGhpcy5nPSEwLHRoaXMuYS5hYm9ydCgpLHRoaXMuZz0hMSksVW4odGhpcywhMCkpLFJuLlguRy5jYWxsKHRoaXMpfSxTLnphPWZ1bmN0aW9uKCl7dGhpcy5qfHwodGhpcy5BfHx0aGlzLmx8fHRoaXMuZz9Wbih0aGlzKTp0aGlzLlVhKCkpfSxTLlVhPWZ1bmN0aW9uKCl7Vm4odGhpcyl9LFMuVz1mdW5jdGlvbigpe3RyeXtyZXR1cm4gMjxCbih0aGlzKT90aGlzLmEuc3RhdHVzOi0xfWNhdGNoKHQpe3JldHVybi0xfX0sUy4kPWZ1bmN0aW9uKCl7dHJ5e3JldHVybiB0aGlzLmE/dGhpcy5hLnJlc3BvbnNlVGV4dDpcIlwifWNhdGNoKHQpe3JldHVyblwiXCJ9fSxTLlBhPWZ1bmN0aW9uKHQpe2lmKHRoaXMuYSl7dmFyIGU9dGhpcy5hLnJlc3BvbnNlVGV4dDtyZXR1cm4gdCYmMD09ZS5pbmRleE9mKHQpJiYoZT1lLnN1YnN0cmluZyh0Lmxlbmd0aCkpLENuKGUpfX0sUy51YT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmh9LFMuUWE9ZnVuY3Rpb24oKXtyZXR1cm5cInN0cmluZ1wiPT10eXBlb2YgdGhpcy5mP3RoaXMuZjpTdHJpbmcodGhpcy5mKX0sKFM9R24ucHJvdG90eXBlKS5oYT04LFMudj0xLFMuQmE9ZnVuY3Rpb24odCl7aWYodGhpcy5oKWlmKHRoaXMuaD1udWxsLDE9PXRoaXMudil7aWYoIXQpe3RoaXMuUj1NYXRoLmZsb29yKDFlNSpNYXRoLnJhbmRvbSgpKSx0PXRoaXMuUisrO3ZhciBlLG49bmV3IENlKHRoaXMsdGhpcy5jLHQsdm9pZCAwKSxyPXRoaXMubDtpZih0aGlzLk8mJihyP3R0KHI9JChyKSx0aGlzLk8pOnI9dGhpcy5PKSxudWxsPT09dGhpcy5pJiYobi5CPXIpLHRoaXMuZGEpdDp7Zm9yKHZhciBpPWU9MDtpPHRoaXMuZy5sZW5ndGg7aSsrKXt2YXIgbz10aGlzLmdbaV07aWYoXCJfX2RhdGFfX1wiaW4gby5hJiZcInN0cmluZ1wiPT10eXBlb2Yobz1vLmEuX19kYXRhX18pP289by5sZW5ndGg6bz12b2lkIDAsdm9pZCAwPT09bylicmVhaztpZig0MDk2PChlKz1vKSl7ZT1pO2JyZWFrIHR9aWYoNDA5Nj09PWV8fGk9PT10aGlzLmcubGVuZ3RoLTEpe2U9aSsxO2JyZWFrIHR9fWU9MWUzfWVsc2UgZT0xZTM7ZT0kbih0aGlzLG4sZSksZW4oaT1YZSh0aGlzLkIpLFwiUklEXCIsdCksZW4oaSxcIkNWRVJcIiwyMiksdGhpcy5BJiZlbihpLFwiWC1IVFRQLVNlc3Npb24tSWRcIix0aGlzLkEpLEpuKHRoaXMsaSksdGhpcy5pJiZyJiZqbihpLHRoaXMuaSxyKSxfbih0aGlzLmIsbiksdGhpcy5JYSYmZW4oaSxcIlRZUEVcIixcImluaXRcIiksdGhpcy5kYT8oZW4oaSxcIiRyZXFcIixlKSxlbihpLFwiU0lEXCIsXCJudWxsXCIpLG4uVT0hMCxQZShuLGksbnVsbCkpOlBlKG4saSxlKSx0aGlzLnY9Mn19ZWxzZSAzPT10aGlzLnYmJih0P1huKHRoaXMsdCk6MD09dGhpcy5nLmxlbmd0aHx8SW4odGhpcy5iKXx8WG4odGhpcykpfSxTLkFhPWZ1bmN0aW9uKCl7dmFyIHQ7dGhpcy5qPW51bGwsbnIodGhpcyksdGhpcy5VJiYhKHRoaXMuRnx8bnVsbD09dGhpcy5hfHx0aGlzLk48PTApJiYodD0yKnRoaXMuTix0aGlzLmMuaW5mbyhcIkJQIGRldGVjdGlvbiB0aW1lciBlbmFibGVkOiBcIit0KSx0aGlzLnM9SWUoTSh0aGlzLlRhLHRoaXMpLHQpKX0sUy5UYT1mdW5jdGlvbigpe3RoaXMucyYmKHRoaXMucz1udWxsLHRoaXMuYy5pbmZvKFwiQlAgZGV0ZWN0aW9uIHRpbWVvdXQgcmVhY2hlZC5cIiksdGhpcy5jLmluZm8oXCJCdWZmZXJpbmcgcHJveHkgZGV0ZWN0ZWQgYW5kIHN3aXRjaCB0byBsb25nLXBvbGxpbmchXCIpLHRoaXMuSD0hMSx0aGlzLkY9ITAsYmUoMTApLHpuKHRoaXMpLG5yKHRoaXMpKX0sUy5TYT1mdW5jdGlvbigpe251bGwhPXRoaXMubSYmKHRoaXMubT1udWxsLHpuKHRoaXMpLHRyKHRoaXMpLGJlKDE5KSl9LFMuWWE9ZnVuY3Rpb24odCl7dD8odGhpcy5jLmluZm8oXCJTdWNjZXNzZnVsbHkgcGluZ2VkIGdvb2dsZS5jb21cIiksYmUoMikpOih0aGlzLmMuaW5mbyhcIkZhaWxlZCB0byBwaW5nIGdvb2dsZS5jb21cIiksYmUoMSkpfSwoUz1oci5wcm90b3R5cGUpLnRhPWZ1bmN0aW9uKCl7fSxTLnNhPWZ1bmN0aW9uKCl7fSxTLnJhPWZ1bmN0aW9uKCl7fSxTLnFhPWZ1bmN0aW9uKCl7fSxTLkphPWZ1bmN0aW9uKCl7fSxsci5wcm90b3R5cGUuYT1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgZnIodCxlKX0sVShmcixVdCksZnIucHJvdG90eXBlLmc9ZnVuY3Rpb24oKXt0aGlzLmEuZj10aGlzLmYsdGhpcy5tJiYodGhpcy5hLkM9ITApO3ZhciB0PXRoaXMuYSxlPXRoaXMubyxuPXRoaXMuYnx8dm9pZCAwO2JlKDApLHQuZmE9ZSx0LlY9bnx8e30sdC5IPXQuUyx0LkI9dXIodCxudWxsLHQuZmEpLFluKHQpfSxmci5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oKXtRbih0aGlzLmEpfSxmci5wcm90b3R5cGUuaD1mdW5jdGlvbih0KXt2YXIgZTtcInN0cmluZ1wiPT10eXBlb2YgdD8oKGU9e30pLl9fZGF0YV9fPXQsV24odGhpcy5hLGUpKTp0aGlzLmw/KChlPXt9KS5fX2RhdGFfXz1qdCh0KSxXbih0aGlzLmEsZSkpOlduKHRoaXMuYSx0KX0sZnIucHJvdG90eXBlLkc9ZnVuY3Rpb24oKXt0aGlzLmEuZj1udWxsLGRlbGV0ZSB0aGlzLmYsUW4odGhpcy5hKSxkZWxldGUgdGhpcy5hLGZyLlguRy5jYWxsKHRoaXMpfSxVKGRyLERlKSxVKHByLEFlKSxVKHlyLGhyKSx5ci5wcm90b3R5cGUudGE9ZnVuY3Rpb24oKXtxdCh0aGlzLmEsXCJhXCIpfSx5ci5wcm90b3R5cGUuc2E9ZnVuY3Rpb24odCl7cXQodGhpcy5hLG5ldyBkcih0KSl9LHlyLnByb3RvdHlwZS5yYT1mdW5jdGlvbih0KXtxdCh0aGlzLmEsbmV3IHByKX0seXIucHJvdG90eXBlLnFhPWZ1bmN0aW9uKCl7cXQodGhpcy5hLFwiYlwiKX0sbHIucHJvdG90eXBlLmNyZWF0ZVdlYkNoYW5uZWw9bHIucHJvdG90eXBlLmEsZnIucHJvdG90eXBlLnNlbmQ9ZnIucHJvdG90eXBlLmgsZnIucHJvdG90eXBlLm9wZW49ZnIucHJvdG90eXBlLmcsRWUuTk9fRVJST1I9MCxFZS5USU1FT1VUPTgsRWUuSFRUUF9FUlJPUj02LFRlLkNPTVBMRVRFPVwiY29tcGxldGVcIiwoTmUuRXZlbnRUeXBlPU4pLk9QRU49XCJhXCIsTi5DTE9TRT1cImJcIixOLkVSUk9SPVwiY1wiLE4uTUVTU0FHRT1cImRcIixVdC5wcm90b3R5cGUubGlzdGVuPVV0LnByb3RvdHlwZS52YSxSbi5wcm90b3R5cGUubGlzdGVuT25jZT1Sbi5wcm90b3R5cGUud2EsUm4ucHJvdG90eXBlLmdldExhc3RFcnJvcj1Sbi5wcm90b3R5cGUuUWEsUm4ucHJvdG90eXBlLmdldExhc3RFcnJvckNvZGU9Um4ucHJvdG90eXBlLnVhLFJuLnByb3RvdHlwZS5nZXRTdGF0dXM9Um4ucHJvdG90eXBlLlcsUm4ucHJvdG90eXBlLmdldFJlc3BvbnNlSnNvbj1Sbi5wcm90b3R5cGUuUGEsUm4ucHJvdG90eXBlLmdldFJlc3BvbnNlVGV4dD1Sbi5wcm90b3R5cGUuJCxSbi5wcm90b3R5cGUuc2VuZD1Sbi5wcm90b3R5cGUuYmE7dmFyIGdyPXllLG1yPUVlLHZyPVRlLGJyPWRlLHdyPTEwLElyPTExLEVyPU5lLFRyPVJuLF9yPShTci5wcm90b3R5cGUudD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5wcmV2aW91c1ZhbHVlPU1hdGgubWF4KHQsdGhpcy5wcmV2aW91c1ZhbHVlKSx0aGlzLnByZXZpb3VzVmFsdWV9LFNyLnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKCl7dmFyIHQ9Kyt0aGlzLnByZXZpb3VzVmFsdWU7cmV0dXJuIHRoaXMuaSYmdGhpcy5pKHQpLHR9LFNyKTtmdW5jdGlvbiBTcih0LGUpe3ZhciBuPXRoaXM7dGhpcy5wcmV2aW91c1ZhbHVlPXQsZSYmKGUuc2VxdWVuY2VOdW1iZXJIYW5kbGVyPWZ1bmN0aW9uKHQpe3JldHVybiBuLnQodCl9LHRoaXMuaT1mdW5jdGlvbih0KXtyZXR1cm4gZS53cml0ZVNlcXVlbmNlTnVtYmVyKHQpfSl9X3Iubz0tMTt2YXIgTnIsRHI9e09LOlwib2tcIixDQU5DRUxMRUQ6XCJjYW5jZWxsZWRcIixVTktOT1dOOlwidW5rbm93blwiLElOVkFMSURfQVJHVU1FTlQ6XCJpbnZhbGlkLWFyZ3VtZW50XCIsREVBRExJTkVfRVhDRUVERUQ6XCJkZWFkbGluZS1leGNlZWRlZFwiLE5PVF9GT1VORDpcIm5vdC1mb3VuZFwiLEFMUkVBRFlfRVhJU1RTOlwiYWxyZWFkeS1leGlzdHNcIixQRVJNSVNTSU9OX0RFTklFRDpcInBlcm1pc3Npb24tZGVuaWVkXCIsVU5BVVRIRU5USUNBVEVEOlwidW5hdXRoZW50aWNhdGVkXCIsUkVTT1VSQ0VfRVhIQVVTVEVEOlwicmVzb3VyY2UtZXhoYXVzdGVkXCIsRkFJTEVEX1BSRUNPTkRJVElPTjpcImZhaWxlZC1wcmVjb25kaXRpb25cIixBQk9SVEVEOlwiYWJvcnRlZFwiLE9VVF9PRl9SQU5HRTpcIm91dC1vZi1yYW5nZVwiLFVOSU1QTEVNRU5URUQ6XCJ1bmltcGxlbWVudGVkXCIsSU5URVJOQUw6XCJpbnRlcm5hbFwiLFVOQVZBSUxBQkxFOlwidW5hdmFpbGFibGVcIixEQVRBX0xPU1M6XCJkYXRhLWxvc3NcIn0sQXI9KG4oQ3IsTnI9RXJyb3IpLENyKSxrcj1uZXcgSShcIkBmaXJlYmFzZS9maXJlc3RvcmVcIik7ZnVuY3Rpb24gQ3IodCxlKXt2YXIgbj10aGlzO3JldHVybihuPU5yLmNhbGwodGhpcyxlKXx8dGhpcykuY29kZT10LG4ubWVzc2FnZT1lLG4ubmFtZT1cIkZpcmViYXNlRXJyb3JcIixuLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIG4ubmFtZStcIjogW2NvZGU9XCIrbi5jb2RlK1wiXTogXCIrbi5tZXNzYWdlfSxufWZ1bmN0aW9uIFJyKCl7cmV0dXJuIGtyLmxvZ0xldmVsfWZ1bmN0aW9uIHhyKHQpe2Zvcih2YXIgZSxuPVtdLHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKW5bci0xXT1hcmd1bWVudHNbcl07a3IubG9nTGV2ZWw8PWYuREVCVUcmJihlPW4ubWFwKFByKSxrci5kZWJ1Zy5hcHBseShrcixzKFtcIkZpcmVzdG9yZSAoOC40LjIpOiBcIit0XSxlKSkpfWZ1bmN0aW9uIE9yKHQpe2Zvcih2YXIgZSxuPVtdLHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKW5bci0xXT1hcmd1bWVudHNbcl07a3IubG9nTGV2ZWw8PWYuRVJST1ImJihlPW4ubWFwKFByKSxrci5lcnJvci5hcHBseShrcixzKFtcIkZpcmVzdG9yZSAoOC40LjIpOiBcIit0XSxlKSkpfWZ1bmN0aW9uIExyKHQpe2Zvcih2YXIgZSxuPVtdLHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKW5bci0xXT1hcmd1bWVudHNbcl07a3IubG9nTGV2ZWw8PWYuV0FSTiYmKGU9bi5tYXAoUHIpLGtyLndhcm4uYXBwbHkoa3IscyhbXCJGaXJlc3RvcmUgKDguNC4yKTogXCIrdF0sZSkpKX1mdW5jdGlvbiBQcihlKXtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gZTt0cnl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KGUpfWNhdGNoKHQpe3JldHVybiBlfX1mdW5jdGlvbiBNcih0KXt0PVwiRklSRVNUT1JFICg4LjQuMikgSU5URVJOQUwgQVNTRVJUSU9OIEZBSUxFRDogXCIrKHQ9dm9pZCAwPT09dD9cIlVuZXhwZWN0ZWQgc3RhdGVcIjp0KTt0aHJvdyBPcih0KSxuZXcgRXJyb3IodCl9ZnVuY3Rpb24gRnIodCl7dHx8TXIoKX12YXIgVnI9KFVyLnU9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9XCJBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OVwiLGU9TWF0aC5mbG9vcigyNTYvdC5sZW5ndGgpKnQubGVuZ3RoLG49XCJcIjtuLmxlbmd0aDwyMDspZm9yKHZhciByPWZ1bmN0aW9uKHQpe3ZhciBlPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBzZWxmJiYoc2VsZi5jcnlwdG98fHNlbGYubXNDcnlwdG8pLG49bmV3IFVpbnQ4QXJyYXkodCk7aWYoZSYmXCJmdW5jdGlvblwiPT10eXBlb2YgZS5nZXRSYW5kb21WYWx1ZXMpZS5nZXRSYW5kb21WYWx1ZXMobik7ZWxzZSBmb3IodmFyIHI9MDtyPHQ7cisrKW5bcl09TWF0aC5mbG9vcigyNTYqTWF0aC5yYW5kb20oKSk7cmV0dXJuIG59KDQwKSxpPTA7aTxyLmxlbmd0aDsrK2kpbi5sZW5ndGg8MjAmJnJbaV08ZSYmKG4rPXQuY2hhckF0KHJbaV0ldC5sZW5ndGgpKTtyZXR1cm4gbn0sVXIpO2Z1bmN0aW9uIFVyKCl7fWZ1bmN0aW9uIHFyKHQsZSl7cmV0dXJuIHQ8ZT8tMTplPHQ/MTowfWZ1bmN0aW9uIEJyKHQsbixyKXtyZXR1cm4gdC5sZW5ndGg9PT1uLmxlbmd0aCYmdC5ldmVyeShmdW5jdGlvbih0LGUpe3JldHVybiByKHQsbltlXSl9KX1mdW5jdGlvbiBqcih0KXtyZXR1cm4gdCtcIlxcMFwifXZhciBLcj0oenIubm93PWZ1bmN0aW9uKCl7cmV0dXJuIHpyLmZyb21NaWxsaXMoRGF0ZS5ub3coKSl9LHpyLmZyb21EYXRlPWZ1bmN0aW9uKHQpe3JldHVybiB6ci5mcm9tTWlsbGlzKHQuZ2V0VGltZSgpKX0senIuZnJvbU1pbGxpcz1mdW5jdGlvbih0KXt2YXIgZT1NYXRoLmZsb29yKHQvMWUzKTtyZXR1cm4gbmV3IHpyKGUsTWF0aC5mbG9vcigxZTYqKHQtMWUzKmUpKSl9LHpyLnByb3RvdHlwZS50b0RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IERhdGUodGhpcy50b01pbGxpcygpKX0senIucHJvdG90eXBlLnRvTWlsbGlzPWZ1bmN0aW9uKCl7cmV0dXJuIDFlMyp0aGlzLnNlY29uZHMrdGhpcy5uYW5vc2Vjb25kcy8xZTZ9LHpyLnByb3RvdHlwZS5fY29tcGFyZVRvPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNlY29uZHM9PT10LnNlY29uZHM/cXIodGhpcy5uYW5vc2Vjb25kcyx0Lm5hbm9zZWNvbmRzKTpxcih0aGlzLnNlY29uZHMsdC5zZWNvbmRzKX0senIucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHQuc2Vjb25kcz09PXRoaXMuc2Vjb25kcyYmdC5uYW5vc2Vjb25kcz09PXRoaXMubmFub3NlY29uZHN9LHpyLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiVGltZXN0YW1wKHNlY29uZHM9XCIrdGhpcy5zZWNvbmRzK1wiLCBuYW5vc2Vjb25kcz1cIit0aGlzLm5hbm9zZWNvbmRzK1wiKVwifSx6ci5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue3NlY29uZHM6dGhpcy5zZWNvbmRzLG5hbm9zZWNvbmRzOnRoaXMubmFub3NlY29uZHN9fSx6ci5wcm90b3R5cGUudmFsdWVPZj1mdW5jdGlvbigpe3ZhciB0PXRoaXMuc2Vjb25kcy0gLTYyMTM1NTk2ODAwO3JldHVybiBTdHJpbmcodCkucGFkU3RhcnQoMTIsXCIwXCIpK1wiLlwiK1N0cmluZyh0aGlzLm5hbm9zZWNvbmRzKS5wYWRTdGFydCg5LFwiMFwiKX0senIpLEdyPShRci5mcm9tVGltZXN0YW1wPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgUXIodCl9LFFyLm1pbj1mdW5jdGlvbigpe3JldHVybiBuZXcgUXIobmV3IEtyKDAsMCkpfSxRci5wcm90b3R5cGUuY29tcGFyZVRvPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRpbWVzdGFtcC5fY29tcGFyZVRvKHQudGltZXN0YW1wKX0sUXIucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudGltZXN0YW1wLmlzRXF1YWwodC50aW1lc3RhbXApfSxRci5wcm90b3R5cGUudG9NaWNyb3NlY29uZHM9ZnVuY3Rpb24oKXtyZXR1cm4gMWU2KnRoaXMudGltZXN0YW1wLnNlY29uZHMrdGhpcy50aW1lc3RhbXAubmFub3NlY29uZHMvMWUzfSxRci5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIlNuYXBzaG90VmVyc2lvbihcIit0aGlzLnRpbWVzdGFtcC50b1N0cmluZygpK1wiKVwifSxRci5wcm90b3R5cGUudG9UaW1lc3RhbXA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50aW1lc3RhbXB9LFFyKTtmdW5jdGlvbiBRcih0KXt0aGlzLnRpbWVzdGFtcD10fWZ1bmN0aW9uIHpyKHQsZSl7aWYodGhpcy5zZWNvbmRzPXQsKHRoaXMubmFub3NlY29uZHM9ZSk8MCl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIlRpbWVzdGFtcCBuYW5vc2Vjb25kcyBvdXQgb2YgcmFuZ2U6IFwiK2UpO2lmKDFlOTw9ZSl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIlRpbWVzdGFtcCBuYW5vc2Vjb25kcyBvdXQgb2YgcmFuZ2U6IFwiK2UpO2lmKHQ8LTYyMTM1NTk2ODAwKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiVGltZXN0YW1wIHNlY29uZHMgb3V0IG9mIHJhbmdlOiBcIit0KTtpZigyNTM0MDIzMDA4MDA8PXQpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJUaW1lc3RhbXAgc2Vjb25kcyBvdXQgb2YgcmFuZ2U6IFwiK3QpfWZ1bmN0aW9uIEhyKHQpe3ZhciBlLG49MDtmb3IoZSBpbiB0KU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpJiZuKys7cmV0dXJuIG59ZnVuY3Rpb24gV3IodCxlKXtmb3IodmFyIG4gaW4gdClPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwodCxuKSYmZShuLHRbbl0pfWZ1bmN0aW9uIFlyKHQpe2Zvcih2YXIgZSBpbiB0KWlmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpKXJldHVybiExO3JldHVybiEwfXZhciBYcixKcixUZT0oT2JqZWN0LmRlZmluZVByb3BlcnR5KGFpLnByb3RvdHlwZSxcImxlbmd0aFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sZW59LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksYWkucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIDA9PT1haS5jb21wYXJhdG9yKHRoaXMsdCl9LGFpLnByb3RvdHlwZS5jaGlsZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLnNlZ21lbnRzLnNsaWNlKHRoaXMub2Zmc2V0LHRoaXMubGltaXQoKSk7cmV0dXJuIHQgaW5zdGFuY2VvZiBhaT90LmZvckVhY2goZnVuY3Rpb24odCl7ZS5wdXNoKHQpfSk6ZS5wdXNoKHQpLHRoaXMuY29uc3RydWN0KGUpfSxhaS5wcm90b3R5cGUubGltaXQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5vZmZzZXQrdGhpcy5sZW5ndGh9LGFpLnByb3RvdHlwZS5wb3BGaXJzdD1mdW5jdGlvbih0KXtyZXR1cm4gdD12b2lkIDA9PT10PzE6dCx0aGlzLmNvbnN0cnVjdCh0aGlzLnNlZ21lbnRzLHRoaXMub2Zmc2V0K3QsdGhpcy5sZW5ndGgtdCl9LGFpLnByb3RvdHlwZS5wb3BMYXN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuY29uc3RydWN0KHRoaXMuc2VnbWVudHMsdGhpcy5vZmZzZXQsdGhpcy5sZW5ndGgtMSl9LGFpLnByb3RvdHlwZS5maXJzdFNlZ21lbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZWdtZW50c1t0aGlzLm9mZnNldF19LGFpLnByb3RvdHlwZS5sYXN0U2VnbWVudD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmdldCh0aGlzLmxlbmd0aC0xKX0sYWkucHJvdG90eXBlLmdldD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zZWdtZW50c1t0aGlzLm9mZnNldCt0XX0sYWkucHJvdG90eXBlLmlzRW1wdHk9ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMubGVuZ3RofSxhaS5wcm90b3R5cGUuaXNQcmVmaXhPZj1mdW5jdGlvbih0KXtpZih0Lmxlbmd0aDx0aGlzLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIGU9MDtlPHRoaXMubGVuZ3RoO2UrKylpZih0aGlzLmdldChlKSE9PXQuZ2V0KGUpKXJldHVybiExO3JldHVybiEwfSxhaS5wcm90b3R5cGUuaXNJbW1lZGlhdGVQYXJlbnRPZj1mdW5jdGlvbih0KXtpZih0aGlzLmxlbmd0aCsxIT09dC5sZW5ndGgpcmV0dXJuITE7Zm9yKHZhciBlPTA7ZTx0aGlzLmxlbmd0aDtlKyspaWYodGhpcy5nZXQoZSkhPT10LmdldChlKSlyZXR1cm4hMTtyZXR1cm4hMH0sYWkucHJvdG90eXBlLmZvckVhY2g9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXRoaXMub2Zmc2V0LG49dGhpcy5saW1pdCgpO2U8bjtlKyspdCh0aGlzLnNlZ21lbnRzW2VdKX0sYWkucHJvdG90eXBlLnRvQXJyYXk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZWdtZW50cy5zbGljZSh0aGlzLm9mZnNldCx0aGlzLmxpbWl0KCkpfSxhaS5jb21wYXJhdG9yPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPU1hdGgubWluKHQubGVuZ3RoLGUubGVuZ3RoKSxyPTA7cjxuO3IrKyl7dmFyIGk9dC5nZXQociksbz1lLmdldChyKTtpZihpPG8pcmV0dXJuLTE7aWYobzxpKXJldHVybiAxfXJldHVybiB0Lmxlbmd0aDxlLmxlbmd0aD8tMTp0Lmxlbmd0aD5lLmxlbmd0aD8xOjB9LGFpKSwkcj0obihzaSxKcj1UZSksc2kucHJvdG90eXBlLmNvbnN0cnVjdD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyBzaSh0LGUsbil9LHNpLnByb3RvdHlwZS5jYW5vbmljYWxTdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50b0FycmF5KCkuam9pbihcIi9cIil9LHNpLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNhbm9uaWNhbFN0cmluZygpfSxzaS5mcm9tU3RyaW5nPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRbZV09YXJndW1lbnRzW2VdO2Zvcih2YXIgbj1bXSxyPTAsaT10O3I8aS5sZW5ndGg7cisrKXt2YXIgbz1pW3JdO2lmKDA8PW8uaW5kZXhPZihcIi8vXCIpKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiSW52YWxpZCBzZWdtZW50IChcIitvK1wiKS4gUGF0aHMgbXVzdCBub3QgY29udGFpbiAvLyBpbiB0aGVtLlwiKTtuLnB1c2guYXBwbHkobixvLnNwbGl0KFwiL1wiKS5maWx0ZXIoZnVuY3Rpb24odCl7cmV0dXJuIDA8dC5sZW5ndGh9KSl9cmV0dXJuIG5ldyBzaShuKX0sc2kuZW1wdHlQYXRoPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBzaShbXSl9LHNpKSxacj0vXltfYS16QS1aXVtfYS16QS1aMC05XSokLyx0aT0obihvaSxYcj1UZSksb2kucHJvdG90eXBlLmNvbnN0cnVjdD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyBvaSh0LGUsbil9LG9pLmlzVmFsaWRJZGVudGlmaWVyPWZ1bmN0aW9uKHQpe3JldHVybiBaci50ZXN0KHQpfSxvaS5wcm90b3R5cGUuY2Fub25pY2FsU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudG9BcnJheSgpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdD10LnJlcGxhY2UoL1xcXFwvZyxcIlxcXFxcXFxcXCIpLnJlcGxhY2UoL2AvZyxcIlxcXFxgXCIpLHQ9IW9pLmlzVmFsaWRJZGVudGlmaWVyKHQpP1wiYFwiK3QrXCJgXCI6dH0pLmpvaW4oXCIuXCIpfSxvaS5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jYW5vbmljYWxTdHJpbmcoKX0sb2kucHJvdG90eXBlLmlzS2V5RmllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4gMT09PXRoaXMubGVuZ3RoJiZcIl9fbmFtZV9fXCI9PT10aGlzLmdldCgwKX0sb2kua2V5RmllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IG9pKFtcIl9fbmFtZV9fXCJdKX0sb2kuZnJvbVNlcnZlckZvcm1hdD1mdW5jdGlvbih0KXtmb3IodmFyIGU9W10sbj1cIlwiLHI9MCxpPWZ1bmN0aW9uKCl7aWYoMD09PW4ubGVuZ3RoKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiSW52YWxpZCBmaWVsZCBwYXRoIChcIit0K1wiKS4gUGF0aHMgbXVzdCBub3QgYmUgZW1wdHksIGJlZ2luIHdpdGggJy4nLCBlbmQgd2l0aCAnLicsIG9yIGNvbnRhaW4gJy4uJ1wiKTtlLnB1c2gobiksbj1cIlwifSxvPSExO3I8dC5sZW5ndGg7KXt2YXIgcz10W3JdO2lmKFwiXFxcXFwiPT09cyl7aWYocisxPT09dC5sZW5ndGgpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJQYXRoIGhhcyB0cmFpbGluZyBlc2NhcGUgY2hhcmFjdGVyOiBcIit0KTt2YXIgYT10W3IrMV07aWYoXCJcXFxcXCIhPT1hJiZcIi5cIiE9PWEmJlwiYFwiIT09YSl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIlBhdGggaGFzIGludmFsaWQgZXNjYXBlIHNlcXVlbmNlOiBcIit0KTtuKz1hLHIrPTJ9ZWxzZVwiYFwiPT09cz9vPSFvOlwiLlwiIT09c3x8bz9uKz1zOmkoKSxyKyt9aWYoaSgpLG8pdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJVbnRlcm1pbmF0ZWQgYCBpbiBwYXRoOiBcIit0KTtyZXR1cm4gbmV3IG9pKGUpfSxvaS5lbXB0eVBhdGg9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IG9pKFtdKX0sb2kpLGVpPShpaS5wcm90b3R5cGUuY292ZXJzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49dGhpcy5maWVsZHM7ZTxuLmxlbmd0aDtlKyspaWYobltlXS5pc1ByZWZpeE9mKHQpKXJldHVybiEwO3JldHVybiExfSxpaS5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gQnIodGhpcy5maWVsZHMsdC5maWVsZHMsZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5pc0VxdWFsKGUpfSl9LGlpKSxuaT0ocmkuZnJvbUJhc2U2NFN0cmluZz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHJpKGF0b2IodCkpfSxyaS5mcm9tVWludDhBcnJheT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHJpKGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1cIlwiLG49MDtuPHQubGVuZ3RoOysrbillKz1TdHJpbmcuZnJvbUNoYXJDb2RlKHRbbl0pO3JldHVybiBlfSh0KSl9LHJpLnByb3RvdHlwZS50b0Jhc2U2ND1mdW5jdGlvbigpe3JldHVybiB0PXRoaXMuYmluYXJ5U3RyaW5nLGJ0b2EodCk7dmFyIHR9LHJpLnByb3RvdHlwZS50b1VpbnQ4QXJyYXk9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24odCl7Zm9yKHZhciBlPW5ldyBVaW50OEFycmF5KHQubGVuZ3RoKSxuPTA7bjx0Lmxlbmd0aDtuKyspZVtuXT10LmNoYXJDb2RlQXQobik7cmV0dXJuIGV9KHRoaXMuYmluYXJ5U3RyaW5nKX0scmkucHJvdG90eXBlLmFwcHJveGltYXRlQnl0ZVNpemU9ZnVuY3Rpb24oKXtyZXR1cm4gMip0aGlzLmJpbmFyeVN0cmluZy5sZW5ndGh9LHJpLnByb3RvdHlwZS5jb21wYXJlVG89ZnVuY3Rpb24odCl7cmV0dXJuIHFyKHRoaXMuYmluYXJ5U3RyaW5nLHQuYmluYXJ5U3RyaW5nKX0scmkucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYmluYXJ5U3RyaW5nPT09dC5iaW5hcnlTdHJpbmd9LHJpKTtmdW5jdGlvbiByaSh0KXt0aGlzLmJpbmFyeVN0cmluZz10fWZ1bmN0aW9uIGlpKHQpeyh0aGlzLmZpZWxkcz10KS5zb3J0KHRpLmNvbXBhcmF0b3IpfWZ1bmN0aW9uIG9pKCl7cmV0dXJuIG51bGwhPT1YciYmWHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfWZ1bmN0aW9uIHNpKCl7cmV0dXJuIG51bGwhPT1KciYmSnIuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfWZ1bmN0aW9uIGFpKHQsZSxuKXt2b2lkIDA9PT1lP2U9MDplPnQubGVuZ3RoJiZNcigpLHZvaWQgMD09PW4/bj10Lmxlbmd0aC1lOm4+dC5sZW5ndGgtZSYmTXIoKSx0aGlzLnNlZ21lbnRzPXQsdGhpcy5vZmZzZXQ9ZSx0aGlzLmxlbj1ufW5pLkVNUFRZX0JZVEVfU1RSSU5HPW5ldyBuaShcIlwiKTt2YXIgdWk9bmV3IFJlZ0V4cCgvXlxcZHs0fS1cXGRcXGQtXFxkXFxkVFxcZFxcZDpcXGRcXGQ6XFxkXFxkKD86XFwuKFxcZCspKT9aJC8pO2Z1bmN0aW9uIGNpKHQpe2lmKEZyKCEhdCksXCJzdHJpbmdcIiE9dHlwZW9mIHQpcmV0dXJue3NlY29uZHM6aGkodC5zZWNvbmRzKSxuYW5vczpoaSh0Lm5hbm9zKX07dmFyIGU9MCxuPXVpLmV4ZWModCk7RnIoISFuKSxuWzFdJiYobj0oKG49blsxXSkrXCIwMDAwMDAwMDBcIikuc3Vic3RyKDAsOSksZT1OdW1iZXIobikpO3Q9bmV3IERhdGUodCk7cmV0dXJue3NlY29uZHM6TWF0aC5mbG9vcih0LmdldFRpbWUoKS8xZTMpLG5hbm9zOmV9fWZ1bmN0aW9uIGhpKHQpe3JldHVyblwibnVtYmVyXCI9PXR5cGVvZiB0P3Q6XCJzdHJpbmdcIj09dHlwZW9mIHQ/TnVtYmVyKHQpOjB9ZnVuY3Rpb24gbGkodCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/bmkuZnJvbUJhc2U2NFN0cmluZyh0KTpuaS5mcm9tVWludDhBcnJheSh0KX1mdW5jdGlvbiBmaSh0KXtyZXR1cm5cInNlcnZlcl90aW1lc3RhbXBcIj09PShudWxsPT09KHQ9KChudWxsPT09KHQ9bnVsbD09dD92b2lkIDA6dC5tYXBWYWx1ZSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuZmllbGRzKXx8e30pLl9fdHlwZV9fKXx8dm9pZCAwPT09dD92b2lkIDA6dC5zdHJpbmdWYWx1ZSl9ZnVuY3Rpb24gZGkodCl7dD1jaSh0Lm1hcFZhbHVlLmZpZWxkcy5fX2xvY2FsX3dyaXRlX3RpbWVfXy50aW1lc3RhbXBWYWx1ZSk7cmV0dXJuIG5ldyBLcih0LnNlY29uZHMsdC5uYW5vcyl9ZnVuY3Rpb24gcGkodCl7cmV0dXJuIG51bGw9PXR9ZnVuY3Rpb24geWkodCl7cmV0dXJuIDA9PT10JiYxL3Q9PS0xLzB9ZnVuY3Rpb24gZ2kodCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQmJk51bWJlci5pc0ludGVnZXIodCkmJiF5aSh0KSYmdDw9TnVtYmVyLk1BWF9TQUZFX0lOVEVHRVImJnQ+PU51bWJlci5NSU5fU0FGRV9JTlRFR0VSfXZhciBtaT0odmkuZnJvbVBhdGg9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB2aSgkci5mcm9tU3RyaW5nKHQpKX0sdmkuZnJvbU5hbWU9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB2aSgkci5mcm9tU3RyaW5nKHQpLnBvcEZpcnN0KDUpKX0sdmkucHJvdG90eXBlLmhhc0NvbGxlY3Rpb25JZD1mdW5jdGlvbih0KXtyZXR1cm4gMjw9dGhpcy5wYXRoLmxlbmd0aCYmdGhpcy5wYXRoLmdldCh0aGlzLnBhdGgubGVuZ3RoLTIpPT09dH0sdmkucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGwhPT10JiYwPT09JHIuY29tcGFyYXRvcih0aGlzLnBhdGgsdC5wYXRoKX0sdmkucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucGF0aC50b1N0cmluZygpfSx2aS5jb21wYXJhdG9yPWZ1bmN0aW9uKHQsZSl7cmV0dXJuICRyLmNvbXBhcmF0b3IodC5wYXRoLGUucGF0aCl9LHZpLmlzRG9jdW1lbnRLZXk9ZnVuY3Rpb24odCl7cmV0dXJuIHQubGVuZ3RoJTI9PTB9LHZpLmZyb21TZWdtZW50cz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHZpKG5ldyAkcih0LnNsaWNlKCkpKX0sdmkpO2Z1bmN0aW9uIHZpKHQpe3RoaXMucGF0aD10fWZ1bmN0aW9uIGJpKHQpe3JldHVyblwibnVsbFZhbHVlXCJpbiB0PzA6XCJib29sZWFuVmFsdWVcImluIHQ/MTpcImludGVnZXJWYWx1ZVwiaW4gdHx8XCJkb3VibGVWYWx1ZVwiaW4gdD8yOlwidGltZXN0YW1wVmFsdWVcImluIHQ/MzpcInN0cmluZ1ZhbHVlXCJpbiB0PzU6XCJieXRlc1ZhbHVlXCJpbiB0PzY6XCJyZWZlcmVuY2VWYWx1ZVwiaW4gdD83OlwiZ2VvUG9pbnRWYWx1ZVwiaW4gdD84OlwiYXJyYXlWYWx1ZVwiaW4gdD85OlwibWFwVmFsdWVcImluIHQ/ZmkodCk/NDoxMDpNcigpfWZ1bmN0aW9uIHdpKHIsaSl7dmFyIHQsZSxuPWJpKHIpO2lmKG4hPT1iaShpKSlyZXR1cm4hMTtzd2l0Y2gobil7Y2FzZSAwOnJldHVybiEwO2Nhc2UgMTpyZXR1cm4gci5ib29sZWFuVmFsdWU9PT1pLmJvb2xlYW5WYWx1ZTtjYXNlIDQ6cmV0dXJuIGRpKHIpLmlzRXF1YWwoZGkoaSkpO2Nhc2UgMzpyZXR1cm4gZnVuY3Rpb24odCl7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHIudGltZXN0YW1wVmFsdWUmJlwic3RyaW5nXCI9PXR5cGVvZiB0LnRpbWVzdGFtcFZhbHVlJiZyLnRpbWVzdGFtcFZhbHVlLmxlbmd0aD09PXQudGltZXN0YW1wVmFsdWUubGVuZ3RoKXJldHVybiByLnRpbWVzdGFtcFZhbHVlPT09dC50aW1lc3RhbXBWYWx1ZTt2YXIgZT1jaShyLnRpbWVzdGFtcFZhbHVlKSx0PWNpKHQudGltZXN0YW1wVmFsdWUpO3JldHVybiBlLnNlY29uZHM9PT10LnNlY29uZHMmJmUubmFub3M9PT10Lm5hbm9zfShpKTtjYXNlIDU6cmV0dXJuIHIuc3RyaW5nVmFsdWU9PT1pLnN0cmluZ1ZhbHVlO2Nhc2UgNjpyZXR1cm4gZT1pLGxpKHIuYnl0ZXNWYWx1ZSkuaXNFcXVhbChsaShlLmJ5dGVzVmFsdWUpKTtjYXNlIDc6cmV0dXJuIHIucmVmZXJlbmNlVmFsdWU9PT1pLnJlZmVyZW5jZVZhbHVlO2Nhc2UgODpyZXR1cm4gdD1pLGhpKChlPXIpLmdlb1BvaW50VmFsdWUubGF0aXR1ZGUpPT09aGkodC5nZW9Qb2ludFZhbHVlLmxhdGl0dWRlKSYmaGkoZS5nZW9Qb2ludFZhbHVlLmxvbmdpdHVkZSk9PT1oaSh0Lmdlb1BvaW50VmFsdWUubG9uZ2l0dWRlKTtjYXNlIDI6cmV0dXJuIGZ1bmN0aW9uKHQsZSl7aWYoXCJpbnRlZ2VyVmFsdWVcImluIHQmJlwiaW50ZWdlclZhbHVlXCJpbiBlKXJldHVybiBoaSh0LmludGVnZXJWYWx1ZSk9PT1oaShlLmludGVnZXJWYWx1ZSk7aWYoXCJkb3VibGVWYWx1ZVwiaW4gdCYmXCJkb3VibGVWYWx1ZVwiaW4gZSl7dD1oaSh0LmRvdWJsZVZhbHVlKSxlPWhpKGUuZG91YmxlVmFsdWUpO3JldHVybiB0PT09ZT95aSh0KT09PXlpKGUpOmlzTmFOKHQpJiZpc05hTihlKX1yZXR1cm4hMX0ocixpKTtjYXNlIDk6cmV0dXJuIEJyKHIuYXJyYXlWYWx1ZS52YWx1ZXN8fFtdLGkuYXJyYXlWYWx1ZS52YWx1ZXN8fFtdLHdpKTtjYXNlIDEwOnJldHVybiBmdW5jdGlvbigpe3ZhciB0LGU9ci5tYXBWYWx1ZS5maWVsZHN8fHt9LG49aS5tYXBWYWx1ZS5maWVsZHN8fHt9O2lmKEhyKGUpIT09SHIobikpcmV0dXJuITE7Zm9yKHQgaW4gZSlpZihlLmhhc093blByb3BlcnR5KHQpJiYodm9pZCAwPT09blt0XXx8IXdpKGVbdF0sblt0XSkpKXJldHVybiExO3JldHVybiEwfSgpO2RlZmF1bHQ6cmV0dXJuIE1yKCl9fWZ1bmN0aW9uIElpKHQsZSl7cmV0dXJuIHZvaWQgMCE9PSh0LnZhbHVlc3x8W10pLmZpbmQoZnVuY3Rpb24odCl7cmV0dXJuIHdpKHQsZSl9KX1mdW5jdGlvbiBFaSh0LGUpe3ZhciBuLHIsaSxvPWJpKHQpLHM9YmkoZSk7aWYobyE9PXMpcmV0dXJuIHFyKG8scyk7c3dpdGNoKG8pe2Nhc2UgMDpyZXR1cm4gMDtjYXNlIDE6cmV0dXJuIHFyKHQuYm9vbGVhblZhbHVlLGUuYm9vbGVhblZhbHVlKTtjYXNlIDI6cmV0dXJuIHI9ZSxpPWhpKHQuaW50ZWdlclZhbHVlfHx0LmRvdWJsZVZhbHVlKSxyPWhpKHIuaW50ZWdlclZhbHVlfHxyLmRvdWJsZVZhbHVlKSxpPHI/LTE6cjxpPzE6aT09PXI/MDppc05hTihpKT9pc05hTihyKT8wOi0xOjE7Y2FzZSAzOnJldHVybiBUaSh0LnRpbWVzdGFtcFZhbHVlLGUudGltZXN0YW1wVmFsdWUpO2Nhc2UgNDpyZXR1cm4gVGkoZGkodCksZGkoZSkpO2Nhc2UgNTpyZXR1cm4gcXIodC5zdHJpbmdWYWx1ZSxlLnN0cmluZ1ZhbHVlKTtjYXNlIDY6cmV0dXJuIGZ1bmN0aW9uKHQsZSl7dD1saSh0KSxlPWxpKGUpO3JldHVybiB0LmNvbXBhcmVUbyhlKX0odC5ieXRlc1ZhbHVlLGUuYnl0ZXNWYWx1ZSk7Y2FzZSA3OnJldHVybiBmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10LnNwbGl0KFwiL1wiKSxyPWUuc3BsaXQoXCIvXCIpLGk9MDtpPG4ubGVuZ3RoJiZpPHIubGVuZ3RoO2krKyl7dmFyIG89cXIobltpXSxyW2ldKTtpZigwIT09bylyZXR1cm4gb31yZXR1cm4gcXIobi5sZW5ndGgsci5sZW5ndGgpfSh0LnJlZmVyZW5jZVZhbHVlLGUucmVmZXJlbmNlVmFsdWUpO2Nhc2UgODpyZXR1cm4gbj10Lmdlb1BvaW50VmFsdWUsaT1lLmdlb1BvaW50VmFsdWUsMCE9PShyPXFyKGhpKG4ubGF0aXR1ZGUpLGhpKGkubGF0aXR1ZGUpKSk/cjpxcihoaShuLmxvbmdpdHVkZSksaGkoaS5sb25naXR1ZGUpKTtjYXNlIDk6cmV0dXJuIGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPXQudmFsdWVzfHxbXSxyPWUudmFsdWVzfHxbXSxpPTA7aTxuLmxlbmd0aCYmaTxyLmxlbmd0aDsrK2kpe3ZhciBvPUVpKG5baV0scltpXSk7aWYobylyZXR1cm4gb31yZXR1cm4gcXIobi5sZW5ndGgsci5sZW5ndGgpfSh0LmFycmF5VmFsdWUsZS5hcnJheVZhbHVlKTtjYXNlIDEwOnJldHVybiBmdW5jdGlvbih0LGUpe3ZhciBuPXQuZmllbGRzfHx7fSxyPU9iamVjdC5rZXlzKG4pLGk9ZS5maWVsZHN8fHt9LG89T2JqZWN0LmtleXMoaSk7ci5zb3J0KCksby5zb3J0KCk7Zm9yKHZhciBzPTA7czxyLmxlbmd0aCYmczxvLmxlbmd0aDsrK3Mpe3ZhciBhPXFyKHJbc10sb1tzXSk7aWYoMCE9PWEpcmV0dXJuIGE7YT1FaShuW3Jbc11dLGlbb1tzXV0pO2lmKDAhPT1hKXJldHVybiBhfXJldHVybiBxcihyLmxlbmd0aCxvLmxlbmd0aCl9KHQubWFwVmFsdWUsZS5tYXBWYWx1ZSk7ZGVmYXVsdDp0aHJvdyBNcigpfX1mdW5jdGlvbiBUaSh0LGUpe2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0JiZcInN0cmluZ1wiPT10eXBlb2YgZSYmdC5sZW5ndGg9PT1lLmxlbmd0aClyZXR1cm4gcXIodCxlKTt2YXIgbj1jaSh0KSx0PWNpKGUpLGU9cXIobi5zZWNvbmRzLHQuc2Vjb25kcyk7cmV0dXJuIDAhPT1lP2U6cXIobi5uYW5vcyx0Lm5hbm9zKX1mdW5jdGlvbiBfaSh0KXtyZXR1cm4gZnVuY3Rpb24gcyh0KXtyZXR1cm5cIm51bGxWYWx1ZVwiaW4gdD9cIm51bGxcIjpcImJvb2xlYW5WYWx1ZVwiaW4gdD9cIlwiK3QuYm9vbGVhblZhbHVlOlwiaW50ZWdlclZhbHVlXCJpbiB0P1wiXCIrdC5pbnRlZ2VyVmFsdWU6XCJkb3VibGVWYWx1ZVwiaW4gdD9cIlwiK3QuZG91YmxlVmFsdWU6XCJ0aW1lc3RhbXBWYWx1ZVwiaW4gdD9mdW5jdGlvbih0KXt2YXIgdD1jaSh0KTtyZXR1cm5cInRpbWUoXCIrdC5zZWNvbmRzK1wiLFwiK3QubmFub3MrXCIpXCJ9KHQudGltZXN0YW1wVmFsdWUpOlwic3RyaW5nVmFsdWVcImluIHQ/dC5zdHJpbmdWYWx1ZTpcImJ5dGVzVmFsdWVcImluIHQ/bGkodC5ieXRlc1ZhbHVlKS50b0Jhc2U2NCgpOlwicmVmZXJlbmNlVmFsdWVcImluIHQ/KGU9dC5yZWZlcmVuY2VWYWx1ZSxtaS5mcm9tTmFtZShlKS50b1N0cmluZygpKTpcImdlb1BvaW50VmFsdWVcImluIHQ/XCJnZW8oXCIrKGU9dC5nZW9Qb2ludFZhbHVlKS5sYXRpdHVkZStcIixcIitlLmxvbmdpdHVkZStcIilcIjpcImFycmF5VmFsdWVcImluIHQ/ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVwiW1wiLG49ITAscj0wLGk9dC52YWx1ZXN8fFtdO3I8aS5sZW5ndGg7cisrKW4/bj0hMTplKz1cIixcIixlKz1zKGlbcl0pO3JldHVybiBlK1wiXVwifSh0LmFycmF5VmFsdWUpOlwibWFwVmFsdWVcImluIHQ/ZnVuY3Rpb24odCl7Zm9yKHZhciBlPVwie1wiLG49ITAscj0wLGk9T2JqZWN0LmtleXModC5maWVsZHN8fHt9KS5zb3J0KCk7cjxpLmxlbmd0aDtyKyspe3ZhciBvPWlbcl07bj9uPSExOmUrPVwiLFwiLGUrPW8rXCI6XCIrcyh0LmZpZWxkc1tvXSl9cmV0dXJuIGUrXCJ9XCJ9KHQubWFwVmFsdWUpOk1yKCk7dmFyIGV9KHQpfWZ1bmN0aW9uIFNpKHQsZSl7cmV0dXJue3JlZmVyZW5jZVZhbHVlOlwicHJvamVjdHMvXCIrdC5wcm9qZWN0SWQrXCIvZGF0YWJhc2VzL1wiK3QuZGF0YWJhc2UrXCIvZG9jdW1lbnRzL1wiK2UucGF0aC5jYW5vbmljYWxTdHJpbmcoKX19ZnVuY3Rpb24gTmkodCl7cmV0dXJuIHQmJlwiaW50ZWdlclZhbHVlXCJpbiB0fWZ1bmN0aW9uIERpKHQpe3JldHVybiEhdCYmXCJhcnJheVZhbHVlXCJpbiB0fWZ1bmN0aW9uIEFpKHQpe3JldHVybiB0JiZcIm51bGxWYWx1ZVwiaW4gdH1mdW5jdGlvbiBraSh0KXtyZXR1cm4gdCYmXCJkb3VibGVWYWx1ZVwiaW4gdCYmaXNOYU4oTnVtYmVyKHQuZG91YmxlVmFsdWUpKX1mdW5jdGlvbiBDaSh0KXtyZXR1cm4gdCYmXCJtYXBWYWx1ZVwiaW4gdH12YXIgUmk9KHhpLmVtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyB4aSh7bWFwVmFsdWU6e319KX0seGkucHJvdG90eXBlLmZpZWxkPWZ1bmN0aW9uKHQpe3JldHVybiB4aS5leHRyYWN0TmVzdGVkVmFsdWUodGhpcy5idWlsZFByb3RvKCksdCl9LHhpLnByb3RvdHlwZS50b1Byb3RvPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZmllbGQodGkuZW1wdHlQYXRoKCkpfSx4aS5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQsZSl7dGhpcy5zZXRPdmVybGF5KHQsZSl9LHhpLnByb3RvdHlwZS5zZXRBbGw9ZnVuY3Rpb24odCl7dmFyIG49dGhpczt0LmZvckVhY2goZnVuY3Rpb24odCxlKXt0P24uc2V0KGUsdCk6bi5kZWxldGUoZSl9KX0seGkucHJvdG90eXBlLmRlbGV0ZT1mdW5jdGlvbih0KXt0aGlzLnNldE92ZXJsYXkodCxudWxsKX0seGkucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHdpKHRoaXMuYnVpbGRQcm90bygpLHQuYnVpbGRQcm90bygpKX0seGkucHJvdG90eXBlLnNldE92ZXJsYXk9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dGhpcy5vdmVybGF5TWFwLHI9MDtyPHQubGVuZ3RoLTE7KytyKXZhciBpPXQuZ2V0KHIpLG89bi5nZXQoaSksbj0obyBpbnN0YW5jZW9mIE1hcHx8KG89byYmMTA9PT1iaShvKT9uZXcgTWFwKE9iamVjdC5lbnRyaWVzKG8ubWFwVmFsdWUuZmllbGRzfHx7fSkpOm5ldyBNYXAsbi5zZXQoaSxvKSksbyk7bi5zZXQodC5sYXN0U2VnbWVudCgpLGUpfSx4aS5wcm90b3R5cGUuYXBwbHlPdmVybGF5PWZ1bmN0aW9uKHIsdCl7dmFyIGk9dGhpcyxvPSExLGU9eGkuZXh0cmFjdE5lc3RlZFZhbHVlKHRoaXMucGFydGlhbFZhbHVlLHIpLHM9Q2koZSk/T2JqZWN0LmFzc2lnbih7fSxlLm1hcFZhbHVlLmZpZWxkcyk6e307cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbih0LGUpe3ZhciBuO3QgaW5zdGFuY2VvZiBNYXA/bnVsbCE9KG49aS5hcHBseU92ZXJsYXkoci5jaGlsZChlKSx0KSkmJihzW2VdPW4sbz0hMCk6bnVsbCE9PXQ/KHNbZV09dCxvPSEwKTpzLmhhc093blByb3BlcnR5KGUpJiYoZGVsZXRlIHNbZV0sbz0hMCl9KSxvP3ttYXBWYWx1ZTp7ZmllbGRzOnN9fTpudWxsfSx4aS5wcm90b3R5cGUuYnVpbGRQcm90bz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuYXBwbHlPdmVybGF5KHRpLmVtcHR5UGF0aCgpLHRoaXMub3ZlcmxheU1hcCk7cmV0dXJuIG51bGwhPXQmJih0aGlzLnBhcnRpYWxWYWx1ZT10LHRoaXMub3ZlcmxheU1hcC5jbGVhcigpKSx0aGlzLnBhcnRpYWxWYWx1ZX0seGkuZXh0cmFjdE5lc3RlZFZhbHVlPWZ1bmN0aW9uKHQsZSl7aWYoZS5pc0VtcHR5KCkpcmV0dXJuIHQ7Zm9yKHZhciBuPXQscj0wO3I8ZS5sZW5ndGgtMTsrK3Ipe2lmKCFuLm1hcFZhbHVlLmZpZWxkcylyZXR1cm4gbnVsbDtpZighQ2kobj1uLm1hcFZhbHVlLmZpZWxkc1tlLmdldChyKV0pKXJldHVybiBudWxsfXJldHVybihuPShuLm1hcFZhbHVlLmZpZWxkc3x8e30pW2UubGFzdFNlZ21lbnQoKV0pfHxudWxsfSx4aS5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IHhpKHRoaXMuYnVpbGRQcm90bygpKX0seGkpO2Z1bmN0aW9uIHhpKHQpe3RoaXMub3ZlcmxheU1hcD1uZXcgTWFwLHRoaXMucGFydGlhbFZhbHVlPXR9dmFyIE9pPShQaS5uZXdJbnZhbGlkRG9jdW1lbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBQaSh0LDAsR3IubWluKCksUmkuZW1wdHkoKSwwKX0sUGkubmV3Rm91bmREb2N1bWVudD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyBQaSh0LDEsZSxuLDApfSxQaS5uZXdOb0RvY3VtZW50PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyBQaSh0LDIsZSxSaS5lbXB0eSgpLDApfSxQaS5uZXdVbmtub3duRG9jdW1lbnQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3IFBpKHQsMyxlLFJpLmVtcHR5KCksMil9LFBpLnByb3RvdHlwZS5jb252ZXJ0VG9Gb3VuZERvY3VtZW50PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudmVyc2lvbj10LHRoaXMuZG9jdW1lbnRUeXBlPTEsdGhpcy5kYXRhPWUsdGhpcy5kb2N1bWVudFN0YXRlPTAsdGhpc30sUGkucHJvdG90eXBlLmNvbnZlcnRUb05vRG9jdW1lbnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudmVyc2lvbj10LHRoaXMuZG9jdW1lbnRUeXBlPTIsdGhpcy5kYXRhPVJpLmVtcHR5KCksdGhpcy5kb2N1bWVudFN0YXRlPTAsdGhpc30sUGkucHJvdG90eXBlLmNvbnZlcnRUb1Vua25vd25Eb2N1bWVudD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy52ZXJzaW9uPXQsdGhpcy5kb2N1bWVudFR5cGU9Myx0aGlzLmRhdGE9UmkuZW1wdHkoKSx0aGlzLmRvY3VtZW50U3RhdGU9Mix0aGlzfSxQaS5wcm90b3R5cGUuc2V0SGFzQ29tbWl0dGVkTXV0YXRpb25zPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZG9jdW1lbnRTdGF0ZT0yLHRoaXN9LFBpLnByb3RvdHlwZS5zZXRIYXNMb2NhbE11dGF0aW9ucz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRvY3VtZW50U3RhdGU9MSx0aGlzfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoUGkucHJvdG90eXBlLFwiaGFzTG9jYWxNdXRhdGlvbnNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIDE9PT10aGlzLmRvY3VtZW50U3RhdGV9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFBpLnByb3RvdHlwZSxcImhhc0NvbW1pdHRlZE11dGF0aW9uc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMj09PXRoaXMuZG9jdW1lbnRTdGF0ZX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoUGkucHJvdG90eXBlLFwiaGFzUGVuZGluZ1dyaXRlc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oYXNMb2NhbE11dGF0aW9uc3x8dGhpcy5oYXNDb21taXR0ZWRNdXRhdGlvbnN9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksUGkucHJvdG90eXBlLmlzVmFsaWREb2N1bWVudD1mdW5jdGlvbigpe3JldHVybiAwIT09dGhpcy5kb2N1bWVudFR5cGV9LFBpLnByb3RvdHlwZS5pc0ZvdW5kRG9jdW1lbnQ9ZnVuY3Rpb24oKXtyZXR1cm4gMT09PXRoaXMuZG9jdW1lbnRUeXBlfSxQaS5wcm90b3R5cGUuaXNOb0RvY3VtZW50PWZ1bmN0aW9uKCl7cmV0dXJuIDI9PT10aGlzLmRvY3VtZW50VHlwZX0sUGkucHJvdG90eXBlLmlzVW5rbm93bkRvY3VtZW50PWZ1bmN0aW9uKCl7cmV0dXJuIDM9PT10aGlzLmRvY3VtZW50VHlwZX0sUGkucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBQaSYmdGhpcy5rZXkuaXNFcXVhbCh0LmtleSkmJnRoaXMudmVyc2lvbi5pc0VxdWFsKHQudmVyc2lvbikmJnRoaXMuZG9jdW1lbnRUeXBlPT09dC5kb2N1bWVudFR5cGUmJnRoaXMuZG9jdW1lbnRTdGF0ZT09PXQuZG9jdW1lbnRTdGF0ZSYmdGhpcy5kYXRhLmlzRXF1YWwodC5kYXRhKX0sUGkucHJvdG90eXBlLmNsb25lPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBQaSh0aGlzLmtleSx0aGlzLmRvY3VtZW50VHlwZSx0aGlzLnZlcnNpb24sdGhpcy5kYXRhLmNsb25lKCksdGhpcy5kb2N1bWVudFN0YXRlKX0sUGkucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCJEb2N1bWVudChcIit0aGlzLmtleStcIiwgXCIrdGhpcy52ZXJzaW9uK1wiLCBcIitKU09OLnN0cmluZ2lmeSh0aGlzLmRhdGEudG9Qcm90bygpKStcIiwge2RvY3VtZW50VHlwZTogXCIrdGhpcy5kb2N1bWVudFR5cGUrXCJ9KSwge2RvY3VtZW50U3RhdGU6IFwiK3RoaXMuZG9jdW1lbnRTdGF0ZStcIn0pXCJ9LFBpKSxMaT1mdW5jdGlvbih0LGUsbixyLGksbyxzKXt2b2lkIDA9PT1lJiYoZT1udWxsKSx2b2lkIDA9PT1uJiYobj1bXSksdm9pZCAwPT09ciYmKHI9W10pLHZvaWQgMD09PWkmJihpPW51bGwpLHZvaWQgMD09PW8mJihvPW51bGwpLHZvaWQgMD09PXMmJihzPW51bGwpLHRoaXMucGF0aD10LHRoaXMuY29sbGVjdGlvbkdyb3VwPWUsdGhpcy5vcmRlckJ5PW4sdGhpcy5maWx0ZXJzPXIsdGhpcy5saW1pdD1pLHRoaXMuc3RhcnRBdD1vLHRoaXMuZW5kQXQ9cyx0aGlzLmg9bnVsbH07ZnVuY3Rpb24gUGkodCxlLG4scixpKXt0aGlzLmtleT10LHRoaXMuZG9jdW1lbnRUeXBlPWUsdGhpcy52ZXJzaW9uPW4sdGhpcy5kYXRhPXIsdGhpcy5kb2N1bWVudFN0YXRlPWl9ZnVuY3Rpb24gTWkodCxlLG4scixpLG8scyl7cmV0dXJuIG5ldyBMaSh0LGU9dm9pZCAwPT09ZT9udWxsOmUsbj12b2lkIDA9PT1uP1tdOm4scj12b2lkIDA9PT1yP1tdOnIsaT12b2lkIDA9PT1pP251bGw6aSxvPXZvaWQgMD09PW8/bnVsbDpvLHM9dm9pZCAwPT09cz9udWxsOnMpfWZ1bmN0aW9uIEZpKHQpe3ZhciBlPXQ7cmV0dXJuIG51bGw9PT1lLmgmJih0PWUucGF0aC5jYW5vbmljYWxTdHJpbmcoKSxudWxsIT09ZS5jb2xsZWN0aW9uR3JvdXAmJih0Kz1cInxjZzpcIitlLmNvbGxlY3Rpb25Hcm91cCksdCs9XCJ8ZjpcIix0Kz1lLmZpbHRlcnMubWFwKGZ1bmN0aW9uKHQpe3JldHVybih0PXQpLmZpZWxkLmNhbm9uaWNhbFN0cmluZygpK3Qub3AudG9TdHJpbmcoKStfaSh0LnZhbHVlKX0pLmpvaW4oXCIsXCIpLHQrPVwifG9iOlwiLHQrPWUub3JkZXJCeS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuKHQ9dCkuZmllbGQuY2Fub25pY2FsU3RyaW5nKCkrdC5kaXJ9KS5qb2luKFwiLFwiKSxwaShlLmxpbWl0KXx8KHQrPVwifGw6XCIsdCs9ZS5saW1pdCksZS5zdGFydEF0JiYodCs9XCJ8bGI6XCIsdCs9Zm8oZS5zdGFydEF0KSksZS5lbmRBdCYmKHQrPVwifHViOlwiLHQrPWZvKGUuZW5kQXQpKSxlLmg9dCksZS5ofWZ1bmN0aW9uIFZpKHQsZSl7aWYodC5saW1pdCE9PWUubGltaXQpcmV0dXJuITE7aWYodC5vcmRlckJ5Lmxlbmd0aCE9PWUub3JkZXJCeS5sZW5ndGgpcmV0dXJuITE7Zm9yKHZhciBuLHIsaT0wO2k8dC5vcmRlckJ5Lmxlbmd0aDtpKyspaWYobj10Lm9yZGVyQnlbaV0scj1lLm9yZGVyQnlbaV0sbi5kaXIhPT1yLmRpcnx8IW4uZmllbGQuaXNFcXVhbChyLmZpZWxkKSlyZXR1cm4hMTtpZih0LmZpbHRlcnMubGVuZ3RoIT09ZS5maWx0ZXJzLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIG8scyxhPTA7YTx0LmZpbHRlcnMubGVuZ3RoO2ErKylpZihvPXQuZmlsdGVyc1thXSxzPWUuZmlsdGVyc1thXSxvLm9wIT09cy5vcHx8IW8uZmllbGQuaXNFcXVhbChzLmZpZWxkKXx8IXdpKG8udmFsdWUscy52YWx1ZSkpcmV0dXJuITE7cmV0dXJuIHQuY29sbGVjdGlvbkdyb3VwPT09ZS5jb2xsZWN0aW9uR3JvdXAmJiEhdC5wYXRoLmlzRXF1YWwoZS5wYXRoKSYmISFnbyh0LnN0YXJ0QXQsZS5zdGFydEF0KSYmZ28odC5lbmRBdCxlLmVuZEF0KX1mdW5jdGlvbiBVaSh0KXtyZXR1cm4gbWkuaXNEb2N1bWVudEtleSh0LnBhdGgpJiZudWxsPT09dC5jb2xsZWN0aW9uR3JvdXAmJjA9PT10LmZpbHRlcnMubGVuZ3RofXZhciBxaSxCaT0obihqaSxxaT1mdW5jdGlvbigpe30pLGppLmNyZWF0ZT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHQuaXNLZXlGaWVsZCgpP1wiaW5cIj09PWV8fFwibm90LWluXCI9PT1lP3RoaXMubCh0LGUsbik6bmV3IHppKHQsZSxuKTpcImFycmF5LWNvbnRhaW5zXCI9PT1lP25ldyBybyh0LG4pOlwiaW5cIj09PWU/bmV3IGlvKHQsbik6XCJub3QtaW5cIj09PWU/bmV3IG9vKHQsbik6XCJhcnJheS1jb250YWlucy1hbnlcIj09PWU/bmV3IHNvKHQsbik6bmV3IGppKHQsZSxuKX0samkubD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyhcImluXCI9PT1lP0hpOldpKSh0LG4pfSxqaS5wcm90b3R5cGUubWF0Y2hlcz1mdW5jdGlvbih0KXt0PXQuZGF0YS5maWVsZCh0aGlzLmZpZWxkKTtyZXR1cm5cIiE9XCI9PT10aGlzLm9wP251bGwhPT10JiZ0aGlzLm0oRWkodCx0aGlzLnZhbHVlKSk6bnVsbCE9PXQmJmJpKHRoaXMudmFsdWUpPT09YmkodCkmJnRoaXMubShFaSh0LHRoaXMudmFsdWUpKX0samkucHJvdG90eXBlLm09ZnVuY3Rpb24odCl7c3dpdGNoKHRoaXMub3Ape2Nhc2VcIjxcIjpyZXR1cm4gdDwwO2Nhc2VcIjw9XCI6cmV0dXJuIHQ8PTA7Y2FzZVwiPT1cIjpyZXR1cm4gMD09PXQ7Y2FzZVwiIT1cIjpyZXR1cm4gMCE9PXQ7Y2FzZVwiPlwiOnJldHVybiAwPHQ7Y2FzZVwiPj1cIjpyZXR1cm4gMDw9dDtkZWZhdWx0OnJldHVybiBNcigpfX0samkucHJvdG90eXBlLmc9ZnVuY3Rpb24oKXtyZXR1cm4gMDw9W1wiPFwiLFwiPD1cIixcIj5cIixcIj49XCIsXCIhPVwiLFwibm90LWluXCJdLmluZGV4T2YodGhpcy5vcCl9LGppKTtmdW5jdGlvbiBqaSh0LGUsbil7dmFyIHI9dGhpcztyZXR1cm4ocj1xaS5jYWxsKHRoaXMpfHx0aGlzKS5maWVsZD10LHIub3A9ZSxyLnZhbHVlPW4scn12YXIgS2ksR2ksUWksemk9KG4oSmksUWk9QmkpLEppLnByb3RvdHlwZS5tYXRjaGVzPWZ1bmN0aW9uKHQpe3Q9bWkuY29tcGFyYXRvcih0LmtleSx0aGlzLmtleSk7cmV0dXJuIHRoaXMubSh0KX0sSmkpLEhpPShuKFhpLEdpPUJpKSxYaS5wcm90b3R5cGUubWF0Y2hlcz1mdW5jdGlvbihlKXtyZXR1cm4gdGhpcy5rZXlzLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIHQuaXNFcXVhbChlLmtleSl9KX0sWGkpLFdpPShuKFlpLEtpPUJpKSxZaS5wcm90b3R5cGUubWF0Y2hlcz1mdW5jdGlvbihlKXtyZXR1cm4hdGhpcy5rZXlzLnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIHQuaXNFcXVhbChlLmtleSl9KX0sWWkpO2Z1bmN0aW9uIFlpKHQsZSl7dmFyIG49dGhpcztyZXR1cm4obj1LaS5jYWxsKHRoaXMsdCxcIm5vdC1pblwiLGUpfHx0aGlzKS5rZXlzPSRpKDAsZSksbn1mdW5jdGlvbiBYaSh0LGUpe3ZhciBuPXRoaXM7cmV0dXJuKG49R2kuY2FsbCh0aGlzLHQsXCJpblwiLGUpfHx0aGlzKS5rZXlzPSRpKDAsZSksbn1mdW5jdGlvbiBKaSh0LGUsbil7dmFyIHI9dGhpcztyZXR1cm4ocj1RaS5jYWxsKHRoaXMsdCxlLG4pfHx0aGlzKS5rZXk9bWkuZnJvbU5hbWUobi5yZWZlcmVuY2VWYWx1ZSkscn1mdW5jdGlvbiAkaSh0LGUpe3JldHVybigobnVsbD09PShlPWUuYXJyYXlWYWx1ZSl8fHZvaWQgMD09PWU/dm9pZCAwOmUudmFsdWVzKXx8W10pLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbWkuZnJvbU5hbWUodC5yZWZlcmVuY2VWYWx1ZSl9KX12YXIgWmksdG8sZW8sbm8scm89KG4obG8sbm89QmkpLGxvLnByb3RvdHlwZS5tYXRjaGVzPWZ1bmN0aW9uKHQpe3Q9dC5kYXRhLmZpZWxkKHRoaXMuZmllbGQpO3JldHVybiBEaSh0KSYmSWkodC5hcnJheVZhbHVlLHRoaXMudmFsdWUpfSxsbyksaW89KG4oaG8sZW89QmkpLGhvLnByb3RvdHlwZS5tYXRjaGVzPWZ1bmN0aW9uKHQpe3Q9dC5kYXRhLmZpZWxkKHRoaXMuZmllbGQpO3JldHVybiBudWxsIT09dCYmSWkodGhpcy52YWx1ZS5hcnJheVZhbHVlLHQpfSxobyksb289KG4oY28sdG89QmkpLGNvLnByb3RvdHlwZS5tYXRjaGVzPWZ1bmN0aW9uKHQpe2lmKElpKHRoaXMudmFsdWUuYXJyYXlWYWx1ZSx7bnVsbFZhbHVlOlwiTlVMTF9WQUxVRVwifSkpcmV0dXJuITE7dD10LmRhdGEuZmllbGQodGhpcy5maWVsZCk7cmV0dXJuIG51bGwhPT10JiYhSWkodGhpcy52YWx1ZS5hcnJheVZhbHVlLHQpfSxjbyksc289KG4odW8sWmk9QmkpLHVvLnByb3RvdHlwZS5tYXRjaGVzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsdD10LmRhdGEuZmllbGQodGhpcy5maWVsZCk7cmV0dXJuISghRGkodCl8fCF0LmFycmF5VmFsdWUudmFsdWVzKSYmdC5hcnJheVZhbHVlLnZhbHVlcy5zb21lKGZ1bmN0aW9uKHQpe3JldHVybiBJaShlLnZhbHVlLmFycmF5VmFsdWUsdCl9KX0sdW8pLGFvPWZ1bmN0aW9uKHQsZSl7dGhpcy5wb3NpdGlvbj10LHRoaXMuYmVmb3JlPWV9O2Z1bmN0aW9uIHVvKHQsZSl7cmV0dXJuIFppLmNhbGwodGhpcyx0LFwiYXJyYXktY29udGFpbnMtYW55XCIsZSl8fHRoaXN9ZnVuY3Rpb24gY28odCxlKXtyZXR1cm4gdG8uY2FsbCh0aGlzLHQsXCJub3QtaW5cIixlKXx8dGhpc31mdW5jdGlvbiBobyh0LGUpe3JldHVybiBlby5jYWxsKHRoaXMsdCxcImluXCIsZSl8fHRoaXN9ZnVuY3Rpb24gbG8odCxlKXtyZXR1cm4gbm8uY2FsbCh0aGlzLHQsXCJhcnJheS1jb250YWluc1wiLGUpfHx0aGlzfWZ1bmN0aW9uIGZvKHQpe3JldHVybih0LmJlZm9yZT9cImJcIjpcImFcIikrXCI6XCIrdC5wb3NpdGlvbi5tYXAoX2kpLmpvaW4oXCIsXCIpfXZhciBwbz1mdW5jdGlvbih0LGUpe3ZvaWQgMD09PWUmJihlPVwiYXNjXCIpLHRoaXMuZmllbGQ9dCx0aGlzLmRpcj1lfTtmdW5jdGlvbiB5byh0LGUsbil7Zm9yKHZhciByPTAsaT0wO2k8dC5wb3NpdGlvbi5sZW5ndGg7aSsrKXt2YXIgbz1lW2ldLHM9dC5wb3NpdGlvbltpXSxyPW8uZmllbGQuaXNLZXlGaWVsZCgpP21pLmNvbXBhcmF0b3IobWkuZnJvbU5hbWUocy5yZWZlcmVuY2VWYWx1ZSksbi5rZXkpOkVpKHMsbi5kYXRhLmZpZWxkKG8uZmllbGQpKTtpZihcImRlc2NcIj09PW8uZGlyJiYocio9LTEpLDAhPT1yKWJyZWFrfXJldHVybiB0LmJlZm9yZT9yPD0wOnI8MH1mdW5jdGlvbiBnbyh0LGUpe2lmKG51bGw9PT10KXJldHVybiBudWxsPT09ZTtpZihudWxsPT09ZSlyZXR1cm4hMTtpZih0LmJlZm9yZSE9PWUuYmVmb3JlfHx0LnBvc2l0aW9uLmxlbmd0aCE9PWUucG9zaXRpb24ubGVuZ3RoKXJldHVybiExO2Zvcih2YXIgbj0wO248dC5wb3NpdGlvbi5sZW5ndGg7bisrKWlmKCF3aSh0LnBvc2l0aW9uW25dLGUucG9zaXRpb25bbl0pKXJldHVybiExO3JldHVybiEwfXZhciBtbz1mdW5jdGlvbih0LGUsbixyLGksbyxzLGEpe3ZvaWQgMD09PWUmJihlPW51bGwpLHZvaWQgMD09PW4mJihuPVtdKSx2b2lkIDA9PT1yJiYocj1bXSksdm9pZCAwPT09aSYmKGk9bnVsbCksdm9pZCAwPT09byYmKG89XCJGXCIpLHZvaWQgMD09PXMmJihzPW51bGwpLHZvaWQgMD09PWEmJihhPW51bGwpLHRoaXMucGF0aD10LHRoaXMuY29sbGVjdGlvbkdyb3VwPWUsdGhpcy5leHBsaWNpdE9yZGVyQnk9bix0aGlzLmZpbHRlcnM9cix0aGlzLmxpbWl0PWksdGhpcy5saW1pdFR5cGU9byx0aGlzLnN0YXJ0QXQ9cyx0aGlzLmVuZEF0PWEsdGhpcy5wPW51bGwsdGhpcy5UPW51bGwsdGhpcy5zdGFydEF0LHRoaXMuZW5kQXR9O2Z1bmN0aW9uIHZvKHQsZSxuLHIsaSxvLHMsYSl7cmV0dXJuIG5ldyBtbyh0LGUsbixyLGksbyxzLGEpfWZ1bmN0aW9uIGJvKHQpe3JldHVybiBuZXcgbW8odCl9ZnVuY3Rpb24gd28odCl7cmV0dXJuIXBpKHQubGltaXQpJiZcIkZcIj09PXQubGltaXRUeXBlfWZ1bmN0aW9uIElvKHQpe3JldHVybiFwaSh0LmxpbWl0KSYmXCJMXCI9PT10LmxpbWl0VHlwZX1mdW5jdGlvbiBFbyh0KXtyZXR1cm4gMDx0LmV4cGxpY2l0T3JkZXJCeS5sZW5ndGg/dC5leHBsaWNpdE9yZGVyQnlbMF0uZmllbGQ6bnVsbH1mdW5jdGlvbiBUbyh0KXtmb3IodmFyIGU9MCxuPXQuZmlsdGVycztlPG4ubGVuZ3RoO2UrKyl7dmFyIHI9bltlXTtpZihyLmcoKSlyZXR1cm4gci5maWVsZH1yZXR1cm4gbnVsbH1mdW5jdGlvbiBfbyh0KXtyZXR1cm4gbnVsbCE9PXQuY29sbGVjdGlvbkdyb3VwfWZ1bmN0aW9uIFNvKHQpe3ZhciBlPXQ7aWYobnVsbD09PWUucCl7ZS5wPVtdO3ZhciBuPVRvKGUpLHQ9RW8oZSk7aWYobnVsbCE9PW4mJm51bGw9PT10KW4uaXNLZXlGaWVsZCgpfHxlLnAucHVzaChuZXcgcG8obikpLGUucC5wdXNoKG5ldyBwbyh0aS5rZXlGaWVsZCgpLFwiYXNjXCIpKTtlbHNle2Zvcih2YXIgcj0hMSxpPTAsbz1lLmV4cGxpY2l0T3JkZXJCeTtpPG8ubGVuZ3RoO2krKyl7dmFyIHM9b1tpXTtlLnAucHVzaChzKSxzLmZpZWxkLmlzS2V5RmllbGQoKSYmKHI9ITApfXJ8fChuPTA8ZS5leHBsaWNpdE9yZGVyQnkubGVuZ3RoP2UuZXhwbGljaXRPcmRlckJ5W2UuZXhwbGljaXRPcmRlckJ5Lmxlbmd0aC0xXS5kaXI6XCJhc2NcIixlLnAucHVzaChuZXcgcG8odGkua2V5RmllbGQoKSxuKSkpfX1yZXR1cm4gZS5wfWZ1bmN0aW9uIE5vKHQpe3ZhciBlPXQ7aWYoIWUuVClpZihcIkZcIj09PWUubGltaXRUeXBlKWUuVD1NaShlLnBhdGgsZS5jb2xsZWN0aW9uR3JvdXAsU28oZSksZS5maWx0ZXJzLGUubGltaXQsZS5zdGFydEF0LGUuZW5kQXQpO2Vsc2V7Zm9yKHZhciBuPVtdLHI9MCxpPVNvKGUpO3I8aS5sZW5ndGg7cisrKXt2YXIgbz1pW3JdLHM9XCJkZXNjXCI9PT1vLmRpcj9cImFzY1wiOlwiZGVzY1wiO24ucHVzaChuZXcgcG8oby5maWVsZCxzKSl9dmFyIGE9ZS5lbmRBdD9uZXcgYW8oZS5lbmRBdC5wb3NpdGlvbiwhZS5lbmRBdC5iZWZvcmUpOm51bGwsdD1lLnN0YXJ0QXQ/bmV3IGFvKGUuc3RhcnRBdC5wb3NpdGlvbiwhZS5zdGFydEF0LmJlZm9yZSk6bnVsbDtlLlQ9TWkoZS5wYXRoLGUuY29sbGVjdGlvbkdyb3VwLG4sZS5maWx0ZXJzLGUubGltaXQsYSx0KX1yZXR1cm4gZS5UfWZ1bmN0aW9uIERvKHQsZSxuKXtyZXR1cm4gbmV3IG1vKHQucGF0aCx0LmNvbGxlY3Rpb25Hcm91cCx0LmV4cGxpY2l0T3JkZXJCeS5zbGljZSgpLHQuZmlsdGVycy5zbGljZSgpLGUsbix0LnN0YXJ0QXQsdC5lbmRBdCl9ZnVuY3Rpb24gQW8odCxlKXtyZXR1cm4gVmkoTm8odCksTm8oZSkpJiZ0LmxpbWl0VHlwZT09PWUubGltaXRUeXBlfWZ1bmN0aW9uIGtvKHQpe3JldHVybiBGaShObyh0KSkrXCJ8bHQ6XCIrdC5saW1pdFR5cGV9ZnVuY3Rpb24gQ28odCl7cmV0dXJuXCJRdWVyeSh0YXJnZXQ9XCIrKGU9Tm8odCksbj1lLnBhdGguY2Fub25pY2FsU3RyaW5nKCksbnVsbCE9PWUuY29sbGVjdGlvbkdyb3VwJiYobis9XCIgY29sbGVjdGlvbkdyb3VwPVwiK2UuY29sbGVjdGlvbkdyb3VwKSwwPGUuZmlsdGVycy5sZW5ndGgmJihuKz1cIiwgZmlsdGVyczogW1wiK2UuZmlsdGVycy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuKHQ9dCkuZmllbGQuY2Fub25pY2FsU3RyaW5nKCkrXCIgXCIrdC5vcCtcIiBcIitfaSh0LnZhbHVlKX0pLmpvaW4oXCIsIFwiKStcIl1cIikscGkoZS5saW1pdCl8fChuKz1cIiwgbGltaXQ6IFwiK2UubGltaXQpLDA8ZS5vcmRlckJ5Lmxlbmd0aCYmKG4rPVwiLCBvcmRlckJ5OiBbXCIrZS5vcmRlckJ5Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4odD10KS5maWVsZC5jYW5vbmljYWxTdHJpbmcoKStcIiAoXCIrdC5kaXIrXCIpXCJ9KS5qb2luKFwiLCBcIikrXCJdXCIpLGUuc3RhcnRBdCYmKG4rPVwiLCBzdGFydEF0OiBcIitmbyhlLnN0YXJ0QXQpKSxlLmVuZEF0JiYobis9XCIsIGVuZEF0OiBcIitmbyhlLmVuZEF0KSksXCJUYXJnZXQoXCIrbitcIilcIikrXCI7IGxpbWl0VHlwZT1cIit0LmxpbWl0VHlwZStcIilcIjt2YXIgZSxufWZ1bmN0aW9uIFJvKGksdCl7cmV0dXJuIHQuaXNGb3VuZERvY3VtZW50KCkmJihlPWksbj10LmtleS5wYXRoLG51bGwhPT1lLmNvbGxlY3Rpb25Hcm91cD90LmtleS5oYXNDb2xsZWN0aW9uSWQoZS5jb2xsZWN0aW9uR3JvdXApJiZlLnBhdGguaXNQcmVmaXhPZihuKTptaS5pc0RvY3VtZW50S2V5KGUucGF0aCk/ZS5wYXRoLmlzRXF1YWwobik6ZS5wYXRoLmlzSW1tZWRpYXRlUGFyZW50T2YobikpJiZmdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPWkuZXhwbGljaXRPcmRlckJ5O2U8bi5sZW5ndGg7ZSsrKXt2YXIgcj1uW2VdO2lmKCFyLmZpZWxkLmlzS2V5RmllbGQoKSYmbnVsbD09PXQuZGF0YS5maWVsZChyLmZpZWxkKSlyZXR1cm59cmV0dXJuIDF9KHQpJiZmdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPWkuZmlsdGVycztlPG4ubGVuZ3RoO2UrKylpZighbltlXS5tYXRjaGVzKHQpKXJldHVybjtyZXR1cm4gMX0odCkmJihuPXQsKCEodD1pKS5zdGFydEF0fHx5byh0LnN0YXJ0QXQsU28odCksbikpJiYoIXQuZW5kQXR8fCF5byh0LmVuZEF0LFNvKHQpLG4pKSk7dmFyIGUsbn1mdW5jdGlvbiB4byhhKXtyZXR1cm4gZnVuY3Rpb24odCxlKXtmb3IodmFyIG49ITEscj0wLGk9U28oYSk7cjxpLmxlbmd0aDtyKyspe3ZhciBvPWlbcl0scz1mdW5jdGlvbih0LHIsZSl7dmFyIG49dC5maWVsZC5pc0tleUZpZWxkKCk/bWkuY29tcGFyYXRvcihyLmtleSxlLmtleSk6ZnVuY3Rpb24odCxlKXt2YXIgbj1yLmRhdGEuZmllbGQodCksdD1lLmRhdGEuZmllbGQodCk7cmV0dXJuIG51bGwhPT1uJiZudWxsIT09dD9FaShuLHQpOk1yKCl9KHQuZmllbGQsZSk7c3dpdGNoKHQuZGlyKXtjYXNlXCJhc2NcIjpyZXR1cm4gbjtjYXNlXCJkZXNjXCI6cmV0dXJuLTEqbjtkZWZhdWx0OnJldHVybiBNcigpfX0obyx0LGUpO2lmKDAhPT1zKXJldHVybiBzO249bnx8by5maWVsZC5pc0tleUZpZWxkKCl9cmV0dXJuIDB9fWZ1bmN0aW9uIE9vKHQsZSl7aWYodC5JKXtpZihpc05hTihlKSlyZXR1cm57ZG91YmxlVmFsdWU6XCJOYU5cIn07aWYoZT09PTEvMClyZXR1cm57ZG91YmxlVmFsdWU6XCJJbmZpbml0eVwifTtpZihlPT09LTEvMClyZXR1cm57ZG91YmxlVmFsdWU6XCItSW5maW5pdHlcIn19cmV0dXJue2RvdWJsZVZhbHVlOnlpKGUpP1wiLTBcIjplfX1mdW5jdGlvbiBMbyh0KXtyZXR1cm57aW50ZWdlclZhbHVlOlwiXCIrdH19ZnVuY3Rpb24gUG8odCxlKXtyZXR1cm4gZ2koZSk/TG8oZSk6T28odCxlKX1JPWZ1bmN0aW9uKCl7dGhpcy5fPXZvaWQgMH07ZnVuY3Rpb24gTW8odCxlKXtyZXR1cm4gdCBpbnN0YW5jZW9mIFlvP05pKHQ9ZSl8fHQmJlwiZG91YmxlVmFsdWVcImluIHQ/ZTp7aW50ZWdlclZhbHVlOjB9Om51bGx9dmFyIEZvLFZvLFVvPShuKGpvLFZvPUkpLGpvKSxxbz0obihCbyxGbz1JKSxCbyk7ZnVuY3Rpb24gQm8odCl7dmFyIGU9dGhpcztyZXR1cm4oZT1Gby5jYWxsKHRoaXMpfHx0aGlzKS5lbGVtZW50cz10LGV9ZnVuY3Rpb24gam8oKXtyZXR1cm4gbnVsbCE9PVZvJiZWby5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9ZnVuY3Rpb24gS28odCxlKXtmb3IodmFyIG49JG8oZSkscj0wLGk9dC5lbGVtZW50cztyPGkubGVuZ3RoO3IrKykhZnVuY3Rpb24oZSl7bi5zb21lKGZ1bmN0aW9uKHQpe3JldHVybiB3aSh0LGUpfSl8fG4ucHVzaChlKX0oaVtyXSk7cmV0dXJue2FycmF5VmFsdWU6e3ZhbHVlczpufX19dmFyIEdvLFFvPShuKHpvLEdvPUkpLHpvKTtmdW5jdGlvbiB6byh0KXt2YXIgZT10aGlzO3JldHVybihlPUdvLmNhbGwodGhpcyl8fHRoaXMpLmVsZW1lbnRzPXQsZX1mdW5jdGlvbiBIbyh0LGUpe2Zvcih2YXIgbj0kbyhlKSxyPTAsaT10LmVsZW1lbnRzO3I8aS5sZW5ndGg7cisrKSFmdW5jdGlvbihlKXtuPW4uZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiF3aSh0LGUpfSl9KGlbcl0pO3JldHVybnthcnJheVZhbHVlOnt2YWx1ZXM6bn19fXZhciBXbyxZbz0obihYbyxXbz1JKSxYbyk7ZnVuY3Rpb24gWG8odCxlKXt2YXIgbj10aGlzO3JldHVybihuPVdvLmNhbGwodGhpcyl8fHRoaXMpLlI9dCxuLkE9ZSxufWZ1bmN0aW9uIEpvKHQpe3JldHVybiBoaSh0LmludGVnZXJWYWx1ZXx8dC5kb3VibGVWYWx1ZSl9ZnVuY3Rpb24gJG8odCl7cmV0dXJuIERpKHQpJiZ0LmFycmF5VmFsdWUudmFsdWVzP3QuYXJyYXlWYWx1ZS52YWx1ZXMuc2xpY2UoKTpbXX1mdW5jdGlvbiBabyh0LGUpe3RoaXMudmVyc2lvbj10LHRoaXMudHJhbnNmb3JtUmVzdWx0cz1lfXZhciB0cz1mdW5jdGlvbih0LGUpe3RoaXMuZmllbGQ9dCx0aGlzLnRyYW5zZm9ybT1lfSxlcz0obnMubm9uZT1mdW5jdGlvbigpe3JldHVybiBuZXcgbnN9LG5zLmV4aXN0cz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IG5zKHZvaWQgMCx0KX0sbnMudXBkYXRlVGltZT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IG5zKHQpfSxPYmplY3QuZGVmaW5lUHJvcGVydHkobnMucHJvdG90eXBlLFwiaXNOb25lXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDA9PT10aGlzLnVwZGF0ZVRpbWUmJnZvaWQgMD09PXRoaXMuZXhpc3RzfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLG5zLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmV4aXN0cz09PXQuZXhpc3RzJiYodGhpcy51cGRhdGVUaW1lPyEhdC51cGRhdGVUaW1lJiZ0aGlzLnVwZGF0ZVRpbWUuaXNFcXVhbCh0LnVwZGF0ZVRpbWUpOiF0LnVwZGF0ZVRpbWUpfSxucyk7ZnVuY3Rpb24gbnModCxlKXt0aGlzLnVwZGF0ZVRpbWU9dCx0aGlzLmV4aXN0cz1lfWZ1bmN0aW9uIHJzKHQsZSl7cmV0dXJuIHZvaWQgMCE9PXQudXBkYXRlVGltZT9lLmlzRm91bmREb2N1bWVudCgpJiZlLnZlcnNpb24uaXNFcXVhbCh0LnVwZGF0ZVRpbWUpOnZvaWQgMD09PXQuZXhpc3RzfHx0LmV4aXN0cz09PWUuaXNGb3VuZERvY3VtZW50KCl9VGU9ZnVuY3Rpb24oKXt9O2Z1bmN0aW9uIGlzKHQsZSxuKXt2YXIgcixpLG8sczt0IGluc3RhbmNlb2YgY3M/KGk9ZSxvPW4scnMoKHI9dCkucHJlY29uZGl0aW9uLGkpJiYocz1yLnZhbHVlLmNsb25lKCksbz15cyhyLmZpZWxkVHJhbnNmb3JtcyxvLGkpLHMuc2V0QWxsKG8pLGkuY29udmVydFRvRm91bmREb2N1bWVudChzcyhpKSxzKS5zZXRIYXNMb2NhbE11dGF0aW9ucygpKSk6dCBpbnN0YW5jZW9mIGhzPyhvPWUsaT1uLHJzKChzPXQpLnByZWNvbmRpdGlvbixvKSYmKG49eXMocy5maWVsZFRyYW5zZm9ybXMsaSxvKSwoaT1vLmRhdGEpLnNldEFsbChkcyhzKSksaS5zZXRBbGwobiksby5jb252ZXJ0VG9Gb3VuZERvY3VtZW50KHNzKG8pLGkpLnNldEhhc0xvY2FsTXV0YXRpb25zKCkpKTooZT1lLHJzKHQucHJlY29uZGl0aW9uLGUpJiZlLmNvbnZlcnRUb05vRG9jdW1lbnQoR3IubWluKCkpKX1mdW5jdGlvbiBvcyh0LGUpe3JldHVybiB0LnR5cGU9PT1lLnR5cGUmJiEhdC5rZXkuaXNFcXVhbChlLmtleSkmJiEhdC5wcmVjb25kaXRpb24uaXNFcXVhbChlLnByZWNvbmRpdGlvbikmJihuPXQuZmllbGRUcmFuc2Zvcm1zLHI9ZS5maWVsZFRyYW5zZm9ybXMsISEodm9pZCAwPT09biYmdm9pZCAwPT09cnx8biYmciYmQnIobixyLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGU9ZSwodD10KS5maWVsZC5pc0VxdWFsKGUuZmllbGQpJiYodD10LnRyYW5zZm9ybSxlPWUudHJhbnNmb3JtLHQgaW5zdGFuY2VvZiBxbyYmZSBpbnN0YW5jZW9mIHFvfHx0IGluc3RhbmNlb2YgUW8mJmUgaW5zdGFuY2VvZiBRbz9Ccih0LmVsZW1lbnRzLGUuZWxlbWVudHMsd2kpOnQgaW5zdGFuY2VvZiBZbyYmZSBpbnN0YW5jZW9mIFlvP3dpKHQuQSxlLkEpOnQgaW5zdGFuY2VvZiBVbyYmZSBpbnN0YW5jZW9mIFVvKX0pKSkmJigwPT09dC50eXBlP3QudmFsdWUuaXNFcXVhbChlLnZhbHVlKToxIT09dC50eXBlfHx0LmRhdGEuaXNFcXVhbChlLmRhdGEpJiZ0LmZpZWxkTWFzay5pc0VxdWFsKGUuZmllbGRNYXNrKSk7dmFyIG4scn1mdW5jdGlvbiBzcyh0KXtyZXR1cm4gdC5pc0ZvdW5kRG9jdW1lbnQoKT90LnZlcnNpb246R3IubWluKCl9dmFyIGFzLHVzLGNzPShuKGZzLHVzPVRlKSxmcyksaHM9KG4obHMsYXM9VGUpLGxzKTtmdW5jdGlvbiBscyh0LGUsbixyLGkpe3ZvaWQgMD09PWkmJihpPVtdKTt2YXIgbz10aGlzO3JldHVybihvPWFzLmNhbGwodGhpcyl8fHRoaXMpLmtleT10LG8uZGF0YT1lLG8uZmllbGRNYXNrPW4sby5wcmVjb25kaXRpb249cixvLmZpZWxkVHJhbnNmb3Jtcz1pLG8udHlwZT0xLG99ZnVuY3Rpb24gZnModCxlLG4scil7dm9pZCAwPT09ciYmKHI9W10pO3ZhciBpPXRoaXM7cmV0dXJuKGk9dXMuY2FsbCh0aGlzKXx8dGhpcykua2V5PXQsaS52YWx1ZT1lLGkucHJlY29uZGl0aW9uPW4saS5maWVsZFRyYW5zZm9ybXM9cixpLnR5cGU9MCxpfWZ1bmN0aW9uIGRzKG4pe3ZhciByPW5ldyBNYXA7cmV0dXJuIG4uZmllbGRNYXNrLmZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBlO3QuaXNFbXB0eSgpfHwoZT1uLmRhdGEuZmllbGQodCksci5zZXQodCxlKSl9KSxyfWZ1bmN0aW9uIHBzKHQsZSxuKXt2YXIgcj1uZXcgTWFwO0ZyKHQubGVuZ3RoPT09bi5sZW5ndGgpO2Zvcih2YXIgaT0wO2k8bi5sZW5ndGg7aSsrKXt2YXIgbz10W2ldLHM9by50cmFuc2Zvcm0sYT1lLmRhdGEuZmllbGQoby5maWVsZCk7ci5zZXQoby5maWVsZCwobz1zLHM9YSxhPW5baV0sbyBpbnN0YW5jZW9mIHFvP0tvKG8scyk6byBpbnN0YW5jZW9mIFFvP0hvKG8scyk6YSkpfXJldHVybiByfWZ1bmN0aW9uIHlzKHQsZSxuKXtmb3IodmFyIHIsaT1uZXcgTWFwLG89MCxzPXQ7bzxzLmxlbmd0aDtvKyspe3ZhciBhPXNbb10sdT1hLnRyYW5zZm9ybSxjPW4uZGF0YS5maWVsZChhLmZpZWxkKTtpLnNldChhLmZpZWxkLChyPWMsYT1lLGM9dm9pZCAwLCh1PXUpaW5zdGFuY2VvZiBVbz8oYz17ZmllbGRzOntfX3R5cGVfXzp7c3RyaW5nVmFsdWU6XCJzZXJ2ZXJfdGltZXN0YW1wXCJ9LF9fbG9jYWxfd3JpdGVfdGltZV9fOnt0aW1lc3RhbXBWYWx1ZTp7c2Vjb25kczphLnNlY29uZHMsbmFub3M6YS5uYW5vc2Vjb25kc319fX0sciYmKGMuZmllbGRzLl9fcHJldmlvdXNfdmFsdWVfXz1yKSx7bWFwVmFsdWU6Y30pOnUgaW5zdGFuY2VvZiBxbz9Lbyh1LHIpOnUgaW5zdGFuY2VvZiBRbz9Ibyh1LHIpOih1PU1vKGM9dSxyKSxyPUpvKHUpK0pvKGMuQSksTmkodSkmJk5pKGMuQSk/TG8ocik6T28oYy5SLHIpKSkpfXJldHVybiBpfWZ1bmN0aW9uIGdzKHQpe3RoaXMuY291bnQ9dH12YXIgbXMsdnMsYnMsd3M9KG4oVHMsYnM9VGUpLFRzKSxJcz0obihFcyx2cz1UZSksRXMpO2Z1bmN0aW9uIEVzKHQsZSl7dmFyIG49dGhpcztyZXR1cm4obj12cy5jYWxsKHRoaXMpfHx0aGlzKS5rZXk9dCxuLnByZWNvbmRpdGlvbj1lLG4udHlwZT0zLG4uZmllbGRUcmFuc2Zvcm1zPVtdLG59ZnVuY3Rpb24gVHModCxlKXt2YXIgbj10aGlzO3JldHVybihuPWJzLmNhbGwodGhpcyl8fHRoaXMpLmtleT10LG4ucHJlY29uZGl0aW9uPWUsbi50eXBlPTIsbi5maWVsZFRyYW5zZm9ybXM9W10sbn1mdW5jdGlvbiBfcyh0KXtzd2l0Y2godCl7Y2FzZSBEci5PSzpyZXR1cm4gTXIoKSwwO2Nhc2UgRHIuQ0FOQ0VMTEVEOmNhc2UgRHIuVU5LTk9XTjpjYXNlIERyLkRFQURMSU5FX0VYQ0VFREVEOmNhc2UgRHIuUkVTT1VSQ0VfRVhIQVVTVEVEOmNhc2UgRHIuSU5URVJOQUw6Y2FzZSBEci5VTkFWQUlMQUJMRTpjYXNlIERyLlVOQVVUSEVOVElDQVRFRDpyZXR1cm47Y2FzZSBEci5JTlZBTElEX0FSR1VNRU5UOmNhc2UgRHIuTk9UX0ZPVU5EOmNhc2UgRHIuQUxSRUFEWV9FWElTVFM6Y2FzZSBEci5QRVJNSVNTSU9OX0RFTklFRDpjYXNlIERyLkZBSUxFRF9QUkVDT05ESVRJT046Y2FzZSBEci5BQk9SVEVEOmNhc2UgRHIuT1VUX09GX1JBTkdFOmNhc2UgRHIuVU5JTVBMRU1FTlRFRDpjYXNlIERyLkRBVEFfTE9TUzpyZXR1cm4gMTtkZWZhdWx0OnJldHVybiBNcigpLDB9fWZ1bmN0aW9uIFNzKHQpe2lmKHZvaWQgMD09PXQpcmV0dXJuIE9yKFwiR1JQQyBlcnJvciBoYXMgbm8gLmNvZGVcIiksRHIuVU5LTk9XTjtzd2l0Y2godCl7Y2FzZSBtcy5PSzpyZXR1cm4gRHIuT0s7Y2FzZSBtcy5DQU5DRUxMRUQ6cmV0dXJuIERyLkNBTkNFTExFRDtjYXNlIG1zLlVOS05PV046cmV0dXJuIERyLlVOS05PV047Y2FzZSBtcy5ERUFETElORV9FWENFRURFRDpyZXR1cm4gRHIuREVBRExJTkVfRVhDRUVERUQ7Y2FzZSBtcy5SRVNPVVJDRV9FWEhBVVNURUQ6cmV0dXJuIERyLlJFU09VUkNFX0VYSEFVU1RFRDtjYXNlIG1zLklOVEVSTkFMOnJldHVybiBEci5JTlRFUk5BTDtjYXNlIG1zLlVOQVZBSUxBQkxFOnJldHVybiBEci5VTkFWQUlMQUJMRTtjYXNlIG1zLlVOQVVUSEVOVElDQVRFRDpyZXR1cm4gRHIuVU5BVVRIRU5USUNBVEVEO2Nhc2UgbXMuSU5WQUxJRF9BUkdVTUVOVDpyZXR1cm4gRHIuSU5WQUxJRF9BUkdVTUVOVDtjYXNlIG1zLk5PVF9GT1VORDpyZXR1cm4gRHIuTk9UX0ZPVU5EO2Nhc2UgbXMuQUxSRUFEWV9FWElTVFM6cmV0dXJuIERyLkFMUkVBRFlfRVhJU1RTO2Nhc2UgbXMuUEVSTUlTU0lPTl9ERU5JRUQ6cmV0dXJuIERyLlBFUk1JU1NJT05fREVOSUVEO2Nhc2UgbXMuRkFJTEVEX1BSRUNPTkRJVElPTjpyZXR1cm4gRHIuRkFJTEVEX1BSRUNPTkRJVElPTjtjYXNlIG1zLkFCT1JURUQ6cmV0dXJuIERyLkFCT1JURUQ7Y2FzZSBtcy5PVVRfT0ZfUkFOR0U6cmV0dXJuIERyLk9VVF9PRl9SQU5HRTtjYXNlIG1zLlVOSU1QTEVNRU5URUQ6cmV0dXJuIERyLlVOSU1QTEVNRU5URUQ7Y2FzZSBtcy5EQVRBX0xPU1M6cmV0dXJuIERyLkRBVEFfTE9TUztkZWZhdWx0OnJldHVybiBNcigpfX0oST1tcz1tc3x8e30pW0kuT0s9MF09XCJPS1wiLElbSS5DQU5DRUxMRUQ9MV09XCJDQU5DRUxMRURcIixJW0kuVU5LTk9XTj0yXT1cIlVOS05PV05cIixJW0kuSU5WQUxJRF9BUkdVTUVOVD0zXT1cIklOVkFMSURfQVJHVU1FTlRcIixJW0kuREVBRExJTkVfRVhDRUVERUQ9NF09XCJERUFETElORV9FWENFRURFRFwiLElbSS5OT1RfRk9VTkQ9NV09XCJOT1RfRk9VTkRcIixJW0kuQUxSRUFEWV9FWElTVFM9Nl09XCJBTFJFQURZX0VYSVNUU1wiLElbSS5QRVJNSVNTSU9OX0RFTklFRD03XT1cIlBFUk1JU1NJT05fREVOSUVEXCIsSVtJLlVOQVVUSEVOVElDQVRFRD0xNl09XCJVTkFVVEhFTlRJQ0FURURcIixJW0kuUkVTT1VSQ0VfRVhIQVVTVEVEPThdPVwiUkVTT1VSQ0VfRVhIQVVTVEVEXCIsSVtJLkZBSUxFRF9QUkVDT05ESVRJT049OV09XCJGQUlMRURfUFJFQ09ORElUSU9OXCIsSVtJLkFCT1JURUQ9MTBdPVwiQUJPUlRFRFwiLElbSS5PVVRfT0ZfUkFOR0U9MTFdPVwiT1VUX09GX1JBTkdFXCIsSVtJLlVOSU1QTEVNRU5URUQ9MTJdPVwiVU5JTVBMRU1FTlRFRFwiLElbSS5JTlRFUk5BTD0xM109XCJJTlRFUk5BTFwiLElbSS5VTkFWQUlMQUJMRT0xNF09XCJVTkFWQUlMQUJMRVwiLElbSS5EQVRBX0xPU1M9MTVdPVwiREFUQV9MT1NTXCI7dmFyIE5zPShScy5wcm90b3R5cGUuaW5zZXJ0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyBScyh0aGlzLmNvbXBhcmF0b3IsdGhpcy5yb290Lmluc2VydCh0LGUsdGhpcy5jb21wYXJhdG9yKS5jb3B5KG51bGwsbnVsbCxBcy5CTEFDSyxudWxsLG51bGwpKX0sUnMucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFJzKHRoaXMuY29tcGFyYXRvcix0aGlzLnJvb3QucmVtb3ZlKHQsdGhpcy5jb21wYXJhdG9yKS5jb3B5KG51bGwsbnVsbCxBcy5CTEFDSyxudWxsLG51bGwpKX0sUnMucHJvdG90eXBlLmdldD1mdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5yb290OyFlLmlzRW1wdHkoKTspe3ZhciBuPXRoaXMuY29tcGFyYXRvcih0LGUua2V5KTtpZigwPT09bilyZXR1cm4gZS52YWx1ZTtuPDA/ZT1lLmxlZnQ6MDxuJiYoZT1lLnJpZ2h0KX1yZXR1cm4gbnVsbH0sUnMucHJvdG90eXBlLmluZGV4T2Y9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsbj10aGlzLnJvb3Q7IW4uaXNFbXB0eSgpOyl7dmFyIHI9dGhpcy5jb21wYXJhdG9yKHQsbi5rZXkpO2lmKDA9PT1yKXJldHVybiBlK24ubGVmdC5zaXplO249cjwwP24ubGVmdDooZSs9bi5sZWZ0LnNpemUrMSxuLnJpZ2h0KX1yZXR1cm4tMX0sUnMucHJvdG90eXBlLmlzRW1wdHk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yb290LmlzRW1wdHkoKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KFJzLnByb3RvdHlwZSxcInNpemVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucm9vdC5zaXplfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLFJzLnByb3RvdHlwZS5taW5LZXk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5yb290Lm1pbktleSgpfSxScy5wcm90b3R5cGUubWF4S2V5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucm9vdC5tYXhLZXkoKX0sUnMucHJvdG90eXBlLmlub3JkZXJUcmF2ZXJzYWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucm9vdC5pbm9yZGVyVHJhdmVyc2FsKHQpfSxScy5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbihuKXt0aGlzLmlub3JkZXJUcmF2ZXJzYWwoZnVuY3Rpb24odCxlKXtyZXR1cm4gbih0LGUpLCExfSl9LFJzLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3ZhciBuPVtdO3JldHVybiB0aGlzLmlub3JkZXJUcmF2ZXJzYWwoZnVuY3Rpb24odCxlKXtyZXR1cm4gbi5wdXNoKHQrXCI6XCIrZSksITF9KSxcIntcIituLmpvaW4oXCIsIFwiKStcIn1cIn0sUnMucHJvdG90eXBlLnJldmVyc2VUcmF2ZXJzYWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucm9vdC5yZXZlcnNlVHJhdmVyc2FsKHQpfSxScy5wcm90b3R5cGUuZ2V0SXRlcmF0b3I9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IERzKHRoaXMucm9vdCxudWxsLHRoaXMuY29tcGFyYXRvciwhMSl9LFJzLnByb3RvdHlwZS5nZXRJdGVyYXRvckZyb209ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBEcyh0aGlzLnJvb3QsdCx0aGlzLmNvbXBhcmF0b3IsITEpfSxScy5wcm90b3R5cGUuZ2V0UmV2ZXJzZUl0ZXJhdG9yPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBEcyh0aGlzLnJvb3QsbnVsbCx0aGlzLmNvbXBhcmF0b3IsITApfSxScy5wcm90b3R5cGUuZ2V0UmV2ZXJzZUl0ZXJhdG9yRnJvbT1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IERzKHRoaXMucm9vdCx0LHRoaXMuY29tcGFyYXRvciwhMCl9LFJzKSxEcz0oQ3MucHJvdG90eXBlLmdldE5leHQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm5vZGVTdGFjay5wb3AoKSxlPXtrZXk6dC5rZXksdmFsdWU6dC52YWx1ZX07aWYodGhpcy5pc1JldmVyc2UpZm9yKHQ9dC5sZWZ0OyF0LmlzRW1wdHkoKTspdGhpcy5ub2RlU3RhY2sucHVzaCh0KSx0PXQucmlnaHQ7ZWxzZSBmb3IodD10LnJpZ2h0OyF0LmlzRW1wdHkoKTspdGhpcy5ub2RlU3RhY2sucHVzaCh0KSx0PXQubGVmdDtyZXR1cm4gZX0sQ3MucHJvdG90eXBlLmhhc05leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gMDx0aGlzLm5vZGVTdGFjay5sZW5ndGh9LENzLnByb3RvdHlwZS5wZWVrPWZ1bmN0aW9uKCl7aWYoMD09PXRoaXMubm9kZVN0YWNrLmxlbmd0aClyZXR1cm4gbnVsbDt2YXIgdD10aGlzLm5vZGVTdGFja1t0aGlzLm5vZGVTdGFjay5sZW5ndGgtMV07cmV0dXJue2tleTp0LmtleSx2YWx1ZTp0LnZhbHVlfX0sQ3MpLEFzPShrcy5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0LGUsbixyLGkpe3JldHVybiBuZXcga3MobnVsbCE9dD90OnRoaXMua2V5LG51bGwhPWU/ZTp0aGlzLnZhbHVlLG51bGwhPW4/bjp0aGlzLmNvbG9yLG51bGwhPXI/cjp0aGlzLmxlZnQsbnVsbCE9aT9pOnRoaXMucmlnaHQpfSxrcy5wcm90b3R5cGUuaXNFbXB0eT1mdW5jdGlvbigpe3JldHVybiExfSxrcy5wcm90b3R5cGUuaW5vcmRlclRyYXZlcnNhbD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5sZWZ0Lmlub3JkZXJUcmF2ZXJzYWwodCl8fHQodGhpcy5rZXksdGhpcy52YWx1ZSl8fHRoaXMucmlnaHQuaW5vcmRlclRyYXZlcnNhbCh0KX0sa3MucHJvdG90eXBlLnJldmVyc2VUcmF2ZXJzYWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucmlnaHQucmV2ZXJzZVRyYXZlcnNhbCh0KXx8dCh0aGlzLmtleSx0aGlzLnZhbHVlKXx8dGhpcy5sZWZ0LnJldmVyc2VUcmF2ZXJzYWwodCl9LGtzLnByb3RvdHlwZS5taW49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sZWZ0LmlzRW1wdHkoKT90aGlzOnRoaXMubGVmdC5taW4oKX0sa3MucHJvdG90eXBlLm1pbktleT1mdW5jdGlvbigpe3JldHVybiB0aGlzLm1pbigpLmtleX0sa3MucHJvdG90eXBlLm1heEtleT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnJpZ2h0LmlzRW1wdHkoKT90aGlzLmtleTp0aGlzLnJpZ2h0Lm1heEtleSgpfSxrcy5wcm90b3R5cGUuaW5zZXJ0PWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzLGk9bih0LHIua2V5KTtyZXR1cm4ocj1pPDA/ci5jb3B5KG51bGwsbnVsbCxudWxsLHIubGVmdC5pbnNlcnQodCxlLG4pLG51bGwpOjA9PT1pP3IuY29weShudWxsLGUsbnVsbCxudWxsLG51bGwpOnIuY29weShudWxsLG51bGwsbnVsbCxudWxsLHIucmlnaHQuaW5zZXJ0KHQsZSxuKSkpLmZpeFVwKCl9LGtzLnByb3RvdHlwZS5yZW1vdmVNaW49ZnVuY3Rpb24oKXtpZih0aGlzLmxlZnQuaXNFbXB0eSgpKXJldHVybiBrcy5FTVBUWTt2YXIgdD10aGlzO3JldHVybih0PSh0PSF0LmxlZnQuaXNSZWQoKSYmIXQubGVmdC5sZWZ0LmlzUmVkKCk/dC5tb3ZlUmVkTGVmdCgpOnQpLmNvcHkobnVsbCxudWxsLG51bGwsdC5sZWZ0LnJlbW92ZU1pbigpLG51bGwpKS5maXhVcCgpfSxrcy5wcm90b3R5cGUucmVtb3ZlPWZ1bmN0aW9uKHQsZSl7dmFyIG4scj10aGlzO2lmKGUodCxyLmtleSk8MClyPShyPSEoci5sZWZ0LmlzRW1wdHkoKXx8ci5sZWZ0LmlzUmVkKCl8fHIubGVmdC5sZWZ0LmlzUmVkKCkpP3IubW92ZVJlZExlZnQoKTpyKS5jb3B5KG51bGwsbnVsbCxudWxsLHIubGVmdC5yZW1vdmUodCxlKSxudWxsKTtlbHNle2lmKDA9PT1lKHQsKHI9ISgocj1yLmxlZnQuaXNSZWQoKT9yLnJvdGF0ZVJpZ2h0KCk6cikucmlnaHQuaXNFbXB0eSgpfHxyLnJpZ2h0LmlzUmVkKCl8fHIucmlnaHQubGVmdC5pc1JlZCgpKT9yLm1vdmVSZWRSaWdodCgpOnIpLmtleSkpe2lmKHIucmlnaHQuaXNFbXB0eSgpKXJldHVybiBrcy5FTVBUWTtuPXIucmlnaHQubWluKCkscj1yLmNvcHkobi5rZXksbi52YWx1ZSxudWxsLG51bGwsci5yaWdodC5yZW1vdmVNaW4oKSl9cj1yLmNvcHkobnVsbCxudWxsLG51bGwsbnVsbCxyLnJpZ2h0LnJlbW92ZSh0LGUpKX1yZXR1cm4gci5maXhVcCgpfSxrcy5wcm90b3R5cGUuaXNSZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jb2xvcn0sa3MucHJvdG90eXBlLmZpeFVwPWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gdD0odD0odD10LnJpZ2h0LmlzUmVkKCkmJiF0LmxlZnQuaXNSZWQoKT90LnJvdGF0ZUxlZnQoKTp0KS5sZWZ0LmlzUmVkKCkmJnQubGVmdC5sZWZ0LmlzUmVkKCk/dC5yb3RhdGVSaWdodCgpOnQpLmxlZnQuaXNSZWQoKSYmdC5yaWdodC5pc1JlZCgpP3QuY29sb3JGbGlwKCk6dH0sa3MucHJvdG90eXBlLm1vdmVSZWRMZWZ0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5jb2xvckZsaXAoKTtyZXR1cm4gdD10LnJpZ2h0LmxlZnQuaXNSZWQoKT8odD0odD10LmNvcHkobnVsbCxudWxsLG51bGwsbnVsbCx0LnJpZ2h0LnJvdGF0ZVJpZ2h0KCkpKS5yb3RhdGVMZWZ0KCkpLmNvbG9yRmxpcCgpOnR9LGtzLnByb3RvdHlwZS5tb3ZlUmVkUmlnaHQ9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmNvbG9yRmxpcCgpO3JldHVybiB0PXQubGVmdC5sZWZ0LmlzUmVkKCk/KHQ9dC5yb3RhdGVSaWdodCgpKS5jb2xvckZsaXAoKTp0fSxrcy5wcm90b3R5cGUucm90YXRlTGVmdD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuY29weShudWxsLG51bGwsa3MuUkVELG51bGwsdGhpcy5yaWdodC5sZWZ0KTtyZXR1cm4gdGhpcy5yaWdodC5jb3B5KG51bGwsbnVsbCx0aGlzLmNvbG9yLHQsbnVsbCl9LGtzLnByb3RvdHlwZS5yb3RhdGVSaWdodD1mdW5jdGlvbigpe3ZhciB0PXRoaXMuY29weShudWxsLG51bGwsa3MuUkVELHRoaXMubGVmdC5yaWdodCxudWxsKTtyZXR1cm4gdGhpcy5sZWZ0LmNvcHkobnVsbCxudWxsLHRoaXMuY29sb3IsbnVsbCx0KX0sa3MucHJvdG90eXBlLmNvbG9yRmxpcD1mdW5jdGlvbigpe3ZhciB0PXRoaXMubGVmdC5jb3B5KG51bGwsbnVsbCwhdGhpcy5sZWZ0LmNvbG9yLG51bGwsbnVsbCksZT10aGlzLnJpZ2h0LmNvcHkobnVsbCxudWxsLCF0aGlzLnJpZ2h0LmNvbG9yLG51bGwsbnVsbCk7cmV0dXJuIHRoaXMuY29weShudWxsLG51bGwsIXRoaXMuY29sb3IsdCxlKX0sa3MucHJvdG90eXBlLmNoZWNrTWF4RGVwdGg9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmNoZWNrKCk7cmV0dXJuIE1hdGgucG93KDIsdCk8PXRoaXMuc2l6ZSsxfSxrcy5wcm90b3R5cGUuY2hlY2s9ZnVuY3Rpb24oKXtpZih0aGlzLmlzUmVkKCkmJnRoaXMubGVmdC5pc1JlZCgpKXRocm93IE1yKCk7aWYodGhpcy5yaWdodC5pc1JlZCgpKXRocm93IE1yKCk7dmFyIHQ9dGhpcy5sZWZ0LmNoZWNrKCk7aWYodCE9PXRoaXMucmlnaHQuY2hlY2soKSl0aHJvdyBNcigpO3JldHVybiB0Kyh0aGlzLmlzUmVkKCk/MDoxKX0sa3MpO2Z1bmN0aW9uIGtzKHQsZSxuLHIsaSl7dGhpcy5rZXk9dCx0aGlzLnZhbHVlPWUsdGhpcy5jb2xvcj1udWxsIT1uP246a3MuUkVELHRoaXMubGVmdD1udWxsIT1yP3I6a3MuRU1QVFksdGhpcy5yaWdodD1udWxsIT1pP2k6a3MuRU1QVFksdGhpcy5zaXplPXRoaXMubGVmdC5zaXplKzErdGhpcy5yaWdodC5zaXplfWZ1bmN0aW9uIENzKHQsZSxuLHIpe3RoaXMuaXNSZXZlcnNlPXIsdGhpcy5ub2RlU3RhY2s9W107Zm9yKHZhciBpPTE7IXQuaXNFbXB0eSgpOylpZihpPWU/bih0LmtleSxlKToxLHImJihpKj0tMSksaTwwKXQ9dGhpcy5pc1JldmVyc2U/dC5sZWZ0OnQucmlnaHQ7ZWxzZXtpZigwPT09aSl7dGhpcy5ub2RlU3RhY2sucHVzaCh0KTticmVha310aGlzLm5vZGVTdGFjay5wdXNoKHQpLHQ9dGhpcy5pc1JldmVyc2U/dC5yaWdodDp0LmxlZnR9fWZ1bmN0aW9uIFJzKHQsZSl7dGhpcy5jb21wYXJhdG9yPXQsdGhpcy5yb290PWV8fEFzLkVNUFRZfWZ1bmN0aW9uIHhzKCl7dGhpcy5zaXplPTB9QXMuRU1QVFk9bnVsbCxBcy5SRUQ9ITAsQXMuQkxBQ0s9ITEsQXMuRU1QVFk9KE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh4cy5wcm90b3R5cGUsXCJrZXlcIix7Z2V0OmZ1bmN0aW9uKCl7dGhyb3cgTXIoKX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoeHMucHJvdG90eXBlLFwidmFsdWVcIix7Z2V0OmZ1bmN0aW9uKCl7dGhyb3cgTXIoKX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoeHMucHJvdG90eXBlLFwiY29sb3JcIix7Z2V0OmZ1bmN0aW9uKCl7dGhyb3cgTXIoKX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoeHMucHJvdG90eXBlLFwibGVmdFwiLHtnZXQ6ZnVuY3Rpb24oKXt0aHJvdyBNcigpfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh4cy5wcm90b3R5cGUsXCJyaWdodFwiLHtnZXQ6ZnVuY3Rpb24oKXt0aHJvdyBNcigpfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLHhzLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQsZSxuLHIsaSl7cmV0dXJuIHRoaXN9LHhzLnByb3RvdHlwZS5pbnNlcnQ9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuZXcgQXModCxlKX0seHMucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzfSx4cy5wcm90b3R5cGUuaXNFbXB0eT1mdW5jdGlvbigpe3JldHVybiEwfSx4cy5wcm90b3R5cGUuaW5vcmRlclRyYXZlcnNhbD1mdW5jdGlvbih0KXtyZXR1cm4hMX0seHMucHJvdG90eXBlLnJldmVyc2VUcmF2ZXJzYWw9ZnVuY3Rpb24odCl7cmV0dXJuITF9LHhzLnByb3RvdHlwZS5taW5LZXk9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbH0seHMucHJvdG90eXBlLm1heEtleT1mdW5jdGlvbigpe3JldHVybiBudWxsfSx4cy5wcm90b3R5cGUuaXNSZWQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX0seHMucHJvdG90eXBlLmNoZWNrTWF4RGVwdGg9ZnVuY3Rpb24oKXtyZXR1cm4hMH0seHMucHJvdG90eXBlLmNoZWNrPWZ1bmN0aW9uKCl7cmV0dXJuIDB9LG5ldyB4cyk7dmFyIE9zPShGcy5wcm90b3R5cGUuaGFzPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT09dGhpcy5kYXRhLmdldCh0KX0sRnMucHJvdG90eXBlLmZpcnN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZGF0YS5taW5LZXkoKX0sRnMucHJvdG90eXBlLmxhc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kYXRhLm1heEtleSgpfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoRnMucHJvdG90eXBlLFwic2l6ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5kYXRhLnNpemV9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksRnMucHJvdG90eXBlLmluZGV4T2Y9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGF0YS5pbmRleE9mKHQpfSxGcy5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbihuKXt0aGlzLmRhdGEuaW5vcmRlclRyYXZlcnNhbChmdW5jdGlvbih0LGUpe3JldHVybiBuKHQpLCExfSl9LEZzLnByb3RvdHlwZS5mb3JFYWNoSW5SYW5nZT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj10aGlzLmRhdGEuZ2V0SXRlcmF0b3JGcm9tKHRbMF0pO24uaGFzTmV4dCgpOyl7dmFyIHI9bi5nZXROZXh0KCk7aWYoMDw9dGhpcy5jb21wYXJhdG9yKHIua2V5LHRbMV0pKXJldHVybjtlKHIua2V5KX19LEZzLnByb3RvdHlwZS5mb3JFYWNoV2hpbGU9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dm9pZCAwIT09ZT90aGlzLmRhdGEuZ2V0SXRlcmF0b3JGcm9tKGUpOnRoaXMuZGF0YS5nZXRJdGVyYXRvcigpO24uaGFzTmV4dCgpOylpZighdChuLmdldE5leHQoKS5rZXkpKXJldHVybn0sRnMucHJvdG90eXBlLmZpcnN0QWZ0ZXJPckVxdWFsPWZ1bmN0aW9uKHQpe3Q9dGhpcy5kYXRhLmdldEl0ZXJhdG9yRnJvbSh0KTtyZXR1cm4gdC5oYXNOZXh0KCk/dC5nZXROZXh0KCkua2V5Om51bGx9LEZzLnByb3RvdHlwZS5nZXRJdGVyYXRvcj1mdW5jdGlvbigpe3JldHVybiBuZXcgTHModGhpcy5kYXRhLmdldEl0ZXJhdG9yKCkpfSxGcy5wcm90b3R5cGUuZ2V0SXRlcmF0b3JGcm9tPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgTHModGhpcy5kYXRhLmdldEl0ZXJhdG9yRnJvbSh0KSl9LEZzLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY29weSh0aGlzLmRhdGEucmVtb3ZlKHQpLmluc2VydCh0LCEwKSl9LEZzLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuaGFzKHQpP3RoaXMuY29weSh0aGlzLmRhdGEucmVtb3ZlKHQpKTp0aGlzfSxGcy5wcm90b3R5cGUuaXNFbXB0eT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmRhdGEuaXNFbXB0eSgpfSxGcy5wcm90b3R5cGUudW5pb25XaXRoPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIGUuc2l6ZTx0LnNpemUmJihlPXQsdD10aGlzKSx0LmZvckVhY2goZnVuY3Rpb24odCl7ZT1lLmFkZCh0KX0pLGV9LEZzLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe2lmKCEodCBpbnN0YW5jZW9mIEZzKSlyZXR1cm4hMTtpZih0aGlzLnNpemUhPT10LnNpemUpcmV0dXJuITE7Zm9yKHZhciBlPXRoaXMuZGF0YS5nZXRJdGVyYXRvcigpLG49dC5kYXRhLmdldEl0ZXJhdG9yKCk7ZS5oYXNOZXh0KCk7KXt2YXIgcj1lLmdldE5leHQoKS5rZXksaT1uLmdldE5leHQoKS5rZXk7aWYoMCE9PXRoaXMuY29tcGFyYXRvcihyLGkpKXJldHVybiExfXJldHVybiEwfSxGcy5wcm90b3R5cGUudG9BcnJheT1mdW5jdGlvbigpe3ZhciBlPVtdO3JldHVybiB0aGlzLmZvckVhY2goZnVuY3Rpb24odCl7ZS5wdXNoKHQpfSksZX0sRnMucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJuIHRoaXMuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gZS5wdXNoKHQpfSksXCJTb3J0ZWRTZXQoXCIrZS50b1N0cmluZygpK1wiKVwifSxGcy5wcm90b3R5cGUuY29weT1mdW5jdGlvbih0KXt2YXIgZT1uZXcgRnModGhpcy5jb21wYXJhdG9yKTtyZXR1cm4gZS5kYXRhPXQsZX0sRnMpLExzPShNcy5wcm90b3R5cGUuZ2V0TmV4dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLml0ZXIuZ2V0TmV4dCgpLmtleX0sTXMucHJvdG90eXBlLmhhc05leHQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pdGVyLmhhc05leHQoKX0sTXMpLFBzPW5ldyBOcyhtaS5jb21wYXJhdG9yKTtmdW5jdGlvbiBNcyh0KXt0aGlzLml0ZXI9dH1mdW5jdGlvbiBGcyh0KXt0aGlzLmNvbXBhcmF0b3I9dCx0aGlzLmRhdGE9bmV3IE5zKHRoaXMuY29tcGFyYXRvcil9dmFyIFZzPW5ldyBOcyhtaS5jb21wYXJhdG9yKTt2YXIgVXM9bmV3IE5zKG1pLmNvbXBhcmF0b3IpO3ZhciBxcz1uZXcgT3MobWkuY29tcGFyYXRvcik7ZnVuY3Rpb24gQnMoKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07Zm9yKHZhciBuPXFzLHI9MCxpPXQ7cjxpLmxlbmd0aDtyKyspdmFyIG89aVtyXSxuPW4uYWRkKG8pO3JldHVybiBufXZhciBqcz1uZXcgT3MocXIpO3ZhciBLcz0oWnMuY3JlYXRlU3ludGhlc2l6ZWRSZW1vdGVFdmVudEZvckN1cnJlbnRDaGFuZ2U9ZnVuY3Rpb24odCxlKXt2YXIgbj1uZXcgTWFwO3JldHVybiBuLnNldCh0LEdzLmNyZWF0ZVN5bnRoZXNpemVkVGFyZ2V0Q2hhbmdlRm9yQ3VycmVudENoYW5nZSh0LGUpKSxuZXcgWnMoR3IubWluKCksbixqcyxQcyxCcygpKX0sWnMpLEdzPSgkcy5jcmVhdGVTeW50aGVzaXplZFRhcmdldENoYW5nZUZvckN1cnJlbnRDaGFuZ2U9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbmV3ICRzKG5pLkVNUFRZX0JZVEVfU1RSSU5HLGUsQnMoKSxCcygpLEJzKCkpfSwkcyksUXM9ZnVuY3Rpb24odCxlLG4scil7dGhpcy52PXQsdGhpcy5yZW1vdmVkVGFyZ2V0SWRzPWUsdGhpcy5rZXk9bix0aGlzLlA9cn0senM9ZnVuY3Rpb24odCxlKXt0aGlzLnRhcmdldElkPXQsdGhpcy5WPWV9LEhzPWZ1bmN0aW9uKHQsZSxuLHIpe3ZvaWQgMD09PW4mJihuPW5pLkVNUFRZX0JZVEVfU1RSSU5HKSx2b2lkIDA9PT1yJiYocj1udWxsKSx0aGlzLnN0YXRlPXQsdGhpcy50YXJnZXRJZHM9ZSx0aGlzLnJlc3VtZVRva2VuPW4sdGhpcy5jYXVzZT1yfSxXcz0oT2JqZWN0LmRlZmluZVByb3BlcnR5KEpzLnByb3RvdHlwZSxcImN1cnJlbnRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuTn0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoSnMucHJvdG90eXBlLFwicmVzdW1lVG9rZW5cIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuQ30sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoSnMucHJvdG90eXBlLFwia1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMCE9PXRoaXMuU30sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoSnMucHJvdG90eXBlLFwiT1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5GfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLEpzLnByb3RvdHlwZS4kPWZ1bmN0aW9uKHQpezA8dC5hcHByb3hpbWF0ZUJ5dGVTaXplKCkmJih0aGlzLkY9ITAsdGhpcy5DPXQpfSxKcy5wcm90b3R5cGUuTT1mdW5jdGlvbigpe3ZhciBuPUJzKCkscj1CcygpLGk9QnMoKTtyZXR1cm4gdGhpcy5ELmZvckVhY2goZnVuY3Rpb24odCxlKXtzd2l0Y2goZSl7Y2FzZSAwOm49bi5hZGQodCk7YnJlYWs7Y2FzZSAyOnI9ci5hZGQodCk7YnJlYWs7Y2FzZSAxOmk9aS5hZGQodCk7YnJlYWs7ZGVmYXVsdDpNcigpfX0pLG5ldyBHcyh0aGlzLkMsdGhpcy5OLG4scixpKX0sSnMucHJvdG90eXBlLkw9ZnVuY3Rpb24oKXt0aGlzLkY9ITEsdGhpcy5EPWVhKCl9LEpzLnByb3RvdHlwZS5CPWZ1bmN0aW9uKHQsZSl7dGhpcy5GPSEwLHRoaXMuRD10aGlzLkQuaW5zZXJ0KHQsZSl9LEpzLnByb3RvdHlwZS5xPWZ1bmN0aW9uKHQpe3RoaXMuRj0hMCx0aGlzLkQ9dGhpcy5ELnJlbW92ZSh0KX0sSnMucHJvdG90eXBlLlU9ZnVuY3Rpb24oKXt0aGlzLlMrPTF9LEpzLnByb3RvdHlwZS5LPWZ1bmN0aW9uKCl7LS10aGlzLlN9LEpzLnByb3RvdHlwZS5qPWZ1bmN0aW9uKCl7dGhpcy5GPSEwLHRoaXMuTj0hMH0sSnMpLFlzPShYcy5wcm90b3R5cGUuWD1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPXQudjtlPG4ubGVuZ3RoO2UrKyl7dmFyIHI9bltlXTt0LlAmJnQuUC5pc0ZvdW5kRG9jdW1lbnQoKT90aGlzLloocix0LlApOnRoaXMudHQocix0LmtleSx0LlApfWZvcih2YXIgaT0wLG89dC5yZW1vdmVkVGFyZ2V0SWRzO2k8by5sZW5ndGg7aSsrKXI9b1tpXSx0aGlzLnR0KHIsdC5rZXksdC5QKX0sWHMucHJvdG90eXBlLmV0PWZ1bmN0aW9uKG4pe3ZhciByPXRoaXM7dGhpcy5mb3JFYWNoVGFyZ2V0KG4sZnVuY3Rpb24odCl7dmFyIGU9ci5udCh0KTtzd2l0Y2gobi5zdGF0ZSl7Y2FzZSAwOnIuc3QodCkmJmUuJChuLnJlc3VtZVRva2VuKTticmVhaztjYXNlIDE6ZS5LKCksZS5rfHxlLkwoKSxlLiQobi5yZXN1bWVUb2tlbik7YnJlYWs7Y2FzZSAyOmUuSygpLGUua3x8ci5yZW1vdmVUYXJnZXQodCk7YnJlYWs7Y2FzZSAzOnIuc3QodCkmJihlLmooKSxlLiQobi5yZXN1bWVUb2tlbikpO2JyZWFrO2Nhc2UgNDpyLnN0KHQpJiYoci5pdCh0KSxlLiQobi5yZXN1bWVUb2tlbikpO2JyZWFrO2RlZmF1bHQ6TXIoKX19KX0sWHMucHJvdG90eXBlLmZvckVhY2hUYXJnZXQ9ZnVuY3Rpb24odCxuKXt2YXIgcj10aGlzOzA8dC50YXJnZXRJZHMubGVuZ3RoP3QudGFyZ2V0SWRzLmZvckVhY2gobik6dGhpcy5HLmZvckVhY2goZnVuY3Rpb24odCxlKXtyLnN0KGUpJiZuKGUpfSl9LFhzLnByb3RvdHlwZS5ydD1mdW5jdGlvbih0KXt2YXIgZT10LnRhcmdldElkLG49dC5WLmNvdW50LHQ9dGhpcy5vdChlKTt0JiYoVWkodD10LnRhcmdldCk/MD09PW4/KHQ9bmV3IG1pKHQucGF0aCksdGhpcy50dChlLHQsT2kubmV3Tm9Eb2N1bWVudCh0LEdyLm1pbigpKSkpOkZyKDE9PT1uKTp0aGlzLmN0KGUpIT09biYmKHRoaXMuaXQoZSksdGhpcy5ZPXRoaXMuWS5hZGQoZSkpKX0sWHMucHJvdG90eXBlLnV0PWZ1bmN0aW9uKHIpe3ZhciBpPXRoaXMsbz1uZXcgTWFwO3RoaXMuRy5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7dmFyIG49aS5vdChlKTtuJiYodC5jdXJyZW50JiZVaShuLnRhcmdldCkmJihuPW5ldyBtaShuLnRhcmdldC5wYXRoKSxudWxsIT09aS5ILmdldChuKXx8aS5hdChlLG4pfHxpLnR0KGUsbixPaS5uZXdOb0RvY3VtZW50KG4scikpKSx0Lk8mJihvLnNldChlLHQuTSgpKSx0LkwoKSkpfSk7dmFyIHM9QnMoKTt0aGlzLkouZm9yRWFjaChmdW5jdGlvbih0LGUpe3ZhciBuPSEwO2UuZm9yRWFjaFdoaWxlKGZ1bmN0aW9uKHQpe3Q9aS5vdCh0KTtyZXR1cm4hdHx8Mj09PXQucHVycG9zZXx8KG49ITEpfSksbiYmKHM9cy5hZGQodCkpfSk7dmFyIHQ9bmV3IEtzKHIsbyx0aGlzLlksdGhpcy5ILHMpO3JldHVybiB0aGlzLkg9UHMsdGhpcy5KPXRhKCksdGhpcy5ZPW5ldyBPcyhxciksdH0sWHMucHJvdG90eXBlLlo9ZnVuY3Rpb24odCxlKXt2YXIgbjt0aGlzLnN0KHQpJiYobj10aGlzLmF0KHQsZS5rZXkpPzI6MCx0aGlzLm50KHQpLkIoZS5rZXksbiksdGhpcy5IPXRoaXMuSC5pbnNlcnQoZS5rZXksZSksdGhpcy5KPXRoaXMuSi5pbnNlcnQoZS5rZXksdGhpcy5odChlLmtleSkuYWRkKHQpKSl9LFhzLnByb3RvdHlwZS50dD1mdW5jdGlvbih0LGUsbil7dmFyIHI7dGhpcy5zdCh0KSYmKHI9dGhpcy5udCh0KSx0aGlzLmF0KHQsZSk/ci5CKGUsMSk6ci5xKGUpLHRoaXMuSj10aGlzLkouaW5zZXJ0KGUsdGhpcy5odChlKS5kZWxldGUodCkpLG4mJih0aGlzLkg9dGhpcy5ILmluc2VydChlLG4pKSl9LFhzLnByb3RvdHlwZS5yZW1vdmVUYXJnZXQ9ZnVuY3Rpb24odCl7dGhpcy5HLmRlbGV0ZSh0KX0sWHMucHJvdG90eXBlLmN0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubnQodCkuTSgpO3JldHVybiB0aGlzLlcuZ2V0UmVtb3RlS2V5c0ZvclRhcmdldCh0KS5zaXplK2UuYWRkZWREb2N1bWVudHMuc2l6ZS1lLnJlbW92ZWREb2N1bWVudHMuc2l6ZX0sWHMucHJvdG90eXBlLlU9ZnVuY3Rpb24odCl7dGhpcy5udCh0KS5VKCl9LFhzLnByb3RvdHlwZS5udD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLkcuZ2V0KHQpO3JldHVybiBlfHwoZT1uZXcgV3MsdGhpcy5HLnNldCh0LGUpKSxlfSxYcy5wcm90b3R5cGUuaHQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5KLmdldCh0KTtyZXR1cm4gZXx8KGU9bmV3IE9zKHFyKSx0aGlzLko9dGhpcy5KLmluc2VydCh0LGUpKSxlfSxYcy5wcm90b3R5cGUuc3Q9ZnVuY3Rpb24odCl7dmFyIGU9bnVsbCE9PXRoaXMub3QodCk7cmV0dXJuIGV8fHhyKFwiV2F0Y2hDaGFuZ2VBZ2dyZWdhdG9yXCIsXCJEZXRlY3RlZCBpbmFjdGl2ZSB0YXJnZXRcIix0KSxlfSxYcy5wcm90b3R5cGUub3Q9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5HLmdldCh0KTtyZXR1cm4gZSYmZS5rP251bGw6dGhpcy5XLmx0KHQpfSxYcy5wcm90b3R5cGUuaXQ9ZnVuY3Rpb24oZSl7dmFyIG49dGhpczt0aGlzLkcuc2V0KGUsbmV3IFdzKSx0aGlzLlcuZ2V0UmVtb3RlS2V5c0ZvclRhcmdldChlKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe24udHQoZSx0LG51bGwpfSl9LFhzLnByb3RvdHlwZS5hdD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLlcuZ2V0UmVtb3RlS2V5c0ZvclRhcmdldCh0KS5oYXMoZSl9LFhzKTtmdW5jdGlvbiBYcyh0KXt0aGlzLlc9dCx0aGlzLkc9bmV3IE1hcCx0aGlzLkg9UHMsdGhpcy5KPXRhKCksdGhpcy5ZPW5ldyBPcyhxcil9ZnVuY3Rpb24gSnMoKXt0aGlzLlM9MCx0aGlzLkQ9ZWEoKSx0aGlzLkM9bmkuRU1QVFlfQllURV9TVFJJTkcsdGhpcy5OPSExLHRoaXMuRj0hMH1mdW5jdGlvbiAkcyh0LGUsbixyLGkpe3RoaXMucmVzdW1lVG9rZW49dCx0aGlzLmN1cnJlbnQ9ZSx0aGlzLmFkZGVkRG9jdW1lbnRzPW4sdGhpcy5tb2RpZmllZERvY3VtZW50cz1yLHRoaXMucmVtb3ZlZERvY3VtZW50cz1pfWZ1bmN0aW9uIFpzKHQsZSxuLHIsaSl7dGhpcy5zbmFwc2hvdFZlcnNpb249dCx0aGlzLnRhcmdldENoYW5nZXM9ZSx0aGlzLnRhcmdldE1pc21hdGNoZXM9bix0aGlzLmRvY3VtZW50VXBkYXRlcz1yLHRoaXMucmVzb2x2ZWRMaW1ib0RvY3VtZW50cz1pfWZ1bmN0aW9uIHRhKCl7cmV0dXJuIG5ldyBOcyhtaS5jb21wYXJhdG9yKX1mdW5jdGlvbiBlYSgpe3JldHVybiBuZXcgTnMobWkuY29tcGFyYXRvcil9dmFyIG5hPXthc2M6XCJBU0NFTkRJTkdcIixkZXNjOlwiREVTQ0VORElOR1wifSxyYT17XCI8XCI6XCJMRVNTX1RIQU5cIixcIjw9XCI6XCJMRVNTX1RIQU5fT1JfRVFVQUxcIixcIj5cIjpcIkdSRUFURVJfVEhBTlwiLFwiPj1cIjpcIkdSRUFURVJfVEhBTl9PUl9FUVVBTFwiLFwiPT1cIjpcIkVRVUFMXCIsXCIhPVwiOlwiTk9UX0VRVUFMXCIsXCJhcnJheS1jb250YWluc1wiOlwiQVJSQVlfQ09OVEFJTlNcIixpbjpcIklOXCIsXCJub3QtaW5cIjpcIk5PVF9JTlwiLFwiYXJyYXktY29udGFpbnMtYW55XCI6XCJBUlJBWV9DT05UQUlOU19BTllcIn0saWE9ZnVuY3Rpb24odCxlKXt0aGlzLmRhdGFiYXNlSWQ9dCx0aGlzLkk9ZX07ZnVuY3Rpb24gb2EodCxlKXtyZXR1cm4gdC5JP25ldyBEYXRlKDFlMyplLnNlY29uZHMpLnRvSVNPU3RyaW5nKCkucmVwbGFjZSgvXFwuXFxkKi8sXCJcIikucmVwbGFjZShcIlpcIixcIlwiKStcIi5cIisoXCIwMDAwMDAwMDBcIitlLm5hbm9zZWNvbmRzKS5zbGljZSgtOSkrXCJaXCI6e3NlY29uZHM6XCJcIitlLnNlY29uZHMsbmFub3M6ZS5uYW5vc2Vjb25kc319ZnVuY3Rpb24gc2EodCxlKXtyZXR1cm4gdC5JP2UudG9CYXNlNjQoKTplLnRvVWludDhBcnJheSgpfWZ1bmN0aW9uIGFhKHQpe3JldHVybiBGcighIXQpLEdyLmZyb21UaW1lc3RhbXAoKHQ9Y2kodCksbmV3IEtyKHQuc2Vjb25kcyx0Lm5hbm9zKSkpfWZ1bmN0aW9uIHVhKHQsZSl7cmV0dXJuIG5ldyAkcihbXCJwcm9qZWN0c1wiLHQucHJvamVjdElkLFwiZGF0YWJhc2VzXCIsdC5kYXRhYmFzZV0pLmNoaWxkKFwiZG9jdW1lbnRzXCIpLmNoaWxkKGUpLmNhbm9uaWNhbFN0cmluZygpfWZ1bmN0aW9uIGNhKHQpe3Q9JHIuZnJvbVN0cmluZyh0KTtyZXR1cm4gRnIoa2EodCkpLHR9ZnVuY3Rpb24gaGEodCxlKXtyZXR1cm4gdWEodC5kYXRhYmFzZUlkLGUucGF0aCl9ZnVuY3Rpb24gbGEodCxlKXtlPWNhKGUpO2lmKGUuZ2V0KDEpIT09dC5kYXRhYmFzZUlkLnByb2plY3RJZCl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIlRyaWVkIHRvIGRlc2VyaWFsaXplIGtleSBmcm9tIGRpZmZlcmVudCBwcm9qZWN0OiBcIitlLmdldCgxKStcIiB2cyBcIit0LmRhdGFiYXNlSWQucHJvamVjdElkKTtpZihlLmdldCgzKSE9PXQuZGF0YWJhc2VJZC5kYXRhYmFzZSl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIlRyaWVkIHRvIGRlc2VyaWFsaXplIGtleSBmcm9tIGRpZmZlcmVudCBkYXRhYmFzZTogXCIrZS5nZXQoMykrXCIgdnMgXCIrdC5kYXRhYmFzZUlkLmRhdGFiYXNlKTtyZXR1cm4gbmV3IG1pKHlhKGUpKX1mdW5jdGlvbiBmYSh0LGUpe3JldHVybiB1YSh0LmRhdGFiYXNlSWQsZSl9ZnVuY3Rpb24gZGEodCl7dD1jYSh0KTtyZXR1cm4gND09PXQubGVuZ3RoPyRyLmVtcHR5UGF0aCgpOnlhKHQpfWZ1bmN0aW9uIHBhKHQpe3JldHVybiBuZXcgJHIoW1wicHJvamVjdHNcIix0LmRhdGFiYXNlSWQucHJvamVjdElkLFwiZGF0YWJhc2VzXCIsdC5kYXRhYmFzZUlkLmRhdGFiYXNlXSkuY2Fub25pY2FsU3RyaW5nKCl9ZnVuY3Rpb24geWEodCl7cmV0dXJuIEZyKDQ8dC5sZW5ndGgmJlwiZG9jdW1lbnRzXCI9PT10LmdldCg0KSksdC5wb3BGaXJzdCg1KX1mdW5jdGlvbiBnYSh0LGUsbil7cmV0dXJue25hbWU6aGEodCxlKSxmaWVsZHM6bi50b1Byb3RvKCkubWFwVmFsdWUuZmllbGRzfX1mdW5jdGlvbiBtYSh0LGUsbil7dmFyIHI9bGEodCxlLm5hbWUpLHQ9YWEoZS51cGRhdGVUaW1lKSxlPW5ldyBSaSh7bWFwVmFsdWU6e2ZpZWxkczplLmZpZWxkc319KSxlPU9pLm5ld0ZvdW5kRG9jdW1lbnQocix0LGUpO3JldHVybiBuJiZlLnNldEhhc0NvbW1pdHRlZE11dGF0aW9ucygpLG4/ZS5zZXRIYXNDb21taXR0ZWRNdXRhdGlvbnMoKTplfWZ1bmN0aW9uIHZhKHQsZSl7dmFyIG4scixpO2lmKGUgaW5zdGFuY2VvZiBjcyluPXt1cGRhdGU6Z2EodCxlLmtleSxlLnZhbHVlKX07ZWxzZSBpZihlIGluc3RhbmNlb2Ygd3Mpbj17ZGVsZXRlOmhhKHQsZS5rZXkpfTtlbHNlIGlmKGUgaW5zdGFuY2VvZiBocyluPXt1cGRhdGU6Z2EodCxlLmtleSxlLmRhdGEpLHVwZGF0ZU1hc2s6KGk9ZS5maWVsZE1hc2sscj1bXSxpLmZpZWxkcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiByLnB1c2godC5jYW5vbmljYWxTdHJpbmcoKSl9KSx7ZmllbGRQYXRoczpyfSl9O2Vsc2V7aWYoIShlIGluc3RhbmNlb2YgSXMpKXJldHVybiBNcigpO249e3ZlcmlmeTpoYSh0LGUua2V5KX19cmV0dXJuIDA8ZS5maWVsZFRyYW5zZm9ybXMubGVuZ3RoJiYobi51cGRhdGVUcmFuc2Zvcm1zPWUuZmllbGRUcmFuc2Zvcm1zLm1hcChmdW5jdGlvbih0KXt2YXIgZT10LnRyYW5zZm9ybTtpZihlIGluc3RhbmNlb2YgVW8pcmV0dXJue2ZpZWxkUGF0aDp0LmZpZWxkLmNhbm9uaWNhbFN0cmluZygpLHNldFRvU2VydmVyVmFsdWU6XCJSRVFVRVNUX1RJTUVcIn07aWYoZSBpbnN0YW5jZW9mIHFvKXJldHVybntmaWVsZFBhdGg6dC5maWVsZC5jYW5vbmljYWxTdHJpbmcoKSxhcHBlbmRNaXNzaW5nRWxlbWVudHM6e3ZhbHVlczplLmVsZW1lbnRzfX07aWYoZSBpbnN0YW5jZW9mIFFvKXJldHVybntmaWVsZFBhdGg6dC5maWVsZC5jYW5vbmljYWxTdHJpbmcoKSxyZW1vdmVBbGxGcm9tQXJyYXk6e3ZhbHVlczplLmVsZW1lbnRzfX07aWYoZSBpbnN0YW5jZW9mIFlvKXJldHVybntmaWVsZFBhdGg6dC5maWVsZC5jYW5vbmljYWxTdHJpbmcoKSxpbmNyZW1lbnQ6ZS5BfTt0aHJvdyBNcigpfSkpLGUucHJlY29uZGl0aW9uLmlzTm9uZXx8KG4uY3VycmVudERvY3VtZW50PXZvaWQgMCE9PShpPWUucHJlY29uZGl0aW9uKS51cGRhdGVUaW1lP3t1cGRhdGVUaW1lOihlPXQsdD1pLnVwZGF0ZVRpbWUsb2EoZSx0LnRvVGltZXN0YW1wKCkpKX06dm9pZCAwIT09aS5leGlzdHM/e2V4aXN0czppLmV4aXN0c306TXIoKSksbn1mdW5jdGlvbiBiYShlLHQpe3ZhciBuPXQuY3VycmVudERvY3VtZW50P3ZvaWQgMCE9PShzPXQuY3VycmVudERvY3VtZW50KS51cGRhdGVUaW1lP2VzLnVwZGF0ZVRpbWUoYWEocy51cGRhdGVUaW1lKSk6dm9pZCAwIT09cy5leGlzdHM/ZXMuZXhpc3RzKHMuZXhpc3RzKTplcy5ub25lKCk6ZXMubm9uZSgpLHI9dC51cGRhdGVUcmFuc2Zvcm1zP3QudXBkYXRlVHJhbnNmb3Jtcy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7dmFyIG4scj1udWxsO1wic2V0VG9TZXJ2ZXJWYWx1ZVwiaW4gZT8oRnIoXCJSRVFVRVNUX1RJTUVcIj09PWUuc2V0VG9TZXJ2ZXJWYWx1ZSkscj1uZXcgVW8pOlwiYXBwZW5kTWlzc2luZ0VsZW1lbnRzXCJpbiBlPyhuPWUuYXBwZW5kTWlzc2luZ0VsZW1lbnRzLnZhbHVlc3x8W10scj1uZXcgcW8obikpOlwicmVtb3ZlQWxsRnJvbUFycmF5XCJpbiBlPyhuPWUucmVtb3ZlQWxsRnJvbUFycmF5LnZhbHVlc3x8W10scj1uZXcgUW8obikpOlwiaW5jcmVtZW50XCJpbiBlP3I9bmV3IFlvKHQsZS5pbmNyZW1lbnQpOk1yKCk7ZT10aS5mcm9tU2VydmVyRm9ybWF0KGUuZmllbGRQYXRoKTtyZXR1cm4gbmV3IHRzKGUscil9KGUsdCl9KTpbXTtpZih0LnVwZGF0ZSl7dC51cGRhdGUubmFtZTt2YXIgaT1sYShlLHQudXBkYXRlLm5hbWUpLG89bmV3IFJpKHttYXBWYWx1ZTp7ZmllbGRzOnQudXBkYXRlLmZpZWxkc319KTtpZih0LnVwZGF0ZU1hc2spe3ZhciBzPShzPXQudXBkYXRlTWFzay5maWVsZFBhdGhzfHxbXSxuZXcgZWkocy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHRpLmZyb21TZXJ2ZXJGb3JtYXQodCl9KSkpO3JldHVybiBuZXcgaHMoaSxvLHMsbixyKX1yZXR1cm4gbmV3IGNzKGksbyxuLHIpfWlmKHQuZGVsZXRlKXtyPWxhKGUsdC5kZWxldGUpO3JldHVybiBuZXcgd3MocixuKX1pZih0LnZlcmlmeSl7dD1sYShlLHQudmVyaWZ5KTtyZXR1cm4gbmV3IElzKHQsbil9cmV0dXJuIE1yKCl9ZnVuY3Rpb24gd2EodCxlKXtyZXR1cm57ZG9jdW1lbnRzOltmYSh0LGUucGF0aCldfX1mdW5jdGlvbiBJYSh0LGUpe3ZhciBuPXtzdHJ1Y3R1cmVkUXVlcnk6e319LHI9ZS5wYXRoO251bGwhPT1lLmNvbGxlY3Rpb25Hcm91cD8obi5wYXJlbnQ9ZmEodCxyKSxuLnN0cnVjdHVyZWRRdWVyeS5mcm9tPVt7Y29sbGVjdGlvbklkOmUuY29sbGVjdGlvbkdyb3VwLGFsbERlc2NlbmRhbnRzOiEwfV0pOihuLnBhcmVudD1mYSh0LHIucG9wTGFzdCgpKSxuLnN0cnVjdHVyZWRRdWVyeS5mcm9tPVt7Y29sbGVjdGlvbklkOnIubGFzdFNlZ21lbnQoKX1dKTtyPWZ1bmN0aW9uKHQpe2lmKDAhPT10Lmxlbmd0aCl7dD10Lm1hcChmdW5jdGlvbih0KXtpZihcIj09XCI9PT10Lm9wKXtpZihraSh0LnZhbHVlKSlyZXR1cm57dW5hcnlGaWx0ZXI6e2ZpZWxkOlNhKHQuZmllbGQpLG9wOlwiSVNfTkFOXCJ9fTtpZihBaSh0LnZhbHVlKSlyZXR1cm57dW5hcnlGaWx0ZXI6e2ZpZWxkOlNhKHQuZmllbGQpLG9wOlwiSVNfTlVMTFwifX19ZWxzZSBpZihcIiE9XCI9PT10Lm9wKXtpZihraSh0LnZhbHVlKSlyZXR1cm57dW5hcnlGaWx0ZXI6e2ZpZWxkOlNhKHQuZmllbGQpLG9wOlwiSVNfTk9UX05BTlwifX07aWYoQWkodC52YWx1ZSkpcmV0dXJue3VuYXJ5RmlsdGVyOntmaWVsZDpTYSh0LmZpZWxkKSxvcDpcIklTX05PVF9OVUxMXCJ9fX1yZXR1cm57ZmllbGRGaWx0ZXI6e2ZpZWxkOlNhKHQuZmllbGQpLG9wOihlPXQub3AscmFbZV0pLHZhbHVlOnQudmFsdWV9fTt2YXIgZX0pO3JldHVybiAxPT09dC5sZW5ndGg/dFswXTp7Y29tcG9zaXRlRmlsdGVyOntvcDpcIkFORFwiLGZpbHRlcnM6dH19fX0oZS5maWx0ZXJzKTtyJiYobi5zdHJ1Y3R1cmVkUXVlcnkud2hlcmU9cik7cj1mdW5jdGlvbih0KXtpZigwIT09dC5sZW5ndGgpcmV0dXJuIHQubWFwKGZ1bmN0aW9uKHQpe3JldHVybntmaWVsZDpTYSgodD10KS5maWVsZCksZGlyZWN0aW9uOih0PXQuZGlyLG5hW3RdKX19KX0oZS5vcmRlckJ5KTtyJiYobi5zdHJ1Y3R1cmVkUXVlcnkub3JkZXJCeT1yKTtyPWUubGltaXQscj10Lkl8fHBpKHIpP3I6e3ZhbHVlOnJ9O3JldHVybiBudWxsIT09ciYmKG4uc3RydWN0dXJlZFF1ZXJ5LmxpbWl0PXIpLGUuc3RhcnRBdCYmKG4uc3RydWN0dXJlZFF1ZXJ5LnN0YXJ0QXQ9VGEoZS5zdGFydEF0KSksZS5lbmRBdCYmKG4uc3RydWN0dXJlZFF1ZXJ5LmVuZEF0PVRhKGUuZW5kQXQpKSxufWZ1bmN0aW9uIEVhKHQpe3ZhciBlPWRhKHQucGFyZW50KSxuPXQuc3RydWN0dXJlZFF1ZXJ5LHI9bi5mcm9tP24uZnJvbS5sZW5ndGg6MCxpPW51bGw7MDxyJiYoRnIoMT09PXIpLChhPW4uZnJvbVswXSkuYWxsRGVzY2VuZGFudHM/aT1hLmNvbGxlY3Rpb25JZDplPWUuY2hpbGQoYS5jb2xsZWN0aW9uSWQpKTt2YXIgbz1bXTtuLndoZXJlJiYobz1mdW5jdGlvbiBlKHQpe3JldHVybiB0P3ZvaWQgMCE9PXQudW5hcnlGaWx0ZXI/W0FhKHQpXTp2b2lkIDAhPT10LmZpZWxkRmlsdGVyP1tEYSh0KV06dm9pZCAwIT09dC5jb21wb3NpdGVGaWx0ZXI/dC5jb21wb3NpdGVGaWx0ZXIuZmlsdGVycy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGUodCl9KS5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5jb25jYXQoZSl9KTpNcigpOltdfShuLndoZXJlKSk7dmFyIHM9W10sdD1udWxsLHI9bnVsbCxhPW51bGw7cmV0dXJuIHZvKGUsaSxzPW4ub3JkZXJCeT9uLm9yZGVyQnkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgcG8oTmEoKGU9dCkuZmllbGQpLGZ1bmN0aW9uKCl7c3dpdGNoKGUuZGlyZWN0aW9uKXtjYXNlXCJBU0NFTkRJTkdcIjpyZXR1cm5cImFzY1wiO2Nhc2VcIkRFU0NFTkRJTkdcIjpyZXR1cm5cImRlc2NcIjtkZWZhdWx0OnJldHVybn19KCkpO3ZhciBlfSk6cyxvLHQ9bi5saW1pdD9waShvPVwib2JqZWN0XCI9PXR5cGVvZihvPW4ubGltaXQpP28udmFsdWU6byk/bnVsbDpvOnQsXCJGXCIscj1uLnN0YXJ0QXQ/X2Eobi5zdGFydEF0KTpyLGE9bi5lbmRBdD9fYShuLmVuZEF0KTphKX1mdW5jdGlvbiBUYSh0KXtyZXR1cm57YmVmb3JlOnQuYmVmb3JlLHZhbHVlczp0LnBvc2l0aW9ufX1mdW5jdGlvbiBfYSh0KXt2YXIgZT0hIXQuYmVmb3JlLHQ9dC52YWx1ZXN8fFtdO3JldHVybiBuZXcgYW8odCxlKX1mdW5jdGlvbiBTYSh0KXtyZXR1cm57ZmllbGRQYXRoOnQuY2Fub25pY2FsU3RyaW5nKCl9fWZ1bmN0aW9uIE5hKHQpe3JldHVybiB0aS5mcm9tU2VydmVyRm9ybWF0KHQuZmllbGRQYXRoKX1mdW5jdGlvbiBEYSh0KXtyZXR1cm4gQmkuY3JlYXRlKE5hKHQuZmllbGRGaWx0ZXIuZmllbGQpLGZ1bmN0aW9uKCl7c3dpdGNoKHQuZmllbGRGaWx0ZXIub3Ape2Nhc2VcIkVRVUFMXCI6cmV0dXJuXCI9PVwiO2Nhc2VcIk5PVF9FUVVBTFwiOnJldHVyblwiIT1cIjtjYXNlXCJHUkVBVEVSX1RIQU5cIjpyZXR1cm5cIj5cIjtjYXNlXCJHUkVBVEVSX1RIQU5fT1JfRVFVQUxcIjpyZXR1cm5cIj49XCI7Y2FzZVwiTEVTU19USEFOXCI6cmV0dXJuXCI8XCI7Y2FzZVwiTEVTU19USEFOX09SX0VRVUFMXCI6cmV0dXJuXCI8PVwiO2Nhc2VcIkFSUkFZX0NPTlRBSU5TXCI6cmV0dXJuXCJhcnJheS1jb250YWluc1wiO2Nhc2VcIklOXCI6cmV0dXJuXCJpblwiO2Nhc2VcIk5PVF9JTlwiOnJldHVyblwibm90LWluXCI7Y2FzZVwiQVJSQVlfQ09OVEFJTlNfQU5ZXCI6cmV0dXJuXCJhcnJheS1jb250YWlucy1hbnlcIjtjYXNlXCJPUEVSQVRPUl9VTlNQRUNJRklFRFwiOmRlZmF1bHQ6cmV0dXJuIE1yKCl9fSgpLHQuZmllbGRGaWx0ZXIudmFsdWUpfWZ1bmN0aW9uIEFhKHQpe3N3aXRjaCh0LnVuYXJ5RmlsdGVyLm9wKXtjYXNlXCJJU19OQU5cIjp2YXIgZT1OYSh0LnVuYXJ5RmlsdGVyLmZpZWxkKTtyZXR1cm4gQmkuY3JlYXRlKGUsXCI9PVwiLHtkb3VibGVWYWx1ZTpOYU59KTtjYXNlXCJJU19OVUxMXCI6ZT1OYSh0LnVuYXJ5RmlsdGVyLmZpZWxkKTtyZXR1cm4gQmkuY3JlYXRlKGUsXCI9PVwiLHtudWxsVmFsdWU6XCJOVUxMX1ZBTFVFXCJ9KTtjYXNlXCJJU19OT1RfTkFOXCI6dmFyIG49TmEodC51bmFyeUZpbHRlci5maWVsZCk7cmV0dXJuIEJpLmNyZWF0ZShuLFwiIT1cIix7ZG91YmxlVmFsdWU6TmFOfSk7Y2FzZVwiSVNfTk9UX05VTExcIjpuPU5hKHQudW5hcnlGaWx0ZXIuZmllbGQpO3JldHVybiBCaS5jcmVhdGUobixcIiE9XCIse251bGxWYWx1ZTpcIk5VTExfVkFMVUVcIn0pO2Nhc2VcIk9QRVJBVE9SX1VOU1BFQ0lGSUVEXCI6ZGVmYXVsdDpyZXR1cm4gTXIoKX19ZnVuY3Rpb24ga2EodCl7cmV0dXJuIDQ8PXQubGVuZ3RoJiZcInByb2plY3RzXCI9PT10LmdldCgwKSYmXCJkYXRhYmFzZXNcIj09PXQuZ2V0KDIpfWZ1bmN0aW9uIENhKHQpe2Zvcih2YXIgZT1cIlwiLG49MDtuPHQubGVuZ3RoO24rKykwPGUubGVuZ3RoJiYoZT1SYShlKSksZT1mdW5jdGlvbih0LGUpe2Zvcih2YXIgbj1lLHI9dC5sZW5ndGgsaT0wO2k8cjtpKyspe3ZhciBvPXQuY2hhckF0KGkpO3N3aXRjaChvKXtjYXNlXCJcXDBcIjpuKz1cIlxceDAxXFx4MTBcIjticmVhaztjYXNlXCJcXHgwMVwiOm4rPVwiXFx4MDFcXHgxMVwiO2JyZWFrO2RlZmF1bHQ6bis9b319cmV0dXJuIG59KHQuZ2V0KG4pLGUpO3JldHVybiBSYShlKX1mdW5jdGlvbiBSYSh0KXtyZXR1cm4gdCtcIlxceDAxXFx4MDFcIn1mdW5jdGlvbiB4YSh0KXt2YXIgZT10Lmxlbmd0aDtpZihGcigyPD1lKSwyPT09ZSlyZXR1cm4gRnIoXCJcXHgwMVwiPT09dC5jaGFyQXQoMCkmJlwiXFx4MDFcIj09PXQuY2hhckF0KDEpKSwkci5lbXB0eVBhdGgoKTtmb3IodmFyIG49ZS0yLHI9W10saT1cIlwiLG89MDtvPGU7KXt2YXIgcz10LmluZGV4T2YoXCJcXHgwMVwiLG8pO3N3aXRjaCgoczwwfHxuPHMpJiZNcigpLHQuY2hhckF0KHMrMSkpe2Nhc2VcIlxceDAxXCI6dmFyIGE9dC5zdWJzdHJpbmcobyxzKSx1PXZvaWQgMDswPT09aS5sZW5ndGg/dT1hOih1PWkrPWEsaT1cIlwiKSxyLnB1c2godSk7YnJlYWs7Y2FzZVwiXFx4MTBcIjppKz10LnN1YnN0cmluZyhvLHMpLGkrPVwiXFwwXCI7YnJlYWs7Y2FzZVwiXFx4MTFcIjppKz10LnN1YnN0cmluZyhvLHMrMSk7YnJlYWs7ZGVmYXVsdDpNcigpfW89cysyfXJldHVybiBuZXcgJHIocil9ZnVuY3Rpb24gT2EodCxlLG4pe3RoaXMub3duZXJJZD10LHRoaXMuYWxsb3dUYWJTeW5jaHJvbml6YXRpb249ZSx0aGlzLmxlYXNlVGltZXN0YW1wTXM9bn12YXIgTGE9ZnVuY3Rpb24odCxlKXt0aGlzLnNlY29uZHM9dCx0aGlzLm5hbm9zZWNvbmRzPWV9O09hLnN0b3JlPVwib3duZXJcIixPYS5rZXk9XCJvd25lclwiO2Z1bmN0aW9uIFBhKHQsZSxuKXt0aGlzLnVzZXJJZD10LHRoaXMubGFzdEFja25vd2xlZGdlZEJhdGNoSWQ9ZSx0aGlzLmxhc3RTdHJlYW1Ub2tlbj1ufVBhLnN0b3JlPVwibXV0YXRpb25RdWV1ZXNcIixQYS5rZXlQYXRoPVwidXNlcklkXCI7ZnVuY3Rpb24gTWEodCxlLG4scixpKXt0aGlzLnVzZXJJZD10LHRoaXMuYmF0Y2hJZD1lLHRoaXMubG9jYWxXcml0ZVRpbWVNcz1uLHRoaXMuYmFzZU11dGF0aW9ucz1yLHRoaXMubXV0YXRpb25zPWl9TWEuc3RvcmU9XCJtdXRhdGlvbnNcIixNYS5rZXlQYXRoPVwiYmF0Y2hJZFwiLE1hLnVzZXJNdXRhdGlvbnNJbmRleD1cInVzZXJNdXRhdGlvbnNJbmRleFwiLE1hLnVzZXJNdXRhdGlvbnNLZXlQYXRoPVtcInVzZXJJZFwiLFwiYmF0Y2hJZFwiXTt2YXIgRmE9KFZhLnByZWZpeEZvclVzZXI9ZnVuY3Rpb24odCl7cmV0dXJuW3RdfSxWYS5wcmVmaXhGb3JQYXRoPWZ1bmN0aW9uKHQsZSl7cmV0dXJuW3QsQ2EoZSldfSxWYS5rZXk9ZnVuY3Rpb24odCxlLG4pe3JldHVyblt0LENhKGUpLG5dfSxWYSk7ZnVuY3Rpb24gVmEoKXt9RmEuc3RvcmU9XCJkb2N1bWVudE11dGF0aW9uc1wiLEZhLlBMQUNFSE9MREVSPW5ldyBGYTtmdW5jdGlvbiBVYSh0LGUpe3RoaXMucGF0aD10LHRoaXMucmVhZFRpbWU9ZX1mdW5jdGlvbiBxYSh0LGUpe3RoaXMucGF0aD10LHRoaXMudmVyc2lvbj1lfXZhciBCYT1mdW5jdGlvbih0LGUsbixyLGksbyl7dGhpcy51bmtub3duRG9jdW1lbnQ9dCx0aGlzLm5vRG9jdW1lbnQ9ZSx0aGlzLmRvY3VtZW50PW4sdGhpcy5oYXNDb21taXR0ZWRNdXRhdGlvbnM9cix0aGlzLnJlYWRUaW1lPWksdGhpcy5wYXJlbnRQYXRoPW99O0JhLnN0b3JlPVwicmVtb3RlRG9jdW1lbnRzXCIsQmEucmVhZFRpbWVJbmRleD1cInJlYWRUaW1lSW5kZXhcIixCYS5yZWFkVGltZUluZGV4UGF0aD1cInJlYWRUaW1lXCIsQmEuY29sbGVjdGlvblJlYWRUaW1lSW5kZXg9XCJjb2xsZWN0aW9uUmVhZFRpbWVJbmRleFwiLEJhLmNvbGxlY3Rpb25SZWFkVGltZUluZGV4UGF0aD1bXCJwYXJlbnRQYXRoXCIsXCJyZWFkVGltZVwiXTtmdW5jdGlvbiBqYSh0KXt0aGlzLmJ5dGVTaXplPXR9amEuc3RvcmU9XCJyZW1vdGVEb2N1bWVudEdsb2JhbFwiLGphLmtleT1cInJlbW90ZURvY3VtZW50R2xvYmFsS2V5XCI7ZnVuY3Rpb24gS2EodCxlLG4scixpLG8scyl7dGhpcy50YXJnZXRJZD10LHRoaXMuY2Fub25pY2FsSWQ9ZSx0aGlzLnJlYWRUaW1lPW4sdGhpcy5yZXN1bWVUb2tlbj1yLHRoaXMubGFzdExpc3RlblNlcXVlbmNlTnVtYmVyPWksdGhpcy5sYXN0TGltYm9GcmVlU25hcHNob3RWZXJzaW9uPW8sdGhpcy5xdWVyeT1zfUthLnN0b3JlPVwidGFyZ2V0c1wiLEthLmtleVBhdGg9XCJ0YXJnZXRJZFwiLEthLnF1ZXJ5VGFyZ2V0c0luZGV4TmFtZT1cInF1ZXJ5VGFyZ2V0c0luZGV4XCIsS2EucXVlcnlUYXJnZXRzS2V5UGF0aD1bXCJjYW5vbmljYWxJZFwiLFwidGFyZ2V0SWRcIl07dmFyIEdhPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLnRhcmdldElkPXQsdGhpcy5wYXRoPWUsdGhpcy5zZXF1ZW5jZU51bWJlcj1ufTtHYS5zdG9yZT1cInRhcmdldERvY3VtZW50c1wiLEdhLmtleVBhdGg9W1widGFyZ2V0SWRcIixcInBhdGhcIl0sR2EuZG9jdW1lbnRUYXJnZXRzSW5kZXg9XCJkb2N1bWVudFRhcmdldHNJbmRleFwiLEdhLmRvY3VtZW50VGFyZ2V0c0tleVBhdGg9W1wicGF0aFwiLFwidGFyZ2V0SWRcIl07ZnVuY3Rpb24gUWEodCxlLG4scil7dGhpcy5oaWdoZXN0VGFyZ2V0SWQ9dCx0aGlzLmhpZ2hlc3RMaXN0ZW5TZXF1ZW5jZU51bWJlcj1lLHRoaXMubGFzdFJlbW90ZVNuYXBzaG90VmVyc2lvbj1uLHRoaXMudGFyZ2V0Q291bnQ9cn1RYS5rZXk9XCJ0YXJnZXRHbG9iYWxLZXlcIixRYS5zdG9yZT1cInRhcmdldEdsb2JhbFwiO2Z1bmN0aW9uIHphKHQsZSl7dGhpcy5jb2xsZWN0aW9uSWQ9dCx0aGlzLnBhcmVudD1lfXphLnN0b3JlPVwiY29sbGVjdGlvblBhcmVudHNcIix6YS5rZXlQYXRoPVtcImNvbGxlY3Rpb25JZFwiLFwicGFyZW50XCJdO2Z1bmN0aW9uIEhhKHQsZSxuLHIpe3RoaXMuY2xpZW50SWQ9dCx0aGlzLnVwZGF0ZVRpbWVNcz1lLHRoaXMubmV0d29ya0VuYWJsZWQ9bix0aGlzLmluRm9yZWdyb3VuZD1yfUhhLnN0b3JlPVwiY2xpZW50TWV0YWRhdGFcIixIYS5rZXlQYXRoPVwiY2xpZW50SWRcIjtmdW5jdGlvbiBXYSh0LGUsbil7dGhpcy5idW5kbGVJZD10LHRoaXMuY3JlYXRlVGltZT1lLHRoaXMudmVyc2lvbj1ufVdhLnN0b3JlPVwiYnVuZGxlc1wiLFdhLmtleVBhdGg9XCJidW5kbGVJZFwiO2Z1bmN0aW9uIFlhKHQsZSxuKXt0aGlzLm5hbWU9dCx0aGlzLnJlYWRUaW1lPWUsdGhpcy5idW5kbGVkUXVlcnk9bn1ZYS5zdG9yZT1cIm5hbWVkUXVlcmllc1wiLFlhLmtleVBhdGg9XCJuYW1lXCI7dmFyIFhhLEphPXMocyhbXSxzKHMoW10scyhzKFtdLHMocyhbXSxbUGEuc3RvcmUsTWEuc3RvcmUsRmEuc3RvcmUsQmEuc3RvcmUsS2Euc3RvcmUsT2Euc3RvcmUsUWEuc3RvcmUsR2Euc3RvcmVdKSxbSGEuc3RvcmVdKSksW2phLnN0b3JlXSkpLFt6YS5zdG9yZV0pKSxbV2Euc3RvcmUsWWEuc3RvcmVdKSwkYT1cIlRoZSBjdXJyZW50IHRhYiBpcyBub3QgaW4gdGhlIHJlcXVpcmVkIHN0YXRlIHRvIHBlcmZvcm0gdGhpcyBvcGVyYXRpb24uIEl0IG1pZ2h0IGJlIG5lY2Vzc2FyeSB0byByZWZyZXNoIHRoZSBicm93c2VyIHRhYi5cIixUZT0oaHUucHJvdG90eXBlLmFkZE9uQ29tbWl0dGVkTGlzdGVuZXI9ZnVuY3Rpb24odCl7dGhpcy5vbkNvbW1pdHRlZExpc3RlbmVycy5wdXNoKHQpfSxodS5wcm90b3R5cGUucmFpc2VPbkNvbW1pdHRlZEV2ZW50PWZ1bmN0aW9uKCl7dGhpcy5vbkNvbW1pdHRlZExpc3RlbmVycy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiB0KCl9KX0saHUpLFphPWZ1bmN0aW9uKCl7dmFyIG49dGhpczt0aGlzLnByb21pc2U9bmV3IFByb21pc2UoZnVuY3Rpb24odCxlKXtuLnJlc29sdmU9dCxuLnJlamVjdD1lfSl9LHR1PShjdS5wcm90b3R5cGUuY2F0Y2g9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubmV4dCh2b2lkIDAsdCl9LGN1LnByb3RvdHlwZS5uZXh0PWZ1bmN0aW9uKHIsaSl7dmFyIG89dGhpcztyZXR1cm4gdGhpcy5jYWxsYmFja0F0dGFjaGVkJiZNcigpLHRoaXMuY2FsbGJhY2tBdHRhY2hlZD0hMCx0aGlzLmlzRG9uZT90aGlzLmVycm9yP3RoaXMud3JhcEZhaWx1cmUoaSx0aGlzLmVycm9yKTp0aGlzLndyYXBTdWNjZXNzKHIsdGhpcy5yZXN1bHQpOm5ldyBjdShmdW5jdGlvbihlLG4pe28ubmV4dENhbGxiYWNrPWZ1bmN0aW9uKHQpe28ud3JhcFN1Y2Nlc3Mocix0KS5uZXh0KGUsbil9LG8uY2F0Y2hDYWxsYmFjaz1mdW5jdGlvbih0KXtvLndyYXBGYWlsdXJlKGksdCkubmV4dChlLG4pfX0pfSxjdS5wcm90b3R5cGUudG9Qcm9taXNlPWZ1bmN0aW9uKCl7dmFyIG49dGhpcztyZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24odCxlKXtuLm5leHQodCxlKX0pfSxjdS5wcm90b3R5cGUud3JhcFVzZXJGdW5jdGlvbj1mdW5jdGlvbih0KXt0cnl7dmFyIGU9dCgpO3JldHVybiBlIGluc3RhbmNlb2YgY3U/ZTpjdS5yZXNvbHZlKGUpfWNhdGNoKHQpe3JldHVybiBjdS5yZWplY3QodCl9fSxjdS5wcm90b3R5cGUud3JhcFN1Y2Nlc3M9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdD90aGlzLndyYXBVc2VyRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gdChlKX0pOmN1LnJlc29sdmUoZSl9LGN1LnByb3RvdHlwZS53cmFwRmFpbHVyZT1mdW5jdGlvbih0LGUpe3JldHVybiB0P3RoaXMud3JhcFVzZXJGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiB0KGUpfSk6Y3UucmVqZWN0KGUpfSxjdS5yZXNvbHZlPWZ1bmN0aW9uKG4pe3JldHVybiBuZXcgY3UoZnVuY3Rpb24odCxlKXt0KG4pfSl9LGN1LnJlamVjdD1mdW5jdGlvbihuKXtyZXR1cm4gbmV3IGN1KGZ1bmN0aW9uKHQsZSl7ZShuKX0pfSxjdS53YWl0Rm9yPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgY3UoZnVuY3Rpb24oZSxuKXt2YXIgcj0wLGk9MCxvPSExO3QuZm9yRWFjaChmdW5jdGlvbih0KXsrK3IsdC5uZXh0KGZ1bmN0aW9uKCl7KytpLG8mJmk9PT1yJiZlKCl9LGZ1bmN0aW9uKHQpe3JldHVybiBuKHQpfSl9KSxvPSEwLGk9PT1yJiZlKCl9KX0sY3Uub3I9ZnVuY3Rpb24odCl7Zm9yKHZhciBuPWN1LnJlc29sdmUoITEpLGU9MCxyPXQ7ZTxyLmxlbmd0aDtlKyspIWZ1bmN0aW9uKGUpe249bi5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiB0P2N1LnJlc29sdmUodCk6ZSgpfSl9KHJbZV0pO3JldHVybiBufSxjdS5mb3JFYWNoPWZ1bmN0aW9uKHQsbil7dmFyIHI9dGhpcyxpPVtdO3JldHVybiB0LmZvckVhY2goZnVuY3Rpb24odCxlKXtpLnB1c2gobi5jYWxsKHIsdCxlKSl9KSx0aGlzLndhaXRGb3IoaSl9LGN1KSxldT0odXUub3Blbj1mdW5jdGlvbih0LGUsbixyKXt0cnl7cmV0dXJuIG5ldyB1dShlLHQudHJhbnNhY3Rpb24ocixuKSl9Y2F0Y2godCl7dGhyb3cgbmV3IGl1KGUsdCl9fSxPYmplY3QuZGVmaW5lUHJvcGVydHkodXUucHJvdG90eXBlLFwiZHRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZnQucHJvbWlzZX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSx1dS5wcm90b3R5cGUuYWJvcnQ9ZnVuY3Rpb24odCl7dCYmdGhpcy5mdC5yZWplY3QodCksdGhpcy5hYm9ydGVkfHwoeHIoXCJTaW1wbGVEYlwiLFwiQWJvcnRpbmcgdHJhbnNhY3Rpb246XCIsdD90Lm1lc3NhZ2U6XCJDbGllbnQtaW5pdGlhdGVkIGFib3J0XCIpLHRoaXMuYWJvcnRlZD0hMCx0aGlzLnRyYW5zYWN0aW9uLmFib3J0KCkpfSx1dS5wcm90b3R5cGUuc3RvcmU9ZnVuY3Rpb24odCl7dD10aGlzLnRyYW5zYWN0aW9uLm9iamVjdFN0b3JlKHQpO3JldHVybiBuZXcgZnUodCl9LHV1KSxudT0oYXUuZGVsZXRlPWZ1bmN0aW9uKHQpe3JldHVybiB4cihcIlNpbXBsZURiXCIsXCJSZW1vdmluZyBkYXRhYmFzZTpcIix0KSxwdSh3aW5kb3cuaW5kZXhlZERCLmRlbGV0ZURhdGFiYXNlKHQpKS50b1Byb21pc2UoKX0sYXUueXQ9ZnVuY3Rpb24oKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgaW5kZXhlZERCKXJldHVybiExO2lmKGF1Lmd0KCkpcmV0dXJuITA7dmFyIHQ9aCgpLGU9YXUuX3QodCksbj0wPGUmJmU8MTAsZT1hdS5FdCh0KSxlPTA8ZSYmZTw0LjU7cmV0dXJuISgwPHQuaW5kZXhPZihcIk1TSUUgXCIpfHwwPHQuaW5kZXhPZihcIlRyaWRlbnQvXCIpfHwwPHQuaW5kZXhPZihcIkVkZ2UvXCIpfHxufHxlKX0sYXUuZ3Q9ZnVuY3Rpb24oKXt2YXIgdDtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmXCJZRVNcIj09PShudWxsPT09KHQ9cHJvY2Vzcy5lbnYpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LlR0KX0sYXUuSXQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5zdG9yZShlKX0sYXUuX3Q9ZnVuY3Rpb24odCl7dD10Lm1hdGNoKC9pKD86cGhvbmV8cGFkfHBvZCkgb3MgKFtcXGRfXSspL2kpLHQ9dD90WzFdLnNwbGl0KFwiX1wiKS5zbGljZSgwLDIpLmpvaW4oXCIuXCIpOlwiLTFcIjtyZXR1cm4gTnVtYmVyKHQpfSxhdS5FdD1mdW5jdGlvbih0KXt0PXQubWF0Y2goL0FuZHJvaWQgKFtcXGQuXSspL2kpLHQ9dD90WzFdLnNwbGl0KFwiLlwiKS5zbGljZSgwLDIpLmpvaW4oXCIuXCIpOlwiLTFcIjtyZXR1cm4gTnVtYmVyKHQpfSxhdS5wcm90b3R5cGUuQXQ9ZnVuY3Rpb24obyl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsaT10aGlzO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdGhpcy5kYj9bMywyXTooeHIoXCJTaW1wbGVEYlwiLFwiT3BlbmluZyBkYXRhYmFzZTpcIix0aGlzLm5hbWUpLGU9dGhpcyxbNCxuZXcgUHJvbWlzZShmdW5jdGlvbihlLG4pe3ZhciByPWluZGV4ZWREQi5vcGVuKGkubmFtZSxpLnZlcnNpb24pO3Iub25zdWNjZXNzPWZ1bmN0aW9uKHQpe3Q9dC50YXJnZXQucmVzdWx0O2UodCl9LHIub25ibG9ja2VkPWZ1bmN0aW9uKCl7bihuZXcgaXUobyxcIkNhbm5vdCB1cGdyYWRlIEluZGV4ZWREQiBzY2hlbWEgd2hpbGUgYW5vdGhlciB0YWIgaXMgb3Blbi4gQ2xvc2UgYWxsIHRhYnMgdGhhdCBhY2Nlc3MgRmlyZXN0b3JlIGFuZCByZWxvYWQgdGhpcyBwYWdlIHRvIHByb2NlZWQuXCIpKX0sci5vbmVycm9yPWZ1bmN0aW9uKHQpe3Q9dC50YXJnZXQuZXJyb3I7XCJWZXJzaW9uRXJyb3JcIj09PXQubmFtZT9uKG5ldyBBcihEci5GQUlMRURfUFJFQ09ORElUSU9OLFwiQSBuZXdlciB2ZXJzaW9uIG9mIHRoZSBGaXJlc3RvcmUgU0RLIHdhcyBwcmV2aW91c2x5IHVzZWQgYW5kIHNvIHRoZSBwZXJzaXN0ZWQgZGF0YSBpcyBub3QgY29tcGF0aWJsZSB3aXRoIHRoZSB2ZXJzaW9uIG9mIHRoZSBTREsgeW91IGFyZSBub3cgdXNpbmcuIFRoZSBTREsgd2lsbCBvcGVyYXRlIHdpdGggcGVyc2lzdGVuY2UgZGlzYWJsZWQuIElmIHlvdSBuZWVkIHBlcnNpc3RlbmNlLCBwbGVhc2UgcmUtdXBncmFkZSB0byBhIG5ld2VyIHZlcnNpb24gb2YgdGhlIFNESyBvciBlbHNlIGNsZWFyIHRoZSBwZXJzaXN0ZWQgSW5kZXhlZERCIGRhdGEgZm9yIHlvdXIgYXBwIHRvIHN0YXJ0IGZyZXNoLlwiKSk6bihuZXcgaXUobyx0KSl9LHIub251cGdyYWRlbmVlZGVkPWZ1bmN0aW9uKHQpe3hyKFwiU2ltcGxlRGJcIiwnRGF0YWJhc2UgXCInK2kubmFtZSsnXCIgcmVxdWlyZXMgdXBncmFkZSBmcm9tIHZlcnNpb246Jyx0Lm9sZFZlcnNpb24pO3ZhciBlPXQudGFyZ2V0LnJlc3VsdDtpLnd0LlJ0KGUsci50cmFuc2FjdGlvbix0Lm9sZFZlcnNpb24saS52ZXJzaW9uKS5uZXh0KGZ1bmN0aW9uKCl7eHIoXCJTaW1wbGVEYlwiLFwiRGF0YWJhc2UgdXBncmFkZSB0byB2ZXJzaW9uIFwiK2kudmVyc2lvbitcIiBjb21wbGV0ZVwiKX0pfX0pXSk7Y2FzZSAxOmUuZGI9dC5zZW50KCksdC5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bMiwodGhpcy5idCYmKHRoaXMuZGIub252ZXJzaW9uY2hhbmdlPWZ1bmN0aW9uKHQpe3JldHVybiBpLmJ0KHQpfSksdGhpcy5kYildfX0pfSl9LGF1LnByb3RvdHlwZS52dD1mdW5jdGlvbihlKXt0aGlzLmJ0PWUsdGhpcy5kYiYmKHRoaXMuZGIub252ZXJzaW9uY2hhbmdlPWZ1bmN0aW9uKHQpe3JldHVybiBlKHQpfSl9LGF1LnByb3RvdHlwZS5ydW5UcmFuc2FjdGlvbj1mdW5jdGlvbihhLG4sdSxjKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgaSxvLHMsZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6aT1cInJlYWRvbmx5XCI9PT1uLG89MCxlPWZ1bmN0aW9uKCl7dmFyIGUsbixyO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDorK28sdC5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gdC50cnlzLnB1c2goWzEsNCwsNV0pLFs0LHMuQXQoYSldO2Nhc2UgMjpyZXR1cm4gcy5kYj10LnNlbnQoKSxlPWV1Lm9wZW4ocy5kYixhLGk/XCJyZWFkb25seVwiOlwicmVhZHdyaXRlXCIsdSksbj1jKGUpLmNhdGNoKGZ1bmN0aW9uKHQpe3JldHVybiBlLmFib3J0KHQpLHR1LnJlamVjdCh0KX0pLnRvUHJvbWlzZSgpLHI9e30sbi5jYXRjaChmdW5jdGlvbigpe30pLFs0LGUuZHRdO2Nhc2UgMzpyZXR1cm5bMiwoci52YWx1ZT0odC5zZW50KCksbikscildO2Nhc2UgNDpyZXR1cm4gbj10LnNlbnQoKSxyPVwiRmlyZWJhc2VFcnJvclwiIT09bi5uYW1lJiZvPDMseHIoXCJTaW1wbGVEYlwiLFwiVHJhbnNhY3Rpb24gZmFpbGVkIHdpdGggZXJyb3I6XCIsbi5tZXNzYWdlLFwiUmV0cnlpbmc6XCIscikscy5jbG9zZSgpLHI/WzMsNV06WzIse3ZhbHVlOlByb21pc2UucmVqZWN0KG4pfV07Y2FzZSA1OnJldHVyblsyXX19KX0scz10aGlzLHQubGFiZWw9MTtjYXNlIDE6cmV0dXJuWzUsZSgpXTtjYXNlIDI6aWYoXCJvYmplY3RcIj09dHlwZW9mKGU9dC5zZW50KCkpKXJldHVyblsyLGUudmFsdWVdO3QubGFiZWw9MztjYXNlIDM6cmV0dXJuWzMsMV07Y2FzZSA0OnJldHVyblsyXX19KX0pfSxhdS5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oKXt0aGlzLmRiJiZ0aGlzLmRiLmNsb3NlKCksdGhpcy5kYj12b2lkIDB9LGF1KSxydT0oT2JqZWN0LmRlZmluZVByb3BlcnR5KHN1LnByb3RvdHlwZSxcImlzRG9uZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5WdH0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoc3UucHJvdG90eXBlLFwiRHRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuU3R9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KHN1LnByb3RvdHlwZSxcImN1cnNvclwiLHtzZXQ6ZnVuY3Rpb24odCl7dGhpcy5QdD10fSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLHN1LnByb3RvdHlwZS5kb25lPWZ1bmN0aW9uKCl7dGhpcy5WdD0hMH0sc3UucHJvdG90eXBlLkN0PWZ1bmN0aW9uKHQpe3RoaXMuU3Q9dH0sc3UucHJvdG90eXBlLmRlbGV0ZT1mdW5jdGlvbigpe3JldHVybiBwdSh0aGlzLlB0LmRlbGV0ZSgpKX0sc3UpLGl1PShuKG91LFhhPUFyKSxvdSk7ZnVuY3Rpb24gb3UodCxlKXt2YXIgbj10aGlzO3JldHVybihuPVhhLmNhbGwodGhpcyxEci5VTkFWQUlMQUJMRSxcIkluZGV4ZWREQiB0cmFuc2FjdGlvbiAnXCIrdCtcIicgZmFpbGVkOiBcIitlKXx8dGhpcykubmFtZT1cIkluZGV4ZWREYlRyYW5zYWN0aW9uRXJyb3JcIixufWZ1bmN0aW9uIHN1KHQpe3RoaXMuUHQ9dCx0aGlzLlZ0PSExLHRoaXMuU3Q9bnVsbH1mdW5jdGlvbiBhdSh0LGUsbil7dGhpcy5uYW1lPXQsdGhpcy52ZXJzaW9uPWUsdGhpcy53dD1uLDEyLjI9PT1hdS5fdChoKCkpJiZPcihcIkZpcmVzdG9yZSBwZXJzaXN0ZW5jZSBzdWZmZXJzIGZyb20gYSBidWcgaW4gaU9TIDEyLjIgU2FmYXJpIHRoYXQgbWF5IGNhdXNlIHlvdXIgYXBwIHRvIHN0b3Agd29ya2luZy4gU2VlIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcS81NjQ5NjI5Ni8xMTA5MTUgZm9yIGRldGFpbHMgYW5kIGEgcG90ZW50aWFsIHdvcmthcm91bmQuXCIpfWZ1bmN0aW9uIHV1KGUsdCl7dmFyIG49dGhpczt0aGlzLmFjdGlvbj1lLHRoaXMudHJhbnNhY3Rpb249dCx0aGlzLmFib3J0ZWQ9ITEsdGhpcy5mdD1uZXcgWmEsdGhpcy50cmFuc2FjdGlvbi5vbmNvbXBsZXRlPWZ1bmN0aW9uKCl7bi5mdC5yZXNvbHZlKCl9LHRoaXMudHJhbnNhY3Rpb24ub25hYm9ydD1mdW5jdGlvbigpe3QuZXJyb3I/bi5mdC5yZWplY3QobmV3IGl1KGUsdC5lcnJvcikpOm4uZnQucmVzb2x2ZSgpfSx0aGlzLnRyYW5zYWN0aW9uLm9uZXJyb3I9ZnVuY3Rpb24odCl7dD1ndSh0LnRhcmdldC5lcnJvcik7bi5mdC5yZWplY3QobmV3IGl1KGUsdCkpfX1mdW5jdGlvbiBjdSh0KXt2YXIgZT10aGlzO3RoaXMubmV4dENhbGxiYWNrPW51bGwsdGhpcy5jYXRjaENhbGxiYWNrPW51bGwsdGhpcy5yZXN1bHQ9dm9pZCAwLHRoaXMuZXJyb3I9dm9pZCAwLHRoaXMuaXNEb25lPSExLHRoaXMuY2FsbGJhY2tBdHRhY2hlZD0hMSx0KGZ1bmN0aW9uKHQpe2UuaXNEb25lPSEwLGUucmVzdWx0PXQsZS5uZXh0Q2FsbGJhY2smJmUubmV4dENhbGxiYWNrKHQpfSxmdW5jdGlvbih0KXtlLmlzRG9uZT0hMCxlLmVycm9yPXQsZS5jYXRjaENhbGxiYWNrJiZlLmNhdGNoQ2FsbGJhY2sodCl9KX1mdW5jdGlvbiBodSgpe3RoaXMub25Db21taXR0ZWRMaXN0ZW5lcnM9W119ZnVuY3Rpb24gbHUodCl7cmV0dXJuXCJJbmRleGVkRGJUcmFuc2FjdGlvbkVycm9yXCI9PT10Lm5hbWV9dmFyIGZ1PShkdS5wcm90b3R5cGUucHV0PWZ1bmN0aW9uKHQsZSl7dD12b2lkIDAhPT1lPyh4cihcIlNpbXBsZURiXCIsXCJQVVRcIix0aGlzLnN0b3JlLm5hbWUsdCxlKSx0aGlzLnN0b3JlLnB1dChlLHQpKTooeHIoXCJTaW1wbGVEYlwiLFwiUFVUXCIsdGhpcy5zdG9yZS5uYW1lLFwiPGF1dG8ta2V5PlwiLHQpLHRoaXMuc3RvcmUucHV0KHQpKTtyZXR1cm4gcHUodCl9LGR1LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7cmV0dXJuIHhyKFwiU2ltcGxlRGJcIixcIkFERFwiLHRoaXMuc3RvcmUubmFtZSx0LHQpLHB1KHRoaXMuc3RvcmUuYWRkKHQpKX0sZHUucHJvdG90eXBlLmdldD1mdW5jdGlvbihlKXt2YXIgbj10aGlzO3JldHVybiBwdSh0aGlzLnN0b3JlLmdldChlKSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9bnVsbCkseHIoXCJTaW1wbGVEYlwiLFwiR0VUXCIsbi5zdG9yZS5uYW1lLGUsdCksdH0pfSxkdS5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKHQpe3JldHVybiB4cihcIlNpbXBsZURiXCIsXCJERUxFVEVcIix0aGlzLnN0b3JlLm5hbWUsdCkscHUodGhpcy5zdG9yZS5kZWxldGUodCkpfSxkdS5wcm90b3R5cGUuY291bnQ9ZnVuY3Rpb24oKXtyZXR1cm4geHIoXCJTaW1wbGVEYlwiLFwiQ09VTlRcIix0aGlzLnN0b3JlLm5hbWUpLHB1KHRoaXMuc3RvcmUuY291bnQoKSl9LGR1LnByb3RvdHlwZS5OdD1mdW5jdGlvbih0LGUpe3ZhciBlPXRoaXMuY3Vyc29yKHRoaXMub3B0aW9ucyh0LGUpKSxuPVtdO3JldHVybiB0aGlzLnh0KGUsZnVuY3Rpb24odCxlKXtuLnB1c2goZSl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIG59KX0sZHUucHJvdG90eXBlLkZ0PWZ1bmN0aW9uKHQsZSl7eHIoXCJTaW1wbGVEYlwiLFwiREVMRVRFIEFMTFwiLHRoaXMuc3RvcmUubmFtZSk7ZT10aGlzLm9wdGlvbnModCxlKTtlLmt0PSExO2U9dGhpcy5jdXJzb3IoZSk7cmV0dXJuIHRoaXMueHQoZSxmdW5jdGlvbih0LGUsbil7cmV0dXJuIG4uZGVsZXRlKCl9KX0sZHUucHJvdG90eXBlLk90PWZ1bmN0aW9uKHQsZSl7ZT9uPXQ6KG49e30sZT10KTt2YXIgbj10aGlzLmN1cnNvcihuKTtyZXR1cm4gdGhpcy54dChuLGUpfSxkdS5wcm90b3R5cGUuJHQ9ZnVuY3Rpb24ocil7dmFyIHQ9dGhpcy5jdXJzb3Ioe30pO3JldHVybiBuZXcgdHUoZnVuY3Rpb24obixlKXt0Lm9uZXJyb3I9ZnVuY3Rpb24odCl7dD1ndSh0LnRhcmdldC5lcnJvcik7ZSh0KX0sdC5vbnN1Y2Nlc3M9ZnVuY3Rpb24odCl7dmFyIGU9dC50YXJnZXQucmVzdWx0O2U/cihlLnByaW1hcnlLZXksZS52YWx1ZSkubmV4dChmdW5jdGlvbih0KXt0P2UuY29udGludWUoKTpuKCl9KTpuKCl9fSl9LGR1LnByb3RvdHlwZS54dD1mdW5jdGlvbih0LGkpe3ZhciBvPVtdO3JldHVybiBuZXcgdHUoZnVuY3Rpb24ocixlKXt0Lm9uZXJyb3I9ZnVuY3Rpb24odCl7ZSh0LnRhcmdldC5lcnJvcil9LHQub25zdWNjZXNzPWZ1bmN0aW9uKHQpe3ZhciBlLG49dC50YXJnZXQucmVzdWx0O24/KGU9bmV3IHJ1KG4pLCh0PWkobi5wcmltYXJ5S2V5LG4udmFsdWUsZSkpaW5zdGFuY2VvZiB0dSYmKHQ9dC5jYXRjaChmdW5jdGlvbih0KXtyZXR1cm4gZS5kb25lKCksdHUucmVqZWN0KHQpfSksby5wdXNoKHQpKSxlLmlzRG9uZT9yKCk6bnVsbD09PWUuRHQ/bi5jb250aW51ZSgpOm4uY29udGludWUoZS5EdCkpOnIoKX19KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHR1LndhaXRGb3Iobyl9KX0sZHUucHJvdG90eXBlLm9wdGlvbnM9ZnVuY3Rpb24odCxlKXt2YXIgbjtyZXR1cm4gdm9pZCAwIT09dCYmKFwic3RyaW5nXCI9PXR5cGVvZiB0P249dDplPXQpLHtpbmRleDpuLHJhbmdlOmV9fSxkdS5wcm90b3R5cGUuY3Vyc29yPWZ1bmN0aW9uKHQpe3ZhciBlPVwibmV4dFwiO2lmKHQucmV2ZXJzZSYmKGU9XCJwcmV2XCIpLHQuaW5kZXgpe3ZhciBuPXRoaXMuc3RvcmUuaW5kZXgodC5pbmRleCk7cmV0dXJuIHQua3Q/bi5vcGVuS2V5Q3Vyc29yKHQucmFuZ2UsZSk6bi5vcGVuQ3Vyc29yKHQucmFuZ2UsZSl9cmV0dXJuIHRoaXMuc3RvcmUub3BlbkN1cnNvcih0LnJhbmdlLGUpfSxkdSk7ZnVuY3Rpb24gZHUodCl7dGhpcy5zdG9yZT10fWZ1bmN0aW9uIHB1KHQpe3JldHVybiBuZXcgdHUoZnVuY3Rpb24oZSxuKXt0Lm9uc3VjY2Vzcz1mdW5jdGlvbih0KXt0PXQudGFyZ2V0LnJlc3VsdDtlKHQpfSx0Lm9uZXJyb3I9ZnVuY3Rpb24odCl7dD1ndSh0LnRhcmdldC5lcnJvcik7bih0KX19KX12YXIgeXU9ITE7ZnVuY3Rpb24gZ3UodCl7dmFyIGU9bnUuX3QoaCgpKTtpZigxMi4yPD1lJiZlPDEzKXtlPVwiQW4gaW50ZXJuYWwgZXJyb3Igd2FzIGVuY291bnRlcmVkIGluIHRoZSBJbmRleGVkIERhdGFiYXNlIHNlcnZlclwiO2lmKDA8PXQubWVzc2FnZS5pbmRleE9mKGUpKXt2YXIgbj1uZXcgQXIoXCJpbnRlcm5hbFwiLFwiSU9TX0lOREVYRUREQl9CVUcxOiBJbmRleGVkRGIgaGFzIHRocm93biAnXCIrZStcIicuIFRoaXMgaXMgbGlrZWx5IGR1ZSB0byBhbiB1bmF2b2lkYWJsZSBidWcgaW4gaU9TLiBTZWUgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xLzU2NDk2Mjk2LzExMDkxNSBmb3IgZGV0YWlscyBhbmQgYSBwb3RlbnRpYWwgd29ya2Fyb3VuZC5cIik7cmV0dXJuIHl1fHwoeXU9ITAsc2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IG59LDApKSxufX1yZXR1cm4gdH12YXIgbXUsdnU9KG4oYnUsbXU9VGUpLGJ1KTtmdW5jdGlvbiBidSh0LGUpe3ZhciBuPXRoaXM7cmV0dXJuKG49bXUuY2FsbCh0aGlzKXx8dGhpcykuTXQ9dCxuLmN1cnJlbnRTZXF1ZW5jZU51bWJlcj1lLG59ZnVuY3Rpb24gd3UodCxlKXtyZXR1cm4gbnUuSXQodC5NdCxlKX12YXIgSXU9KER1LnByb3RvdHlwZS5hcHBseVRvUmVtb3RlRG9jdW1lbnQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG4scixpLG8scyxhLHU9ZS5tdXRhdGlvblJlc3VsdHMsYz0wO2M8dGhpcy5tdXRhdGlvbnMubGVuZ3RoO2MrKyl7dmFyIGg9dGhpcy5tdXRhdGlvbnNbY107aC5rZXkuaXNFcXVhbCh0LmtleSkmJihuPWgscj10LGk9dVtjXSxoPWE9cz1vPXZvaWQgMCxuIGluc3RhbmNlb2YgY3M/KHM9cixhPWksaD0obz1uKS52YWx1ZS5jbG9uZSgpLG89cHMoby5maWVsZFRyYW5zZm9ybXMscyxhLnRyYW5zZm9ybVJlc3VsdHMpLGguc2V0QWxsKG8pLHMuY29udmVydFRvRm91bmREb2N1bWVudChhLnZlcnNpb24saCkuc2V0SGFzQ29tbWl0dGVkTXV0YXRpb25zKCkpOm4gaW5zdGFuY2VvZiBocz8obz1yLHM9aSxycygoYT1uKS5wcmVjb25kaXRpb24sbyk/KGg9cHMoYS5maWVsZFRyYW5zZm9ybXMsbyxzLnRyYW5zZm9ybVJlc3VsdHMpLChuPW8uZGF0YSkuc2V0QWxsKGRzKGEpKSxuLnNldEFsbChoKSxvLmNvbnZlcnRUb0ZvdW5kRG9jdW1lbnQocy52ZXJzaW9uLG4pLnNldEhhc0NvbW1pdHRlZE11dGF0aW9ucygpKTpvLmNvbnZlcnRUb1Vua25vd25Eb2N1bWVudChzLnZlcnNpb24pKTpyLmNvbnZlcnRUb05vRG9jdW1lbnQoaS52ZXJzaW9uKS5zZXRIYXNDb21taXR0ZWRNdXRhdGlvbnMoKSl9fSxEdS5wcm90b3R5cGUuYXBwbHlUb0xvY2FsVmlldz1mdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPXRoaXMuYmFzZU11dGF0aW9ucztlPG4ubGVuZ3RoO2UrKykocj1uW2VdKS5rZXkuaXNFcXVhbCh0LmtleSkmJmlzKHIsdCx0aGlzLmxvY2FsV3JpdGVUaW1lKTtmb3IodmFyIHIsaT0wLG89dGhpcy5tdXRhdGlvbnM7aTxvLmxlbmd0aDtpKyspKHI9b1tpXSkua2V5LmlzRXF1YWwodC5rZXkpJiZpcyhyLHQsdGhpcy5sb2NhbFdyaXRlVGltZSl9LER1LnByb3RvdHlwZS5hcHBseVRvTG9jYWxEb2N1bWVudFNldD1mdW5jdGlvbihuKXt2YXIgcj10aGlzO3RoaXMubXV0YXRpb25zLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9bi5nZXQodC5rZXkpLHQ9ZTtyLmFwcGx5VG9Mb2NhbFZpZXcodCksZS5pc1ZhbGlkRG9jdW1lbnQoKXx8dC5jb252ZXJ0VG9Ob0RvY3VtZW50KEdyLm1pbigpKX0pfSxEdS5wcm90b3R5cGUua2V5cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLm11dGF0aW9ucy5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5hZGQoZS5rZXkpfSxCcygpKX0sRHUucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuYmF0Y2hJZD09PXQuYmF0Y2hJZCYmQnIodGhpcy5tdXRhdGlvbnMsdC5tdXRhdGlvbnMsb3MpJiZCcih0aGlzLmJhc2VNdXRhdGlvbnMsdC5iYXNlTXV0YXRpb25zLG9zKX0sRHUpLEV1PShOdS5mcm9tPWZ1bmN0aW9uKHQsZSxuKXtGcih0Lm11dGF0aW9ucy5sZW5ndGg9PT1uLmxlbmd0aCk7Zm9yKHZhciByPVVzLGk9dC5tdXRhdGlvbnMsbz0wO288aS5sZW5ndGg7bysrKXI9ci5pbnNlcnQoaVtvXS5rZXksbltvXS52ZXJzaW9uKTtyZXR1cm4gbmV3IE51KHQsZSxuLHIpfSxOdSksVHU9KFN1LnByb3RvdHlwZS53aXRoU2VxdWVuY2VOdW1iZXI9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBTdSh0aGlzLnRhcmdldCx0aGlzLnRhcmdldElkLHRoaXMucHVycG9zZSx0LHRoaXMuc25hcHNob3RWZXJzaW9uLHRoaXMubGFzdExpbWJvRnJlZVNuYXBzaG90VmVyc2lvbix0aGlzLnJlc3VtZVRva2VuKX0sU3UucHJvdG90eXBlLndpdGhSZXN1bWVUb2tlbj1mdW5jdGlvbih0LGUpe3JldHVybiBuZXcgU3UodGhpcy50YXJnZXQsdGhpcy50YXJnZXRJZCx0aGlzLnB1cnBvc2UsdGhpcy5zZXF1ZW5jZU51bWJlcixlLHRoaXMubGFzdExpbWJvRnJlZVNuYXBzaG90VmVyc2lvbix0KX0sU3UucHJvdG90eXBlLndpdGhMYXN0TGltYm9GcmVlU25hcHNob3RWZXJzaW9uPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgU3UodGhpcy50YXJnZXQsdGhpcy50YXJnZXRJZCx0aGlzLnB1cnBvc2UsdGhpcy5zZXF1ZW5jZU51bWJlcix0aGlzLnNuYXBzaG90VmVyc2lvbix0LHRoaXMucmVzdW1lVG9rZW4pfSxTdSksX3U9ZnVuY3Rpb24odCl7dGhpcy5MdD10fTtmdW5jdGlvbiBTdSh0LGUsbixyLGksbyxzKXt2b2lkIDA9PT1pJiYoaT1Hci5taW4oKSksdm9pZCAwPT09byYmKG89R3IubWluKCkpLHZvaWQgMD09PXMmJihzPW5pLkVNUFRZX0JZVEVfU1RSSU5HKSx0aGlzLnRhcmdldD10LHRoaXMudGFyZ2V0SWQ9ZSx0aGlzLnB1cnBvc2U9bix0aGlzLnNlcXVlbmNlTnVtYmVyPXIsdGhpcy5zbmFwc2hvdFZlcnNpb249aSx0aGlzLmxhc3RMaW1ib0ZyZWVTbmFwc2hvdFZlcnNpb249byx0aGlzLnJlc3VtZVRva2VuPXN9ZnVuY3Rpb24gTnUodCxlLG4scil7dGhpcy5iYXRjaD10LHRoaXMuY29tbWl0VmVyc2lvbj1lLHRoaXMubXV0YXRpb25SZXN1bHRzPW4sdGhpcy5kb2NWZXJzaW9ucz1yfWZ1bmN0aW9uIER1KHQsZSxuLHIpe3RoaXMuYmF0Y2hJZD10LHRoaXMubG9jYWxXcml0ZVRpbWU9ZSx0aGlzLmJhc2VNdXRhdGlvbnM9bix0aGlzLm11dGF0aW9ucz1yfWZ1bmN0aW9uIEF1KHQsZSl7aWYoZS5kb2N1bWVudClyZXR1cm4gbWEodC5MdCxlLmRvY3VtZW50LCEhZS5oYXNDb21taXR0ZWRNdXRhdGlvbnMpO2lmKGUubm9Eb2N1bWVudCl7dmFyIG49bWkuZnJvbVNlZ21lbnRzKGUubm9Eb2N1bWVudC5wYXRoKSxyPU91KGUubm9Eb2N1bWVudC5yZWFkVGltZSksbj1PaS5uZXdOb0RvY3VtZW50KG4scik7cmV0dXJuIGUuaGFzQ29tbWl0dGVkTXV0YXRpb25zP24uc2V0SGFzQ29tbWl0dGVkTXV0YXRpb25zKCk6bn1pZihlLnVua25vd25Eb2N1bWVudCl7bj1taS5mcm9tU2VnbWVudHMoZS51bmtub3duRG9jdW1lbnQucGF0aCkscj1PdShlLnVua25vd25Eb2N1bWVudC52ZXJzaW9uKTtyZXR1cm4gT2kubmV3VW5rbm93bkRvY3VtZW50KG4scil9cmV0dXJuIE1yKCl9ZnVuY3Rpb24ga3UodCxlLG4pe3ZhciByPUN1KG4pLG49ZS5rZXkucGF0aC5wb3BMYXN0KCkudG9BcnJheSgpO2lmKGUuaXNGb3VuZERvY3VtZW50KCkpe3ZhciBpPXtuYW1lOmhhKG89dC5MdCwocz1lKS5rZXkpLGZpZWxkczpzLmRhdGEudG9Qcm90bygpLm1hcFZhbHVlLmZpZWxkcyx1cGRhdGVUaW1lOm9hKG8scy52ZXJzaW9uLnRvVGltZXN0YW1wKCkpfSxvPWUuaGFzQ29tbWl0dGVkTXV0YXRpb25zO3JldHVybiBuZXcgQmEobnVsbCxudWxsLGksbyxyLG4pfWlmKGUuaXNOb0RvY3VtZW50KCkpe3ZhciBzPWUua2V5LnBhdGgudG9BcnJheSgpLGk9eHUoZS52ZXJzaW9uKSxvPWUuaGFzQ29tbWl0dGVkTXV0YXRpb25zO3JldHVybiBuZXcgQmEobnVsbCxuZXcgVWEocyxpKSxudWxsLG8scixuKX1pZihlLmlzVW5rbm93bkRvY3VtZW50KCkpe289ZS5rZXkucGF0aC50b0FycmF5KCksZT14dShlLnZlcnNpb24pO3JldHVybiBuZXcgQmEobmV3IHFhKG8sZSksbnVsbCxudWxsLCEwLHIsbil9cmV0dXJuIE1yKCl9ZnVuY3Rpb24gQ3UodCl7dD10LnRvVGltZXN0YW1wKCk7cmV0dXJuW3Quc2Vjb25kcyx0Lm5hbm9zZWNvbmRzXX1mdW5jdGlvbiBSdSh0KXt0PW5ldyBLcih0WzBdLHRbMV0pO3JldHVybiBHci5mcm9tVGltZXN0YW1wKHQpfWZ1bmN0aW9uIHh1KHQpe3Q9dC50b1RpbWVzdGFtcCgpO3JldHVybiBuZXcgTGEodC5zZWNvbmRzLHQubmFub3NlY29uZHMpfWZ1bmN0aW9uIE91KHQpe3Q9bmV3IEtyKHQuc2Vjb25kcyx0Lm5hbm9zZWNvbmRzKTtyZXR1cm4gR3IuZnJvbVRpbWVzdGFtcCh0KX1mdW5jdGlvbiBMdShlLHQpe2Zvcih2YXIgbj0odC5iYXNlTXV0YXRpb25zfHxbXSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBiYShlLkx0LHQpfSkscj0wO3I8dC5tdXRhdGlvbnMubGVuZ3RoLTE7KytyKXt2YXIgaSxvPXQubXV0YXRpb25zW3JdO3IrMTx0Lm11dGF0aW9ucy5sZW5ndGgmJnZvaWQgMCE9PXQubXV0YXRpb25zW3IrMV0udHJhbnNmb3JtJiYoaT10Lm11dGF0aW9uc1tyKzFdLG8udXBkYXRlVHJhbnNmb3Jtcz1pLnRyYW5zZm9ybS5maWVsZFRyYW5zZm9ybXMsdC5tdXRhdGlvbnMuc3BsaWNlKHIrMSwxKSwrK3IpfXZhciBzPXQubXV0YXRpb25zLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gYmEoZS5MdCx0KX0pLGE9S3IuZnJvbU1pbGxpcyh0LmxvY2FsV3JpdGVUaW1lTXMpO3JldHVybiBuZXcgSXUodC5iYXRjaElkLGEsbixzKX1mdW5jdGlvbiBQdSh0KXt2YXIgZT1PdSh0LnJlYWRUaW1lKSxuPXZvaWQgMCE9PXQubGFzdExpbWJvRnJlZVNuYXBzaG90VmVyc2lvbj9PdSh0Lmxhc3RMaW1ib0ZyZWVTbmFwc2hvdFZlcnNpb24pOkdyLm1pbigpLHI9dm9pZCAwIT09dC5xdWVyeS5kb2N1bWVudHM/KEZyKDE9PT0ocj10LnF1ZXJ5KS5kb2N1bWVudHMubGVuZ3RoKSxObyhibyhkYShyLmRvY3VtZW50c1swXSkpKSk6Tm8oRWEodC5xdWVyeSkpO3JldHVybiBuZXcgVHUocix0LnRhcmdldElkLDAsdC5sYXN0TGlzdGVuU2VxdWVuY2VOdW1iZXIsZSxuLG5pLmZyb21CYXNlNjRTdHJpbmcodC5yZXN1bWVUb2tlbikpfWZ1bmN0aW9uIE11KHQsZSl7dmFyIG49eHUoZS5zbmFwc2hvdFZlcnNpb24pLHI9eHUoZS5sYXN0TGltYm9GcmVlU25hcHNob3RWZXJzaW9uKSxpPShVaShlLnRhcmdldCk/d2E6SWEpKHQuTHQsZS50YXJnZXQpLHQ9ZS5yZXN1bWVUb2tlbi50b0Jhc2U2NCgpO3JldHVybiBuZXcgS2EoZS50YXJnZXRJZCxGaShlLnRhcmdldCksbix0LGUuc2VxdWVuY2VOdW1iZXIscixpKX1mdW5jdGlvbiBGdSh0KXt2YXIgZT1FYSh7cGFyZW50OnQucGFyZW50LHN0cnVjdHVyZWRRdWVyeTp0LnN0cnVjdHVyZWRRdWVyeX0pO3JldHVyblwiTEFTVFwiPT09dC5saW1pdFR5cGU/RG8oZSxlLmxpbWl0LFwiTFwiKTplfXZhciBWdT0oVXUucHJvdG90eXBlLmdldEJ1bmRsZU1ldGFkYXRhPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHF1KHQpLmdldChlKS5uZXh0KGZ1bmN0aW9uKHQpe2lmKHQpcmV0dXJue2lkOih0PXQpLmJ1bmRsZUlkLGNyZWF0ZVRpbWU6T3UodC5jcmVhdGVUaW1lKSx2ZXJzaW9uOnQudmVyc2lvbn19KX0sVXUucHJvdG90eXBlLnNhdmVCdW5kbGVNZXRhZGF0YT1mdW5jdGlvbih0LGUpe3JldHVybiBxdSh0KS5wdXQoe2J1bmRsZUlkOihlPWUpLmlkLGNyZWF0ZVRpbWU6eHUoYWEoZS5jcmVhdGVUaW1lKSksdmVyc2lvbjplLnZlcnNpb259KX0sVXUucHJvdG90eXBlLmdldE5hbWVkUXVlcnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gQnUodCkuZ2V0KGUpLm5leHQoZnVuY3Rpb24odCl7aWYodClyZXR1cm57bmFtZToodD10KS5uYW1lLHF1ZXJ5OkZ1KHQuYnVuZGxlZFF1ZXJ5KSxyZWFkVGltZTpPdSh0LnJlYWRUaW1lKX19KX0sVXUucHJvdG90eXBlLnNhdmVOYW1lZFF1ZXJ5PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIEJ1KHQpLnB1dCh7bmFtZTooZT1lKS5uYW1lLHJlYWRUaW1lOnh1KGFhKGUucmVhZFRpbWUpKSxidW5kbGVkUXVlcnk6ZS5idW5kbGVkUXVlcnl9KX0sVXUpO2Z1bmN0aW9uIFV1KCl7fWZ1bmN0aW9uIHF1KHQpe3JldHVybiB3dSh0LFdhLnN0b3JlKX1mdW5jdGlvbiBCdSh0KXtyZXR1cm4gd3UodCxZYS5zdG9yZSl9dmFyIGp1PShIdS5wcm90b3R5cGUuYWRkVG9Db2xsZWN0aW9uUGFyZW50SW5kZXg9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5CdC5hZGQoZSksdHUucmVzb2x2ZSgpfSxIdS5wcm90b3R5cGUuZ2V0Q29sbGVjdGlvblBhcmVudHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdHUucmVzb2x2ZSh0aGlzLkJ0LmdldEVudHJpZXMoZSkpfSxIdSksS3U9KHp1LnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7dmFyIGU9dC5sYXN0U2VnbWVudCgpLG49dC5wb3BMYXN0KCkscj10aGlzLmluZGV4W2VdfHxuZXcgT3MoJHIuY29tcGFyYXRvciksdD0hci5oYXMobik7cmV0dXJuIHRoaXMuaW5kZXhbZV09ci5hZGQobiksdH0senUucHJvdG90eXBlLmhhcz1mdW5jdGlvbih0KXt2YXIgZT10Lmxhc3RTZWdtZW50KCksdD10LnBvcExhc3QoKSxlPXRoaXMuaW5kZXhbZV07cmV0dXJuIGUmJmUuaGFzKHQpfSx6dS5wcm90b3R5cGUuZ2V0RW50cmllcz1mdW5jdGlvbih0KXtyZXR1cm4odGhpcy5pbmRleFt0XXx8bmV3IE9zKCRyLmNvbXBhcmF0b3IpKS50b0FycmF5KCl9LHp1KSxHdT0oUXUucHJvdG90eXBlLmFkZFRvQ29sbGVjdGlvblBhcmVudEluZGV4PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztpZih0aGlzLnF0LmhhcyhlKSlyZXR1cm4gdHUucmVzb2x2ZSgpO3ZhciByPWUubGFzdFNlZ21lbnQoKSxpPWUucG9wTGFzdCgpO3QuYWRkT25Db21taXR0ZWRMaXN0ZW5lcihmdW5jdGlvbigpe24ucXQuYWRkKGUpfSk7aT17Y29sbGVjdGlvbklkOnIscGFyZW50OkNhKGkpfTtyZXR1cm4gV3UodCkucHV0KGkpfSxRdS5wcm90b3R5cGUuZ2V0Q29sbGVjdGlvblBhcmVudHM9ZnVuY3Rpb24odCxpKXt2YXIgbz1bXSxlPUlEQktleVJhbmdlLmJvdW5kKFtpLFwiXCJdLFtqcihpKSxcIlwiXSwhMSwhMCk7cmV0dXJuIFd1KHQpLk50KGUpLm5leHQoZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsbj10O2U8bi5sZW5ndGg7ZSsrKXt2YXIgcj1uW2VdO2lmKHIuY29sbGVjdGlvbklkIT09aSlicmVhaztvLnB1c2goeGEoci5wYXJlbnQpKX1yZXR1cm4gb30pfSxRdSk7ZnVuY3Rpb24gUXUoKXt0aGlzLnF0PW5ldyBLdX1mdW5jdGlvbiB6dSgpe3RoaXMuaW5kZXg9e319ZnVuY3Rpb24gSHUoKXt0aGlzLkJ0PW5ldyBLdX1mdW5jdGlvbiBXdSh0KXtyZXR1cm4gd3UodCx6YS5zdG9yZSl9dmFyIFl1PXtkaWRSdW46ITEsc2VxdWVuY2VOdW1iZXJzQ29sbGVjdGVkOjAsdGFyZ2V0c1JlbW92ZWQ6MCxkb2N1bWVudHNSZW1vdmVkOjB9LFh1PShKdS53aXRoQ2FjaGVTaXplPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgSnUodCxKdS5ERUZBVUxUX0NPTExFQ1RJT05fUEVSQ0VOVElMRSxKdS5ERUZBVUxUX01BWF9TRVFVRU5DRV9OVU1CRVJTX1RPX0NPTExFQ1QpfSxKdSk7ZnVuY3Rpb24gSnUodCxlLG4pe3RoaXMuY2FjaGVTaXplQ29sbGVjdGlvblRocmVzaG9sZD10LHRoaXMucGVyY2VudGlsZVRvQ29sbGVjdD1lLHRoaXMubWF4aW11bVNlcXVlbmNlTnVtYmVyc1RvQ29sbGVjdD1ufWZ1bmN0aW9uICR1KHQsZSxuKXt2YXIgcj10LnN0b3JlKE1hLnN0b3JlKSxpPXQuc3RvcmUoRmEuc3RvcmUpLG89W10sdD1JREJLZXlSYW5nZS5vbmx5KG4uYmF0Y2hJZCkscz0wLHQ9ci5PdCh7cmFuZ2U6dH0sZnVuY3Rpb24odCxlLG4pe3JldHVybiBzKyssbi5kZWxldGUoKX0pO28ucHVzaCh0Lm5leHQoZnVuY3Rpb24oKXtGcigxPT09cyl9KSk7Zm9yKHZhciBhPVtdLHU9MCxjPW4ubXV0YXRpb25zO3U8Yy5sZW5ndGg7dSsrKXt2YXIgaD1jW3VdLGw9RmEua2V5KGUsaC5rZXkucGF0aCxuLmJhdGNoSWQpO28ucHVzaChpLmRlbGV0ZShsKSksYS5wdXNoKGgua2V5KX1yZXR1cm4gdHUud2FpdEZvcihvKS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIGF9KX1mdW5jdGlvbiBadSh0KXtpZighdClyZXR1cm4gMDt2YXIgZTtpZih0LmRvY3VtZW50KWU9dC5kb2N1bWVudDtlbHNlIGlmKHQudW5rbm93bkRvY3VtZW50KWU9dC51bmtub3duRG9jdW1lbnQ7ZWxzZXtpZighdC5ub0RvY3VtZW50KXRocm93IE1yKCk7ZT10Lm5vRG9jdW1lbnR9cmV0dXJuIEpTT04uc3RyaW5naWZ5KGUpLmxlbmd0aH1YdS5ERUZBVUxUX0NPTExFQ1RJT05fUEVSQ0VOVElMRT0xMCxYdS5ERUZBVUxUX01BWF9TRVFVRU5DRV9OVU1CRVJTX1RPX0NPTExFQ1Q9MWUzLFh1LkRFRkFVTFQ9bmV3IFh1KDQxOTQzMDQwLFh1LkRFRkFVTFRfQ09MTEVDVElPTl9QRVJDRU5USUxFLFh1LkRFRkFVTFRfTUFYX1NFUVVFTkNFX05VTUJFUlNfVE9fQ09MTEVDVCksWHUuRElTQUJMRUQ9bmV3IFh1KC0xLDAsMCk7dmFyIHRjPShlYy5LdD1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gRnIoXCJcIiE9PXQudWlkKSxuZXcgZWModC5pc0F1dGhlbnRpY2F0ZWQoKT90LnVpZDpcIlwiLGUsbixyKX0sZWMucHJvdG90eXBlLmNoZWNrRW1wdHk9ZnVuY3Rpb24odCl7dmFyIHI9ITAsZT1JREJLZXlSYW5nZS5ib3VuZChbdGhpcy51c2VySWQsTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZXSxbdGhpcy51c2VySWQsTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZXSk7cmV0dXJuIHJjKHQpLk90KHtpbmRleDpNYS51c2VyTXV0YXRpb25zSW5kZXgscmFuZ2U6ZX0sZnVuY3Rpb24odCxlLG4pe3I9ITEsbi5kb25lKCl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHJ9KX0sZWMucHJvdG90eXBlLmFkZE11dGF0aW9uQmF0Y2g9ZnVuY3Rpb24ocCx5LGcsbSl7dmFyIHY9dGhpcyxiPWljKHApLHc9cmMocCk7cmV0dXJuIHcuYWRkKHt9KS5uZXh0KGZ1bmN0aW9uKHQpe0ZyKFwibnVtYmVyXCI9PXR5cGVvZiB0KTtmb3IodmFyIGUsbixyLGksbyxzPW5ldyBJdSh0LHksZyxtKSxhPShlPXYuUixuPXYudXNlcklkLGk9KHI9cykuYmFzZU11dGF0aW9ucy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHZhKGUuTHQsdCl9KSxvPXIubXV0YXRpb25zLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gdmEoZS5MdCx0KX0pLG5ldyBNYShuLHIuYmF0Y2hJZCxyLmxvY2FsV3JpdGVUaW1lLnRvTWlsbGlzKCksaSxvKSksdT1bXSxjPW5ldyBPcyhmdW5jdGlvbih0LGUpe3JldHVybiBxcih0LmNhbm9uaWNhbFN0cmluZygpLGUuY2Fub25pY2FsU3RyaW5nKCkpfSksaD0wLGw9bTtoPGwubGVuZ3RoO2grKyl7dmFyIGY9bFtoXSxkPUZhLmtleSh2LnVzZXJJZCxmLmtleS5wYXRoLHQpLGM9Yy5hZGQoZi5rZXkucGF0aC5wb3BMYXN0KCkpO3UucHVzaCh3LnB1dChhKSksdS5wdXNoKGIucHV0KGQsRmEuUExBQ0VIT0xERVIpKX1yZXR1cm4gYy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3UucHVzaCh2LlV0LmFkZFRvQ29sbGVjdGlvblBhcmVudEluZGV4KHAsdCkpfSkscC5hZGRPbkNvbW1pdHRlZExpc3RlbmVyKGZ1bmN0aW9uKCl7di5RdFt0XT1zLmtleXMoKX0pLHR1LndhaXRGb3IodSkubmV4dChmdW5jdGlvbigpe3JldHVybiBzfSl9KX0sZWMucHJvdG90eXBlLmxvb2t1cE11dGF0aW9uQmF0Y2g9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiByYyh0KS5nZXQoZSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gdD8oRnIodC51c2VySWQ9PT1uLnVzZXJJZCksTHUobi5SLHQpKTpudWxsfSl9LGVjLnByb3RvdHlwZS5qdD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIHRoaXMuUXRbZV0/dHUucmVzb2x2ZSh0aGlzLlF0W2VdKTp0aGlzLmxvb2t1cE11dGF0aW9uQmF0Y2godCxlKS5uZXh0KGZ1bmN0aW9uKHQpe2lmKHQpe3Q9dC5rZXlzKCk7cmV0dXJuIG4uUXRbZV09dH1yZXR1cm4gbnVsbH0pfSxlYy5wcm90b3R5cGUuZ2V0TmV4dE11dGF0aW9uQmF0Y2hBZnRlckJhdGNoSWQ9ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzLGk9ZSsxLGU9SURCS2V5UmFuZ2UubG93ZXJCb3VuZChbdGhpcy51c2VySWQsaV0pLG89bnVsbDtyZXR1cm4gcmModCkuT3Qoe2luZGV4Ok1hLnVzZXJNdXRhdGlvbnNJbmRleCxyYW5nZTplfSxmdW5jdGlvbih0LGUsbil7ZS51c2VySWQ9PT1yLnVzZXJJZCYmKEZyKGUuYmF0Y2hJZD49aSksbz1MdShyLlIsZSkpLG4uZG9uZSgpfSkubmV4dChmdW5jdGlvbigpe3JldHVybiBvfSl9LGVjLnByb3RvdHlwZS5nZXRIaWdoZXN0VW5hY2tub3dsZWRnZWRCYXRjaElkPWZ1bmN0aW9uKHQpe3ZhciBlPUlEQktleVJhbmdlLnVwcGVyQm91bmQoW3RoaXMudXNlcklkLE51bWJlci5QT1NJVElWRV9JTkZJTklUWV0pLHI9LTE7cmV0dXJuIHJjKHQpLk90KHtpbmRleDpNYS51c2VyTXV0YXRpb25zSW5kZXgscmFuZ2U6ZSxyZXZlcnNlOiEwfSxmdW5jdGlvbih0LGUsbil7cj1lLmJhdGNoSWQsbi5kb25lKCl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHJ9KX0sZWMucHJvdG90eXBlLmdldEFsbE11dGF0aW9uQmF0Y2hlcz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49SURCS2V5UmFuZ2UuYm91bmQoW3RoaXMudXNlcklkLC0xXSxbdGhpcy51c2VySWQsTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZXSk7cmV0dXJuIHJjKHQpLk50KE1hLnVzZXJNdXRhdGlvbnNJbmRleCxuKS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiB0Lm1hcChmdW5jdGlvbih0KXtyZXR1cm4gTHUoZS5SLHQpfSl9KX0sZWMucHJvdG90eXBlLmdldEFsbE11dGF0aW9uQmF0Y2hlc0FmZmVjdGluZ0RvY3VtZW50S2V5PWZ1bmN0aW9uKG8scyl7dmFyIGE9dGhpcyx0PUZhLnByZWZpeEZvclBhdGgodGhpcy51c2VySWQscy5wYXRoKSx0PUlEQktleVJhbmdlLmxvd2VyQm91bmQodCksdT1bXTtyZXR1cm4gaWMobykuT3Qoe3JhbmdlOnR9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10WzBdLGk9dFsxXSx0PXRbMl0saT14YShpKTtpZihyPT09YS51c2VySWQmJnMucGF0aC5pc0VxdWFsKGkpKXJldHVybiByYyhvKS5nZXQodCkubmV4dChmdW5jdGlvbih0KXtpZighdCl0aHJvdyBNcigpO0ZyKHQudXNlcklkPT09YS51c2VySWQpLHUucHVzaChMdShhLlIsdCkpfSk7bi5kb25lKCl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHV9KX0sZWMucHJvdG90eXBlLmdldEFsbE11dGF0aW9uQmF0Y2hlc0FmZmVjdGluZ0RvY3VtZW50S2V5cz1mdW5jdGlvbihlLHQpe3ZhciBzPXRoaXMsYT1uZXcgT3MocXIpLG49W107cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbihvKXt2YXIgdD1GYS5wcmVmaXhGb3JQYXRoKHMudXNlcklkLG8ucGF0aCksdD1JREJLZXlSYW5nZS5sb3dlckJvdW5kKHQpLHQ9aWMoZSkuT3Qoe3JhbmdlOnR9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10WzBdLGk9dFsxXSx0PXRbMl0saT14YShpKTtyPT09cy51c2VySWQmJm8ucGF0aC5pc0VxdWFsKGkpP2E9YS5hZGQodCk6bi5kb25lKCl9KTtuLnB1c2godCl9KSx0dS53YWl0Rm9yKG4pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gcy5XdChlLGEpfSl9LGVjLnByb3RvdHlwZS5nZXRBbGxNdXRhdGlvbkJhdGNoZXNBZmZlY3RpbmdRdWVyeT1mdW5jdGlvbih0LGUpe3ZhciBvPXRoaXMscz1lLnBhdGgsYT1zLmxlbmd0aCsxLGU9RmEucHJlZml4Rm9yUGF0aCh0aGlzLnVzZXJJZCxzKSxlPUlEQktleVJhbmdlLmxvd2VyQm91bmQoZSksdT1uZXcgT3MocXIpO3JldHVybiBpYyh0KS5PdCh7cmFuZ2U6ZX0sZnVuY3Rpb24odCxlLG4pe3ZhciByPXRbMF0saT10WzFdLHQ9dFsyXSxpPXhhKGkpO3I9PT1vLnVzZXJJZCYmcy5pc1ByZWZpeE9mKGkpP2kubGVuZ3RoPT09YSYmKHU9dS5hZGQodCkpOm4uZG9uZSgpfSkubmV4dChmdW5jdGlvbigpe3JldHVybiBvLld0KHQsdSl9KX0sZWMucHJvdG90eXBlLld0PWZ1bmN0aW9uKGUsdCl7dmFyIG49dGhpcyxyPVtdLGk9W107cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbih0KXtpLnB1c2gocmMoZSkuZ2V0KHQpLm5leHQoZnVuY3Rpb24odCl7aWYobnVsbD09PXQpdGhyb3cgTXIoKTtGcih0LnVzZXJJZD09PW4udXNlcklkKSxyLnB1c2goTHUobi5SLHQpKX0pKX0pLHR1LndhaXRGb3IoaSkubmV4dChmdW5jdGlvbigpe3JldHVybiByfSl9LGVjLnByb3RvdHlwZS5yZW1vdmVNdXRhdGlvbkJhdGNoPWZ1bmN0aW9uKGUsbil7dmFyIHI9dGhpcztyZXR1cm4gJHUoZS5NdCx0aGlzLnVzZXJJZCxuKS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBlLmFkZE9uQ29tbWl0dGVkTGlzdGVuZXIoZnVuY3Rpb24oKXtyLkd0KG4uYmF0Y2hJZCl9KSx0dS5mb3JFYWNoKHQsZnVuY3Rpb24odCl7cmV0dXJuIHIucmVmZXJlbmNlRGVsZWdhdGUubWFya1BvdGVudGlhbGx5T3JwaGFuZWQoZSx0KX0pfSl9LGVjLnByb3RvdHlwZS5HdD1mdW5jdGlvbih0KXtkZWxldGUgdGhpcy5RdFt0XX0sZWMucHJvdG90eXBlLnBlcmZvcm1Db25zaXN0ZW5jeUNoZWNrPWZ1bmN0aW9uKGUpe3ZhciBpPXRoaXM7cmV0dXJuIHRoaXMuY2hlY2tFbXB0eShlKS5uZXh0KGZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiB0dS5yZXNvbHZlKCk7dmFyIHQ9SURCS2V5UmFuZ2UubG93ZXJCb3VuZChGYS5wcmVmaXhGb3JVc2VyKGkudXNlcklkKSkscj1bXTtyZXR1cm4gaWMoZSkuT3Qoe3JhbmdlOnR9LGZ1bmN0aW9uKHQsZSxuKXt0WzBdPT09aS51c2VySWQ/KHQ9eGEodFsxXSksci5wdXNoKHQpKTpuLmRvbmUoKX0pLm5leHQoZnVuY3Rpb24oKXtGcigwPT09ci5sZW5ndGgpfSl9KX0sZWMucHJvdG90eXBlLmNvbnRhaW5zS2V5PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5jKHQsdGhpcy51c2VySWQsZSl9LGVjLnByb3RvdHlwZS56dD1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiBvYyh0KS5nZXQodGhpcy51c2VySWQpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHR8fG5ldyBQYShlLnVzZXJJZCwtMSxcIlwiKX0pfSxlYyk7ZnVuY3Rpb24gZWModCxlLG4scil7dGhpcy51c2VySWQ9dCx0aGlzLlI9ZSx0aGlzLlV0PW4sdGhpcy5yZWZlcmVuY2VEZWxlZ2F0ZT1yLHRoaXMuUXQ9e319ZnVuY3Rpb24gbmModCxvLGUpe3ZhciBlPUZhLnByZWZpeEZvclBhdGgobyxlLnBhdGgpLHM9ZVsxXSxlPUlEQktleVJhbmdlLmxvd2VyQm91bmQoZSksYT0hMTtyZXR1cm4gaWModCkuT3Qoe3JhbmdlOmUsa3Q6ITB9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10WzBdLGk9dFsxXTt0WzJdLHI9PT1vJiZpPT09cyYmKGE9ITApLG4uZG9uZSgpfSkubmV4dChmdW5jdGlvbigpe3JldHVybiBhfSl9ZnVuY3Rpb24gcmModCl7cmV0dXJuIHd1KHQsTWEuc3RvcmUpfWZ1bmN0aW9uIGljKHQpe3JldHVybiB3dSh0LEZhLnN0b3JlKX1mdW5jdGlvbiBvYyh0KXtyZXR1cm4gd3UodCxQYS5zdG9yZSl9dmFyIHNjPShjYy5wcm90b3R5cGUubmV4dD1mdW5jdGlvbigpe3JldHVybiB0aGlzLkh0Kz0yLHRoaXMuSHR9LGNjLkp0PWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBjYygwKX0sY2MuWXQ9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IGNjKC0xKX0sY2MpLGFjPSh1Yy5wcm90b3R5cGUuYWxsb2NhdGVUYXJnZXRJZD1mdW5jdGlvbihuKXt2YXIgcj10aGlzO3JldHVybiB0aGlzLlh0KG4pLm5leHQoZnVuY3Rpb24odCl7dmFyIGU9bmV3IHNjKHQuaGlnaGVzdFRhcmdldElkKTtyZXR1cm4gdC5oaWdoZXN0VGFyZ2V0SWQ9ZS5uZXh0KCksci5adChuLHQpLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gdC5oaWdoZXN0VGFyZ2V0SWR9KX0pfSx1Yy5wcm90b3R5cGUuZ2V0TGFzdFJlbW90ZVNuYXBzaG90VmVyc2lvbj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5YdCh0KS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBHci5mcm9tVGltZXN0YW1wKG5ldyBLcih0Lmxhc3RSZW1vdGVTbmFwc2hvdFZlcnNpb24uc2Vjb25kcyx0Lmxhc3RSZW1vdGVTbmFwc2hvdFZlcnNpb24ubmFub3NlY29uZHMpKX0pfSx1Yy5wcm90b3R5cGUuZ2V0SGlnaGVzdFNlcXVlbmNlTnVtYmVyPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLlh0KHQpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHQuaGlnaGVzdExpc3RlblNlcXVlbmNlTnVtYmVyfSl9LHVjLnByb3RvdHlwZS5zZXRUYXJnZXRzTWV0YWRhdGE9ZnVuY3Rpb24oZSxuLHIpe3ZhciBpPXRoaXM7cmV0dXJuIHRoaXMuWHQoZSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gdC5oaWdoZXN0TGlzdGVuU2VxdWVuY2VOdW1iZXI9bixyJiYodC5sYXN0UmVtb3RlU25hcHNob3RWZXJzaW9uPXIudG9UaW1lc3RhbXAoKSksbj50LmhpZ2hlc3RMaXN0ZW5TZXF1ZW5jZU51bWJlciYmKHQuaGlnaGVzdExpc3RlblNlcXVlbmNlTnVtYmVyPW4pLGkuWnQoZSx0KX0pfSx1Yy5wcm90b3R5cGUuYWRkVGFyZ2V0RGF0YT1mdW5jdGlvbihlLG4pe3ZhciByPXRoaXM7cmV0dXJuIHRoaXMudGUoZSxuKS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHIuWHQoZSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gdC50YXJnZXRDb3VudCs9MSxyLmVlKG4sdCksci5adChlLHQpfSl9KX0sdWMucHJvdG90eXBlLnVwZGF0ZVRhcmdldERhdGE9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy50ZSh0LGUpfSx1Yy5wcm90b3R5cGUucmVtb3ZlVGFyZ2V0RGF0YT1mdW5jdGlvbihlLHQpe3ZhciBuPXRoaXM7cmV0dXJuIHRoaXMucmVtb3ZlTWF0Y2hpbmdLZXlzRm9yVGFyZ2V0SWQoZSx0LnRhcmdldElkKS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIGhjKGUpLmRlbGV0ZSh0LnRhcmdldElkKX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gbi5YdChlKX0pLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIEZyKDA8dC50YXJnZXRDb3VudCksLS10LnRhcmdldENvdW50LG4uWnQoZSx0KX0pfSx1Yy5wcm90b3R5cGUucmVtb3ZlVGFyZ2V0cz1mdW5jdGlvbihuLHIsaSl7dmFyIG89dGhpcyxzPTAsYT1bXTtyZXR1cm4gaGMobikuT3QoZnVuY3Rpb24odCxlKXtlPVB1KGUpO2Uuc2VxdWVuY2VOdW1iZXI8PXImJm51bGw9PT1pLmdldChlLnRhcmdldElkKSYmKHMrKyxhLnB1c2goby5yZW1vdmVUYXJnZXREYXRhKG4sZSkpKX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gdHUud2FpdEZvcihhKX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gc30pfSx1Yy5wcm90b3R5cGUuZm9yRWFjaFRhcmdldD1mdW5jdGlvbih0LG4pe3JldHVybiBoYyh0KS5PdChmdW5jdGlvbih0LGUpe2U9UHUoZSk7bihlKX0pfSx1Yy5wcm90b3R5cGUuWHQ9ZnVuY3Rpb24odCl7cmV0dXJuIGxjKHQpLmdldChRYS5rZXkpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIEZyKG51bGwhPT10KSx0fSl9LHVjLnByb3RvdHlwZS5adD1mdW5jdGlvbih0LGUpe3JldHVybiBsYyh0KS5wdXQoUWEua2V5LGUpfSx1Yy5wcm90b3R5cGUudGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gaGModCkucHV0KE11KHRoaXMuUixlKSl9LHVjLnByb3RvdHlwZS5lZT1mdW5jdGlvbih0LGUpe3ZhciBuPSExO3JldHVybiB0LnRhcmdldElkPmUuaGlnaGVzdFRhcmdldElkJiYoZS5oaWdoZXN0VGFyZ2V0SWQ9dC50YXJnZXRJZCxuPSEwKSx0LnNlcXVlbmNlTnVtYmVyPmUuaGlnaGVzdExpc3RlblNlcXVlbmNlTnVtYmVyJiYoZS5oaWdoZXN0TGlzdGVuU2VxdWVuY2VOdW1iZXI9dC5zZXF1ZW5jZU51bWJlcixuPSEwKSxufSx1Yy5wcm90b3R5cGUuZ2V0VGFyZ2V0Q291bnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuWHQodCkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gdC50YXJnZXRDb3VudH0pfSx1Yy5wcm90b3R5cGUuZ2V0VGFyZ2V0RGF0YT1mdW5jdGlvbih0LHIpe3ZhciBlPUZpKHIpLGU9SURCS2V5UmFuZ2UuYm91bmQoW2UsTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZXSxbZSxOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFldKSxpPW51bGw7cmV0dXJuIGhjKHQpLk90KHtyYW5nZTplLGluZGV4OkthLnF1ZXJ5VGFyZ2V0c0luZGV4TmFtZX0sZnVuY3Rpb24odCxlLG4pe2U9UHUoZSk7VmkocixlLnRhcmdldCkmJihpPWUsbi5kb25lKCkpfSkubmV4dChmdW5jdGlvbigpe3JldHVybiBpfSl9LHVjLnByb3RvdHlwZS5hZGRNYXRjaGluZ0tleXM9ZnVuY3Rpb24obix0LHIpe3ZhciBpPXRoaXMsbz1bXSxzPWZjKG4pO3JldHVybiB0LmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9Q2EodC5wYXRoKTtvLnB1c2gocy5wdXQobmV3IEdhKHIsZSkpKSxvLnB1c2goaS5yZWZlcmVuY2VEZWxlZ2F0ZS5hZGRSZWZlcmVuY2UobixyLHQpKX0pLHR1LndhaXRGb3Iobyl9LHVjLnByb3RvdHlwZS5yZW1vdmVNYXRjaGluZ0tleXM9ZnVuY3Rpb24obix0LHIpe3ZhciBpPXRoaXMsbz1mYyhuKTtyZXR1cm4gdHUuZm9yRWFjaCh0LGZ1bmN0aW9uKHQpe3ZhciBlPUNhKHQucGF0aCk7cmV0dXJuIHR1LndhaXRGb3IoW28uZGVsZXRlKFtyLGVdKSxpLnJlZmVyZW5jZURlbGVnYXRlLnJlbW92ZVJlZmVyZW5jZShuLHIsdCldKX0pfSx1Yy5wcm90b3R5cGUucmVtb3ZlTWF0Y2hpbmdLZXlzRm9yVGFyZ2V0SWQ9ZnVuY3Rpb24odCxlKXt0PWZjKHQpLGU9SURCS2V5UmFuZ2UuYm91bmQoW2VdLFtlKzFdLCExLCEwKTtyZXR1cm4gdC5kZWxldGUoZSl9LHVjLnByb3RvdHlwZS5nZXRNYXRjaGluZ0tleXNGb3JUYXJnZXRJZD1mdW5jdGlvbih0LGUpe3ZhciBlPUlEQktleVJhbmdlLmJvdW5kKFtlXSxbZSsxXSwhMSwhMCksdD1mYyh0KSxyPUJzKCk7cmV0dXJuIHQuT3Qoe3JhbmdlOmUsa3Q6ITB9LGZ1bmN0aW9uKHQsZSxuKXt0PXhhKHRbMV0pLHQ9bmV3IG1pKHQpO3I9ci5hZGQodCl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHJ9KX0sdWMucHJvdG90eXBlLmNvbnRhaW5zS2V5PWZ1bmN0aW9uKHQsZSl7dmFyIGU9Q2EoZS5wYXRoKSxlPUlEQktleVJhbmdlLmJvdW5kKFtlXSxbanIoZSldLCExLCEwKSxpPTA7cmV0dXJuIGZjKHQpLk90KHtpbmRleDpHYS5kb2N1bWVudFRhcmdldHNJbmRleCxrdDohMCxyYW5nZTplfSxmdW5jdGlvbih0LGUsbil7dmFyIHI9dFswXTt0WzFdLDAhPT1yJiYoaSsrLG4uZG9uZSgpKX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gMDxpfSl9LHVjLnByb3RvdHlwZS5sdD1mdW5jdGlvbih0LGUpe3JldHVybiBoYyh0KS5nZXQoZSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gdD9QdSh0KTpudWxsfSl9LHVjKTtmdW5jdGlvbiB1Yyh0LGUpe3RoaXMucmVmZXJlbmNlRGVsZWdhdGU9dCx0aGlzLlI9ZX1mdW5jdGlvbiBjYyh0KXt0aGlzLkh0PXR9ZnVuY3Rpb24gaGModCl7cmV0dXJuIHd1KHQsS2Euc3RvcmUpfWZ1bmN0aW9uIGxjKHQpe3JldHVybiB3dSh0LFFhLnN0b3JlKX1mdW5jdGlvbiBmYyh0KXtyZXR1cm4gd3UodCxHYS5zdG9yZSl9ZnVuY3Rpb24gZGMoZSl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtpZihlLmNvZGUhPT1Eci5GQUlMRURfUFJFQ09ORElUSU9OfHxlLm1lc3NhZ2UhPT0kYSl0aHJvdyBlO3JldHVybiB4cihcIkxvY2FsU3RvcmVcIixcIlVuZXhwZWN0ZWRseSBsb3N0IHByaW1hcnkgbGVhc2VcIiksWzJdfSl9KX1mdW5jdGlvbiBwYyh0LGUpe3ZhciBuPXRbMF0scj10WzFdLHQ9ZVswXSxlPWVbMV0sdD1xcihuLHQpO3JldHVybiAwPT09dD9xcihyLGUpOnR9dmFyIHljPShFYy5wcm90b3R5cGUuaWU9ZnVuY3Rpb24oKXtyZXR1cm4rK3RoaXMuc2V9LEVjLnByb3RvdHlwZS5yZT1mdW5jdGlvbih0KXt2YXIgZT1bdCx0aGlzLmllKCldO3RoaXMuYnVmZmVyLnNpemU8dGhpcy5uZT90aGlzLmJ1ZmZlcj10aGlzLmJ1ZmZlci5hZGQoZSk6cGMoZSx0PXRoaXMuYnVmZmVyLmxhc3QoKSk8MCYmKHRoaXMuYnVmZmVyPXRoaXMuYnVmZmVyLmRlbGV0ZSh0KS5hZGQoZSkpfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoRWMucHJvdG90eXBlLFwibWF4VmFsdWVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYnVmZmVyLmxhc3QoKVswXX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxFYyksZ2M9KEljLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbih0KXstMSE9PXRoaXMuZ2FyYmFnZUNvbGxlY3Rvci5wYXJhbXMuY2FjaGVTaXplQ29sbGVjdGlvblRocmVzaG9sZCYmdGhpcy51ZSh0KX0sSWMucHJvdG90eXBlLnN0b3A9ZnVuY3Rpb24oKXt0aGlzLmNlJiYodGhpcy5jZS5jYW5jZWwoKSx0aGlzLmNlPW51bGwpfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoSWMucHJvdG90eXBlLFwic3RhcnRlZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbCE9PXRoaXMuY2V9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksSWMucHJvdG90eXBlLnVlPWZ1bmN0aW9uKG4pe3ZhciB0PXRoaXMsZT10aGlzLm9lPzNlNTo2ZTQ7eHIoXCJMcnVHYXJiYWdlQ29sbGVjdG9yXCIsXCJHYXJiYWdlIGNvbGxlY3Rpb24gc2NoZWR1bGVkIGluIFwiK2UrXCJtc1wiKSx0aGlzLmNlPXRoaXMuYXN5bmNRdWV1ZS5lbnF1ZXVlQWZ0ZXJEZWxheShcImxydV9nYXJiYWdlX2NvbGxlY3Rpb25cIixlLGZ1bmN0aW9uKCl7cmV0dXJuIHkodCx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnRoaXMuY2U9bnVsbCx0aGlzLm9lPSEwLHQubGFiZWw9MTtjYXNlIDE6cmV0dXJuIHQudHJ5cy5wdXNoKFsxLDMsLDddKSxbNCxuLmNvbGxlY3RHYXJiYWdlKHRoaXMuZ2FyYmFnZUNvbGxlY3RvcildO2Nhc2UgMjpyZXR1cm4gdC5zZW50KCksWzMsN107Y2FzZSAzOnJldHVybiBsdShlPXQuc2VudCgpKT8oeHIoXCJMcnVHYXJiYWdlQ29sbGVjdG9yXCIsXCJJZ25vcmluZyBJbmRleGVkREIgZXJyb3IgZHVyaW5nIGdhcmJhZ2UgY29sbGVjdGlvbjogXCIsZSksWzMsNl0pOlszLDRdO2Nhc2UgNDpyZXR1cm5bNCxkYyhlKV07Y2FzZSA1OnQuc2VudCgpLHQubGFiZWw9NjtjYXNlIDY6cmV0dXJuWzMsN107Y2FzZSA3OnJldHVybls0LHRoaXMudWUobildO2Nhc2UgODpyZXR1cm4gdC5zZW50KCksWzJdfX0pfSl9KX0sSWMpLG1jPSh3Yy5wcm90b3R5cGUuY2FsY3VsYXRlVGFyZ2V0Q291bnQ9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hZS5oZSh0KS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBNYXRoLmZsb29yKGUvMTAwKnQpfSl9LHdjLnByb3RvdHlwZS5udGhTZXF1ZW5jZU51bWJlcj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7aWYoMD09PWUpcmV0dXJuIHR1LnJlc29sdmUoX3Iubyk7dmFyIHI9bmV3IHljKGUpO3JldHVybiB0aGlzLmFlLmZvckVhY2hUYXJnZXQodCxmdW5jdGlvbih0KXtyZXR1cm4gci5yZSh0LnNlcXVlbmNlTnVtYmVyKX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gbi5hZS5sZSh0LGZ1bmN0aW9uKHQpe3JldHVybiByLnJlKHQpfSl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHIubWF4VmFsdWV9KX0sd2MucHJvdG90eXBlLnJlbW92ZVRhcmdldHM9ZnVuY3Rpb24odCxlLG4pe3JldHVybiB0aGlzLmFlLnJlbW92ZVRhcmdldHModCxlLG4pfSx3Yy5wcm90b3R5cGUucmVtb3ZlT3JwaGFuZWREb2N1bWVudHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5hZS5yZW1vdmVPcnBoYW5lZERvY3VtZW50cyh0LGUpfSx3Yy5wcm90b3R5cGUuY29sbGVjdD1mdW5jdGlvbihlLG4pe3ZhciByPXRoaXM7cmV0dXJuLTE9PT10aGlzLnBhcmFtcy5jYWNoZVNpemVDb2xsZWN0aW9uVGhyZXNob2xkPyh4cihcIkxydUdhcmJhZ2VDb2xsZWN0b3JcIixcIkdhcmJhZ2UgY29sbGVjdGlvbiBza2lwcGVkOyBkaXNhYmxlZFwiKSx0dS5yZXNvbHZlKFl1KSk6dGhpcy5nZXRDYWNoZVNpemUoZSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gdDxyLnBhcmFtcy5jYWNoZVNpemVDb2xsZWN0aW9uVGhyZXNob2xkPyh4cihcIkxydUdhcmJhZ2VDb2xsZWN0b3JcIixcIkdhcmJhZ2UgY29sbGVjdGlvbiBza2lwcGVkOyBDYWNoZSBzaXplIFwiK3QrXCIgaXMgbG93ZXIgdGhhbiB0aHJlc2hvbGQgXCIrci5wYXJhbXMuY2FjaGVTaXplQ29sbGVjdGlvblRocmVzaG9sZCksWXUpOnIuZmUoZSxuKX0pfSx3Yy5wcm90b3R5cGUuZ2V0Q2FjaGVTaXplPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmFlLmdldENhY2hlU2l6ZSh0KX0sd2MucHJvdG90eXBlLmZlPWZ1bmN0aW9uKGUsbil7dmFyIHIsaSxvLHMsYSx1LGMsaD10aGlzLGw9RGF0ZS5ub3coKTtyZXR1cm4gdGhpcy5jYWxjdWxhdGVUYXJnZXRDb3VudChlLHRoaXMucGFyYW1zLnBlcmNlbnRpbGVUb0NvbGxlY3QpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIGk9dD5oLnBhcmFtcy5tYXhpbXVtU2VxdWVuY2VOdW1iZXJzVG9Db2xsZWN0Pyh4cihcIkxydUdhcmJhZ2VDb2xsZWN0b3JcIixcIkNhcHBpbmcgc2VxdWVuY2UgbnVtYmVycyB0byBjb2xsZWN0IGRvd24gdG8gdGhlIG1heGltdW0gb2YgXCIraC5wYXJhbXMubWF4aW11bVNlcXVlbmNlTnVtYmVyc1RvQ29sbGVjdCtcIiBmcm9tIFwiK3QpLGgucGFyYW1zLm1heGltdW1TZXF1ZW5jZU51bWJlcnNUb0NvbGxlY3QpOnQscz1EYXRlLm5vdygpLGgubnRoU2VxdWVuY2VOdW1iZXIoZSxpKX0pLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHI9dCxhPURhdGUubm93KCksaC5yZW1vdmVUYXJnZXRzKGUscixuKX0pLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIG89dCx1PURhdGUubm93KCksaC5yZW1vdmVPcnBoYW5lZERvY3VtZW50cyhlLHIpfSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gYz1EYXRlLm5vdygpLFJyKCk8PWYuREVCVUcmJnhyKFwiTHJ1R2FyYmFnZUNvbGxlY3RvclwiLFwiTFJVIEdhcmJhZ2UgQ29sbGVjdGlvblxcblxcdENvdW50ZWQgdGFyZ2V0cyBpbiBcIisocy1sKStcIm1zXFxuXFx0RGV0ZXJtaW5lZCBsZWFzdCByZWNlbnRseSB1c2VkIFwiK2krXCIgaW4gXCIrKGEtcykrXCJtc1xcblxcdFJlbW92ZWQgXCIrbytcIiB0YXJnZXRzIGluIFwiKyh1LWEpK1wibXNcXG5cXHRSZW1vdmVkIFwiK3QrXCIgZG9jdW1lbnRzIGluIFwiKyhjLXUpK1wibXNcXG5Ub3RhbCBEdXJhdGlvbjogXCIrKGMtbCkrXCJtc1wiKSx0dS5yZXNvbHZlKHtkaWRSdW46ITAsc2VxdWVuY2VOdW1iZXJzQ29sbGVjdGVkOmksdGFyZ2V0c1JlbW92ZWQ6byxkb2N1bWVudHNSZW1vdmVkOnR9KX0pfSx3YyksdmM9KGJjLnByb3RvdHlwZS5oZT1mdW5jdGlvbih0KXt2YXIgbj10aGlzLmRlKHQpO3JldHVybiB0aGlzLmRiLmdldFRhcmdldENhY2hlKCkuZ2V0VGFyZ2V0Q291bnQodCkubmV4dChmdW5jdGlvbihlKXtyZXR1cm4gbi5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBlK3R9KX0pfSxiYy5wcm90b3R5cGUuZGU9ZnVuY3Rpb24odCl7dmFyIGU9MDtyZXR1cm4gdGhpcy5sZSh0LGZ1bmN0aW9uKHQpe2UrK30pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gZX0pfSxiYy5wcm90b3R5cGUuZm9yRWFjaFRhcmdldD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmRiLmdldFRhcmdldENhY2hlKCkuZm9yRWFjaFRhcmdldCh0LGUpfSxiYy5wcm90b3R5cGUubGU9ZnVuY3Rpb24odCxuKXtyZXR1cm4gdGhpcy53ZSh0LGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG4oZSl9KX0sYmMucHJvdG90eXBlLmFkZFJlZmVyZW5jZT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIFRjKHQsbil9LGJjLnByb3RvdHlwZS5yZW1vdmVSZWZlcmVuY2U9ZnVuY3Rpb24odCxlLG4pe3JldHVybiBUYyh0LG4pfSxiYy5wcm90b3R5cGUucmVtb3ZlVGFyZ2V0cz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHRoaXMuZGIuZ2V0VGFyZ2V0Q2FjaGUoKS5yZW1vdmVUYXJnZXRzKHQsZSxuKX0sYmMucHJvdG90eXBlLm1hcmtQb3RlbnRpYWxseU9ycGhhbmVkPVRjLGJjLnByb3RvdHlwZS5fZT1mdW5jdGlvbih0LGUpe3JldHVybiByPWUsaT0hMSxvYyhuPXQpLiR0KGZ1bmN0aW9uKHQpe3JldHVybiBuYyhuLHQscikubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gdCYmKGk9ITApLHR1LnJlc29sdmUoIXQpfSl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIGl9KTt2YXIgbixyLGl9LGJjLnByb3RvdHlwZS5yZW1vdmVPcnBoYW5lZERvY3VtZW50cz1mdW5jdGlvbihuLHIpe3ZhciBpPXRoaXMsbz10aGlzLmRiLmdldFJlbW90ZURvY3VtZW50Q2FjaGUoKS5uZXdDaGFuZ2VCdWZmZXIoKSxzPVtdLGE9MDtyZXR1cm4gdGhpcy53ZShuLGZ1bmN0aW9uKGUsdCl7dDw9ciYmKHQ9aS5fZShuLGUpLm5leHQoZnVuY3Rpb24odCl7aWYoIXQpcmV0dXJuIGErKyxvLmdldEVudHJ5KG4sZSkubmV4dChmdW5jdGlvbigpe3JldHVybiBvLnJlbW92ZUVudHJ5KGUpLGZjKG4pLmRlbGV0ZShbMCxDYShlLnBhdGgpXSl9KX0pLHMucHVzaCh0KSl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHR1LndhaXRGb3Iocyl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIG8uYXBwbHkobil9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIGF9KX0sYmMucHJvdG90eXBlLnJlbW92ZVRhcmdldD1mdW5jdGlvbih0LGUpe2U9ZS53aXRoU2VxdWVuY2VOdW1iZXIodC5jdXJyZW50U2VxdWVuY2VOdW1iZXIpO3JldHVybiB0aGlzLmRiLmdldFRhcmdldENhY2hlKCkudXBkYXRlVGFyZ2V0RGF0YSh0LGUpfSxiYy5wcm90b3R5cGUudXBkYXRlTGltYm9Eb2N1bWVudD1UYyxiYy5wcm90b3R5cGUud2U9ZnVuY3Rpb24odCxyKXt2YXIgaSx0PWZjKHQpLG89X3IubztyZXR1cm4gdC5PdCh7aW5kZXg6R2EuZG9jdW1lbnRUYXJnZXRzSW5kZXh9LGZ1bmN0aW9uKHQsZSl7dmFyIG49dFswXSx0PSh0WzFdLGUucGF0aCksZT1lLnNlcXVlbmNlTnVtYmVyOzA9PT1uPyhvIT09X3IubyYmcihuZXcgbWkoeGEoaSkpLG8pLG89ZSxpPXQpOm89X3Iub30pLm5leHQoZnVuY3Rpb24oKXtvIT09X3IubyYmcihuZXcgbWkoeGEoaSkpLG8pfSl9LGJjLnByb3RvdHlwZS5nZXRDYWNoZVNpemU9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGIuZ2V0UmVtb3RlRG9jdW1lbnRDYWNoZSgpLmdldFNpemUodCl9LGJjKTtmdW5jdGlvbiBiYyh0LGUpe3RoaXMuZGI9dCx0aGlzLmdhcmJhZ2VDb2xsZWN0b3I9bmV3IG1jKHRoaXMsZSl9ZnVuY3Rpb24gd2ModCxlKXt0aGlzLmFlPXQsdGhpcy5wYXJhbXM9ZX1mdW5jdGlvbiBJYyh0LGUpe3RoaXMuZ2FyYmFnZUNvbGxlY3Rvcj10LHRoaXMuYXN5bmNRdWV1ZT1lLHRoaXMub2U9ITEsdGhpcy5jZT1udWxsfWZ1bmN0aW9uIEVjKHQpe3RoaXMubmU9dCx0aGlzLmJ1ZmZlcj1uZXcgT3MocGMpLHRoaXMuc2U9MH1mdW5jdGlvbiBUYyh0LGUpe3JldHVybiBmYyh0KS5wdXQoKHQ9dC5jdXJyZW50U2VxdWVuY2VOdW1iZXIsbmV3IEdhKDAsQ2EoZS5wYXRoKSx0KSkpfXZhciBfYyxTYz0oUmMucHJvdG90eXBlLmdldD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLm1hcEtleUZuKHQpLGU9dGhpcy5pbm5lcltlXTtpZih2b2lkIDAhPT1lKWZvcih2YXIgbj0wLHI9ZTtuPHIubGVuZ3RoO24rKyl7dmFyIGk9cltuXSxvPWlbMF0saT1pWzFdO2lmKHRoaXMuZXF1YWxzRm4obyx0KSlyZXR1cm4gaX19LFJjLnByb3RvdHlwZS5oYXM9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuZ2V0KHQpfSxSYy5wcm90b3R5cGUuc2V0PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5tYXBLZXlGbih0KSxyPXRoaXMuaW5uZXJbbl07aWYodm9pZCAwIT09cil7Zm9yKHZhciBpPTA7aTxyLmxlbmd0aDtpKyspaWYodGhpcy5lcXVhbHNGbihyW2ldWzBdLHQpKXJldHVybiB2b2lkKHJbaV09W3QsZV0pO3IucHVzaChbdCxlXSl9ZWxzZSB0aGlzLmlubmVyW25dPVtbdCxlXV19LFJjLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5tYXBLZXlGbih0KSxuPXRoaXMuaW5uZXJbZV07aWYodm9pZCAwPT09bilyZXR1cm4hMTtmb3IodmFyIHI9MDtyPG4ubGVuZ3RoO3IrKylpZih0aGlzLmVxdWFsc0ZuKG5bcl1bMF0sdCkpcmV0dXJuIDE9PT1uLmxlbmd0aD9kZWxldGUgdGhpcy5pbm5lcltlXTpuLnNwbGljZShyLDEpLCEwO3JldHVybiExfSxSYy5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbihzKXtXcih0aGlzLmlubmVyLGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTAscj1lO248ci5sZW5ndGg7bisrKXt2YXIgaT1yW25dLG89aVswXSxpPWlbMV07cyhvLGkpfX0pfSxSYy5wcm90b3R5cGUuaXNFbXB0eT1mdW5jdGlvbigpe3JldHVybiBZcih0aGlzLmlubmVyKX0sUmMpLEk9KENjLnByb3RvdHlwZS5nZXRSZWFkVGltZT1mdW5jdGlvbih0KXt0PXRoaXMuY2hhbmdlcy5nZXQodCk7cmV0dXJuIHQ/dC5yZWFkVGltZTpHci5taW4oKX0sQ2MucHJvdG90eXBlLmFkZEVudHJ5PWZ1bmN0aW9uKHQsZSl7dGhpcy5hc3NlcnROb3RBcHBsaWVkKCksdGhpcy5jaGFuZ2VzLnNldCh0LmtleSx7ZG9jdW1lbnQ6dCxyZWFkVGltZTplfSl9LENjLnByb3RvdHlwZS5yZW1vdmVFbnRyeT1mdW5jdGlvbih0LGUpe3ZvaWQgMD09PWUmJihlPW51bGwpLHRoaXMuYXNzZXJ0Tm90QXBwbGllZCgpLHRoaXMuY2hhbmdlcy5zZXQodCx7ZG9jdW1lbnQ6T2kubmV3SW52YWxpZERvY3VtZW50KHQpLHJlYWRUaW1lOmV9KX0sQ2MucHJvdG90eXBlLmdldEVudHJ5PWZ1bmN0aW9uKHQsZSl7dGhpcy5hc3NlcnROb3RBcHBsaWVkKCk7dmFyIG49dGhpcy5jaGFuZ2VzLmdldChlKTtyZXR1cm4gdm9pZCAwIT09bj90dS5yZXNvbHZlKG4uZG9jdW1lbnQpOnRoaXMuZ2V0RnJvbUNhY2hlKHQsZSl9LENjLnByb3RvdHlwZS5nZXRFbnRyaWVzPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuZ2V0QWxsRnJvbUNhY2hlKHQsZSl9LENjLnByb3RvdHlwZS5hcHBseT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5hc3NlcnROb3RBcHBsaWVkKCksdGhpcy5jaGFuZ2VzQXBwbGllZD0hMCx0aGlzLmFwcGx5Q2hhbmdlcyh0KX0sQ2MucHJvdG90eXBlLmFzc2VydE5vdEFwcGxpZWQ9ZnVuY3Rpb24oKXt9LENjKSxOYz0oa2MucHJvdG90eXBlLmFkZEVudHJ5PWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gT2ModCkucHV0KExjKGUpLG4pfSxrYy5wcm90b3R5cGUucmVtb3ZlRW50cnk9ZnVuY3Rpb24odCxlKXt0PU9jKHQpLGU9TGMoZSk7cmV0dXJuIHQuZGVsZXRlKGUpfSxrYy5wcm90b3R5cGUudXBkYXRlTWV0YWRhdGE9ZnVuY3Rpb24oZSxuKXt2YXIgcj10aGlzO3JldHVybiB0aGlzLmdldE1ldGFkYXRhKGUpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHQuYnl0ZVNpemUrPW4sci5tZShlLHQpfSl9LGtjLnByb3RvdHlwZS5nZXRFbnRyeT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9jKHQpLmdldChMYyhlKSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gbi55ZShlLHQpfSl9LGtjLnByb3RvdHlwZS5nZT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIE9jKHQpLmdldChMYyhlKSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm57ZG9jdW1lbnQ6bi55ZShlLHQpLHNpemU6WnUodCl9fSl9LGtjLnByb3RvdHlwZS5nZXRFbnRyaWVzPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPVBzO3JldHVybiB0aGlzLnBlKHQsZSxmdW5jdGlvbih0LGUpe2U9bi55ZSh0LGUpO3I9ci5pbnNlcnQodCxlKX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gcn0pfSxrYy5wcm90b3R5cGUuRWU9ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzLGk9UHMsbz1uZXcgTnMobWkuY29tcGFyYXRvcik7cmV0dXJuIHRoaXMucGUodCxlLGZ1bmN0aW9uKHQsZSl7dmFyIG49ci55ZSh0LGUpO2k9aS5pbnNlcnQodCxuKSxvPW8uaW5zZXJ0KHQsWnUoZSkpfSkubmV4dChmdW5jdGlvbigpe3JldHVybntkb2N1bWVudHM6aSxUZTpvfX0pfSxrYy5wcm90b3R5cGUucGU9ZnVuY3Rpb24odCxlLGkpe2lmKGUuaXNFbXB0eSgpKXJldHVybiB0dS5yZXNvbHZlKCk7dmFyIG49SURCS2V5UmFuZ2UuYm91bmQoZS5maXJzdCgpLnBhdGgudG9BcnJheSgpLGUubGFzdCgpLnBhdGgudG9BcnJheSgpKSxvPWUuZ2V0SXRlcmF0b3IoKSxzPW8uZ2V0TmV4dCgpO3JldHVybiBPYyh0KS5PdCh7cmFuZ2U6bn0sZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1taS5mcm9tU2VnbWVudHModCk7cyYmbWkuY29tcGFyYXRvcihzLHIpPDA7KWkocyxudWxsKSxzPW8uZ2V0TmV4dCgpO3MmJnMuaXNFcXVhbChyKSYmKGkocyxlKSxzPW8uaGFzTmV4dCgpP28uZ2V0TmV4dCgpOm51bGwpLHM/bi5DdChzLnBhdGgudG9BcnJheSgpKTpuLmRvbmUoKX0pLm5leHQoZnVuY3Rpb24oKXtmb3IoO3M7KWkocyxudWxsKSxzPW8uaGFzTmV4dCgpP28uZ2V0TmV4dCgpOm51bGx9KX0sa2MucHJvdG90eXBlLmdldERvY3VtZW50c01hdGNoaW5nUXVlcnk9ZnVuY3Rpb24odCxyLGUpe3ZhciBuLGk9dGhpcyxvPVBzLHM9ci5wYXRoLmxlbmd0aCsxLGE9e307cmV0dXJuIGUuaXNFcXVhbChHci5taW4oKSk/KG49ci5wYXRoLnRvQXJyYXkoKSxhLnJhbmdlPUlEQktleVJhbmdlLmxvd2VyQm91bmQobikpOihuPXIucGF0aC50b0FycmF5KCksZT1DdShlKSxhLnJhbmdlPUlEQktleVJhbmdlLmxvd2VyQm91bmQoW24sZV0sITApLGEuaW5kZXg9QmEuY29sbGVjdGlvblJlYWRUaW1lSW5kZXgpLE9jKHQpLk90KGEsZnVuY3Rpb24odCxlLG4pe3QubGVuZ3RoPT09cyYmKGU9QXUoaS5SLGUpLHIucGF0aC5pc1ByZWZpeE9mKGUua2V5LnBhdGgpP1JvKHIsZSkmJihvPW8uaW5zZXJ0KGUua2V5LGUpKTpuLmRvbmUoKSl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIG99KX0sa2MucHJvdG90eXBlLm5ld0NoYW5nZUJ1ZmZlcj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IERjKHRoaXMsISF0JiZ0LnRyYWNrUmVtb3ZhbHMpfSxrYy5wcm90b3R5cGUuZ2V0U2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5nZXRNZXRhZGF0YSh0KS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiB0LmJ5dGVTaXplfSl9LGtjLnByb3RvdHlwZS5nZXRNZXRhZGF0YT1mdW5jdGlvbih0KXtyZXR1cm4geGModCkuZ2V0KGphLmtleSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gRnIoISF0KSx0fSl9LGtjLnByb3RvdHlwZS5tZT1mdW5jdGlvbih0LGUpe3JldHVybiB4Yyh0KS5wdXQoamEua2V5LGUpfSxrYy5wcm90b3R5cGUueWU9ZnVuY3Rpb24odCxlKXtpZihlKXtlPUF1KHRoaXMuUixlKTtpZighZS5pc05vRG9jdW1lbnQoKXx8IWUudmVyc2lvbi5pc0VxdWFsKEdyLm1pbigpKSlyZXR1cm4gZX1yZXR1cm4gT2kubmV3SW52YWxpZERvY3VtZW50KHQpfSxrYyksRGM9KG4oQWMsX2M9SSksQWMucHJvdG90eXBlLmFwcGx5Q2hhbmdlcz1mdW5jdGlvbihpKXt2YXIgbz10aGlzLHM9W10sYT0wLHU9bmV3IE9zKGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHFyKHQuY2Fub25pY2FsU3RyaW5nKCksZS5jYW5vbmljYWxTdHJpbmcoKSl9KTtyZXR1cm4gdGhpcy5jaGFuZ2VzLmZvckVhY2goZnVuY3Rpb24odCxlKXt2YXIgbixyPW8uQWUuZ2V0KHQpO2UuZG9jdW1lbnQuaXNWYWxpZERvY3VtZW50KCk/KG49a3Uoby5JZS5SLGUuZG9jdW1lbnQsby5nZXRSZWFkVGltZSh0KSksdT11LmFkZCh0LnBhdGgucG9wTGFzdCgpKSxlPVp1KG4pLGErPWUtcixzLnB1c2goby5JZS5hZGRFbnRyeShpLHQsbikpKTooYS09cixvLnRyYWNrUmVtb3ZhbHM/KHI9a3Uoby5JZS5SLE9pLm5ld05vRG9jdW1lbnQodCxHci5taW4oKSksby5nZXRSZWFkVGltZSh0KSkscy5wdXNoKG8uSWUuYWRkRW50cnkoaSx0LHIpKSk6cy5wdXNoKG8uSWUucmVtb3ZlRW50cnkoaSx0KSkpfSksdS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3MucHVzaChvLkllLlV0LmFkZFRvQ29sbGVjdGlvblBhcmVudEluZGV4KGksdCkpfSkscy5wdXNoKHRoaXMuSWUudXBkYXRlTWV0YWRhdGEoaSxhKSksdHUud2FpdEZvcihzKX0sQWMucHJvdG90eXBlLmdldEZyb21DYWNoZT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIHRoaXMuSWUuZ2UodCxlKS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBuLkFlLnNldChlLHQuc2l6ZSksdC5kb2N1bWVudH0pfSxBYy5wcm90b3R5cGUuZ2V0QWxsRnJvbUNhY2hlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gdGhpcy5JZS5FZSh0LGUpLm5leHQoZnVuY3Rpb24odCl7dmFyIGU9dC5kb2N1bWVudHM7cmV0dXJuIHQuVGUuZm9yRWFjaChmdW5jdGlvbih0LGUpe24uQWUuc2V0KHQsZSl9KSxlfSl9LEFjKTtmdW5jdGlvbiBBYyh0LGUpe3ZhciBuPXRoaXM7cmV0dXJuKG49X2MuY2FsbCh0aGlzKXx8dGhpcykuSWU9dCxuLnRyYWNrUmVtb3ZhbHM9ZSxuLkFlPW5ldyBTYyhmdW5jdGlvbih0KXtyZXR1cm4gdC50b1N0cmluZygpfSxmdW5jdGlvbih0LGUpe3JldHVybiB0LmlzRXF1YWwoZSl9KSxufWZ1bmN0aW9uIGtjKHQsZSl7dGhpcy5SPXQsdGhpcy5VdD1lfWZ1bmN0aW9uIENjKCl7dGhpcy5jaGFuZ2VzPW5ldyBTYyhmdW5jdGlvbih0KXtyZXR1cm4gdC50b1N0cmluZygpfSxmdW5jdGlvbih0LGUpe3JldHVybiB0LmlzRXF1YWwoZSl9KSx0aGlzLmNoYW5nZXNBcHBsaWVkPSExfWZ1bmN0aW9uIFJjKHQsZSl7dGhpcy5tYXBLZXlGbj10LHRoaXMuZXF1YWxzRm49ZSx0aGlzLmlubmVyPXt9fWZ1bmN0aW9uIHhjKHQpe3JldHVybiB3dSh0LGphLnN0b3JlKX1mdW5jdGlvbiBPYyh0KXtyZXR1cm4gd3UodCxCYS5zdG9yZSl9ZnVuY3Rpb24gTGModCl7cmV0dXJuIHQucGF0aC50b0FycmF5KCl9dmFyIFBjPShNYy5wcm90b3R5cGUuUnQ9ZnVuY3Rpb24oZSxuLHQscil7dmFyIGk9dGhpcztGcih0PHImJjA8PXQmJnI8PTExKTt2YXIgbz1uZXcgZXUoXCJjcmVhdGVPclVwZ3JhZGVcIixuKTt0PDEmJjE8PXImJihlLmNyZWF0ZU9iamVjdFN0b3JlKE9hLnN0b3JlKSwocz1lKS5jcmVhdGVPYmplY3RTdG9yZShQYS5zdG9yZSx7a2V5UGF0aDpQYS5rZXlQYXRofSkscy5jcmVhdGVPYmplY3RTdG9yZShNYS5zdG9yZSx7a2V5UGF0aDpNYS5rZXlQYXRoLGF1dG9JbmNyZW1lbnQ6ITB9KS5jcmVhdGVJbmRleChNYS51c2VyTXV0YXRpb25zSW5kZXgsTWEudXNlck11dGF0aW9uc0tleVBhdGgse3VuaXF1ZTohMH0pLHMuY3JlYXRlT2JqZWN0U3RvcmUoRmEuc3RvcmUpLEZjKGUpLGUuY3JlYXRlT2JqZWN0U3RvcmUoQmEuc3RvcmUpKTt2YXIgcyxhPXR1LnJlc29sdmUoKTtyZXR1cm4gdDwzJiYzPD1yJiYoMCE9PXQmJigocz1lKS5kZWxldGVPYmplY3RTdG9yZShHYS5zdG9yZSkscy5kZWxldGVPYmplY3RTdG9yZShLYS5zdG9yZSkscy5kZWxldGVPYmplY3RTdG9yZShRYS5zdG9yZSksRmMoZSkpLGE9YS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHQ9by5zdG9yZShRYS5zdG9yZSksZT1uZXcgUWEoMCwwLEdyLm1pbigpLnRvVGltZXN0YW1wKCksMCksdC5wdXQoUWEua2V5LGUpO3ZhciB0LGV9KSksdDw0JiY0PD1yJiYoYT0oYT0wIT09dD9hLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gbj1lLChyPW8pLnN0b3JlKE1hLnN0b3JlKS5OdCgpLm5leHQoZnVuY3Rpb24odCl7bi5kZWxldGVPYmplY3RTdG9yZShNYS5zdG9yZSksbi5jcmVhdGVPYmplY3RTdG9yZShNYS5zdG9yZSx7a2V5UGF0aDpNYS5rZXlQYXRoLGF1dG9JbmNyZW1lbnQ6ITB9KS5jcmVhdGVJbmRleChNYS51c2VyTXV0YXRpb25zSW5kZXgsTWEudXNlck11dGF0aW9uc0tleVBhdGgse3VuaXF1ZTohMH0pO3ZhciBlPXIuc3RvcmUoTWEuc3RvcmUpLHQ9dC5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGUucHV0KHQpfSk7cmV0dXJuIHR1LndhaXRGb3IodCl9KTt2YXIgbixyfSk6YSkubmV4dChmdW5jdGlvbigpe2UuY3JlYXRlT2JqZWN0U3RvcmUoSGEuc3RvcmUse2tleVBhdGg6SGEua2V5UGF0aH0pfSkpLHQ8NSYmNTw9ciYmKGE9YS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIGkuUmUobyl9KSksdDw2JiY2PD1yJiYoYT1hLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gZS5jcmVhdGVPYmplY3RTdG9yZShqYS5zdG9yZSksaS5iZShvKX0pKSx0PDcmJjc8PXImJihhPWEubmV4dChmdW5jdGlvbigpe3JldHVybiBpLnZlKG8pfSkpLHQ8OCYmODw9ciYmKGE9YS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIGkuUGUoZSxvKX0pKSx0PDkmJjk8PXImJihhPWEubmV4dChmdW5jdGlvbigpe3ZhciB0Oyh0PWUpLm9iamVjdFN0b3JlTmFtZXMuY29udGFpbnMoXCJyZW1vdGVEb2N1bWVudENoYW5nZXNcIikmJnQuZGVsZXRlT2JqZWN0U3RvcmUoXCJyZW1vdGVEb2N1bWVudENoYW5nZXNcIiksKHQ9bi5vYmplY3RTdG9yZShCYS5zdG9yZSkpLmNyZWF0ZUluZGV4KEJhLnJlYWRUaW1lSW5kZXgsQmEucmVhZFRpbWVJbmRleFBhdGgse3VuaXF1ZTohMX0pLHQuY3JlYXRlSW5kZXgoQmEuY29sbGVjdGlvblJlYWRUaW1lSW5kZXgsQmEuY29sbGVjdGlvblJlYWRUaW1lSW5kZXhQYXRoLHt1bmlxdWU6ITF9KX0pKSx0PDEwJiYxMDw9ciYmKGE9YS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIGkuVmUobyl9KSksYT10PDExJiYxMTw9cj9hLm5leHQoZnVuY3Rpb24oKXtlLmNyZWF0ZU9iamVjdFN0b3JlKFdhLnN0b3JlLHtrZXlQYXRoOldhLmtleVBhdGh9KSxlLmNyZWF0ZU9iamVjdFN0b3JlKFlhLnN0b3JlLHtrZXlQYXRoOllhLmtleVBhdGh9KX0pOmF9LE1jLnByb3RvdHlwZS5iZT1mdW5jdGlvbihlKXt2YXIgbj0wO3JldHVybiBlLnN0b3JlKEJhLnN0b3JlKS5PdChmdW5jdGlvbih0LGUpe24rPVp1KGUpfSkubmV4dChmdW5jdGlvbigpe3ZhciB0PW5ldyBqYShuKTtyZXR1cm4gZS5zdG9yZShqYS5zdG9yZSkucHV0KGphLmtleSx0KX0pfSxNYy5wcm90b3R5cGUuUmU9ZnVuY3Rpb24obil7dmFyIHI9dGhpcyx0PW4uc3RvcmUoUGEuc3RvcmUpLGk9bi5zdG9yZShNYS5zdG9yZSk7cmV0dXJuIHQuTnQoKS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiB0dS5mb3JFYWNoKHQsZnVuY3Rpb24oZSl7dmFyIHQ9SURCS2V5UmFuZ2UuYm91bmQoW2UudXNlcklkLC0xXSxbZS51c2VySWQsZS5sYXN0QWNrbm93bGVkZ2VkQmF0Y2hJZF0pO3JldHVybiBpLk50KE1hLnVzZXJNdXRhdGlvbnNJbmRleCx0KS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiB0dS5mb3JFYWNoKHQsZnVuY3Rpb24odCl7RnIodC51c2VySWQ9PT1lLnVzZXJJZCk7dD1MdShyLlIsdCk7cmV0dXJuICR1KG4sZS51c2VySWQsdCkubmV4dChmdW5jdGlvbigpe30pfSl9KX0pfSl9LE1jLnByb3RvdHlwZS52ZT1mdW5jdGlvbih0KXt2YXIgbz10LnN0b3JlKEdhLnN0b3JlKSxlPXQuc3RvcmUoQmEuc3RvcmUpO3JldHVybiB0LnN0b3JlKFFhLnN0b3JlKS5nZXQoUWEua2V5KS5uZXh0KGZ1bmN0aW9uKHIpe3ZhciBpPVtdO3JldHVybiBlLk90KGZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3ICRyKHQpLHQ9WzAsQ2EobildO2kucHVzaChvLmdldCh0KS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiB0P3R1LnJlc29sdmUoKTpvLnB1dChuZXcgR2EoMCxDYShuKSxyLmhpZ2hlc3RMaXN0ZW5TZXF1ZW5jZU51bWJlcikpfSkpfSkubmV4dChmdW5jdGlvbigpe3JldHVybiB0dS53YWl0Rm9yKGkpfSl9KX0sTWMucHJvdG90eXBlLlBlPWZ1bmN0aW9uKHQsZSl7dC5jcmVhdGVPYmplY3RTdG9yZSh6YS5zdG9yZSx7a2V5UGF0aDp6YS5rZXlQYXRofSk7ZnVuY3Rpb24gcih0KXtpZihpLmFkZCh0KSl7dmFyIGU9dC5sYXN0U2VnbWVudCgpLHQ9dC5wb3BMYXN0KCk7cmV0dXJuIG4ucHV0KHtjb2xsZWN0aW9uSWQ6ZSxwYXJlbnQ6Q2EodCl9KX19dmFyIG49ZS5zdG9yZSh6YS5zdG9yZSksaT1uZXcgS3U7cmV0dXJuIGUuc3RvcmUoQmEuc3RvcmUpLk90KHtrdDohMH0sZnVuY3Rpb24odCxlKXt0PW5ldyAkcih0KTtyZXR1cm4gcih0LnBvcExhc3QoKSl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIGUuc3RvcmUoRmEuc3RvcmUpLk90KHtrdDohMH0sZnVuY3Rpb24odCxlKXt0WzBdO3ZhciBuPXRbMV0sbj0odFsyXSx4YShuKSk7cmV0dXJuIHIobi5wb3BMYXN0KCkpfSl9KX0sTWMucHJvdG90eXBlLlZlPWZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMscj10LnN0b3JlKEthLnN0b3JlKTtyZXR1cm4gci5PdChmdW5jdGlvbih0LGUpe2U9UHUoZSksZT1NdShuLlIsZSk7cmV0dXJuIHIucHV0KGUpfSl9LE1jKTtmdW5jdGlvbiBNYyh0KXt0aGlzLlI9dH1mdW5jdGlvbiBGYyh0KXt0LmNyZWF0ZU9iamVjdFN0b3JlKEdhLnN0b3JlLHtrZXlQYXRoOkdhLmtleVBhdGh9KS5jcmVhdGVJbmRleChHYS5kb2N1bWVudFRhcmdldHNJbmRleCxHYS5kb2N1bWVudFRhcmdldHNLZXlQYXRoLHt1bmlxdWU6ITB9KSx0LmNyZWF0ZU9iamVjdFN0b3JlKEthLnN0b3JlLHtrZXlQYXRoOkthLmtleVBhdGh9KS5jcmVhdGVJbmRleChLYS5xdWVyeVRhcmdldHNJbmRleE5hbWUsS2EucXVlcnlUYXJnZXRzS2V5UGF0aCx7dW5pcXVlOiEwfSksdC5jcmVhdGVPYmplY3RTdG9yZShRYS5zdG9yZSl9dmFyIFZjPVwiRmFpbGVkIHRvIG9idGFpbiBleGNsdXNpdmUgYWNjZXNzIHRvIHRoZSBwZXJzaXN0ZW5jZSBsYXllci4gVG8gYWxsb3cgc2hhcmVkIGFjY2VzcywgbXVsdGktdGFiIHN5bmNocm9uaXphdGlvbiBoYXMgdG8gYmUgZW5hYmxlZCBpbiBhbGwgdGFicy4gSWYgeW91IGFyZSB1c2luZyBgZXhwZXJpbWVudGFsRm9yY2VPd25pbmdUYWI6dHJ1ZWAsIG1ha2Ugc3VyZSB0aGF0IG9ubHkgb25lIHRhYiBoYXMgcGVyc2lzdGVuY2UgZW5hYmxlZCBhdCBhbnkgZ2l2ZW4gdGltZS5cIixVYz0ocWMucHJvdG90eXBlLnN0YXJ0PWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gdGhpcy5qZSgpLnRoZW4oZnVuY3Rpb24oKXtpZighZS5pc1ByaW1hcnkmJiFlLmFsbG93VGFiU3luY2hyb25pemF0aW9uKXRocm93IG5ldyBBcihEci5GQUlMRURfUFJFQ09ORElUSU9OLFZjKTtyZXR1cm4gZS5XZSgpLGUuR2UoKSxlLnplKCksZS5ydW5UcmFuc2FjdGlvbihcImdldEhpZ2hlc3RMaXN0ZW5TZXF1ZW5jZU51bWJlclwiLFwicmVhZG9ubHlcIixmdW5jdGlvbih0KXtyZXR1cm4gZS5xZS5nZXRIaWdoZXN0U2VxdWVuY2VOdW1iZXIodCl9KX0pLnRoZW4oZnVuY3Rpb24odCl7ZS5OZT1uZXcgX3IodCxlLkRlKX0pLnRoZW4oZnVuY3Rpb24oKXtlLnhlPSEwfSkuY2F0Y2goZnVuY3Rpb24odCl7cmV0dXJuIGUuQmUmJmUuQmUuY2xvc2UoKSxQcm9taXNlLnJlamVjdCh0KX0pfSxxYy5wcm90b3R5cGUuSGU9ZnVuY3Rpb24obil7dmFyIHQ9dGhpcztyZXR1cm4gdGhpcy5NZT1mdW5jdGlvbihlKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnN0YXJ0ZWQ/WzIsbihlKV06WzJdfSl9KX0sbih0aGlzLmlzUHJpbWFyeSl9LHFjLnByb3RvdHlwZS5zZXREYXRhYmFzZURlbGV0ZWRMaXN0ZW5lcj1mdW5jdGlvbihuKXt2YXIgdD10aGlzO3RoaXMuQmUudnQoZnVuY3Rpb24oZSl7cmV0dXJuIHkodCx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiBudWxsPT09ZS5uZXdWZXJzaW9uP1s0LG4oKV06WzMsMl07Y2FzZSAxOnQuc2VudCgpLHQubGFiZWw9MjtjYXNlIDI6cmV0dXJuWzJdfX0pfSl9KX0scWMucHJvdG90eXBlLnNldE5ldHdvcmtFbmFibGVkPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy5uZXR3b3JrRW5hYmxlZCE9PXQmJih0aGlzLm5ldHdvcmtFbmFibGVkPXQsdGhpcy5TZS5lbnF1ZXVlQW5kRm9yZ2V0KGZ1bmN0aW9uKCl7cmV0dXJuIHkoZSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiB0aGlzLnN0YXJ0ZWQ/WzQsdGhpcy5qZSgpXTpbMywyXTtjYXNlIDE6dC5zZW50KCksdC5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bMl19fSl9KX0pKX0scWMucHJvdG90eXBlLmplPWZ1bmN0aW9uKCl7dmFyIG49dGhpcztyZXR1cm4gdGhpcy5ydW5UcmFuc2FjdGlvbihcInVwZGF0ZUNsaWVudE1ldGFkYXRhQW5kVHJ5QmVjb21lUHJpbWFyeVwiLFwicmVhZHdyaXRlXCIsZnVuY3Rpb24oZSl7cmV0dXJuIGpjKGUpLnB1dChuZXcgSGEobi5jbGllbnRJZCxEYXRlLm5vdygpLG4ubmV0d29ya0VuYWJsZWQsbi5pbkZvcmVncm91bmQpKS5uZXh0KGZ1bmN0aW9uKCl7aWYobi5pc1ByaW1hcnkpcmV0dXJuIG4uSmUoZSkubmV4dChmdW5jdGlvbih0KXt0fHwobi5pc1ByaW1hcnk9ITEsbi5TZS5lbnF1ZXVlUmV0cnlhYmxlKGZ1bmN0aW9uKCl7cmV0dXJuIG4uTWUoITEpfSkpfSl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIG4uWWUoZSl9KS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBuLmlzUHJpbWFyeSYmIXQ/bi5YZShlKS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuITF9KTohIXQmJm4uWmUoZSkubmV4dChmdW5jdGlvbigpe3JldHVybiEwfSl9KX0pLmNhdGNoKGZ1bmN0aW9uKHQpe2lmKGx1KHQpKXJldHVybiB4cihcIkluZGV4ZWREYlBlcnNpc3RlbmNlXCIsXCJGYWlsZWQgdG8gZXh0ZW5kIG93bmVyIGxlYXNlOiBcIix0KSxuLmlzUHJpbWFyeTtpZighbi5hbGxvd1RhYlN5bmNocm9uaXphdGlvbil0aHJvdyB0O3JldHVybiB4cihcIkluZGV4ZWREYlBlcnNpc3RlbmNlXCIsXCJSZWxlYXNpbmcgb3duZXIgbGVhc2UgYWZ0ZXIgZXJyb3IgZHVyaW5nIGxlYXNlIHJlZnJlc2hcIix0KSwhMX0pLnRoZW4oZnVuY3Rpb24odCl7bi5pc1ByaW1hcnkhPT10JiZuLlNlLmVucXVldWVSZXRyeWFibGUoZnVuY3Rpb24oKXtyZXR1cm4gbi5NZSh0KX0pLG4uaXNQcmltYXJ5PXR9KX0scWMucHJvdG90eXBlLkplPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIEJjKHQpLmdldChPYS5rZXkpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHR1LnJlc29sdmUoZS50bih0KSl9KX0scWMucHJvdG90eXBlLmVuPWZ1bmN0aW9uKHQpe3JldHVybiBqYyh0KS5kZWxldGUodGhpcy5jbGllbnRJZCl9LHFjLnByb3RvdHlwZS5ubj1mdW5jdGlvbigpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scixpLG89dGhpcztyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIXRoaXMuaXNQcmltYXJ5fHx0aGlzLnNuKHRoaXMuJGUsMThlNSk/WzMsMl06KHRoaXMuJGU9RGF0ZS5ub3coKSxbNCx0aGlzLnJ1blRyYW5zYWN0aW9uKFwibWF5YmVHYXJiYWdlQ29sbGVjdE11bHRpQ2xpZW50U3RhdGVcIixcInJlYWR3cml0ZS1wcmltYXJ5XCIsZnVuY3Rpb24odCl7dmFyIHI9d3UodCxIYS5zdG9yZSk7cmV0dXJuIHIuTnQoKS5uZXh0KGZ1bmN0aW9uKHQpe3ZhciBlPW8ucm4odCwxOGU1KSxuPXQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybi0xPT09ZS5pbmRleE9mKHQpfSk7cmV0dXJuIHR1LmZvckVhY2gobixmdW5jdGlvbih0KXtyZXR1cm4gci5kZWxldGUodC5jbGllbnRJZCl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIG59KX0pfSkuY2F0Y2goZnVuY3Rpb24oKXtyZXR1cm5bXX0pXSk7Y2FzZSAxOmlmKGU9dC5zZW50KCksdGhpcy5LZSlmb3Iobj0wLHI9ZTtuPHIubGVuZ3RoO24rKylpPXJbbl0sdGhpcy5LZS5yZW1vdmVJdGVtKHRoaXMub24oaS5jbGllbnRJZCkpO3QubGFiZWw9MjtjYXNlIDI6cmV0dXJuWzJdfX0pfSl9LHFjLnByb3RvdHlwZS56ZT1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5PZT10aGlzLlNlLmVucXVldWVBZnRlckRlbGF5KFwiY2xpZW50X21ldGFkYXRhX3JlZnJlc2hcIiw0ZTMsZnVuY3Rpb24oKXtyZXR1cm4gdC5qZSgpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gdC5ubigpfSkudGhlbihmdW5jdGlvbigpe3JldHVybiB0LnplKCl9KX0pfSxxYy5wcm90b3R5cGUudG49ZnVuY3Rpb24odCl7cmV0dXJuISF0JiZ0Lm93bmVySWQ9PT10aGlzLmNsaWVudElkfSxxYy5wcm90b3R5cGUuWWU9ZnVuY3Rpb24oZSl7dmFyIHI9dGhpcztyZXR1cm4gdGhpcy5DZT90dS5yZXNvbHZlKCEwKTpCYyhlKS5nZXQoT2Eua2V5KS5uZXh0KGZ1bmN0aW9uKHQpe2lmKG51bGwhPT10JiZyLnNuKHQubGVhc2VUaW1lc3RhbXBNcyw1ZTMpJiYhci5jbih0Lm93bmVySWQpKXtpZihyLnRuKHQpJiZyLm5ldHdvcmtFbmFibGVkKXJldHVybiEwO2lmKCFyLnRuKHQpKXtpZighdC5hbGxvd1RhYlN5bmNocm9uaXphdGlvbil0aHJvdyBuZXcgQXIoRHIuRkFJTEVEX1BSRUNPTkRJVElPTixWYyk7cmV0dXJuITF9fXJldHVybiEoIXIubmV0d29ya0VuYWJsZWR8fCFyLmluRm9yZWdyb3VuZCl8fGpjKGUpLk50KCkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09ci5ybih0LDVlMykuZmluZChmdW5jdGlvbih0KXtpZihyLmNsaWVudElkIT09dC5jbGllbnRJZCl7dmFyIGU9IXIubmV0d29ya0VuYWJsZWQmJnQubmV0d29ya0VuYWJsZWQsbj0hci5pbkZvcmVncm91bmQmJnQuaW5Gb3JlZ3JvdW5kLHQ9ci5uZXR3b3JrRW5hYmxlZD09PXQubmV0d29ya0VuYWJsZWQ7aWYoZXx8biYmdClyZXR1cm4hMH1yZXR1cm4hMX0pfSl9KS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiByLmlzUHJpbWFyeSE9PXQmJnhyKFwiSW5kZXhlZERiUGVyc2lzdGVuY2VcIixcIkNsaWVudCBcIisodD9cImlzXCI6XCJpcyBub3RcIikrXCIgZWxpZ2libGUgZm9yIGEgcHJpbWFyeSBsZWFzZS5cIiksdH0pfSxxYy5wcm90b3R5cGUuc2h1dGRvd249ZnVuY3Rpb24oKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbj10aGlzO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdGhpcy54ZT0hMSx0aGlzLnVuKCksdGhpcy5PZSYmKHRoaXMuT2UuY2FuY2VsKCksdGhpcy5PZT1udWxsKSx0aGlzLmFuKCksdGhpcy5obigpLFs0LHRoaXMuQmUucnVuVHJhbnNhY3Rpb24oXCJzaHV0ZG93blwiLFwicmVhZHdyaXRlXCIsW09hLnN0b3JlLEhhLnN0b3JlXSxmdW5jdGlvbih0KXt2YXIgZT1uZXcgdnUodCxfci5vKTtyZXR1cm4gbi5YZShlKS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIG4uZW4oZSl9KX0pXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLHRoaXMuQmUuY2xvc2UoKSx0aGlzLmxuKCksWzJdfX0pfSl9LHFjLnByb3RvdHlwZS5ybj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIHQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiBuLnNuKHQudXBkYXRlVGltZU1zLGUpJiYhbi5jbih0LmNsaWVudElkKX0pfSxxYy5wcm90b3R5cGUuZm49ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiB0aGlzLnJ1blRyYW5zYWN0aW9uKFwiZ2V0QWN0aXZlQ2xpZW50c1wiLFwicmVhZG9ubHlcIixmdW5jdGlvbih0KXtyZXR1cm4gamModCkuTnQoKS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBlLnJuKHQsMThlNSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNsaWVudElkfSl9KX0pfSxPYmplY3QuZGVmaW5lUHJvcGVydHkocWMucHJvdG90eXBlLFwic3RhcnRlZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy54ZX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxxYy5wcm90b3R5cGUuZ2V0TXV0YXRpb25RdWV1ZT1mdW5jdGlvbih0KXtyZXR1cm4gdGMuS3QodCx0aGlzLlIsdGhpcy5VdCx0aGlzLnJlZmVyZW5jZURlbGVnYXRlKX0scWMucHJvdG90eXBlLmdldFRhcmdldENhY2hlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucWV9LHFjLnByb3RvdHlwZS5nZXRSZW1vdGVEb2N1bWVudENhY2hlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuVWV9LHFjLnByb3RvdHlwZS5nZXRJbmRleE1hbmFnZXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5VdH0scWMucHJvdG90eXBlLmdldEJ1bmRsZUNhY2hlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuUWV9LHFjLnByb3RvdHlwZS5ydW5UcmFuc2FjdGlvbj1mdW5jdGlvbihlLG4scil7dmFyIGk9dGhpczt4cihcIkluZGV4ZWREYlBlcnNpc3RlbmNlXCIsXCJTdGFydGluZyB0cmFuc2FjdGlvbjpcIixlKTt2YXIgbyx0PVwicmVhZG9ubHlcIj09PW4/XCJyZWFkb25seVwiOlwicmVhZHdyaXRlXCI7cmV0dXJuIHRoaXMuQmUucnVuVHJhbnNhY3Rpb24oZSx0LEphLGZ1bmN0aW9uKHQpe3JldHVybiBvPW5ldyB2dSh0LGkuTmU/aS5OZS5uZXh0KCk6X3IubyksXCJyZWFkd3JpdGUtcHJpbWFyeVwiPT09bj9pLkplKG8pLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuISF0fHxpLlllKG8pfSkubmV4dChmdW5jdGlvbih0KXtpZighdCl0aHJvdyBPcihcIkZhaWxlZCB0byBvYnRhaW4gcHJpbWFyeSBsZWFzZSBmb3IgYWN0aW9uICdcIitlK1wiJy5cIiksaS5pc1ByaW1hcnk9ITEsaS5TZS5lbnF1ZXVlUmV0cnlhYmxlKGZ1bmN0aW9uKCl7cmV0dXJuIGkuTWUoITEpfSksbmV3IEFyKERyLkZBSUxFRF9QUkVDT05ESVRJT04sJGEpO3JldHVybiByKG8pfSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gaS5aZShvKS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHR9KX0pOmkuZG4obykubmV4dChmdW5jdGlvbigpe3JldHVybiByKG8pfSl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBvLnJhaXNlT25Db21taXR0ZWRFdmVudCgpLHR9KX0scWMucHJvdG90eXBlLmRuPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7cmV0dXJuIEJjKHQpLmdldChPYS5rZXkpLm5leHQoZnVuY3Rpb24odCl7aWYobnVsbCE9PXQmJmUuc24odC5sZWFzZVRpbWVzdGFtcE1zLDVlMykmJiFlLmNuKHQub3duZXJJZCkmJiFlLnRuKHQpJiYhKGUuQ2V8fGUuYWxsb3dUYWJTeW5jaHJvbml6YXRpb24mJnQuYWxsb3dUYWJTeW5jaHJvbml6YXRpb24pKXRocm93IG5ldyBBcihEci5GQUlMRURfUFJFQ09ORElUSU9OLFZjKX0pfSxxYy5wcm90b3R5cGUuWmU9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IE9hKHRoaXMuY2xpZW50SWQsdGhpcy5hbGxvd1RhYlN5bmNocm9uaXphdGlvbixEYXRlLm5vdygpKTtyZXR1cm4gQmModCkucHV0KE9hLmtleSxlKX0scWMueXQ9ZnVuY3Rpb24oKXtyZXR1cm4gbnUueXQoKX0scWMucHJvdG90eXBlLlhlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1CYyh0KTtyZXR1cm4gbi5nZXQoT2Eua2V5KS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBlLnRuKHQpPyh4cihcIkluZGV4ZWREYlBlcnNpc3RlbmNlXCIsXCJSZWxlYXNpbmcgcHJpbWFyeSBsZWFzZS5cIiksbi5kZWxldGUoT2Eua2V5KSk6dHUucmVzb2x2ZSgpfSl9LHFjLnByb3RvdHlwZS5zbj1mdW5jdGlvbih0LGUpe3ZhciBuPURhdGUubm93KCk7cmV0dXJuISh0PG4tZXx8bjx0JiYoT3IoXCJEZXRlY3RlZCBhbiB1cGRhdGUgdGltZSB0aGF0IGlzIGluIHRoZSBmdXR1cmU6IFwiK3QrXCIgPiBcIituKSwxKSl9LHFjLnByb3RvdHlwZS5XZT1mdW5jdGlvbigpe3ZhciB0PXRoaXM7bnVsbCE9PXRoaXMuZG9jdW1lbnQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHRoaXMuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciYmKHRoaXMua2U9ZnVuY3Rpb24oKXt0LlNlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4gdC5pbkZvcmVncm91bmQ9XCJ2aXNpYmxlXCI9PT10LmRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSx0LmplKCl9KX0sdGhpcy5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLHRoaXMua2UpLHRoaXMuaW5Gb3JlZ3JvdW5kPVwidmlzaWJsZVwiPT09dGhpcy5kb2N1bWVudC52aXNpYmlsaXR5U3RhdGUpfSxxYy5wcm90b3R5cGUuYW49ZnVuY3Rpb24oKXt0aGlzLmtlJiYodGhpcy5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLHRoaXMua2UpLHRoaXMua2U9bnVsbCl9LHFjLnByb3RvdHlwZS5HZT1mdW5jdGlvbigpe3ZhciB0LGU9dGhpcztcImZ1bmN0aW9uXCI9PXR5cGVvZihudWxsPT09KHQ9dGhpcy53aW5kb3cpfHx2b2lkIDA9PT10P3ZvaWQgMDp0LmFkZEV2ZW50TGlzdGVuZXIpJiYodGhpcy5GZT1mdW5jdGlvbigpe2UudW4oKSxlLlNlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4gZS5zaHV0ZG93bigpfSl9LHRoaXMud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ1bmxvYWRcIix0aGlzLkZlKSl9LHFjLnByb3RvdHlwZS5obj1mdW5jdGlvbigpe3RoaXMuRmUmJih0aGlzLndpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwidW5sb2FkXCIsdGhpcy5GZSksdGhpcy5GZT1udWxsKX0scWMucHJvdG90eXBlLmNuPWZ1bmN0aW9uKHQpe3RyeXt2YXIgZT1udWxsIT09KG51bGw9PT0oZT10aGlzLktlKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5nZXRJdGVtKHRoaXMub24odCkpKTtyZXR1cm4geHIoXCJJbmRleGVkRGJQZXJzaXN0ZW5jZVwiLFwiQ2xpZW50ICdcIit0K1wiJyBcIisoZT9cImlzXCI6XCJpcyBub3RcIikrXCIgem9tYmllZCBpbiBMb2NhbFN0b3JhZ2VcIiksZX1jYXRjaCh0KXtyZXR1cm4gT3IoXCJJbmRleGVkRGJQZXJzaXN0ZW5jZVwiLFwiRmFpbGVkIHRvIGdldCB6b21iaWVkIGNsaWVudCBpZC5cIix0KSwhMX19LHFjLnByb3RvdHlwZS51bj1mdW5jdGlvbigpe2lmKHRoaXMuS2UpdHJ5e3RoaXMuS2Uuc2V0SXRlbSh0aGlzLm9uKHRoaXMuY2xpZW50SWQpLFN0cmluZyhEYXRlLm5vdygpKSl9Y2F0Y2godCl7T3IoXCJGYWlsZWQgdG8gc2V0IHpvbWJpZSBjbGllbnQgaWQuXCIsdCl9fSxxYy5wcm90b3R5cGUubG49ZnVuY3Rpb24oKXtpZih0aGlzLktlKXRyeXt0aGlzLktlLnJlbW92ZUl0ZW0odGhpcy5vbih0aGlzLmNsaWVudElkKSl9Y2F0Y2godCl7fX0scWMucHJvdG90eXBlLm9uPWZ1bmN0aW9uKHQpe3JldHVyblwiZmlyZXN0b3JlX3pvbWJpZV9cIit0aGlzLnBlcnNpc3RlbmNlS2V5K1wiX1wiK3R9LHFjKTtmdW5jdGlvbiBxYyh0LGUsbixyLGksbyxzLGEsdSxjKXtpZih0aGlzLmFsbG93VGFiU3luY2hyb25pemF0aW9uPXQsdGhpcy5wZXJzaXN0ZW5jZUtleT1lLHRoaXMuY2xpZW50SWQ9bix0aGlzLlNlPWksdGhpcy53aW5kb3c9byx0aGlzLmRvY3VtZW50PXMsdGhpcy5EZT11LHRoaXMuQ2U9Yyx0aGlzLk5lPW51bGwsdGhpcy54ZT0hMSx0aGlzLmlzUHJpbWFyeT0hMSx0aGlzLm5ldHdvcmtFbmFibGVkPSEwLHRoaXMuRmU9bnVsbCx0aGlzLmluRm9yZWdyb3VuZD0hMSx0aGlzLmtlPW51bGwsdGhpcy5PZT1udWxsLHRoaXMuJGU9TnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLHRoaXMuTWU9ZnVuY3Rpb24odCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpfSwhcWMueXQoKSl0aHJvdyBuZXcgQXIoRHIuVU5JTVBMRU1FTlRFRCxcIlRoaXMgcGxhdGZvcm0gaXMgZWl0aGVyIG1pc3NpbmcgSW5kZXhlZERCIG9yIGlzIGtub3duIHRvIGhhdmUgYW4gaW5jb21wbGV0ZSBpbXBsZW1lbnRhdGlvbi4gT2ZmbGluZSBwZXJzaXN0ZW5jZSBoYXMgYmVlbiBkaXNhYmxlZC5cIik7dGhpcy5yZWZlcmVuY2VEZWxlZ2F0ZT1uZXcgdmModGhpcyxyKSx0aGlzLkxlPWUrXCJtYWluXCIsdGhpcy5SPW5ldyBfdShhKSx0aGlzLkJlPW5ldyBudSh0aGlzLkxlLDExLG5ldyBQYyh0aGlzLlIpKSx0aGlzLnFlPW5ldyBhYyh0aGlzLnJlZmVyZW5jZURlbGVnYXRlLHRoaXMuUiksdGhpcy5VdD1uZXcgR3UsdGhpcy5VZT0oZT10aGlzLlIsYT10aGlzLlV0LG5ldyBOYyhlLGEpKSx0aGlzLlFlPW5ldyBWdSx0aGlzLndpbmRvdyYmdGhpcy53aW5kb3cubG9jYWxTdG9yYWdlP3RoaXMuS2U9dGhpcy53aW5kb3cubG9jYWxTdG9yYWdlOih0aGlzLktlPW51bGwsITE9PT1jJiZPcihcIkluZGV4ZWREYlBlcnNpc3RlbmNlXCIsXCJMb2NhbFN0b3JhZ2UgaXMgdW5hdmFpbGFibGUuIEFzIGEgcmVzdWx0LCBwZXJzaXN0ZW5jZSBtYXkgbm90IHdvcmsgcmVsaWFibHkuIEluIHBhcnRpY3VsYXIgZW5hYmxlUGVyc2lzdGVuY2UoKSBjb3VsZCBmYWlsIGltbWVkaWF0ZWx5IGFmdGVyIHJlZnJlc2hpbmcgdGhlIHBhZ2UuXCIpKX1mdW5jdGlvbiBCYyh0KXtyZXR1cm4gd3UodCxPYS5zdG9yZSl9ZnVuY3Rpb24gamModCl7cmV0dXJuIHd1KHQsSGEuc3RvcmUpfWZ1bmN0aW9uIEtjKHQsZSl7dmFyIG49dC5wcm9qZWN0SWQ7cmV0dXJuIHQuaXNEZWZhdWx0RGF0YWJhc2V8fChuKz1cIi5cIit0LmRhdGFiYXNlKSxcImZpcmVzdG9yZS9cIitlK1wiL1wiK24rXCIvXCJ9ZnVuY3Rpb24gR2ModCxlKXt0aGlzLnByb2dyZXNzPXQsdGhpcy53bj1lfXZhciBRYz0oJGMucHJvdG90eXBlLm1uPWZ1bmN0aW9uKGUsbil7dmFyIHI9dGhpcztyZXR1cm4gdGhpcy5fbi5nZXRBbGxNdXRhdGlvbkJhdGNoZXNBZmZlY3RpbmdEb2N1bWVudEtleShlLG4pLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHIueW4oZSxuLHQpfSl9LCRjLnByb3RvdHlwZS55bj1mdW5jdGlvbih0LGUscil7cmV0dXJuIHRoaXMuVWUuZ2V0RW50cnkodCxlKS5uZXh0KGZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0wLG49cjtlPG4ubGVuZ3RoO2UrKyluW2VdLmFwcGx5VG9Mb2NhbFZpZXcodCk7cmV0dXJuIHR9KX0sJGMucHJvdG90eXBlLmduPWZ1bmN0aW9uKHQsaSl7dC5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTAscj1pO248ci5sZW5ndGg7bisrKXJbbl0uYXBwbHlUb0xvY2FsVmlldyhlKX0pfSwkYy5wcm90b3R5cGUucG49ZnVuY3Rpb24oZSx0KXt2YXIgbj10aGlzO3JldHVybiB0aGlzLlVlLmdldEVudHJpZXMoZSx0KS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBuLkVuKGUsdCkubmV4dChmdW5jdGlvbigpe3JldHVybiB0fSl9KX0sJGMucHJvdG90eXBlLkVuPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcztyZXR1cm4gdGhpcy5fbi5nZXRBbGxNdXRhdGlvbkJhdGNoZXNBZmZlY3RpbmdEb2N1bWVudEtleXModCxlKS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBuLmduKGUsdCl9KX0sJGMucHJvdG90eXBlLmdldERvY3VtZW50c01hdGNoaW5nUXVlcnk9ZnVuY3Rpb24odCxlLG4pe3JldHVybiByPWUsbWkuaXNEb2N1bWVudEtleShyLnBhdGgpJiZudWxsPT09ci5jb2xsZWN0aW9uR3JvdXAmJjA9PT1yLmZpbHRlcnMubGVuZ3RoP3RoaXMuVG4odCxlLnBhdGgpOl9vKGUpP3RoaXMuSW4odCxlLG4pOnRoaXMuQW4odCxlLG4pO3ZhciByfSwkYy5wcm90b3R5cGUuVG49ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5tbih0LG5ldyBtaShlKSkubmV4dChmdW5jdGlvbih0KXt2YXIgZT1WcztyZXR1cm4gZT10LmlzRm91bmREb2N1bWVudCgpP2UuaW5zZXJ0KHQua2V5LHQpOmV9KX0sJGMucHJvdG90eXBlLkluPWZ1bmN0aW9uKG4scixpKXt2YXIgbz10aGlzLHM9ci5jb2xsZWN0aW9uR3JvdXAsYT1WcztyZXR1cm4gdGhpcy5VdC5nZXRDb2xsZWN0aW9uUGFyZW50cyhuLHMpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHR1LmZvckVhY2godCxmdW5jdGlvbih0KXt2YXIgZSxlPShlPXIsdD10LmNoaWxkKHMpLG5ldyBtbyh0LG51bGwsZS5leHBsaWNpdE9yZGVyQnkuc2xpY2UoKSxlLmZpbHRlcnMuc2xpY2UoKSxlLmxpbWl0LGUubGltaXRUeXBlLGUuc3RhcnRBdCxlLmVuZEF0KSk7cmV0dXJuIG8uQW4obixlLGkpLm5leHQoZnVuY3Rpb24odCl7dC5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7YT1hLmluc2VydCh0LGUpfSl9KX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gYX0pfSl9LCRjLnByb3RvdHlwZS5Bbj1mdW5jdGlvbihlLG4sdCl7dmFyIGMsaCxyPXRoaXM7cmV0dXJuIHRoaXMuVWUuZ2V0RG9jdW1lbnRzTWF0Y2hpbmdRdWVyeShlLG4sdCkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gYz10LHIuX24uZ2V0QWxsTXV0YXRpb25CYXRjaGVzQWZmZWN0aW5nUXVlcnkoZSxuKX0pLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIGg9dCxyLlJuKGUsaCxjKS5uZXh0KGZ1bmN0aW9uKHQpe2M9dDtmb3IodmFyIGU9MCxuPWg7ZTxuLmxlbmd0aDtlKyspZm9yKHZhciByPW5bZV0saT0wLG89ci5tdXRhdGlvbnM7aTxvLmxlbmd0aDtpKyspe3ZhciBzPW9baV0sYT1zLmtleSx1PWMuZ2V0KGEpO251bGw9PXUmJih1PU9pLm5ld0ludmFsaWREb2N1bWVudChhKSxjPWMuaW5zZXJ0KGEsdSkpLGlzKHMsdSxyLmxvY2FsV3JpdGVUaW1lKSx1LmlzRm91bmREb2N1bWVudCgpfHwoYz1jLnJlbW92ZShhKSl9fSl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIGMuZm9yRWFjaChmdW5jdGlvbih0LGUpe1JvKG4sZSl8fChjPWMucmVtb3ZlKHQpKX0pLGN9KX0sJGMucHJvdG90eXBlLlJuPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9QnMoKSxpPTAsbz1lO2k8by5sZW5ndGg7aSsrKWZvcih2YXIgcz0wLGE9b1tpXS5tdXRhdGlvbnM7czxhLmxlbmd0aDtzKyspe3ZhciB1PWFbc107dSBpbnN0YW5jZW9mIGhzJiZudWxsPT09bi5nZXQodS5rZXkpJiYocj1yLmFkZCh1LmtleSkpfXZhciBjPW47cmV0dXJuIHRoaXMuVWUuZ2V0RW50cmllcyh0LHIpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbih0LGUpe2UuaXNGb3VuZERvY3VtZW50KCkmJihjPWMuaW5zZXJ0KHQsZSkpfSksY30pfSwkYyksemM9KEpjLlBuPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPUJzKCkscj1CcygpLGk9MCxvPWUuZG9jQ2hhbmdlcztpPG8ubGVuZ3RoO2krKyl7dmFyIHM9b1tpXTtzd2l0Y2gocy50eXBlKXtjYXNlIDA6bj1uLmFkZChzLmRvYy5rZXkpO2JyZWFrO2Nhc2UgMTpyPXIuYWRkKHMuZG9jLmtleSl9fXJldHVybiBuZXcgSmModCxlLmZyb21DYWNoZSxuLHIpfSxKYyksSGM9KFhjLnByb3RvdHlwZS5Wbj1mdW5jdGlvbih0KXt0aGlzLlNuPXR9LFhjLnByb3RvdHlwZS5nZXREb2N1bWVudHNNYXRjaGluZ1F1ZXJ5PWZ1bmN0aW9uKGUscixpLG8pe3ZhciBzPXRoaXM7cmV0dXJuIDA9PT1yLmZpbHRlcnMubGVuZ3RoJiZudWxsPT09ci5saW1pdCYmbnVsbD09ci5zdGFydEF0JiZudWxsPT1yLmVuZEF0JiYoMD09PXIuZXhwbGljaXRPcmRlckJ5Lmxlbmd0aHx8MT09PXIuZXhwbGljaXRPcmRlckJ5Lmxlbmd0aCYmci5leHBsaWNpdE9yZGVyQnlbMF0uZmllbGQuaXNLZXlGaWVsZCgpKXx8aS5pc0VxdWFsKEdyLm1pbigpKT90aGlzLkRuKGUscik6dGhpcy5Tbi5wbihlLG8pLm5leHQoZnVuY3Rpb24odCl7dmFyIG49cy5DbihyLHQpO3JldHVybih3byhyKXx8SW8ocikpJiZzLk5uKHIubGltaXRUeXBlLG4sbyxpKT9zLkRuKGUscik6KFJyKCk8PWYuREVCVUcmJnhyKFwiUXVlcnlFbmdpbmVcIixcIlJlLXVzaW5nIHByZXZpb3VzIHJlc3VsdCBmcm9tICVzIHRvIGV4ZWN1dGUgcXVlcnk6ICVzXCIsaS50b1N0cmluZygpLENvKHIpKSxzLlNuLmdldERvY3VtZW50c01hdGNoaW5nUXVlcnkoZSxyLGkpLm5leHQoZnVuY3Rpb24oZSl7cmV0dXJuIG4uZm9yRWFjaChmdW5jdGlvbih0KXtlPWUuaW5zZXJ0KHQua2V5LHQpfSksZX0pKX0pfSxYYy5wcm90b3R5cGUuQ249ZnVuY3Rpb24obix0KXt2YXIgcj1uZXcgT3MoeG8obikpO3JldHVybiB0LmZvckVhY2goZnVuY3Rpb24odCxlKXtSbyhuLGUpJiYocj1yLmFkZChlKSl9KSxyfSxYYy5wcm90b3R5cGUuTm49ZnVuY3Rpb24odCxlLG4scil7aWYobi5zaXplIT09ZS5zaXplKXJldHVybiEwO2U9XCJGXCI9PT10P2UubGFzdCgpOmUuZmlyc3QoKTtyZXR1cm4hIWUmJihlLmhhc1BlbmRpbmdXcml0ZXN8fDA8ZS52ZXJzaW9uLmNvbXBhcmVUbyhyKSl9LFhjLnByb3RvdHlwZS5Ebj1mdW5jdGlvbih0LGUpe3JldHVybiBScigpPD1mLkRFQlVHJiZ4cihcIlF1ZXJ5RW5naW5lXCIsXCJVc2luZyBmdWxsIGNvbGxlY3Rpb24gc2NhbiB0byBleGVjdXRlIHF1ZXJ5OlwiLENvKGUpKSx0aGlzLlNuLmdldERvY3VtZW50c01hdGNoaW5nUXVlcnkodCxlLEdyLm1pbigpKX0sWGMpLFdjPShZYy5wcm90b3R5cGUuY29sbGVjdEdhcmJhZ2U9ZnVuY3Rpb24oZSl7dmFyIG49dGhpcztyZXR1cm4gdGhpcy5wZXJzaXN0ZW5jZS5ydW5UcmFuc2FjdGlvbihcIkNvbGxlY3QgZ2FyYmFnZVwiLFwicmVhZHdyaXRlLXByaW1hcnlcIixmdW5jdGlvbih0KXtyZXR1cm4gZS5jb2xsZWN0KHQsbi5Gbil9KX0sWWMpO2Z1bmN0aW9uIFljKHQsZSxuLHIpe3RoaXMucGVyc2lzdGVuY2U9dCx0aGlzLnhuPWUsdGhpcy5SPXIsdGhpcy5Gbj1uZXcgTnMocXIpLHRoaXMua249bmV3IFNjKEZpLFZpKSx0aGlzLk9uPUdyLm1pbigpLHRoaXMuX249dC5nZXRNdXRhdGlvblF1ZXVlKG4pLHRoaXMuJG49dC5nZXRSZW1vdGVEb2N1bWVudENhY2hlKCksdGhpcy5xZT10LmdldFRhcmdldENhY2hlKCksdGhpcy5Nbj1uZXcgUWModGhpcy4kbix0aGlzLl9uLHRoaXMucGVyc2lzdGVuY2UuZ2V0SW5kZXhNYW5hZ2VyKCkpLHRoaXMuUWU9dC5nZXRCdW5kbGVDYWNoZSgpLHRoaXMueG4uVm4odGhpcy5Nbil9ZnVuY3Rpb24gWGMoKXt9ZnVuY3Rpb24gSmModCxlLG4scil7dGhpcy50YXJnZXRJZD10LHRoaXMuZnJvbUNhY2hlPWUsdGhpcy5ibj1uLHRoaXMudm49cn1mdW5jdGlvbiAkYyh0LGUsbil7dGhpcy5VZT10LHRoaXMuX249ZSx0aGlzLlV0PW59ZnVuY3Rpb24gWmModCxlLG4scil7cmV0dXJuIG5ldyBXYyh0LGUsbixyKX1mdW5jdGlvbiB0aChpLG8pe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4sdixyO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gbj0oZT1pKS5fbix2PWUuTW4sWzQsZS5wZXJzaXN0ZW5jZS5ydW5UcmFuc2FjdGlvbihcIkhhbmRsZSB1c2VyIGNoYW5nZVwiLFwicmVhZG9ubHlcIixmdW5jdGlvbihnKXt2YXIgbTtyZXR1cm4gZS5fbi5nZXRBbGxNdXRhdGlvbkJhdGNoZXMoZykubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gbT10LG49ZS5wZXJzaXN0ZW5jZS5nZXRNdXRhdGlvblF1ZXVlKG8pLHY9bmV3IFFjKGUuJG4sbixlLnBlcnNpc3RlbmNlLmdldEluZGV4TWFuYWdlcigpKSxuLmdldEFsbE11dGF0aW9uQmF0Y2hlcyhnKX0pLm5leHQoZnVuY3Rpb24odCl7Zm9yKHZhciBlPVtdLG49W10scj1CcygpLGk9MCxvPW07aTxvLmxlbmd0aDtpKyspe3ZhciBzPW9baV07ZS5wdXNoKHMuYmF0Y2hJZCk7Zm9yKHZhciBhPTAsdT1zLm11dGF0aW9uczthPHUubGVuZ3RoO2ErKyl2YXIgYz11W2FdLHI9ci5hZGQoYy5rZXkpfWZvcih2YXIgaD0wLGw9dDtoPGwubGVuZ3RoO2grKyl7dmFyIGY9bFtoXTtuLnB1c2goZi5iYXRjaElkKTtmb3IodmFyIGQ9MCxwPWYubXV0YXRpb25zO2Q8cC5sZW5ndGg7ZCsrKXt2YXIgeT1wW2RdO3I9ci5hZGQoeS5rZXkpfX1yZXR1cm4gdi5wbihnLHIpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJue0xuOnQscmVtb3ZlZEJhdGNoSWRzOmUsYWRkZWRCYXRjaElkczpufX0pfSl9KV07Y2FzZSAxOnJldHVybiByPXQuc2VudCgpLFsyLChlLl9uPW4sZS5Nbj12LGUueG4uVm4oZS5NbikscildfX0pfSl9ZnVuY3Rpb24gZWgodCxoKXt2YXIgbD10O3JldHVybiBsLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiQWNrbm93bGVkZ2UgYmF0Y2hcIixcInJlYWR3cml0ZS1wcmltYXJ5XCIsZnVuY3Rpb24odCl7dmFyIGUscixpLG8scyxuLGEsdT1oLmJhdGNoLmtleXMoKSxjPWwuJG4ubmV3Q2hhbmdlQnVmZmVyKHt0cmFja1JlbW92YWxzOiEwfSk7cmV0dXJuIGU9bCxyPXQsbz1jLHM9KGk9aCkuYmF0Y2gsbj1zLmtleXMoKSxhPXR1LnJlc29sdmUoKSxuLmZvckVhY2goZnVuY3Rpb24obil7YT1hLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gby5nZXRFbnRyeShyLG4pfSkubmV4dChmdW5jdGlvbih0KXt2YXIgZT1pLmRvY1ZlcnNpb25zLmdldChuKTtGcihudWxsIT09ZSksdC52ZXJzaW9uLmNvbXBhcmVUbyhlKTwwJiYocy5hcHBseVRvUmVtb3RlRG9jdW1lbnQodCxpKSx0LmlzVmFsaWREb2N1bWVudCgpJiZvLmFkZEVudHJ5KHQsaS5jb21taXRWZXJzaW9uKSl9KX0pLGEubmV4dChmdW5jdGlvbigpe3JldHVybiBlLl9uLnJlbW92ZU11dGF0aW9uQmF0Y2gocixzKX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gYy5hcHBseSh0KX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gbC5fbi5wZXJmb3JtQ29uc2lzdGVuY3lDaGVjayh0KX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gbC5Nbi5wbih0LHUpfSl9KX1mdW5jdGlvbiBuaCh0KXt2YXIgZT10O3JldHVybiBlLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiR2V0IGxhc3QgcmVtb3RlIHNuYXBzaG90IHZlcnNpb25cIixcInJlYWRvbmx5XCIsZnVuY3Rpb24odCl7cmV0dXJuIGUucWUuZ2V0TGFzdFJlbW90ZVNuYXBzaG90VmVyc2lvbih0KX0pfWZ1bmN0aW9uIHJoKHQscil7dmFyIHU9dCxjPXIuc25hcHNob3RWZXJzaW9uLGg9dS5GbjtyZXR1cm4gdS5wZXJzaXN0ZW5jZS5ydW5UcmFuc2FjdGlvbihcIkFwcGx5IHJlbW90ZSBldmVudFwiLFwicmVhZHdyaXRlLXByaW1hcnlcIixmdW5jdGlvbihzKXt2YXIgdD11LiRuLm5ld0NoYW5nZUJ1ZmZlcih7dHJhY2tSZW1vdmFsczohMH0pO2g9dS5Gbjt2YXIgYT1bXTtyLnRhcmdldENoYW5nZXMuZm9yRWFjaChmdW5jdGlvbih0LGUpe3ZhciBuLHIsaSxvPWguZ2V0KGUpO28mJihhLnB1c2godS5xZS5yZW1vdmVNYXRjaGluZ0tleXMocyx0LnJlbW92ZWREb2N1bWVudHMsZSkubmV4dChmdW5jdGlvbigpe3JldHVybiB1LnFlLmFkZE1hdGNoaW5nS2V5cyhzLHQuYWRkZWREb2N1bWVudHMsZSl9KSksMDwoaT10LnJlc3VtZVRva2VuKS5hcHByb3hpbWF0ZUJ5dGVTaXplKCkmJihuPW8ud2l0aFJlc3VtZVRva2VuKGksYykud2l0aFNlcXVlbmNlTnVtYmVyKHMuY3VycmVudFNlcXVlbmNlTnVtYmVyKSxoPWguaW5zZXJ0KGUsbikscj1vLGk9dCxGcigwPChvPW4pLnJlc3VtZVRva2VuLmFwcHJveGltYXRlQnl0ZVNpemUoKSksKDA9PT1yLnJlc3VtZVRva2VuLmFwcHJveGltYXRlQnl0ZVNpemUoKXx8M2U4PD1vLnNuYXBzaG90VmVyc2lvbi50b01pY3Jvc2Vjb25kcygpLXIuc25hcHNob3RWZXJzaW9uLnRvTWljcm9zZWNvbmRzKCl8fDA8aS5hZGRlZERvY3VtZW50cy5zaXplK2kubW9kaWZpZWREb2N1bWVudHMuc2l6ZStpLnJlbW92ZWREb2N1bWVudHMuc2l6ZSkmJmEucHVzaCh1LnFlLnVwZGF0ZVRhcmdldERhdGEocyxuKSkpKX0pO3ZhciBlLG49UHM7cmV0dXJuIHIuZG9jdW1lbnRVcGRhdGVzLmZvckVhY2goZnVuY3Rpb24odCxlKXtyLnJlc29sdmVkTGltYm9Eb2N1bWVudHMuaGFzKHQpJiZhLnB1c2godS5wZXJzaXN0ZW5jZS5yZWZlcmVuY2VEZWxlZ2F0ZS51cGRhdGVMaW1ib0RvY3VtZW50KHMsdCkpfSksYS5wdXNoKGloKHMsdCxyLmRvY3VtZW50VXBkYXRlcyxjLHZvaWQgMCkubmV4dChmdW5jdGlvbih0KXtuPXR9KSksYy5pc0VxdWFsKEdyLm1pbigpKXx8KGU9dS5xZS5nZXRMYXN0UmVtb3RlU25hcHNob3RWZXJzaW9uKHMpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHUucWUuc2V0VGFyZ2V0c01ldGFkYXRhKHMscy5jdXJyZW50U2VxdWVuY2VOdW1iZXIsYyl9KSxhLnB1c2goZSkpLHR1LndhaXRGb3IoYSkubmV4dChmdW5jdGlvbigpe3JldHVybiB0LmFwcGx5KHMpfSkubmV4dChmdW5jdGlvbigpe3JldHVybiB1Lk1uLkVuKHMsbil9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIG59KX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHUuRm49aCx0fSl9ZnVuY3Rpb24gaWgodCxzLGUsYSx1KXt2YXIgbj1CcygpO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIG49bi5hZGQodCl9KSxzLmdldEVudHJpZXModCxuKS5uZXh0KGZ1bmN0aW9uKGkpe3ZhciBvPVBzO3JldHVybiBlLmZvckVhY2goZnVuY3Rpb24odCxlKXt2YXIgbj1pLmdldCh0KSxyPShudWxsPT11P3ZvaWQgMDp1LmdldCh0KSl8fGE7ZS5pc05vRG9jdW1lbnQoKSYmZS52ZXJzaW9uLmlzRXF1YWwoR3IubWluKCkpPyhzLnJlbW92ZUVudHJ5KHQsciksbz1vLmluc2VydCh0LGUpKTohbi5pc1ZhbGlkRG9jdW1lbnQoKXx8MDxlLnZlcnNpb24uY29tcGFyZVRvKG4udmVyc2lvbil8fDA9PT1lLnZlcnNpb24uY29tcGFyZVRvKG4udmVyc2lvbikmJm4uaGFzUGVuZGluZ1dyaXRlcz8ocy5hZGRFbnRyeShlLHIpLG89by5pbnNlcnQodCxlKSk6eHIoXCJMb2NhbFN0b3JlXCIsXCJJZ25vcmluZyBvdXRkYXRlZCB3YXRjaCB1cGRhdGUgZm9yIFwiLHQsXCIuIEN1cnJlbnQgdmVyc2lvbjpcIixuLnZlcnNpb24sXCIgV2F0Y2ggdmVyc2lvbjpcIixlLnZlcnNpb24pfSksb30pfWZ1bmN0aW9uIG9oKHQscil7dmFyIGk9dDtyZXR1cm4gaS5wZXJzaXN0ZW5jZS5ydW5UcmFuc2FjdGlvbihcIkFsbG9jYXRlIHRhcmdldFwiLFwicmVhZHdyaXRlXCIsZnVuY3Rpb24oZSl7dmFyIG47cmV0dXJuIGkucWUuZ2V0VGFyZ2V0RGF0YShlLHIpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHQ/KG49dCx0dS5yZXNvbHZlKG4pKTppLnFlLmFsbG9jYXRlVGFyZ2V0SWQoZSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm4gbj1uZXcgVHUocix0LDAsZS5jdXJyZW50U2VxdWVuY2VOdW1iZXIpLGkucWUuYWRkVGFyZ2V0RGF0YShlLG4pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gbn0pfSl9KX0pLnRoZW4oZnVuY3Rpb24odCl7dmFyIGU9aS5Gbi5nZXQodC50YXJnZXRJZCk7cmV0dXJuKG51bGw9PT1lfHwwPHQuc25hcHNob3RWZXJzaW9uLmNvbXBhcmVUbyhlLnNuYXBzaG90VmVyc2lvbikpJiYoaS5Gbj1pLkZuLmluc2VydCh0LnRhcmdldElkLHQpLGkua24uc2V0KHIsdC50YXJnZXRJZCkpLHR9KX1mdW5jdGlvbiBzaChpLG8scyl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpuPShlPWkpLkZuLmdldChvKSxyPXM/XCJyZWFkd3JpdGVcIjpcInJlYWR3cml0ZS1wcmltYXJ5XCIsdC5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gdC50cnlzLnB1c2goWzEsNCwsNV0pLHM/WzMsM106WzQsZS5wZXJzaXN0ZW5jZS5ydW5UcmFuc2FjdGlvbihcIlJlbGVhc2UgdGFyZ2V0XCIscixmdW5jdGlvbih0KXtyZXR1cm4gZS5wZXJzaXN0ZW5jZS5yZWZlcmVuY2VEZWxlZ2F0ZS5yZW1vdmVUYXJnZXQodCxuKX0pXTtjYXNlIDI6dC5zZW50KCksdC5sYWJlbD0zO2Nhc2UgMzpyZXR1cm5bMyw1XTtjYXNlIDQ6aWYoIWx1KHI9dC5zZW50KCkpKXRocm93IHI7cmV0dXJuIHhyKFwiTG9jYWxTdG9yZVwiLFwiRmFpbGVkIHRvIHVwZGF0ZSBzZXF1ZW5jZSBudW1iZXJzIGZvciB0YXJnZXQgXCIrbytcIjogXCIrciksWzMsNV07Y2FzZSA1OnJldHVybiBlLkZuPWUuRm4ucmVtb3ZlKG8pLGUua24uZGVsZXRlKG4udGFyZ2V0KSxbMl19fSl9KX1mdW5jdGlvbiBhaCh0LG8scyl7dmFyIGE9dCx1PUdyLm1pbigpLGM9QnMoKTtyZXR1cm4gYS5wZXJzaXN0ZW5jZS5ydW5UcmFuc2FjdGlvbihcIkV4ZWN1dGUgcXVlcnlcIixcInJlYWRvbmx5XCIsZnVuY3Rpb24oZSl7cmV0dXJuIHQ9YSxuPWUscj1ObyhvKSwodm9pZCAwIT09KHQ9KGk9dCkua24uZ2V0KHIpKT90dS5yZXNvbHZlKGkuRm4uZ2V0KHQpKTppLnFlLmdldFRhcmdldERhdGEobixyKSkubmV4dChmdW5jdGlvbih0KXtpZih0KXJldHVybiB1PXQubGFzdExpbWJvRnJlZVNuYXBzaG90VmVyc2lvbixhLnFlLmdldE1hdGNoaW5nS2V5c0ZvclRhcmdldElkKGUsdC50YXJnZXRJZCkubmV4dChmdW5jdGlvbih0KXtjPXR9KX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gYS54bi5nZXREb2N1bWVudHNNYXRjaGluZ1F1ZXJ5KGUsbyxzP3U6R3IubWluKCkscz9jOkJzKCkpfSkubmV4dChmdW5jdGlvbih0KXtyZXR1cm57ZG9jdW1lbnRzOnQsQm46Y319KTt2YXIgdCxuLHIsaX0pfWZ1bmN0aW9uIHVoKHQsZSl7dmFyIG49dCxyPW4ucWUsdD1uLkZuLmdldChlKTtyZXR1cm4gdD9Qcm9taXNlLnJlc29sdmUodC50YXJnZXQpOm4ucGVyc2lzdGVuY2UucnVuVHJhbnNhY3Rpb24oXCJHZXQgdGFyZ2V0IGRhdGFcIixcInJlYWRvbmx5XCIsZnVuY3Rpb24odCl7cmV0dXJuIHIubHQodCxlKS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiB0P3QudGFyZ2V0Om51bGx9KX0pfWZ1bmN0aW9uIGNoKHQpe3ZhciBzPXQ7cmV0dXJuIHMucGVyc2lzdGVuY2UucnVuVHJhbnNhY3Rpb24oXCJHZXQgbmV3IGRvY3VtZW50IGNoYW5nZXNcIixcInJlYWRvbmx5XCIsZnVuY3Rpb24odCl7cmV0dXJuIGU9cy4kbixuPXQsdD1zLk9uLHI9ZSxpPVBzLG89Q3UodCksdD1PYyhuKSxuPUlEQktleVJhbmdlLmxvd2VyQm91bmQobywhMCksdC5PdCh7aW5kZXg6QmEucmVhZFRpbWVJbmRleCxyYW5nZTpufSxmdW5jdGlvbih0LGUpe3ZhciBuPUF1KHIuUixlKTtpPWkuaW5zZXJ0KG4ua2V5LG4pLG89ZS5yZWFkVGltZX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm57d246aSxyZWFkVGltZTpSdShvKX19KTt2YXIgZSxuLHIsaSxvfSkudGhlbihmdW5jdGlvbih0KXt2YXIgZT10LnduLHQ9dC5yZWFkVGltZTtyZXR1cm4gcy5Pbj10LGV9KX1mdW5jdGlvbiBoaChuKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyLChlPW4pLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiU3luY2hyb25pemUgbGFzdCBkb2N1bWVudCBjaGFuZ2UgcmVhZCB0aW1lXCIsXCJyZWFkb25seVwiLGZ1bmN0aW9uKHQpe3JldHVybiB0PU9jKHQpLHI9R3IubWluKCksdC5PdCh7aW5kZXg6QmEucmVhZFRpbWVJbmRleCxyZXZlcnNlOiEwfSxmdW5jdGlvbih0LGUsbil7ZS5yZWFkVGltZSYmKHI9UnUoZS5yZWFkVGltZSkpLG4uZG9uZSgpfSkubmV4dChmdW5jdGlvbigpe3JldHVybiByfSk7dmFyIHJ9KS50aGVuKGZ1bmN0aW9uKHQpe2UuT249dH0pXX0pfSl9dmFyIGxoLGZoLGRoPShMaC5wcm90b3R5cGUuZ2V0QnVuZGxlTWV0YWRhdGE9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdHUucmVzb2x2ZSh0aGlzLktuLmdldChlKSl9LExoLnByb3RvdHlwZS5zYXZlQnVuZGxlTWV0YWRhdGE9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5Lbi5zZXQoZS5pZCx7aWQ6ZS5pZCx2ZXJzaW9uOmUudmVyc2lvbixjcmVhdGVUaW1lOmFhKGUuY3JlYXRlVGltZSl9KSx0dS5yZXNvbHZlKCl9LExoLnByb3RvdHlwZS5nZXROYW1lZFF1ZXJ5PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHR1LnJlc29sdmUodGhpcy5qbi5nZXQoZSkpfSxMaC5wcm90b3R5cGUuc2F2ZU5hbWVkUXVlcnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5qbi5zZXQoZS5uYW1lLHtuYW1lOihlPWUpLm5hbWUscXVlcnk6RnUoZS5idW5kbGVkUXVlcnkpLHJlYWRUaW1lOmFhKGUucmVhZFRpbWUpfSksdHUucmVzb2x2ZSgpfSxMaCkscGg9KE9oLnByb3RvdHlwZS5pc0VtcHR5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuV24uaXNFbXB0eSgpfSxPaC5wcm90b3R5cGUuYWRkUmVmZXJlbmNlPWZ1bmN0aW9uKHQsZSl7ZT1uZXcgeWgodCxlKTt0aGlzLlduPXRoaXMuV24uYWRkKGUpLHRoaXMuem49dGhpcy56bi5hZGQoZSl9LE9oLnByb3RvdHlwZS5Kbj1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7dC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBuLmFkZFJlZmVyZW5jZSh0LGUpfSl9LE9oLnByb3RvdHlwZS5yZW1vdmVSZWZlcmVuY2U9ZnVuY3Rpb24odCxlKXt0aGlzLlluKG5ldyB5aCh0LGUpKX0sT2gucHJvdG90eXBlLlhuPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpczt0LmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIG4ucmVtb3ZlUmVmZXJlbmNlKHQsZSl9KX0sT2gucHJvdG90eXBlLlpuPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1uZXcgbWkobmV3ICRyKFtdKSkscj1uZXcgeWgobix0KSx0PW5ldyB5aChuLHQrMSksaT1bXTtyZXR1cm4gdGhpcy56bi5mb3JFYWNoSW5SYW5nZShbcix0XSxmdW5jdGlvbih0KXtlLlluKHQpLGkucHVzaCh0LmtleSl9KSxpfSxPaC5wcm90b3R5cGUudHM9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuV24uZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gZS5Zbih0KX0pfSxPaC5wcm90b3R5cGUuWW49ZnVuY3Rpb24odCl7dGhpcy5Xbj10aGlzLlduLmRlbGV0ZSh0KSx0aGlzLnpuPXRoaXMuem4uZGVsZXRlKHQpfSxPaC5wcm90b3R5cGUuZXM9ZnVuY3Rpb24odCl7dmFyIGU9bmV3IG1pKG5ldyAkcihbXSkpLG49bmV3IHloKGUsdCksdD1uZXcgeWgoZSx0KzEpLHI9QnMoKTtyZXR1cm4gdGhpcy56bi5mb3JFYWNoSW5SYW5nZShbbix0XSxmdW5jdGlvbih0KXtyPXIuYWRkKHQua2V5KX0pLHJ9LE9oLnByb3RvdHlwZS5jb250YWluc0tleT1mdW5jdGlvbih0KXt2YXIgZT1uZXcgeWgodCwwKSxlPXRoaXMuV24uZmlyc3RBZnRlck9yRXF1YWwoZSk7cmV0dXJuIG51bGwhPT1lJiZ0LmlzRXF1YWwoZS5rZXkpfSxPaCkseWg9KHhoLkduPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG1pLmNvbXBhcmF0b3IodC5rZXksZS5rZXkpfHxxcih0Lm5zLGUubnMpfSx4aC5Ibj1mdW5jdGlvbih0LGUpe3JldHVybiBxcih0Lm5zLGUubnMpfHxtaS5jb21wYXJhdG9yKHQua2V5LGUua2V5KX0seGgpLGdoPShSaC5wcm90b3R5cGUuY2hlY2tFbXB0eT1mdW5jdGlvbih0KXtyZXR1cm4gdHUucmVzb2x2ZSgwPT09dGhpcy5fbi5sZW5ndGgpfSxSaC5wcm90b3R5cGUuYWRkTXV0YXRpb25CYXRjaD1mdW5jdGlvbih0LGUsbixyKXt2YXIgaT10aGlzLnNzO3RoaXMuc3MrKywwPHRoaXMuX24ubGVuZ3RoJiZ0aGlzLl9uW3RoaXMuX24ubGVuZ3RoLTFdO249bmV3IEl1KGksZSxuLHIpO3RoaXMuX24ucHVzaChuKTtmb3IodmFyIG89MCxzPXI7bzxzLmxlbmd0aDtvKyspe3ZhciBhPXNbb107dGhpcy5ycz10aGlzLnJzLmFkZChuZXcgeWgoYS5rZXksaSkpLHRoaXMuVXQuYWRkVG9Db2xsZWN0aW9uUGFyZW50SW5kZXgodCxhLmtleS5wYXRoLnBvcExhc3QoKSl9cmV0dXJuIHR1LnJlc29sdmUobil9LFJoLnByb3RvdHlwZS5sb29rdXBNdXRhdGlvbkJhdGNoPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHR1LnJlc29sdmUodGhpcy5vcyhlKSl9LFJoLnByb3RvdHlwZS5nZXROZXh0TXV0YXRpb25CYXRjaEFmdGVyQmF0Y2hJZD1mdW5jdGlvbih0LGUpe2UrPTEsZT10aGlzLmNzKGUpLGU9ZTwwPzA6ZTtyZXR1cm4gdHUucmVzb2x2ZSh0aGlzLl9uLmxlbmd0aD5lP3RoaXMuX25bZV06bnVsbCl9LFJoLnByb3RvdHlwZS5nZXRIaWdoZXN0VW5hY2tub3dsZWRnZWRCYXRjaElkPWZ1bmN0aW9uKCl7cmV0dXJuIHR1LnJlc29sdmUoMD09PXRoaXMuX24ubGVuZ3RoPy0xOnRoaXMuc3MtMSl9LFJoLnByb3RvdHlwZS5nZXRBbGxNdXRhdGlvbkJhdGNoZXM9ZnVuY3Rpb24odCl7cmV0dXJuIHR1LnJlc29sdmUodGhpcy5fbi5zbGljZSgpKX0sUmgucHJvdG90eXBlLmdldEFsbE11dGF0aW9uQmF0Y2hlc0FmZmVjdGluZ0RvY3VtZW50S2V5PWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW5ldyB5aChlLDApLGU9bmV3IHloKGUsTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZKSxpPVtdO3JldHVybiB0aGlzLnJzLmZvckVhY2hJblJhbmdlKFtyLGVdLGZ1bmN0aW9uKHQpe3Q9bi5vcyh0Lm5zKTtpLnB1c2godCl9KSx0dS5yZXNvbHZlKGkpfSxSaC5wcm90b3R5cGUuZ2V0QWxsTXV0YXRpb25CYXRjaGVzQWZmZWN0aW5nRG9jdW1lbnRLZXlzPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxyPW5ldyBPcyhxcik7cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgZT1uZXcgeWgodCwwKSx0PW5ldyB5aCh0LE51bWJlci5QT1NJVElWRV9JTkZJTklUWSk7bi5ycy5mb3JFYWNoSW5SYW5nZShbZSx0XSxmdW5jdGlvbih0KXtyPXIuYWRkKHQubnMpfSl9KSx0dS5yZXNvbHZlKHRoaXMudXMocikpfSxSaC5wcm90b3R5cGUuZ2V0QWxsTXV0YXRpb25CYXRjaGVzQWZmZWN0aW5nUXVlcnk9ZnVuY3Rpb24odCxlKXt2YXIgbj1lLnBhdGgscj1uLmxlbmd0aCsxLGU9bjttaS5pc0RvY3VtZW50S2V5KGUpfHwoZT1lLmNoaWxkKFwiXCIpKTt2YXIgZT1uZXcgeWgobmV3IG1pKGUpLDApLGk9bmV3IE9zKHFyKTtyZXR1cm4gdGhpcy5ycy5mb3JFYWNoV2hpbGUoZnVuY3Rpb24odCl7dmFyIGU9dC5rZXkucGF0aDtyZXR1cm4hIW4uaXNQcmVmaXhPZihlKSYmKGUubGVuZ3RoPT09ciYmKGk9aS5hZGQodC5ucykpLCEwKX0sZSksdHUucmVzb2x2ZSh0aGlzLnVzKGkpKX0sUmgucHJvdG90eXBlLnVzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1bXTtyZXR1cm4gdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe3Q9ZS5vcyh0KTtudWxsIT09dCYmbi5wdXNoKHQpfSksbn0sUmgucHJvdG90eXBlLnJlbW92ZU11dGF0aW9uQmF0Y2g9ZnVuY3Rpb24obixyKXt2YXIgaT10aGlzO0ZyKDA9PT10aGlzLmhzKHIuYmF0Y2hJZCxcInJlbW92ZWRcIikpLHRoaXMuX24uc2hpZnQoKTt2YXIgbz10aGlzLnJzO3JldHVybiB0dS5mb3JFYWNoKHIubXV0YXRpb25zLGZ1bmN0aW9uKHQpe3ZhciBlPW5ldyB5aCh0LmtleSxyLmJhdGNoSWQpO3JldHVybiBvPW8uZGVsZXRlKGUpLGkucmVmZXJlbmNlRGVsZWdhdGUubWFya1BvdGVudGlhbGx5T3JwaGFuZWQobix0LmtleSl9KS5uZXh0KGZ1bmN0aW9uKCl7aS5ycz1vfSl9LFJoLnByb3RvdHlwZS5HdD1mdW5jdGlvbih0KXt9LFJoLnByb3RvdHlwZS5jb250YWluc0tleT1mdW5jdGlvbih0LGUpe3ZhciBuPW5ldyB5aChlLDApLG49dGhpcy5ycy5maXJzdEFmdGVyT3JFcXVhbChuKTtyZXR1cm4gdHUucmVzb2x2ZShlLmlzRXF1YWwobiYmbi5rZXkpKX0sUmgucHJvdG90eXBlLnBlcmZvcm1Db25zaXN0ZW5jeUNoZWNrPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9uLmxlbmd0aCx0dS5yZXNvbHZlKCl9LFJoLnByb3RvdHlwZS5ocz1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmNzKHQpfSxSaC5wcm90b3R5cGUuY3M9ZnVuY3Rpb24odCl7cmV0dXJuIDA9PT10aGlzLl9uLmxlbmd0aD8wOnQtdGhpcy5fblswXS5iYXRjaElkfSxSaC5wcm90b3R5cGUub3M9ZnVuY3Rpb24odCl7dD10aGlzLmNzKHQpO3JldHVybiB0PDB8fHQ+PXRoaXMuX24ubGVuZ3RoP251bGw6dGhpcy5fblt0XX0sUmgpLG1oPShDaC5wcm90b3R5cGUuYWRkRW50cnk9ZnVuY3Rpb24odCxlLG4pe3ZhciByPWUua2V5LGk9dGhpcy5kb2NzLmdldChyKSxvPWk/aS5zaXplOjAsaT10aGlzLmxzKGUpO3JldHVybiB0aGlzLmRvY3M9dGhpcy5kb2NzLmluc2VydChyLHtkb2N1bWVudDplLmNsb25lKCksc2l6ZTppLHJlYWRUaW1lOm59KSx0aGlzLnNpemUrPWktbyx0aGlzLlV0LmFkZFRvQ29sbGVjdGlvblBhcmVudEluZGV4KHQsci5wYXRoLnBvcExhc3QoKSl9LENoLnByb3RvdHlwZS5yZW1vdmVFbnRyeT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmRvY3MuZ2V0KHQpO2UmJih0aGlzLmRvY3M9dGhpcy5kb2NzLnJlbW92ZSh0KSx0aGlzLnNpemUtPWUuc2l6ZSl9LENoLnByb3RvdHlwZS5nZXRFbnRyeT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZG9jcy5nZXQoZSk7cmV0dXJuIHR1LnJlc29sdmUobj9uLmRvY3VtZW50LmNsb25lKCk6T2kubmV3SW52YWxpZERvY3VtZW50KGUpKX0sQ2gucHJvdG90eXBlLmdldEVudHJpZXM9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9UHM7cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgZT1uLmRvY3MuZ2V0KHQpO3I9ci5pbnNlcnQodCxlP2UuZG9jdW1lbnQuY2xvbmUoKTpPaS5uZXdJbnZhbGlkRG9jdW1lbnQodCkpfSksdHUucmVzb2x2ZShyKX0sQ2gucHJvdG90eXBlLmdldERvY3VtZW50c01hdGNoaW5nUXVlcnk9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1QcyxpPW5ldyBtaShlLnBhdGguY2hpbGQoXCJcIikpLG89dGhpcy5kb2NzLmdldEl0ZXJhdG9yRnJvbShpKTtvLmhhc05leHQoKTspe3ZhciBzPW8uZ2V0TmV4dCgpLGE9cy5rZXksdT1zLnZhbHVlLHM9dS5kb2N1bWVudCx1PXUucmVhZFRpbWU7aWYoIWUucGF0aC5pc1ByZWZpeE9mKGEucGF0aCkpYnJlYWs7dS5jb21wYXJlVG8obik8PTB8fFJvKGUscykmJihyPXIuaW5zZXJ0KHMua2V5LHMuY2xvbmUoKSkpfXJldHVybiB0dS5yZXNvbHZlKHIpfSxDaC5wcm90b3R5cGUuZnM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdHUuZm9yRWFjaCh0aGlzLmRvY3MsZnVuY3Rpb24odCl7cmV0dXJuIGUodCl9KX0sQ2gucHJvdG90eXBlLm5ld0NoYW5nZUJ1ZmZlcj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHZoKHRoaXMpfSxDaC5wcm90b3R5cGUuZ2V0U2l6ZT1mdW5jdGlvbih0KXtyZXR1cm4gdHUucmVzb2x2ZSh0aGlzLnNpemUpfSxDaCksdmg9KG4oa2gsZmg9SSksa2gucHJvdG90eXBlLmFwcGx5Q2hhbmdlcz1mdW5jdGlvbihuKXt2YXIgcj10aGlzLGk9W107cmV0dXJuIHRoaXMuY2hhbmdlcy5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7ZS5kb2N1bWVudC5pc1ZhbGlkRG9jdW1lbnQoKT9pLnB1c2goci5JZS5hZGRFbnRyeShuLGUuZG9jdW1lbnQsci5nZXRSZWFkVGltZSh0KSkpOnIuSWUucmVtb3ZlRW50cnkodCl9KSx0dS53YWl0Rm9yKGkpfSxraC5wcm90b3R5cGUuZ2V0RnJvbUNhY2hlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuSWUuZ2V0RW50cnkodCxlKX0sa2gucHJvdG90eXBlLmdldEFsbEZyb21DYWNoZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLkllLmdldEVudHJpZXModCxlKX0sa2gpLGJoPShBaC5wcm90b3R5cGUuZm9yRWFjaFRhcmdldD1mdW5jdGlvbih0LG4pe3JldHVybiB0aGlzLmRzLmZvckVhY2goZnVuY3Rpb24odCxlKXtyZXR1cm4gbihlKX0pLHR1LnJlc29sdmUoKX0sQWgucHJvdG90eXBlLmdldExhc3RSZW1vdGVTbmFwc2hvdFZlcnNpb249ZnVuY3Rpb24odCl7cmV0dXJuIHR1LnJlc29sdmUodGhpcy5sYXN0UmVtb3RlU25hcHNob3RWZXJzaW9uKX0sQWgucHJvdG90eXBlLmdldEhpZ2hlc3RTZXF1ZW5jZU51bWJlcj1mdW5jdGlvbih0KXtyZXR1cm4gdHUucmVzb2x2ZSh0aGlzLndzKX0sQWgucHJvdG90eXBlLmFsbG9jYXRlVGFyZ2V0SWQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuaGlnaGVzdFRhcmdldElkPXRoaXMueXMubmV4dCgpLHR1LnJlc29sdmUodGhpcy5oaWdoZXN0VGFyZ2V0SWQpfSxBaC5wcm90b3R5cGUuc2V0VGFyZ2V0c01ldGFkYXRhPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gbiYmKHRoaXMubGFzdFJlbW90ZVNuYXBzaG90VmVyc2lvbj1uKSxlPnRoaXMud3MmJih0aGlzLndzPWUpLHR1LnJlc29sdmUoKX0sQWgucHJvdG90eXBlLnRlPWZ1bmN0aW9uKHQpe3RoaXMuZHMuc2V0KHQudGFyZ2V0LHQpO3ZhciBlPXQudGFyZ2V0SWQ7ZT50aGlzLmhpZ2hlc3RUYXJnZXRJZCYmKHRoaXMueXM9bmV3IHNjKGUpLHRoaXMuaGlnaGVzdFRhcmdldElkPWUpLHQuc2VxdWVuY2VOdW1iZXI+dGhpcy53cyYmKHRoaXMud3M9dC5zZXF1ZW5jZU51bWJlcil9LEFoLnByb3RvdHlwZS5hZGRUYXJnZXREYXRhPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGUoZSksdGhpcy50YXJnZXRDb3VudCs9MSx0dS5yZXNvbHZlKCl9LEFoLnByb3RvdHlwZS51cGRhdGVUYXJnZXREYXRhPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMudGUoZSksdHUucmVzb2x2ZSgpfSxBaC5wcm90b3R5cGUucmVtb3ZlVGFyZ2V0RGF0YT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmRzLmRlbGV0ZShlLnRhcmdldCksdGhpcy5fcy5abihlLnRhcmdldElkKSwtLXRoaXMudGFyZ2V0Q291bnQsdHUucmVzb2x2ZSgpfSxBaC5wcm90b3R5cGUucmVtb3ZlVGFyZ2V0cz1mdW5jdGlvbihuLHIsaSl7dmFyIG89dGhpcyxzPTAsYT1bXTtyZXR1cm4gdGhpcy5kcy5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7ZS5zZXF1ZW5jZU51bWJlcjw9ciYmbnVsbD09PWkuZ2V0KGUudGFyZ2V0SWQpJiYoby5kcy5kZWxldGUodCksYS5wdXNoKG8ucmVtb3ZlTWF0Y2hpbmdLZXlzRm9yVGFyZ2V0SWQobixlLnRhcmdldElkKSkscysrKX0pLHR1LndhaXRGb3IoYSkubmV4dChmdW5jdGlvbigpe3JldHVybiBzfSl9LEFoLnByb3RvdHlwZS5nZXRUYXJnZXRDb3VudD1mdW5jdGlvbih0KXtyZXR1cm4gdHUucmVzb2x2ZSh0aGlzLnRhcmdldENvdW50KX0sQWgucHJvdG90eXBlLmdldFRhcmdldERhdGE9ZnVuY3Rpb24odCxlKXtlPXRoaXMuZHMuZ2V0KGUpfHxudWxsO3JldHVybiB0dS5yZXNvbHZlKGUpfSxBaC5wcm90b3R5cGUuYWRkTWF0Y2hpbmdLZXlzPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy5fcy5KbihlLG4pLHR1LnJlc29sdmUoKX0sQWgucHJvdG90eXBlLnJlbW92ZU1hdGNoaW5nS2V5cz1mdW5jdGlvbihlLHQsbil7dGhpcy5fcy5Ybih0LG4pO3ZhciByPXRoaXMucGVyc2lzdGVuY2UucmVmZXJlbmNlRGVsZWdhdGUsaT1bXTtyZXR1cm4gciYmdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe2kucHVzaChyLm1hcmtQb3RlbnRpYWxseU9ycGhhbmVkKGUsdCkpfSksdHUud2FpdEZvcihpKX0sQWgucHJvdG90eXBlLnJlbW92ZU1hdGNoaW5nS2V5c0ZvclRhcmdldElkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3MuWm4oZSksdHUucmVzb2x2ZSgpfSxBaC5wcm90b3R5cGUuZ2V0TWF0Y2hpbmdLZXlzRm9yVGFyZ2V0SWQ9ZnVuY3Rpb24odCxlKXtlPXRoaXMuX3MuZXMoZSk7cmV0dXJuIHR1LnJlc29sdmUoZSl9LEFoLnByb3RvdHlwZS5jb250YWluc0tleT1mdW5jdGlvbih0LGUpe3JldHVybiB0dS5yZXNvbHZlKHRoaXMuX3MuY29udGFpbnNLZXkoZSkpfSxBaCksd2g9KERoLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbigpe3JldHVybiBQcm9taXNlLnJlc29sdmUoKX0sRGgucHJvdG90eXBlLnNodXRkb3duPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMueGU9ITEsUHJvbWlzZS5yZXNvbHZlKCl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShEaC5wcm90b3R5cGUsXCJzdGFydGVkXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnhlfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLERoLnByb3RvdHlwZS5zZXREYXRhYmFzZURlbGV0ZWRMaXN0ZW5lcj1mdW5jdGlvbigpe30sRGgucHJvdG90eXBlLnNldE5ldHdvcmtFbmFibGVkPWZ1bmN0aW9uKCl7fSxEaC5wcm90b3R5cGUuZ2V0SW5kZXhNYW5hZ2VyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuVXR9LERoLnByb3RvdHlwZS5nZXRNdXRhdGlvblF1ZXVlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ3NbdC50b0tleSgpXTtyZXR1cm4gZXx8KGU9bmV3IGdoKHRoaXMuVXQsdGhpcy5yZWZlcmVuY2VEZWxlZ2F0ZSksdGhpcy5nc1t0LnRvS2V5KCldPWUpLGV9LERoLnByb3RvdHlwZS5nZXRUYXJnZXRDYWNoZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnFlfSxEaC5wcm90b3R5cGUuZ2V0UmVtb3RlRG9jdW1lbnRDYWNoZT1mdW5jdGlvbigpe3JldHVybiB0aGlzLlVlfSxEaC5wcm90b3R5cGUuZ2V0QnVuZGxlQ2FjaGU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5RZX0sRGgucHJvdG90eXBlLnJ1blRyYW5zYWN0aW9uPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj10aGlzO3hyKFwiTWVtb3J5UGVyc2lzdGVuY2VcIixcIlN0YXJ0aW5nIHRyYW5zYWN0aW9uOlwiLHQpO3ZhciBpPW5ldyBJaCh0aGlzLk5lLm5leHQoKSk7cmV0dXJuIHRoaXMucmVmZXJlbmNlRGVsZWdhdGUuRXMoKSxuKGkpLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIHIucmVmZXJlbmNlRGVsZWdhdGUuVHMoaSkubmV4dChmdW5jdGlvbigpe3JldHVybiB0fSl9KS50b1Byb21pc2UoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBpLnJhaXNlT25Db21taXR0ZWRFdmVudCgpLHR9KX0sRGgucHJvdG90eXBlLklzPWZ1bmN0aW9uKGUsbil7cmV0dXJuIHR1Lm9yKE9iamVjdC52YWx1ZXModGhpcy5ncykubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0LmNvbnRhaW5zS2V5KGUsbil9fSkpfSxEaCksSWg9KG4oTmgsbGg9VGUpLE5oKSxFaD0oU2guYnM9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBTaCh0KX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KFNoLnByb3RvdHlwZSxcInZzXCIse2dldDpmdW5jdGlvbigpe2lmKHRoaXMuUnMpcmV0dXJuIHRoaXMuUnM7dGhyb3cgTXIoKX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxTaC5wcm90b3R5cGUuYWRkUmVmZXJlbmNlPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdGhpcy5Bcy5hZGRSZWZlcmVuY2UobixlKSx0aGlzLnZzLmRlbGV0ZShuLnRvU3RyaW5nKCkpLHR1LnJlc29sdmUoKX0sU2gucHJvdG90eXBlLnJlbW92ZVJlZmVyZW5jZT1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHRoaXMuQXMucmVtb3ZlUmVmZXJlbmNlKG4sZSksdGhpcy52cy5hZGQobi50b1N0cmluZygpKSx0dS5yZXNvbHZlKCl9LFNoLnByb3RvdHlwZS5tYXJrUG90ZW50aWFsbHlPcnBoYW5lZD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLnZzLmFkZChlLnRvU3RyaW5nKCkpLHR1LnJlc29sdmUoKX0sU2gucHJvdG90eXBlLnJlbW92ZVRhcmdldD1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7dGhpcy5Bcy5abihlLnRhcmdldElkKS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBuLnZzLmFkZCh0LnRvU3RyaW5nKCkpfSk7dmFyIHI9dGhpcy5wZXJzaXN0ZW5jZS5nZXRUYXJnZXRDYWNoZSgpO3JldHVybiByLmdldE1hdGNoaW5nS2V5c0ZvclRhcmdldElkKHQsZS50YXJnZXRJZCkubmV4dChmdW5jdGlvbih0KXt0LmZvckVhY2goZnVuY3Rpb24odCl7cmV0dXJuIG4udnMuYWRkKHQudG9TdHJpbmcoKSl9KX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gci5yZW1vdmVUYXJnZXREYXRhKHQsZSl9KX0sU2gucHJvdG90eXBlLkVzPWZ1bmN0aW9uKCl7dGhpcy5Scz1uZXcgU2V0fSxTaC5wcm90b3R5cGUuVHM9ZnVuY3Rpb24obil7dmFyIHI9dGhpcyxpPXRoaXMucGVyc2lzdGVuY2UuZ2V0UmVtb3RlRG9jdW1lbnRDYWNoZSgpLm5ld0NoYW5nZUJ1ZmZlcigpO3JldHVybiB0dS5mb3JFYWNoKHRoaXMudnMsZnVuY3Rpb24odCl7dmFyIGU9bWkuZnJvbVBhdGgodCk7cmV0dXJuIHIuUHMobixlKS5uZXh0KGZ1bmN0aW9uKHQpe3R8fGkucmVtb3ZlRW50cnkoZSl9KX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gci5Scz1udWxsLGkuYXBwbHkobil9KX0sU2gucHJvdG90eXBlLnVwZGF0ZUxpbWJvRG9jdW1lbnQ9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzO3JldHVybiB0aGlzLlBzKHQsZSkubmV4dChmdW5jdGlvbih0KXt0P24udnMuZGVsZXRlKGUudG9TdHJpbmcoKSk6bi52cy5hZGQoZS50b1N0cmluZygpKX0pfSxTaC5wcm90b3R5cGUucHM9ZnVuY3Rpb24odCl7cmV0dXJuIDB9LFNoLnByb3RvdHlwZS5Qcz1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuIHR1Lm9yKFtmdW5jdGlvbigpe3JldHVybiB0dS5yZXNvbHZlKG4uQXMuY29udGFpbnNLZXkoZSkpfSxmdW5jdGlvbigpe3JldHVybiBuLnBlcnNpc3RlbmNlLmdldFRhcmdldENhY2hlKCkuY29udGFpbnNLZXkodCxlKX0sZnVuY3Rpb24oKXtyZXR1cm4gbi5wZXJzaXN0ZW5jZS5Jcyh0LGUpfV0pfSxTaCksVGg9KF9oLnByb3RvdHlwZS5pc0F1dGhlbnRpY2F0ZWQ9ZnVuY3Rpb24oKXtyZXR1cm4gbnVsbCE9dGhpcy51aWR9LF9oLnByb3RvdHlwZS50b0tleT1mdW5jdGlvbigpe3JldHVybiB0aGlzLmlzQXV0aGVudGljYXRlZCgpP1widWlkOlwiK3RoaXMudWlkOlwiYW5vbnltb3VzLXVzZXJcIn0sX2gucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHQudWlkPT09dGhpcy51aWR9LF9oKTtmdW5jdGlvbiBfaCh0KXt0aGlzLnVpZD10fWZ1bmN0aW9uIFNoKHQpe3RoaXMucGVyc2lzdGVuY2U9dCx0aGlzLkFzPW5ldyBwaCx0aGlzLlJzPW51bGx9ZnVuY3Rpb24gTmgodCl7dmFyIGU9dGhpcztyZXR1cm4oZT1saC5jYWxsKHRoaXMpfHx0aGlzKS5jdXJyZW50U2VxdWVuY2VOdW1iZXI9dCxlfWZ1bmN0aW9uIERoKHQsZSl7dmFyIG49dGhpczt0aGlzLmdzPXt9LHRoaXMuTmU9bmV3IF9yKDApLHRoaXMueGU9ITEsdGhpcy54ZT0hMCx0aGlzLnJlZmVyZW5jZURlbGVnYXRlPXQodGhpcyksdGhpcy5xZT1uZXcgYmgodGhpcyksdGhpcy5VdD1uZXcganUsdGhpcy5VZT0odD10aGlzLlV0LG5ldyBtaCh0LGZ1bmN0aW9uKHQpe3JldHVybiBuLnJlZmVyZW5jZURlbGVnYXRlLnBzKHQpfSkpLHRoaXMuUj1uZXcgX3UoZSksdGhpcy5RZT1uZXcgZGgodGhpcy5SKX1mdW5jdGlvbiBBaCh0KXt0aGlzLnBlcnNpc3RlbmNlPXQsdGhpcy5kcz1uZXcgU2MoRmksVmkpLHRoaXMubGFzdFJlbW90ZVNuYXBzaG90VmVyc2lvbj1Hci5taW4oKSx0aGlzLmhpZ2hlc3RUYXJnZXRJZD0wLHRoaXMud3M9MCx0aGlzLl9zPW5ldyBwaCx0aGlzLnRhcmdldENvdW50PTAsdGhpcy55cz1zYy5KdCgpfWZ1bmN0aW9uIGtoKHQpe3ZhciBlPXRoaXM7cmV0dXJuKGU9ZmguY2FsbCh0aGlzKXx8dGhpcykuSWU9dCxlfWZ1bmN0aW9uIENoKHQsZSl7dGhpcy5VdD10LHRoaXMubHM9ZSx0aGlzLmRvY3M9bmV3IE5zKG1pLmNvbXBhcmF0b3IpLHRoaXMuc2l6ZT0wfWZ1bmN0aW9uIFJoKHQsZSl7dGhpcy5VdD10LHRoaXMucmVmZXJlbmNlRGVsZWdhdGU9ZSx0aGlzLl9uPVtdLHRoaXMuc3M9MSx0aGlzLnJzPW5ldyBPcyh5aC5Hbil9ZnVuY3Rpb24geGgodCxlKXt0aGlzLmtleT10LHRoaXMubnM9ZX1mdW5jdGlvbiBPaCgpe3RoaXMuV249bmV3IE9zKHloLkduKSx0aGlzLnpuPW5ldyBPcyh5aC5Ibil9ZnVuY3Rpb24gTGgodCl7dGhpcy5SPXQsdGhpcy5Lbj1uZXcgTWFwLHRoaXMuam49bmV3IE1hcH1mdW5jdGlvbiBQaCh0LGUpe3JldHVyblwiZmlyZXN0b3JlX2NsaWVudHNfXCIrdCtcIl9cIitlfWZ1bmN0aW9uIE1oKHQsZSxuKXtuPVwiZmlyZXN0b3JlX211dGF0aW9uc19cIit0K1wiX1wiK247cmV0dXJuIGUuaXNBdXRoZW50aWNhdGVkKCkmJihuKz1cIl9cIitlLnVpZCksbn1mdW5jdGlvbiBGaCh0LGUpe3JldHVyblwiZmlyZXN0b3JlX3RhcmdldHNfXCIrdCtcIl9cIitlfVRoLlVOQVVUSEVOVElDQVRFRD1uZXcgVGgobnVsbCksVGguR09PR0xFX0NSRURFTlRJQUxTPW5ldyBUaChcImdvb2dsZS1jcmVkZW50aWFscy11aWRcIiksVGguRklSU1RfUEFSVFk9bmV3IFRoKFwiZmlyc3QtcGFydHktdWlkXCIpO3ZhciBWaCxVaD0odWwuVnM9ZnVuY3Rpb24odCxlLG4pe3ZhciByLGk9SlNPTi5wYXJzZShuKSxvPVwib2JqZWN0XCI9PXR5cGVvZiBpJiYtMSE9PVtcInBlbmRpbmdcIixcImFja25vd2xlZGdlZFwiLFwicmVqZWN0ZWRcIl0uaW5kZXhPZihpLnN0YXRlKSYmKHZvaWQgMD09PWkuZXJyb3J8fFwib2JqZWN0XCI9PXR5cGVvZiBpLmVycm9yKTtyZXR1cm4gbyYmaS5lcnJvciYmKG89XCJzdHJpbmdcIj09dHlwZW9mIGkuZXJyb3IubWVzc2FnZSYmXCJzdHJpbmdcIj09dHlwZW9mIGkuZXJyb3IuY29kZSkmJihyPW5ldyBBcihpLmVycm9yLmNvZGUsaS5lcnJvci5tZXNzYWdlKSksbz9uZXcgdWwodCxlLGkuc3RhdGUscik6KE9yKFwiU2hhcmVkQ2xpZW50U3RhdGVcIixcIkZhaWxlZCB0byBwYXJzZSBtdXRhdGlvbiBzdGF0ZSBmb3IgSUQgJ1wiK2UrXCInOiBcIituKSxudWxsKX0sdWwucHJvdG90eXBlLlNzPWZ1bmN0aW9uKCl7dmFyIHQ9e3N0YXRlOnRoaXMuc3RhdGUsdXBkYXRlVGltZU1zOkRhdGUubm93KCl9O3JldHVybiB0aGlzLmVycm9yJiYodC5lcnJvcj17Y29kZTp0aGlzLmVycm9yLmNvZGUsbWVzc2FnZTp0aGlzLmVycm9yLm1lc3NhZ2V9KSxKU09OLnN0cmluZ2lmeSh0KX0sdWwpLHFoPShhbC5Wcz1mdW5jdGlvbih0LGUpe3ZhciBuLHI9SlNPTi5wYXJzZShlKSxpPVwib2JqZWN0XCI9PXR5cGVvZiByJiYtMSE9PVtcIm5vdC1jdXJyZW50XCIsXCJjdXJyZW50XCIsXCJyZWplY3RlZFwiXS5pbmRleE9mKHIuc3RhdGUpJiYodm9pZCAwPT09ci5lcnJvcnx8XCJvYmplY3RcIj09dHlwZW9mIHIuZXJyb3IpO3JldHVybiBpJiZyLmVycm9yJiYoaT1cInN0cmluZ1wiPT10eXBlb2Ygci5lcnJvci5tZXNzYWdlJiZcInN0cmluZ1wiPT10eXBlb2Ygci5lcnJvci5jb2RlKSYmKG49bmV3IEFyKHIuZXJyb3IuY29kZSxyLmVycm9yLm1lc3NhZ2UpKSxpP25ldyBhbCh0LHIuc3RhdGUsbik6KE9yKFwiU2hhcmVkQ2xpZW50U3RhdGVcIixcIkZhaWxlZCB0byBwYXJzZSB0YXJnZXQgc3RhdGUgZm9yIElEICdcIit0K1wiJzogXCIrZSksbnVsbCl9LGFsLnByb3RvdHlwZS5Tcz1mdW5jdGlvbigpe3ZhciB0PXtzdGF0ZTp0aGlzLnN0YXRlLHVwZGF0ZVRpbWVNczpEYXRlLm5vdygpfTtyZXR1cm4gdGhpcy5lcnJvciYmKHQuZXJyb3I9e2NvZGU6dGhpcy5lcnJvci5jb2RlLG1lc3NhZ2U6dGhpcy5lcnJvci5tZXNzYWdlfSksSlNPTi5zdHJpbmdpZnkodCl9LGFsKSxCaD0oc2wuVnM9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49SlNPTi5wYXJzZShlKSxyPVwib2JqZWN0XCI9PXR5cGVvZiBuJiZuLmFjdGl2ZVRhcmdldElkcyBpbnN0YW5jZW9mIEFycmF5LGk9anMsbz0wO3ImJm88bi5hY3RpdmVUYXJnZXRJZHMubGVuZ3RoOysrbylyPWdpKG4uYWN0aXZlVGFyZ2V0SWRzW29dKSxpPWkuYWRkKG4uYWN0aXZlVGFyZ2V0SWRzW29dKTtyZXR1cm4gcj9uZXcgc2wodCxpKTooT3IoXCJTaGFyZWRDbGllbnRTdGF0ZVwiLFwiRmFpbGVkIHRvIHBhcnNlIGNsaWVudCBkYXRhIGZvciBpbnN0YW5jZSAnXCIrdCtcIic6IFwiK2UpLG51bGwpfSxzbCksamg9KG9sLlZzPWZ1bmN0aW9uKHQpe3ZhciBlPUpTT04ucGFyc2UodCk7cmV0dXJuXCJvYmplY3RcIj09dHlwZW9mIGUmJi0xIT09W1wiVW5rbm93blwiLFwiT25saW5lXCIsXCJPZmZsaW5lXCJdLmluZGV4T2YoZS5vbmxpbmVTdGF0ZSkmJlwic3RyaW5nXCI9PXR5cGVvZiBlLmNsaWVudElkP25ldyBvbChlLmNsaWVudElkLGUub25saW5lU3RhdGUpOihPcihcIlNoYXJlZENsaWVudFN0YXRlXCIsXCJGYWlsZWQgdG8gcGFyc2Ugb25saW5lIHN0YXRlOiBcIit0KSxudWxsKX0sb2wpLEtoPShpbC5wcm90b3R5cGUuRHM9ZnVuY3Rpb24odCl7dGhpcy5hY3RpdmVUYXJnZXRJZHM9dGhpcy5hY3RpdmVUYXJnZXRJZHMuYWRkKHQpfSxpbC5wcm90b3R5cGUuQ3M9ZnVuY3Rpb24odCl7dGhpcy5hY3RpdmVUYXJnZXRJZHM9dGhpcy5hY3RpdmVUYXJnZXRJZHMuZGVsZXRlKHQpfSxpbC5wcm90b3R5cGUuU3M9ZnVuY3Rpb24oKXt2YXIgdD17YWN0aXZlVGFyZ2V0SWRzOnRoaXMuYWN0aXZlVGFyZ2V0SWRzLnRvQXJyYXkoKSx1cGRhdGVUaW1lTXM6RGF0ZS5ub3coKX07cmV0dXJuIEpTT04uc3RyaW5naWZ5KHQpfSxpbCksR2g9KHJsLnl0PWZ1bmN0aW9uKHQpe3JldHVybiEoIXR8fCF0LmxvY2FsU3RvcmFnZSl9LHJsLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbigpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scixpLG8scyxhLHUsYyxoLGw9dGhpcztyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5zeW5jRW5naW5lLmZuKCldO2Nhc2UgMTpmb3Iocz10LnNlbnQoKSxlPTAsbj1zO2U8bi5sZW5ndGg7ZSsrKShyPW5bZV0pIT09dGhpcy5OcyYmKGk9dGhpcy5nZXRJdGVtKFBoKHRoaXMucGVyc2lzdGVuY2VLZXkscikpKSYmKG89QmguVnMocixpKSkmJih0aGlzLmtzPXRoaXMua3MuaW5zZXJ0KG8uY2xpZW50SWQsbykpO2Zvcih0aGlzLktzKCksKHM9dGhpcy5zdG9yYWdlLmdldEl0ZW0odGhpcy5VcykpJiYoYT10aGlzLmpzKHMpKSYmdGhpcy5XcyhhKSx1PTAsYz10aGlzLk9zO3U8Yy5sZW5ndGg7dSsrKWg9Y1t1XSx0aGlzLkZzKGgpO3JldHVybiB0aGlzLk9zPVtdLHRoaXMud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJ1bmxvYWRcIixmdW5jdGlvbigpe3JldHVybiBsLnNodXRkb3duKCl9KSx0aGlzLnN0YXJ0ZWQ9ITAsWzJdfX0pfSl9LHJsLnByb3RvdHlwZS53cml0ZVNlcXVlbmNlTnVtYmVyPWZ1bmN0aW9uKHQpe3RoaXMuc2V0SXRlbSh0aGlzLk1zLEpTT04uc3RyaW5naWZ5KHQpKX0scmwucHJvdG90eXBlLmdldEFsbEFjdGl2ZVF1ZXJ5VGFyZ2V0cz1mdW5jdGlvbigpe3JldHVybiB0aGlzLkdzKHRoaXMua3MpfSxybC5wcm90b3R5cGUuaXNBY3RpdmVRdWVyeVRhcmdldD1mdW5jdGlvbihuKXt2YXIgcj0hMTtyZXR1cm4gdGhpcy5rcy5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7ZS5hY3RpdmVUYXJnZXRJZHMuaGFzKG4pJiYocj0hMCl9KSxyfSxybC5wcm90b3R5cGUuYWRkUGVuZGluZ011dGF0aW9uPWZ1bmN0aW9uKHQpe3RoaXMuenModCxcInBlbmRpbmdcIil9LHJsLnByb3RvdHlwZS51cGRhdGVNdXRhdGlvblN0YXRlPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLnpzKHQsZSxuKSx0aGlzLkhzKHQpfSxybC5wcm90b3R5cGUuYWRkTG9jYWxRdWVyeVRhcmdldD1mdW5jdGlvbih0KXt2YXIgZSxuPVwibm90LWN1cnJlbnRcIjtyZXR1cm4gdGhpcy5pc0FjdGl2ZVF1ZXJ5VGFyZ2V0KHQpJiYoIShlPXRoaXMuc3RvcmFnZS5nZXRJdGVtKEZoKHRoaXMucGVyc2lzdGVuY2VLZXksdCkpKXx8KGU9cWguVnModCxlKSkmJihuPWUuc3RhdGUpKSx0aGlzLkpzLkRzKHQpLHRoaXMuS3MoKSxufSxybC5wcm90b3R5cGUucmVtb3ZlTG9jYWxRdWVyeVRhcmdldD1mdW5jdGlvbih0KXt0aGlzLkpzLkNzKHQpLHRoaXMuS3MoKX0scmwucHJvdG90eXBlLmlzTG9jYWxRdWVyeVRhcmdldD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5Kcy5hY3RpdmVUYXJnZXRJZHMuaGFzKHQpfSxybC5wcm90b3R5cGUuY2xlYXJRdWVyeVN0YXRlPWZ1bmN0aW9uKHQpe3RoaXMucmVtb3ZlSXRlbShGaCh0aGlzLnBlcnNpc3RlbmNlS2V5LHQpKX0scmwucHJvdG90eXBlLnVwZGF0ZVF1ZXJ5U3RhdGU9ZnVuY3Rpb24odCxlLG4pe3RoaXMuWXModCxlLG4pfSxybC5wcm90b3R5cGUuaGFuZGxlVXNlckNoYW5nZT1mdW5jdGlvbih0LGUsbil7dmFyIHI9dGhpcztlLmZvckVhY2goZnVuY3Rpb24odCl7ci5Icyh0KX0pLHRoaXMuY3VycmVudFVzZXI9dCxuLmZvckVhY2goZnVuY3Rpb24odCl7ci5hZGRQZW5kaW5nTXV0YXRpb24odCl9KX0scmwucHJvdG90eXBlLnNldE9ubGluZVN0YXRlPWZ1bmN0aW9uKHQpe3RoaXMuWHModCl9LHJsLnByb3RvdHlwZS5ub3RpZnlCdW5kbGVMb2FkZWQ9ZnVuY3Rpb24oKXt0aGlzLlpzKCl9LHJsLnByb3RvdHlwZS5zaHV0ZG93bj1mdW5jdGlvbigpe3RoaXMuc3RhcnRlZCYmKHRoaXMud2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJzdG9yYWdlXCIsdGhpcy54cyksdGhpcy5yZW1vdmVJdGVtKHRoaXMuJHMpLHRoaXMuc3RhcnRlZD0hMSl9LHJsLnByb3RvdHlwZS5nZXRJdGVtPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuc3RvcmFnZS5nZXRJdGVtKHQpO3JldHVybiB4cihcIlNoYXJlZENsaWVudFN0YXRlXCIsXCJSRUFEXCIsdCxlKSxlfSxybC5wcm90b3R5cGUuc2V0SXRlbT1mdW5jdGlvbih0LGUpe3hyKFwiU2hhcmVkQ2xpZW50U3RhdGVcIixcIlNFVFwiLHQsZSksdGhpcy5zdG9yYWdlLnNldEl0ZW0odCxlKX0scmwucHJvdG90eXBlLnJlbW92ZUl0ZW09ZnVuY3Rpb24odCl7eHIoXCJTaGFyZWRDbGllbnRTdGF0ZVwiLFwiUkVNT1ZFXCIsdCksdGhpcy5zdG9yYWdlLnJlbW92ZUl0ZW0odCl9LHJsLnByb3RvdHlwZS5Gcz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG89dDtvLnN0b3JhZ2VBcmVhPT09dGhpcy5zdG9yYWdlJiYoeHIoXCJTaGFyZWRDbGllbnRTdGF0ZVwiLFwiRVZFTlRcIixvLmtleSxvLm5ld1ZhbHVlKSxvLmtleSE9PXRoaXMuJHM/dGhpcy5TZS5lbnF1ZXVlUmV0cnlhYmxlKGZ1bmN0aW9uKCl7cmV0dXJuIHkoZSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyLGk7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtpZih0aGlzLnN0YXJ0ZWQpe2lmKG51bGwhPT1vLmtleSlpZih0aGlzLkxzLnRlc3Qoby5rZXkpKXtpZihudWxsPT1vLm5ld1ZhbHVlKXJldHVybiBlPXRoaXMudGkoby5rZXkpLFsyLHRoaXMuZWkoZSxudWxsKV07aWYoZT10aGlzLm5pKG8ua2V5LG8ubmV3VmFsdWUpKXJldHVyblsyLHRoaXMuZWkoZS5jbGllbnRJZCxlKV19ZWxzZSBpZih0aGlzLkJzLnRlc3Qoby5rZXkpKXtpZihudWxsIT09by5uZXdWYWx1ZSYmKG49dGhpcy5zaShvLmtleSxvLm5ld1ZhbHVlKSkpcmV0dXJuWzIsdGhpcy5paShuKV19ZWxzZSBpZih0aGlzLnFzLnRlc3Qoby5rZXkpKXtpZihudWxsIT09by5uZXdWYWx1ZSYmKHI9dGhpcy5yaShvLmtleSxvLm5ld1ZhbHVlKSkpcmV0dXJuWzIsdGhpcy5vaShyKV19ZWxzZSBpZihvLmtleT09PXRoaXMuVXMpe2lmKG51bGwhPT1vLm5ld1ZhbHVlJiYoaT10aGlzLmpzKG8ubmV3VmFsdWUpKSlyZXR1cm5bMix0aGlzLldzKGkpXX1lbHNlIGlmKG8ua2V5PT09dGhpcy5NcykoaT1mdW5jdGlvbih0KXt2YXIgZT1fci5vO2lmKG51bGwhPXQpdHJ5e3ZhciBuPUpTT04ucGFyc2UodCk7RnIoXCJudW1iZXJcIj09dHlwZW9mIG4pLGU9bn1jYXRjaCh0KXtPcihcIlNoYXJlZENsaWVudFN0YXRlXCIsXCJGYWlsZWQgdG8gcmVhZCBzZXF1ZW5jZSBudW1iZXIgZnJvbSBXZWJTdG9yYWdlXCIsdCl9cmV0dXJuIGV9KG8ubmV3VmFsdWUpKSE9PV9yLm8mJnRoaXMuc2VxdWVuY2VOdW1iZXJIYW5kbGVyKGkpO2Vsc2UgaWYoby5rZXk9PT10aGlzLlFzKXJldHVyblsyLHRoaXMuc3luY0VuZ2luZS5jaSgpXX1lbHNlIHRoaXMuT3MucHVzaChvKTtyZXR1cm5bMl19KX0pfSk6T3IoXCJSZWNlaXZlZCBXZWJTdG9yYWdlIG5vdGlmaWNhdGlvbiBmb3IgbG9jYWwgY2hhbmdlLiBBbm90aGVyIGNsaWVudCBtaWdodCBoYXZlIGdhcmJhZ2UtY29sbGVjdGVkIG91ciBzdGF0ZVwiKSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShybC5wcm90b3R5cGUsXCJKc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5rcy5nZXQodGhpcy5Ocyl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSkscmwucHJvdG90eXBlLktzPWZ1bmN0aW9uKCl7dGhpcy5zZXRJdGVtKHRoaXMuJHMsdGhpcy5Kcy5TcygpKX0scmwucHJvdG90eXBlLnpzPWZ1bmN0aW9uKHQsZSxuKXtuPW5ldyBVaCh0aGlzLmN1cnJlbnRVc2VyLHQsZSxuKSx0PU1oKHRoaXMucGVyc2lzdGVuY2VLZXksdGhpcy5jdXJyZW50VXNlcix0KTt0aGlzLnNldEl0ZW0odCxuLlNzKCkpfSxybC5wcm90b3R5cGUuSHM9ZnVuY3Rpb24odCl7dD1NaCh0aGlzLnBlcnNpc3RlbmNlS2V5LHRoaXMuY3VycmVudFVzZXIsdCk7dGhpcy5yZW1vdmVJdGVtKHQpfSxybC5wcm90b3R5cGUuWHM9ZnVuY3Rpb24odCl7dD17Y2xpZW50SWQ6dGhpcy5OcyxvbmxpbmVTdGF0ZTp0fTt0aGlzLnN0b3JhZ2Uuc2V0SXRlbSh0aGlzLlVzLEpTT04uc3RyaW5naWZ5KHQpKX0scmwucHJvdG90eXBlLllzPWZ1bmN0aW9uKHQsZSxuKXt2YXIgcj1GaCh0aGlzLnBlcnNpc3RlbmNlS2V5LHQpLG49bmV3IHFoKHQsZSxuKTt0aGlzLnNldEl0ZW0ocixuLlNzKCkpfSxybC5wcm90b3R5cGUuWnM9ZnVuY3Rpb24oKXt0aGlzLnNldEl0ZW0odGhpcy5RcyxcInZhbHVlLW5vdC11c2VkXCIpfSxybC5wcm90b3R5cGUudGk9ZnVuY3Rpb24odCl7dD10aGlzLkxzLmV4ZWModCk7cmV0dXJuIHQ/dFsxXTpudWxsfSxybC5wcm90b3R5cGUubmk9ZnVuY3Rpb24odCxlKXt0PXRoaXMudGkodCk7cmV0dXJuIEJoLlZzKHQsZSl9LHJsLnByb3RvdHlwZS5zaT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuQnMuZXhlYyh0KSx0PU51bWJlcihuWzFdKSxuPXZvaWQgMCE9PW5bMl0/blsyXTpudWxsO3JldHVybiBVaC5WcyhuZXcgVGgobiksdCxlKX0scmwucHJvdG90eXBlLnJpPWZ1bmN0aW9uKHQsZSl7dD10aGlzLnFzLmV4ZWModCksdD1OdW1iZXIodFsxXSk7cmV0dXJuIHFoLlZzKHQsZSl9LHJsLnByb3RvdHlwZS5qcz1mdW5jdGlvbih0KXtyZXR1cm4gamguVnModCl9LHJsLnByb3RvdHlwZS5paT1mdW5jdGlvbihlKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiBlLnVzZXIudWlkPT09dGhpcy5jdXJyZW50VXNlci51aWQ/WzIsdGhpcy5zeW5jRW5naW5lLnVpKGUuYmF0Y2hJZCxlLnN0YXRlLGUuZXJyb3IpXTooeHIoXCJTaGFyZWRDbGllbnRTdGF0ZVwiLFwiSWdub3JpbmcgbXV0YXRpb24gZm9yIG5vbi1hY3RpdmUgdXNlciBcIitlLnVzZXIudWlkKSxbMl0pfSl9KX0scmwucHJvdG90eXBlLm9pPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnN5bmNFbmdpbmUuYWkodC50YXJnZXRJZCx0LnN0YXRlLHQuZXJyb3IpfSxybC5wcm90b3R5cGUuZWk9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLHI9ZT90aGlzLmtzLmluc2VydCh0LGUpOnRoaXMua3MucmVtb3ZlKHQpLGk9dGhpcy5Hcyh0aGlzLmtzKSxvPXRoaXMuR3Mocikscz1bXSxhPVtdO3JldHVybiBvLmZvckVhY2goZnVuY3Rpb24odCl7aS5oYXModCl8fHMucHVzaCh0KX0pLGkuZm9yRWFjaChmdW5jdGlvbih0KXtvLmhhcyh0KXx8YS5wdXNoKHQpfSksdGhpcy5zeW5jRW5naW5lLmhpKHMsYSkudGhlbihmdW5jdGlvbigpe24ua3M9cn0pfSxybC5wcm90b3R5cGUuV3M9ZnVuY3Rpb24odCl7dGhpcy5rcy5nZXQodC5jbGllbnRJZCkmJnRoaXMub25saW5lU3RhdGVIYW5kbGVyKHQub25saW5lU3RhdGUpfSxybC5wcm90b3R5cGUuR3M9ZnVuY3Rpb24odCl7dmFyIG49anM7cmV0dXJuIHQuZm9yRWFjaChmdW5jdGlvbih0LGUpe249bi51bmlvbldpdGgoZS5hY3RpdmVUYXJnZXRJZHMpfSksbn0scmwpLFFoPShubC5wcm90b3R5cGUuYWRkUGVuZGluZ011dGF0aW9uPWZ1bmN0aW9uKHQpe30sbmwucHJvdG90eXBlLnVwZGF0ZU11dGF0aW9uU3RhdGU9ZnVuY3Rpb24odCxlLG4pe30sbmwucHJvdG90eXBlLmFkZExvY2FsUXVlcnlUYXJnZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubGkuRHModCksdGhpcy5maVt0XXx8XCJub3QtY3VycmVudFwifSxubC5wcm90b3R5cGUudXBkYXRlUXVlcnlTdGF0ZT1mdW5jdGlvbih0LGUsbil7dGhpcy5maVt0XT1lfSxubC5wcm90b3R5cGUucmVtb3ZlTG9jYWxRdWVyeVRhcmdldD1mdW5jdGlvbih0KXt0aGlzLmxpLkNzKHQpfSxubC5wcm90b3R5cGUuaXNMb2NhbFF1ZXJ5VGFyZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxpLmFjdGl2ZVRhcmdldElkcy5oYXModCl9LG5sLnByb3RvdHlwZS5jbGVhclF1ZXJ5U3RhdGU9ZnVuY3Rpb24odCl7ZGVsZXRlIHRoaXMuZmlbdF19LG5sLnByb3RvdHlwZS5nZXRBbGxBY3RpdmVRdWVyeVRhcmdldHM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5saS5hY3RpdmVUYXJnZXRJZHN9LG5sLnByb3RvdHlwZS5pc0FjdGl2ZVF1ZXJ5VGFyZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxpLmFjdGl2ZVRhcmdldElkcy5oYXModCl9LG5sLnByb3RvdHlwZS5zdGFydD1mdW5jdGlvbigpe3JldHVybiB0aGlzLmxpPW5ldyBLaCxQcm9taXNlLnJlc29sdmUoKX0sbmwucHJvdG90eXBlLmhhbmRsZVVzZXJDaGFuZ2U9ZnVuY3Rpb24odCxlLG4pe30sbmwucHJvdG90eXBlLnNldE9ubGluZVN0YXRlPWZ1bmN0aW9uKHQpe30sbmwucHJvdG90eXBlLnNodXRkb3duPWZ1bmN0aW9uKCl7fSxubC5wcm90b3R5cGUud3JpdGVTZXF1ZW5jZU51bWJlcj1mdW5jdGlvbih0KXt9LG5sLnByb3RvdHlwZS5ub3RpZnlCdW5kbGVMb2FkZWQ9ZnVuY3Rpb24oKXt9LG5sKSx6aD0oZWwucHJvdG90eXBlLmRpPWZ1bmN0aW9uKHQpe30sZWwucHJvdG90eXBlLnNodXRkb3duPWZ1bmN0aW9uKCl7fSxlbCksSGg9KHRsLnByb3RvdHlwZS5kaT1mdW5jdGlvbih0KXt0aGlzLmdpLnB1c2godCl9LHRsLnByb3RvdHlwZS5zaHV0ZG93bj1mdW5jdGlvbigpe3dpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwib25saW5lXCIsdGhpcy53aSksd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsdGhpcy5taSl9LHRsLnByb3RvdHlwZS5waT1mdW5jdGlvbigpe3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwib25saW5lXCIsdGhpcy53aSksd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsdGhpcy5taSl9LHRsLnByb3RvdHlwZS5faT1mdW5jdGlvbigpe3hyKFwiQ29ubmVjdGl2aXR5TW9uaXRvclwiLFwiTmV0d29yayBjb25uZWN0aXZpdHkgY2hhbmdlZDogQVZBSUxBQkxFXCIpO2Zvcih2YXIgdD0wLGU9dGhpcy5naTt0PGUubGVuZ3RoO3QrKykoMCxlW3RdKSgwKX0sdGwucHJvdG90eXBlLnlpPWZ1bmN0aW9uKCl7eHIoXCJDb25uZWN0aXZpdHlNb25pdG9yXCIsXCJOZXR3b3JrIGNvbm5lY3Rpdml0eSBjaGFuZ2VkOiBVTkFWQUlMQUJMRVwiKTtmb3IodmFyIHQ9MCxlPXRoaXMuZ2k7dDxlLmxlbmd0aDt0KyspKDAsZVt0XSkoMSl9LHRsLnl0PWZ1bmN0aW9uKCl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmdm9pZCAwIT09d2luZG93LmFkZEV2ZW50TGlzdGVuZXImJnZvaWQgMCE9PXdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyfSx0bCksV2g9e0JhdGNoR2V0RG9jdW1lbnRzOlwiYmF0Y2hHZXRcIixDb21taXQ6XCJjb21taXRcIixSdW5RdWVyeTpcInJ1blF1ZXJ5XCJ9LFloPShaaC5wcm90b3R5cGUuSWk9ZnVuY3Rpb24odCl7dGhpcy5BaT10fSxaaC5wcm90b3R5cGUuUmk9ZnVuY3Rpb24odCl7dGhpcy5iaT10fSxaaC5wcm90b3R5cGUub25NZXNzYWdlPWZ1bmN0aW9uKHQpe3RoaXMudmk9dH0sWmgucHJvdG90eXBlLmNsb3NlPWZ1bmN0aW9uKCl7dGhpcy5UaSgpfSxaaC5wcm90b3R5cGUuc2VuZD1mdW5jdGlvbih0KXt0aGlzLkVpKHQpfSxaaC5wcm90b3R5cGUuUGk9ZnVuY3Rpb24oKXt0aGlzLkFpKCl9LFpoLnByb3RvdHlwZS5WaT1mdW5jdGlvbih0KXt0aGlzLmJpKHQpfSxaaC5wcm90b3R5cGUuU2k9ZnVuY3Rpb24odCl7dGhpcy52aSh0KX0sWmgpLFhoPSgkaC5wcm90b3R5cGUuTmk9ZnVuY3Rpb24oZSx0LG4scil7dmFyIGk9dGhpcy54aShlLHQpO3hyKFwiUmVzdENvbm5lY3Rpb25cIixcIlNlbmRpbmc6IFwiLGksbik7dD17fTtyZXR1cm4gdGhpcy5GaSh0LHIpLHRoaXMua2koZSxpLHQsbikudGhlbihmdW5jdGlvbih0KXtyZXR1cm4geHIoXCJSZXN0Q29ubmVjdGlvblwiLFwiUmVjZWl2ZWQ6IFwiLHQpLHR9LGZ1bmN0aW9uKHQpe3Rocm93IExyKFwiUmVzdENvbm5lY3Rpb25cIixlK1wiIGZhaWxlZCB3aXRoIGVycm9yOiBcIix0LFwidXJsOiBcIixpLFwicmVxdWVzdDpcIixuKSx0fSl9LCRoLnByb3RvdHlwZS5PaT1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gdGhpcy5OaSh0LGUsbixyKX0sJGgucHJvdG90eXBlLkZpPWZ1bmN0aW9uKHQsZSl7aWYodFtcIlgtR29vZy1BcGktQ2xpZW50XCJdPVwiZ2wtanMvIGZpcmUvOC40LjJcIix0W1wiQ29udGVudC1UeXBlXCJdPVwidGV4dC9wbGFpblwiLHRoaXMuZGF0YWJhc2VJbmZvLmFwcElkJiYodFtcIlgtRmlyZWJhc2UtR01QSURcIl09dGhpcy5kYXRhYmFzZUluZm8uYXBwSWQpLGUpZm9yKHZhciBuIGluIGUuYXV0aEhlYWRlcnMpZS5hdXRoSGVhZGVycy5oYXNPd25Qcm9wZXJ0eShuKSYmKHRbbl09ZS5hdXRoSGVhZGVyc1tuXSl9LCRoLnByb3RvdHlwZS54aT1mdW5jdGlvbih0LGUpe3Q9V2hbdF07cmV0dXJuIHRoaXMuRGkrXCIvdjEvXCIrZStcIjpcIit0fSxuKEpoLFZoPSRoKSxKaC5wcm90b3R5cGUua2k9ZnVuY3Rpb24obyxlLHMsYSl7cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKG4scil7dmFyIGk9bmV3IFRyO2kubGlzdGVuT25jZSh2ci5DT01QTEVURSxmdW5jdGlvbigpe3RyeXtzd2l0Y2goaS5nZXRMYXN0RXJyb3JDb2RlKCkpe2Nhc2UgbXIuTk9fRVJST1I6dmFyIHQ9aS5nZXRSZXNwb25zZUpzb24oKTt4cihcIkNvbm5lY3Rpb25cIixcIlhIUiByZWNlaXZlZDpcIixKU09OLnN0cmluZ2lmeSh0KSksbih0KTticmVhaztjYXNlIG1yLlRJTUVPVVQ6eHIoXCJDb25uZWN0aW9uXCIsJ1JQQyBcIicrbysnXCIgdGltZWQgb3V0JykscihuZXcgQXIoRHIuREVBRExJTkVfRVhDRUVERUQsXCJSZXF1ZXN0IHRpbWUgb3V0XCIpKTticmVhaztjYXNlIG1yLkhUVFBfRVJST1I6dmFyIGU9aS5nZXRTdGF0dXMoKTt4cihcIkNvbm5lY3Rpb25cIiwnUlBDIFwiJytvKydcIiBmYWlsZWQgd2l0aCBzdGF0dXM6JyxlLFwicmVzcG9uc2UgdGV4dDpcIixpLmdldFJlc3BvbnNlVGV4dCgpKSwwPGU/KHQ9aS5nZXRSZXNwb25zZUpzb24oKS5lcnJvcikmJnQuc3RhdHVzJiZ0Lm1lc3NhZ2U/KGU9dC5zdGF0dXMudG9Mb3dlckNhc2UoKS5yZXBsYWNlKC9fL2csXCItXCIpLGU9MDw9T2JqZWN0LnZhbHVlcyhEcikuaW5kZXhPZihlKT9lOkRyLlVOS05PV04scihuZXcgQXIoZSx0Lm1lc3NhZ2UpKSk6cihuZXcgQXIoRHIuVU5LTk9XTixcIlNlcnZlciByZXNwb25kZWQgd2l0aCBzdGF0dXMgXCIraS5nZXRTdGF0dXMoKSkpOnIobmV3IEFyKERyLlVOQVZBSUxBQkxFLFwiQ29ubmVjdGlvbiBmYWlsZWQuXCIpKTticmVhaztkZWZhdWx0Ok1yKCl9fWZpbmFsbHl7eHIoXCJDb25uZWN0aW9uXCIsJ1JQQyBcIicrbysnXCIgY29tcGxldGVkLicpfX0pO3ZhciB0PUpTT04uc3RyaW5naWZ5KGEpO2kuc2VuZChlLFwiUE9TVFwiLHQscywxNSl9KX0sSmgucHJvdG90eXBlLiRpPWZ1bmN0aW9uKHQsZSl7dmFyIG4scj1bdGhpcy5EaSxcIi9cIixcImdvb2dsZS5maXJlc3RvcmUudjEuRmlyZXN0b3JlXCIsXCIvXCIsdCxcIi9jaGFubmVsXCJdLGk9bmV3IGxyLG89Z3IoKSx0PXtodHRwU2Vzc2lvbklkUGFyYW06XCJnc2Vzc2lvbmlkXCIsaW5pdE1lc3NhZ2VIZWFkZXJzOnt9LG1lc3NhZ2VVcmxQYXJhbXM6e2RhdGFiYXNlOlwicHJvamVjdHMvXCIrdGhpcy5kYXRhYmFzZUlkLnByb2plY3RJZCtcIi9kYXRhYmFzZXMvXCIrdGhpcy5kYXRhYmFzZUlkLmRhdGFiYXNlfSxzZW5kUmF3SnNvbjohMCxzdXBwb3J0c0Nyb3NzRG9tYWluWGhyOiEwLGludGVybmFsQ2hhbm5lbFBhcmFtczp7Zm9yd2FyZENoYW5uZWxSZXF1ZXN0VGltZW91dE1zOjZlNX0sZm9yY2VMb25nUG9sbGluZzp0aGlzLmZvcmNlTG9uZ1BvbGxpbmcsZGV0ZWN0QnVmZmVyaW5nUHJveHk6dGhpcy5hdXRvRGV0ZWN0TG9uZ1BvbGxpbmd9O3RoaXMuRmkodC5pbml0TWVzc2FnZUhlYWRlcnMsZSksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5jb3Jkb3ZhfHx3aW5kb3cucGhvbmVnYXB8fHdpbmRvdy5QaG9uZUdhcCkmJi9pb3N8aXBob25lfGlwb2R8aXBhZHxhbmRyb2lkfGJsYWNrYmVycnl8aWVtb2JpbGUvaS50ZXN0KGgoKSl8fFwib2JqZWN0XCI9PXR5cGVvZiBuYXZpZ2F0b3ImJlwiUmVhY3ROYXRpdmVcIj09PW5hdmlnYXRvci5wcm9kdWN0fHwwPD1oKCkuaW5kZXhPZihcIkVsZWN0cm9uL1wiKXx8KDA8PShuPWgoKSkuaW5kZXhPZihcIk1TSUUgXCIpfHwwPD1uLmluZGV4T2YoXCJUcmlkZW50L1wiKSl8fDA8PWgoKS5pbmRleE9mKFwiTVNBcHBIb3N0L1wiKXx8XCJvYmplY3RcIj09dHlwZW9mKG49XCJvYmplY3RcIj09dHlwZW9mIGNocm9tZT9jaHJvbWUucnVudGltZTpcIm9iamVjdFwiPT10eXBlb2YgYnJvd3Nlcj9icm93c2VyLnJ1bnRpbWU6dm9pZCAwKSYmdm9pZCAwIT09bi5pZHx8KHQuaHR0cEhlYWRlcnNPdmVyd3JpdGVQYXJhbT1cIiRodHRwSGVhZGVyc1wiKTtyPXIuam9pbihcIlwiKTt4cihcIkNvbm5lY3Rpb25cIixcIkNyZWF0aW5nIFdlYkNoYW5uZWw6IFwiK3IsdCk7dmFyIHM9aS5jcmVhdGVXZWJDaGFubmVsKHIsdCksYT0hMSx1PSExLGM9bmV3IFloKHtFaTpmdW5jdGlvbih0KXt1P3hyKFwiQ29ubmVjdGlvblwiLFwiTm90IHNlbmRpbmcgYmVjYXVzZSBXZWJDaGFubmVsIGlzIGNsb3NlZDpcIix0KTooYXx8KHhyKFwiQ29ubmVjdGlvblwiLFwiT3BlbmluZyBXZWJDaGFubmVsIHRyYW5zcG9ydC5cIikscy5vcGVuKCksYT0hMCkseHIoXCJDb25uZWN0aW9uXCIsXCJXZWJDaGFubmVsIHNlbmRpbmc6XCIsdCkscy5zZW5kKHQpKX0sVGk6ZnVuY3Rpb24oKXtyZXR1cm4gcy5jbG9zZSgpfX0pLHQ9ZnVuY3Rpb24odCxlLG4pe3QubGlzdGVuKGUsZnVuY3Rpb24odCl7dHJ5e24odCl9Y2F0Y2godCl7c2V0VGltZW91dChmdW5jdGlvbigpe3Rocm93IHR9LDApfX0pfTtyZXR1cm4gdChzLEVyLkV2ZW50VHlwZS5PUEVOLGZ1bmN0aW9uKCl7dXx8eHIoXCJDb25uZWN0aW9uXCIsXCJXZWJDaGFubmVsIHRyYW5zcG9ydCBvcGVuZWQuXCIpfSksdChzLEVyLkV2ZW50VHlwZS5DTE9TRSxmdW5jdGlvbigpe3V8fCh1PSEwLHhyKFwiQ29ubmVjdGlvblwiLFwiV2ViQ2hhbm5lbCB0cmFuc3BvcnQgY2xvc2VkXCIpLGMuVmkoKSl9KSx0KHMsRXIuRXZlbnRUeXBlLkVSUk9SLGZ1bmN0aW9uKHQpe3V8fCh1PSEwLExyKFwiQ29ubmVjdGlvblwiLFwiV2ViQ2hhbm5lbCB0cmFuc3BvcnQgZXJyb3JlZDpcIix0KSxjLlZpKG5ldyBBcihEci5VTkFWQUlMQUJMRSxcIlRoZSBvcGVyYXRpb24gY291bGQgbm90IGJlIGNvbXBsZXRlZFwiKSkpfSksdChzLEVyLkV2ZW50VHlwZS5NRVNTQUdFLGZ1bmN0aW9uKHQpe3ZhciBlLG4scixpO3V8fChGcighIShlPXQuZGF0YVswXSkpLChuPWUuZXJyb3J8fChudWxsPT09KGk9ZVswXSl8fHZvaWQgMD09PWk/dm9pZCAwOmkuZXJyb3IpKT8oeHIoXCJDb25uZWN0aW9uXCIsXCJXZWJDaGFubmVsIHJlY2VpdmVkIGVycm9yOlwiLG4pLHI9bi5zdGF0dXMsdD1mdW5jdGlvbigpe3ZhciB0PW1zW3JdO2lmKHZvaWQgMCE9PXQpcmV0dXJuIFNzKHQpfSgpLGk9bi5tZXNzYWdlLHZvaWQgMD09PXQmJih0PURyLklOVEVSTkFMLGk9XCJVbmtub3duIGVycm9yIHN0YXR1czogXCIrcitcIiB3aXRoIG1lc3NhZ2UgXCIrbi5tZXNzYWdlKSx1PSEwLGMuVmkobmV3IEFyKHQsaSkpLHMuY2xvc2UoKSk6KHhyKFwiQ29ubmVjdGlvblwiLFwiV2ViQ2hhbm5lbCByZWNlaXZlZDpcIixlKSxjLlNpKGUpKSl9KSx0KG8sYnIuU1RBVF9FVkVOVCxmdW5jdGlvbih0KXt0LnN0YXQ9PT13cj94cihcIkNvbm5lY3Rpb25cIixcIkRldGVjdGVkIGJ1ZmZlcmluZyBwcm94eVwiKTp0LnN0YXQ9PT1JciYmeHIoXCJDb25uZWN0aW9uXCIsXCJEZXRlY3RlZCBubyBidWZmZXJpbmcgcHJveHlcIil9KSxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7Yy5QaSgpfSwwKSxjfSxKaCk7ZnVuY3Rpb24gSmgodCl7dmFyIGU9dGhpcztyZXR1cm4oZT1WaC5jYWxsKHRoaXMsdCl8fHRoaXMpLmZvcmNlTG9uZ1BvbGxpbmc9dC5mb3JjZUxvbmdQb2xsaW5nLGUuYXV0b0RldGVjdExvbmdQb2xsaW5nPXQuYXV0b0RldGVjdExvbmdQb2xsaW5nLGV9ZnVuY3Rpb24gJGgodCl7dGhpcy5kYXRhYmFzZUluZm89dCx0aGlzLmRhdGFiYXNlSWQ9dC5kYXRhYmFzZUlkO3ZhciBlPXQuc3NsP1wiaHR0cHNcIjpcImh0dHBcIjt0aGlzLkRpPWUrXCI6Ly9cIit0Lmhvc3QsdGhpcy5DaT1cInByb2plY3RzL1wiK3RoaXMuZGF0YWJhc2VJZC5wcm9qZWN0SWQrXCIvZGF0YWJhc2VzL1wiK3RoaXMuZGF0YWJhc2VJZC5kYXRhYmFzZStcIi9kb2N1bWVudHNcIn1mdW5jdGlvbiBaaCh0KXt0aGlzLkVpPXQuRWksdGhpcy5UaT10LlRpfWZ1bmN0aW9uIHRsKCl7dmFyIHQ9dGhpczt0aGlzLndpPWZ1bmN0aW9uKCl7cmV0dXJuIHQuX2koKX0sdGhpcy5taT1mdW5jdGlvbigpe3JldHVybiB0LnlpKCl9LHRoaXMuZ2k9W10sdGhpcy5waSgpfWZ1bmN0aW9uIGVsKCl7fWZ1bmN0aW9uIG5sKCl7dGhpcy5saT1uZXcgS2gsdGhpcy5maT17fSx0aGlzLm9ubGluZVN0YXRlSGFuZGxlcj1udWxsLHRoaXMuc2VxdWVuY2VOdW1iZXJIYW5kbGVyPW51bGx9ZnVuY3Rpb24gcmwodCxlLG4scixpKXt0aGlzLndpbmRvdz10LHRoaXMuU2U9ZSx0aGlzLnBlcnNpc3RlbmNlS2V5PW4sdGhpcy5Ocz1yLHRoaXMuc3luY0VuZ2luZT1udWxsLHRoaXMub25saW5lU3RhdGVIYW5kbGVyPW51bGwsdGhpcy5zZXF1ZW5jZU51bWJlckhhbmRsZXI9bnVsbCx0aGlzLnhzPXRoaXMuRnMuYmluZCh0aGlzKSx0aGlzLmtzPW5ldyBOcyhxciksdGhpcy5zdGFydGVkPSExLHRoaXMuT3M9W107bj1uLnJlcGxhY2UoL1suKis/XiR7fSgpfFtcXF1cXFxcXS9nLFwiXFxcXCQmXCIpO3RoaXMuc3RvcmFnZT10aGlzLndpbmRvdy5sb2NhbFN0b3JhZ2UsdGhpcy5jdXJyZW50VXNlcj1pLHRoaXMuJHM9UGgodGhpcy5wZXJzaXN0ZW5jZUtleSx0aGlzLk5zKSx0aGlzLk1zPVwiZmlyZXN0b3JlX3NlcXVlbmNlX251bWJlcl9cIit0aGlzLnBlcnNpc3RlbmNlS2V5LHRoaXMua3M9dGhpcy5rcy5pbnNlcnQodGhpcy5OcyxuZXcgS2gpLHRoaXMuTHM9bmV3IFJlZ0V4cChcIl5maXJlc3RvcmVfY2xpZW50c19cIituK1wiXyhbXl9dKikkXCIpLHRoaXMuQnM9bmV3IFJlZ0V4cChcIl5maXJlc3RvcmVfbXV0YXRpb25zX1wiK24rXCJfKFxcXFxkKykoPzpfKC4qKSk/JFwiKSx0aGlzLnFzPW5ldyBSZWdFeHAoXCJeZmlyZXN0b3JlX3RhcmdldHNfXCIrbitcIl8oXFxcXGQrKSRcIiksdGhpcy5Vcz1cImZpcmVzdG9yZV9vbmxpbmVfc3RhdGVfXCIrdGhpcy5wZXJzaXN0ZW5jZUtleSx0aGlzLlFzPVwiZmlyZXN0b3JlX2J1bmRsZV9sb2FkZWRfXCIrdGhpcy5wZXJzaXN0ZW5jZUtleSx0aGlzLndpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwic3RvcmFnZVwiLHRoaXMueHMpfWZ1bmN0aW9uIGlsKCl7dGhpcy5hY3RpdmVUYXJnZXRJZHM9anN9ZnVuY3Rpb24gb2wodCxlKXt0aGlzLmNsaWVudElkPXQsdGhpcy5vbmxpbmVTdGF0ZT1lfWZ1bmN0aW9uIHNsKHQsZSl7dGhpcy5jbGllbnRJZD10LHRoaXMuYWN0aXZlVGFyZ2V0SWRzPWV9ZnVuY3Rpb24gYWwodCxlLG4pe3RoaXMudGFyZ2V0SWQ9dCx0aGlzLnN0YXRlPWUsdGhpcy5lcnJvcj1ufWZ1bmN0aW9uIHVsKHQsZSxuLHIpe3RoaXMudXNlcj10LHRoaXMuYmF0Y2hJZD1lLHRoaXMuc3RhdGU9bix0aGlzLmVycm9yPXJ9ZnVuY3Rpb24gY2woKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzpudWxsfWZ1bmN0aW9uIGhsKCl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9dHlwZW9mIGRvY3VtZW50P2RvY3VtZW50Om51bGx9ZnVuY3Rpb24gbGwodCl7cmV0dXJuIG5ldyBpYSh0LCEwKX1mdW5jdGlvbiBmbCh0LGUsbixyLGkpe3ZhciBvPXRoaXM7dGhpcy5sb2NhbFN0b3JlPXQsdGhpcy5kYXRhc3RvcmU9ZSx0aGlzLmFzeW5jUXVldWU9bix0aGlzLnJlbW90ZVN5bmNlcj17fSx0aGlzLmtyPVtdLHRoaXMuT3I9bmV3IE1hcCx0aGlzLiRyPW5ldyBTZXQsdGhpcy5Ncj1bXSx0aGlzLkxyPWksdGhpcy5Mci5kaShmdW5jdGlvbih0KXtuLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4geShvLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIFBsKHRoaXMpPyh4cihcIlJlbW90ZVN0b3JlXCIsXCJSZXN0YXJ0aW5nIHN0cmVhbXMgZm9yIG5ldHdvcmsgcmVhY2hhYmlsaXR5IGNoYW5nZS5cIiksWzQsZnVuY3Rpb24obil7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybihlPW4pLiRyLmFkZCg0KSxbNCxBbChlKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxlLkJyLnNldChcIlVua25vd25cIiksZS4kci5kZWxldGUoNCksWzQsRGwoZSldO2Nhc2UgMjpyZXR1cm4gdC5zZW50KCksWzJdfX0pfSl9KHRoaXMpXSk6WzMsMl07Y2FzZSAxOnQuc2VudCgpLHQubGFiZWw9MjtjYXNlIDI6cmV0dXJuWzJdfX0pfSl9KX0pLHRoaXMuQnI9bmV3IHdsKG4scil9dmFyIGRsLHBsLHlsLGdsPShObC5wcm90b3R5cGUucmVzZXQ9ZnVuY3Rpb24oKXt0aGlzLnFpPTB9LE5sLnByb3RvdHlwZS5LaT1mdW5jdGlvbigpe3RoaXMucWk9dGhpcy5CaX0sTmwucHJvdG90eXBlLmppPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy5jYW5jZWwoKTt2YXIgbj1NYXRoLmZsb29yKHRoaXMucWkrdGhpcy5XaSgpKSxyPU1hdGgubWF4KDAsRGF0ZS5ub3coKS10aGlzLlFpKSxpPU1hdGgubWF4KDAsbi1yKTswPGkmJnhyKFwiRXhwb25lbnRpYWxCYWNrb2ZmXCIsXCJCYWNraW5nIG9mZiBmb3IgXCIraStcIiBtcyAoYmFzZSBkZWxheTogXCIrdGhpcy5xaStcIiBtcywgZGVsYXkgd2l0aCBqaXR0ZXI6IFwiK24rXCIgbXMsIGxhc3QgYXR0ZW1wdDogXCIrcitcIiBtcyBhZ28pXCIpLHRoaXMuVWk9dGhpcy5TZS5lbnF1ZXVlQWZ0ZXJEZWxheSh0aGlzLnRpbWVySWQsaSxmdW5jdGlvbigpe3JldHVybiBlLlFpPURhdGUubm93KCksdCgpfSksdGhpcy5xaSo9dGhpcy5MaSx0aGlzLnFpPHRoaXMuTWkmJih0aGlzLnFpPXRoaXMuTWkpLHRoaXMucWk+dGhpcy5CaSYmKHRoaXMucWk9dGhpcy5CaSl9LE5sLnByb3RvdHlwZS5HaT1mdW5jdGlvbigpe251bGwhPT10aGlzLlVpJiYodGhpcy5VaS5za2lwRGVsYXkoKSx0aGlzLlVpPW51bGwpfSxObC5wcm90b3R5cGUuY2FuY2VsPWZ1bmN0aW9uKCl7bnVsbCE9PXRoaXMuVWkmJih0aGlzLlVpLmNhbmNlbCgpLHRoaXMuVWk9bnVsbCl9LE5sLnByb3RvdHlwZS5XaT1mdW5jdGlvbigpe3JldHVybihNYXRoLnJhbmRvbSgpLS41KSp0aGlzLnFpfSxObCksST0oU2wucHJvdG90eXBlLnRyPWZ1bmN0aW9uKCl7cmV0dXJuIDE9PT10aGlzLnN0YXRlfHwyPT09dGhpcy5zdGF0ZXx8ND09PXRoaXMuc3RhdGV9LFNsLnByb3RvdHlwZS5lcj1mdW5jdGlvbigpe3JldHVybiAyPT09dGhpcy5zdGF0ZX0sU2wucHJvdG90eXBlLnN0YXJ0PWZ1bmN0aW9uKCl7MyE9PXRoaXMuc3RhdGU/dGhpcy5hdXRoKCk6dGhpcy5ucigpfSxTbC5wcm90b3R5cGUuc3RvcD1mdW5jdGlvbigpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdGhpcy50cigpP1s0LHRoaXMuY2xvc2UoMCldOlszLDJdO2Nhc2UgMTp0LnNlbnQoKSx0LmxhYmVsPTI7Y2FzZSAyOnJldHVyblsyXX19KX0pfSxTbC5wcm90b3R5cGUuc3I9ZnVuY3Rpb24oKXt0aGlzLnN0YXRlPTAsdGhpcy5aaS5yZXNldCgpfSxTbC5wcm90b3R5cGUuaXI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuZXIoKSYmbnVsbD09PXRoaXMuWGkmJih0aGlzLlhpPXRoaXMuU2UuZW5xdWV1ZUFmdGVyRGVsYXkodGhpcy56aSw2ZTQsZnVuY3Rpb24oKXtyZXR1cm4gdC5ycigpfSkpfSxTbC5wcm90b3R5cGUuY3I9ZnVuY3Rpb24odCl7dGhpcy51cigpLHRoaXMuc3RyZWFtLnNlbmQodCl9LFNsLnByb3RvdHlwZS5ycj1mdW5jdGlvbigpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZXIoKT9bMix0aGlzLmNsb3NlKDApXTpbMl19KX0pfSxTbC5wcm90b3R5cGUudXI9ZnVuY3Rpb24oKXt0aGlzLlhpJiYodGhpcy5YaS5jYW5jZWwoKSx0aGlzLlhpPW51bGwpfSxTbC5wcm90b3R5cGUuY2xvc2U9ZnVuY3Rpb24oZSxuKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIHRoaXMudXIoKSx0aGlzLlppLmNhbmNlbCgpLHRoaXMuWWkrKywzIT09ZT90aGlzLlppLnJlc2V0KCk6biYmbi5jb2RlPT09RHIuUkVTT1VSQ0VfRVhIQVVTVEVEPyhPcihuLnRvU3RyaW5nKCkpLE9yKFwiVXNpbmcgbWF4aW11bSBiYWNrb2ZmIGRlbGF5IHRvIHByZXZlbnQgb3ZlcmxvYWRpbmcgdGhlIGJhY2tlbmQuXCIpLHRoaXMuWmkuS2koKSk6biYmbi5jb2RlPT09RHIuVU5BVVRIRU5USUNBVEVEJiZ0aGlzLkppLmludmFsaWRhdGVUb2tlbigpLG51bGwhPT10aGlzLnN0cmVhbSYmKHRoaXMuYXIoKSx0aGlzLnN0cmVhbS5jbG9zZSgpLHRoaXMuc3RyZWFtPW51bGwpLHRoaXMuc3RhdGU9ZSxbNCx0aGlzLmxpc3RlbmVyLlJpKG4pXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLFsyXX19KX0pfSxTbC5wcm90b3R5cGUuYXI9ZnVuY3Rpb24oKXt9LFNsLnByb3RvdHlwZS5hdXRoPWZ1bmN0aW9uKCl7dmFyIG49dGhpczt0aGlzLnN0YXRlPTE7dmFyIHQ9dGhpcy5ocih0aGlzLllpKSxlPXRoaXMuWWk7dGhpcy5KaS5nZXRUb2tlbigpLnRoZW4oZnVuY3Rpb24odCl7bi5ZaT09PWUmJm4ubHIodCl9LGZ1bmN0aW9uKGUpe3QoZnVuY3Rpb24oKXt2YXIgdD1uZXcgQXIoRHIuVU5LTk9XTixcIkZldGNoaW5nIGF1dGggdG9rZW4gZmFpbGVkOiBcIitlLm1lc3NhZ2UpO3JldHVybiBuLmRyKHQpfSl9KX0sU2wucHJvdG90eXBlLmxyPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj10aGlzLmhyKHRoaXMuWWkpO3RoaXMuc3RyZWFtPXRoaXMud3IodCksdGhpcy5zdHJlYW0uSWkoZnVuY3Rpb24oKXtuKGZ1bmN0aW9uKCl7cmV0dXJuIGUuc3RhdGU9MixlLmxpc3RlbmVyLklpKCl9KX0pLHRoaXMuc3RyZWFtLlJpKGZ1bmN0aW9uKHQpe24oZnVuY3Rpb24oKXtyZXR1cm4gZS5kcih0KX0pfSksdGhpcy5zdHJlYW0ub25NZXNzYWdlKGZ1bmN0aW9uKHQpe24oZnVuY3Rpb24oKXtyZXR1cm4gZS5vbk1lc3NhZ2UodCl9KX0pfSxTbC5wcm90b3R5cGUubnI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuc3RhdGU9NCx0aGlzLlppLmppKGZ1bmN0aW9uKCl7cmV0dXJuIHkodCx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zdGF0ZT0wLHRoaXMuc3RhcnQoKSxbMl19KX0pfSl9LFNsLnByb3RvdHlwZS5kcj1mdW5jdGlvbih0KXtyZXR1cm4geHIoXCJQZXJzaXN0ZW50U3RyZWFtXCIsXCJjbG9zZSB3aXRoIGVycm9yOiBcIit0KSx0aGlzLnN0cmVhbT1udWxsLHRoaXMuY2xvc2UoMyx0KX0sU2wucHJvdG90eXBlLmhyPWZ1bmN0aW9uKGUpe3ZhciBuPXRoaXM7cmV0dXJuIGZ1bmN0aW9uKHQpe24uU2UuZW5xdWV1ZUFuZEZvcmdldChmdW5jdGlvbigpe3JldHVybiBuLllpPT09ZT90KCk6KHhyKFwiUGVyc2lzdGVudFN0cmVhbVwiLFwic3RyZWFtIGNhbGxiYWNrIHNraXBwZWQgYnkgZ2V0Q2xvc2VHdWFyZGVkRGlzcGF0Y2hlci5cIiksUHJvbWlzZS5yZXNvbHZlKCkpfSl9fSxTbCksbWw9KG4oX2wseWw9SSksX2wucHJvdG90eXBlLndyPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLkhpLiRpKFwiTGlzdGVuXCIsdCl9LF9sLnByb3RvdHlwZS5vbk1lc3NhZ2U9ZnVuY3Rpb24odCl7dGhpcy5aaS5yZXNldCgpO3ZhciBlPWZ1bmN0aW9uKHQsZSl7aWYoXCJ0YXJnZXRDaGFuZ2VcImluIGUpe2UudGFyZ2V0Q2hhbmdlO3ZhciBuPVwiTk9fQ0hBTkdFXCI9PT0obz1lLnRhcmdldENoYW5nZS50YXJnZXRDaGFuZ2VUeXBlfHxcIk5PX0NIQU5HRVwiKT8wOlwiQUREXCI9PT1vPzE6XCJSRU1PVkVcIj09PW8/MjpcIkNVUlJFTlRcIj09PW8/MzpcIlJFU0VUXCI9PT1vPzQ6TXIoKSxyPWUudGFyZ2V0Q2hhbmdlLnRhcmdldElkc3x8W10saT0ocz1lLnRhcmdldENoYW5nZS5yZXN1bWVUb2tlbix0Lkk/KEZyKHZvaWQgMD09PXN8fFwic3RyaW5nXCI9PXR5cGVvZiBzKSxuaS5mcm9tQmFzZTY0U3RyaW5nKHN8fFwiXCIpKTooRnIodm9pZCAwPT09c3x8cyBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpLG5pLmZyb21VaW50OEFycmF5KHN8fG5ldyBVaW50OEFycmF5KSkpLG89KGE9ZS50YXJnZXRDaGFuZ2UuY2F1c2UpJiYodT12b2lkIDA9PT0oYz1hKS5jb2RlP0RyLlVOS05PV046U3MoYy5jb2RlKSxuZXcgQXIodSxjLm1lc3NhZ2V8fFwiXCIpKSxzPW5ldyBIcyhuLHIsaSxvfHxudWxsKX1lbHNlIGlmKFwiZG9jdW1lbnRDaGFuZ2VcImluIGUpe2UuZG9jdW1lbnRDaGFuZ2UsKG49ZS5kb2N1bWVudENoYW5nZSkuZG9jdW1lbnQsbi5kb2N1bWVudC5uYW1lLG4uZG9jdW1lbnQudXBkYXRlVGltZTt2YXIgcj1sYSh0LG4uZG9jdW1lbnQubmFtZSksaT1hYShuLmRvY3VtZW50LnVwZGF0ZVRpbWUpLGE9bmV3IFJpKHttYXBWYWx1ZTp7ZmllbGRzOm4uZG9jdW1lbnQuZmllbGRzfX0pLHU9KG89T2kubmV3Rm91bmREb2N1bWVudChyLGksYSksbi50YXJnZXRJZHN8fFtdKSxjPW4ucmVtb3ZlZFRhcmdldElkc3x8W107cz1uZXcgUXModSxjLG8ua2V5LG8pfWVsc2UgaWYoXCJkb2N1bWVudERlbGV0ZVwiaW4gZSllLmRvY3VtZW50RGVsZXRlLChuPWUuZG9jdW1lbnREZWxldGUpLmRvY3VtZW50LHI9bGEodCxuLmRvY3VtZW50KSxpPW4ucmVhZFRpbWU/YWEobi5yZWFkVGltZSk6R3IubWluKCksYT1PaS5uZXdOb0RvY3VtZW50KHIsaSksbz1uLnJlbW92ZWRUYXJnZXRJZHN8fFtdLHM9bmV3IFFzKFtdLG8sYS5rZXksYSk7ZWxzZSBpZihcImRvY3VtZW50UmVtb3ZlXCJpbiBlKWUuZG9jdW1lbnRSZW1vdmUsKG49ZS5kb2N1bWVudFJlbW92ZSkuZG9jdW1lbnQscj1sYSh0LG4uZG9jdW1lbnQpLGk9bi5yZW1vdmVkVGFyZ2V0SWRzfHxbXSxzPW5ldyBRcyhbXSxpLHIsbnVsbCk7ZWxzZXtpZighKFwiZmlsdGVyXCJpbiBlKSlyZXR1cm4gTXIoKTtlLmZpbHRlcjtlPWUuZmlsdGVyO2UudGFyZ2V0SWQsbj1lLmNvdW50fHwwLHI9bmV3IGdzKG4pLGk9ZS50YXJnZXRJZCxzPW5ldyB6cyhpLHIpfXJldHVybiBzfSh0aGlzLlIsdCksdD1mdW5jdGlvbih0KXtpZighKFwidGFyZ2V0Q2hhbmdlXCJpbiB0KSlyZXR1cm4gR3IubWluKCk7dD10LnRhcmdldENoYW5nZTtyZXR1cm4oIXQudGFyZ2V0SWRzfHwhdC50YXJnZXRJZHMubGVuZ3RoKSYmdC5yZWFkVGltZT9hYSh0LnJlYWRUaW1lKTpHci5taW4oKX0odCk7cmV0dXJuIHRoaXMubGlzdGVuZXIuX3IoZSx0KX0sX2wucHJvdG90eXBlLm1yPWZ1bmN0aW9uKHQpe3ZhciBlLG4scixpPXt9O2kuZGF0YWJhc2U9cGEodGhpcy5SKSxpLmFkZFRhcmdldD0oZT10aGlzLlIsKHI9VWkocj0obj10KS50YXJnZXQpP3tkb2N1bWVudHM6d2EoZSxyKX06e3F1ZXJ5OklhKGUscil9KS50YXJnZXRJZD1uLnRhcmdldElkLDA8bi5yZXN1bWVUb2tlbi5hcHByb3hpbWF0ZUJ5dGVTaXplKCk/ci5yZXN1bWVUb2tlbj1zYShlLG4ucmVzdW1lVG9rZW4pOjA8bi5zbmFwc2hvdFZlcnNpb24uY29tcGFyZVRvKEdyLm1pbigpKSYmKHIucmVhZFRpbWU9b2EoZSxuLnNuYXBzaG90VmVyc2lvbi50b1RpbWVzdGFtcCgpKSkscik7dmFyIG8sdD0odGhpcy5SLG89dCxudWxsPT0odD1mdW5jdGlvbigpe3N3aXRjaChvLnB1cnBvc2Upe2Nhc2UgMDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuXCJleGlzdGVuY2UtZmlsdGVyLW1pc21hdGNoXCI7Y2FzZSAyOnJldHVyblwibGltYm8tZG9jdW1lbnRcIjtkZWZhdWx0OnJldHVybiBNcigpfX0oKSk/bnVsbDp7XCJnb29nLWxpc3Rlbi10YWdzXCI6dH0pO3QmJihpLmxhYmVscz10KSx0aGlzLmNyKGkpfSxfbC5wcm90b3R5cGUueXI9ZnVuY3Rpb24odCl7dmFyIGU9e307ZS5kYXRhYmFzZT1wYSh0aGlzLlIpLGUucmVtb3ZlVGFyZ2V0PXQsdGhpcy5jcihlKX0sX2wpLHZsPShuKFRsLHBsPUkpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShUbC5wcm90b3R5cGUsXCJwclwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ncn0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxUbC5wcm90b3R5cGUuc3RhcnQ9ZnVuY3Rpb24oKXt0aGlzLmdyPSExLHRoaXMubGFzdFN0cmVhbVRva2VuPXZvaWQgMCxwbC5wcm90b3R5cGUuc3RhcnQuY2FsbCh0aGlzKX0sVGwucHJvdG90eXBlLmFyPWZ1bmN0aW9uKCl7dGhpcy5nciYmdGhpcy5FcihbXSl9LFRsLnByb3RvdHlwZS53cj1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5IaS4kaShcIldyaXRlXCIsdCl9LFRsLnByb3RvdHlwZS5vbk1lc3NhZ2U9ZnVuY3Rpb24odCl7aWYoRnIoISF0LnN0cmVhbVRva2VuKSx0aGlzLmxhc3RTdHJlYW1Ub2tlbj10LnN0cmVhbVRva2VuLHRoaXMuZ3Ipe3RoaXMuWmkucmVzZXQoKTt2YXIgZT0obj10LndyaXRlUmVzdWx0cyxyPXQuY29tbWl0VGltZSxuJiYwPG4ubGVuZ3RoPyhGcih2b2lkIDAhPT1yKSxuLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbj1yLCh0PShlPXQpLnVwZGF0ZVRpbWU/YWEoZS51cGRhdGVUaW1lKTphYShuKSkuaXNFcXVhbChHci5taW4oKSkmJih0PWFhKG4pKSxuZXcgWm8odCxlLnRyYW5zZm9ybVJlc3VsdHN8fFtdKTt2YXIgZSxufSkpOltdKSxuPWFhKHQuY29tbWl0VGltZSk7cmV0dXJuIHRoaXMubGlzdGVuZXIuVHIobixlKX12YXIgbixyO3JldHVybiBGcighdC53cml0ZVJlc3VsdHN8fDA9PT10LndyaXRlUmVzdWx0cy5sZW5ndGgpLHRoaXMuZ3I9ITAsdGhpcy5saXN0ZW5lci5JcigpfSxUbC5wcm90b3R5cGUuQXI9ZnVuY3Rpb24oKXt2YXIgdD17fTt0LmRhdGFiYXNlPXBhKHRoaXMuUiksdGhpcy5jcih0KX0sVGwucHJvdG90eXBlLkVyPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsdD17c3RyZWFtVG9rZW46dGhpcy5sYXN0U3RyZWFtVG9rZW4sd3JpdGVzOnQubWFwKGZ1bmN0aW9uKHQpe3JldHVybiB2YShlLlIsdCl9KX07dGhpcy5jcih0KX0sVGwpLGJsPShuKEVsLGRsPWZ1bmN0aW9uKCl7fSksRWwucHJvdG90eXBlLmJyPWZ1bmN0aW9uKCl7aWYodGhpcy5Scil0aHJvdyBuZXcgQXIoRHIuRkFJTEVEX1BSRUNPTkRJVElPTixcIlRoZSBjbGllbnQgaGFzIGFscmVhZHkgYmVlbiB0ZXJtaW5hdGVkLlwiKX0sRWwucHJvdG90eXBlLk5pPWZ1bmN0aW9uKGUsbixyKXt2YXIgaT10aGlzO3JldHVybiB0aGlzLmJyKCksdGhpcy5jcmVkZW50aWFscy5nZXRUb2tlbigpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIGkuSGkuTmkoZSxuLHIsdCl9KS5jYXRjaChmdW5jdGlvbih0KXt0aHJvd1wiRmlyZWJhc2VFcnJvclwiPT09dC5uYW1lPyh0LmNvZGU9PT1Eci5VTkFVVEhFTlRJQ0FURUQmJmkuY3JlZGVudGlhbHMuaW52YWxpZGF0ZVRva2VuKCksdCk6bmV3IEFyKERyLlVOS05PV04sdC50b1N0cmluZygpKX0pfSxFbC5wcm90b3R5cGUuT2k9ZnVuY3Rpb24oZSxuLHIpe3ZhciBpPXRoaXM7cmV0dXJuIHRoaXMuYnIoKSx0aGlzLmNyZWRlbnRpYWxzLmdldFRva2VuKCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gaS5IaS5PaShlLG4scix0KX0pLmNhdGNoKGZ1bmN0aW9uKHQpe3Rocm93XCJGaXJlYmFzZUVycm9yXCI9PT10Lm5hbWU/KHQuY29kZT09PURyLlVOQVVUSEVOVElDQVRFRCYmaS5jcmVkZW50aWFscy5pbnZhbGlkYXRlVG9rZW4oKSx0KTpuZXcgQXIoRHIuVU5LTk9XTix0LnRvU3RyaW5nKCkpfSl9LEVsLnByb3RvdHlwZS50ZXJtaW5hdGU9ZnVuY3Rpb24oKXt0aGlzLlJyPSEwfSxFbCksd2w9KElsLnByb3RvdHlwZS5Tcj1mdW5jdGlvbigpe3ZhciB0PXRoaXM7MD09PXRoaXMudnImJih0aGlzLkRyKFwiVW5rbm93blwiKSx0aGlzLlByPXRoaXMuYXN5bmNRdWV1ZS5lbnF1ZXVlQWZ0ZXJEZWxheShcIm9ubGluZV9zdGF0ZV90aW1lb3V0XCIsMWU0LGZ1bmN0aW9uKCl7cmV0dXJuIHQuUHI9bnVsbCx0LkNyKFwiQmFja2VuZCBkaWRuJ3QgcmVzcG9uZCB3aXRoaW4gMTAgc2Vjb25kcy5cIiksdC5EcihcIk9mZmxpbmVcIiksUHJvbWlzZS5yZXNvbHZlKCl9KSl9LElsLnByb3RvdHlwZS5Ocj1mdW5jdGlvbih0KXtcIk9ubGluZVwiPT09dGhpcy5zdGF0ZT90aGlzLkRyKFwiVW5rbm93blwiKToodGhpcy52cisrLDE8PXRoaXMudnImJih0aGlzLkZyKCksdGhpcy5DcihcIkNvbm5lY3Rpb24gZmFpbGVkIDEgdGltZXMuIE1vc3QgcmVjZW50IGVycm9yOiBcIit0LnRvU3RyaW5nKCkpLHRoaXMuRHIoXCJPZmZsaW5lXCIpKSl9LElsLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCl7dGhpcy5GcigpLHRoaXMudnI9MCxcIk9ubGluZVwiPT09dCYmKHRoaXMuVnI9ITEpLHRoaXMuRHIodCl9LElsLnByb3RvdHlwZS5Ecj1mdW5jdGlvbih0KXt0IT09dGhpcy5zdGF0ZSYmKHRoaXMuc3RhdGU9dCx0aGlzLm9ubGluZVN0YXRlSGFuZGxlcih0KSl9LElsLnByb3RvdHlwZS5Dcj1mdW5jdGlvbih0KXt0PVwiQ291bGQgbm90IHJlYWNoIENsb3VkIEZpcmVzdG9yZSBiYWNrZW5kLiBcIit0K1wiXFxuVGhpcyB0eXBpY2FsbHkgaW5kaWNhdGVzIHRoYXQgeW91ciBkZXZpY2UgZG9lcyBub3QgaGF2ZSBhIGhlYWx0aHkgSW50ZXJuZXQgY29ubmVjdGlvbiBhdCB0aGUgbW9tZW50LiBUaGUgY2xpZW50IHdpbGwgb3BlcmF0ZSBpbiBvZmZsaW5lIG1vZGUgdW50aWwgaXQgaXMgYWJsZSB0byBzdWNjZXNzZnVsbHkgY29ubmVjdCB0byB0aGUgYmFja2VuZC5cIjt0aGlzLlZyPyhPcih0KSx0aGlzLlZyPSExKTp4cihcIk9ubGluZVN0YXRlVHJhY2tlclwiLHQpfSxJbC5wcm90b3R5cGUuRnI9ZnVuY3Rpb24oKXtudWxsIT09dGhpcy5QciYmKHRoaXMuUHIuY2FuY2VsKCksdGhpcy5Qcj1udWxsKX0sSWwpO2Z1bmN0aW9uIElsKHQsZSl7dGhpcy5hc3luY1F1ZXVlPXQsdGhpcy5vbmxpbmVTdGF0ZUhhbmRsZXI9ZSx0aGlzLnN0YXRlPVwiVW5rbm93blwiLHRoaXMudnI9MCx0aGlzLlByPW51bGwsdGhpcy5Wcj0hMH1mdW5jdGlvbiBFbCh0LGUsbil7dmFyIHI9dGhpcztyZXR1cm4ocj1kbC5jYWxsKHRoaXMpfHx0aGlzKS5jcmVkZW50aWFscz10LHIuSGk9ZSxyLlI9bixyLlJyPSExLHJ9ZnVuY3Rpb24gVGwodCxlLG4scixpKXt2YXIgbz10aGlzO3JldHVybihvPXBsLmNhbGwodGhpcyx0LFwid3JpdGVfc3RyZWFtX2Nvbm5lY3Rpb25fYmFja29mZlwiLFwid3JpdGVfc3RyZWFtX2lkbGVcIixlLG4saSl8fHRoaXMpLlI9cixvLmdyPSExLG99ZnVuY3Rpb24gX2wodCxlLG4scixpKXt2YXIgbz10aGlzO3JldHVybihvPXlsLmNhbGwodGhpcyx0LFwibGlzdGVuX3N0cmVhbV9jb25uZWN0aW9uX2JhY2tvZmZcIixcImxpc3Rlbl9zdHJlYW1faWRsZVwiLGUsbixpKXx8dGhpcykuUj1yLG99ZnVuY3Rpb24gU2wodCxlLG4scixpLG8pe3RoaXMuU2U9dCx0aGlzLnppPW4sdGhpcy5IaT1yLHRoaXMuSmk9aSx0aGlzLmxpc3RlbmVyPW8sdGhpcy5zdGF0ZT0wLHRoaXMuWWk9MCx0aGlzLlhpPW51bGwsdGhpcy5zdHJlYW09bnVsbCx0aGlzLlppPW5ldyBnbCh0LGUpfWZ1bmN0aW9uIE5sKHQsZSxuLHIsaSl7dm9pZCAwPT09biYmKG49MWUzKSx2b2lkIDA9PT1yJiYocj0xLjUpLHZvaWQgMD09PWkmJihpPTZlNCksdGhpcy5TZT10LHRoaXMudGltZXJJZD1lLHRoaXMuTWk9bix0aGlzLkxpPXIsdGhpcy5CaT1pLHRoaXMucWk9MCx0aGlzLlVpPW51bGwsdGhpcy5RaT1EYXRlLm5vdygpLHRoaXMucmVzZXQoKX1mdW5jdGlvbiBEbChyKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDppZighUGwocikpcmV0dXJuWzMsNF07ZT0wLG49ci5Ncix0LmxhYmVsPTE7Y2FzZSAxOnJldHVybiBlPG4ubGVuZ3RoP1s0LCgwLG5bZV0pKCEwKV06WzMsNF07Y2FzZSAyOnQuc2VudCgpLHQubGFiZWw9MztjYXNlIDM6cmV0dXJuIGUrKyxbMywxXTtjYXNlIDQ6cmV0dXJuWzJdfX0pfSl9ZnVuY3Rpb24gQWwocil7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbjtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6ZT0wLG49ci5Ncix0LmxhYmVsPTE7Y2FzZSAxOnJldHVybiBlPG4ubGVuZ3RoP1s0LCgwLG5bZV0pKCExKV06WzMsNF07Y2FzZSAyOnQuc2VudCgpLHQubGFiZWw9MztjYXNlIDM6cmV0dXJuIGUrKyxbMywxXTtjYXNlIDQ6cmV0dXJuWzJdfX0pfSl9ZnVuY3Rpb24ga2wodCxlKXt0Lk9yLmhhcyhlLnRhcmdldElkKXx8KHQuT3Iuc2V0KGUudGFyZ2V0SWQsZSksTGwodCk/T2wodCk6R2wodCkuZXIoKSYmUmwodCxlKSl9ZnVuY3Rpb24gQ2wodCxlKXt2YXIgbj10LHQ9R2wobik7bi5Pci5kZWxldGUoZSksdC5lcigpJiZ4bChuLGUpLDA9PT1uLk9yLnNpemUmJih0LmVyKCk/dC5pcigpOlBsKG4pJiZuLkJyLnNldChcIlVua25vd25cIikpfWZ1bmN0aW9uIFJsKHQsZSl7dC5xci5VKGUudGFyZ2V0SWQpLEdsKHQpLm1yKGUpfWZ1bmN0aW9uIHhsKHQsZSl7dC5xci5VKGUpLEdsKHQpLnlyKGUpfWZ1bmN0aW9uIE9sKGUpe2UucXI9bmV3IFlzKHtnZXRSZW1vdGVLZXlzRm9yVGFyZ2V0OmZ1bmN0aW9uKHQpe3JldHVybiBlLnJlbW90ZVN5bmNlci5nZXRSZW1vdGVLZXlzRm9yVGFyZ2V0KHQpfSxsdDpmdW5jdGlvbih0KXtyZXR1cm4gZS5Pci5nZXQodCl8fG51bGx9fSksR2woZSkuc3RhcnQoKSxlLkJyLlNyKCl9ZnVuY3Rpb24gTGwodCl7cmV0dXJuIFBsKHQpJiYhR2wodCkudHIoKSYmMDx0Lk9yLnNpemV9ZnVuY3Rpb24gUGwodCl7cmV0dXJuIDA9PT10LiRyLnNpemV9ZnVuY3Rpb24gTWwodCl7dC5xcj12b2lkIDB9ZnVuY3Rpb24gRmwocyxhLHUpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLG87cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOmlmKHMuQnIuc2V0KFwiT25saW5lXCIpLCEoYSBpbnN0YW5jZW9mIEhzJiYyPT09YS5zdGF0ZSYmYS5jYXVzZSkpcmV0dXJuWzMsNl07dC5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gdC50cnlzLnB1c2goWzEsMywsNV0pLFs0LGZ1bmN0aW9uKG8scyl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyLGk7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOmU9cy5jYXVzZSxuPTAscj1zLnRhcmdldElkcyx0LmxhYmVsPTE7Y2FzZSAxOnJldHVybiBuPHIubGVuZ3RoPyhpPXJbbl0sby5Pci5oYXMoaSk/WzQsby5yZW1vdGVTeW5jZXIucmVqZWN0TGlzdGVuKGksZSldOlszLDNdKTpbMyw1XTtjYXNlIDI6dC5zZW50KCksby5Pci5kZWxldGUoaSksby5xci5yZW1vdmVUYXJnZXQoaSksdC5sYWJlbD0zO2Nhc2UgMzp0LmxhYmVsPTQ7Y2FzZSA0OnJldHVybiBuKyssWzMsMV07Y2FzZSA1OnJldHVyblsyXX19KX0pfShzLGEpXTtjYXNlIDI6cmV0dXJuIHQuc2VudCgpLFszLDVdO2Nhc2UgMzpyZXR1cm4gbj10LnNlbnQoKSx4cihcIlJlbW90ZVN0b3JlXCIsXCJGYWlsZWQgdG8gcmVtb3ZlIHRhcmdldHMgJXM6ICVzIFwiLGEudGFyZ2V0SWRzLmpvaW4oXCIsXCIpLG4pLFs0LFZsKHMsbildO2Nhc2UgNDpyZXR1cm4gdC5zZW50KCksWzMsNV07Y2FzZSA1OnJldHVyblszLDEzXTtjYXNlIDY6aWYoYSBpbnN0YW5jZW9mIFFzP3MucXIuWChhKTphIGluc3RhbmNlb2YgenM/cy5xci5ydChhKTpzLnFyLmV0KGEpLHUuaXNFcXVhbChHci5taW4oKSkpcmV0dXJuWzMsMTNdO3QubGFiZWw9NztjYXNlIDc6cmV0dXJuIHQudHJ5cy5wdXNoKFs3LDExLCwxM10pLFs0LG5oKHMubG9jYWxTdG9yZSldO2Nhc2UgODpyZXR1cm4gbz10LnNlbnQoKSwwPD11LmNvbXBhcmVUbyhvKT9bNCwoaT11LChlPShyPXMpLnFyLnV0KGkpKS50YXJnZXRDaGFuZ2VzLmZvckVhY2goZnVuY3Rpb24odCxlKXt2YXIgbjswPHQucmVzdW1lVG9rZW4uYXBwcm94aW1hdGVCeXRlU2l6ZSgpJiYoKG49ci5Pci5nZXQoZSkpJiZyLk9yLnNldChlLG4ud2l0aFJlc3VtZVRva2VuKHQucmVzdW1lVG9rZW4saSkpKX0pLGUudGFyZ2V0TWlzbWF0Y2hlcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3ZhciBlPXIuT3IuZ2V0KHQpO2UmJihyLk9yLnNldCh0LGUud2l0aFJlc3VtZVRva2VuKG5pLkVNUFRZX0JZVEVfU1RSSU5HLGUuc25hcHNob3RWZXJzaW9uKSkseGwocix0KSxlPW5ldyBUdShlLnRhcmdldCx0LDEsZS5zZXF1ZW5jZU51bWJlciksUmwocixlKSl9KSxyLnJlbW90ZVN5bmNlci5hcHBseVJlbW90ZUV2ZW50KGUpKV06WzMsMTBdO2Nhc2UgOTp0LnNlbnQoKSx0LmxhYmVsPTEwO2Nhc2UgMTA6cmV0dXJuWzMsMTNdO2Nhc2UgMTE6cmV0dXJuIHhyKFwiUmVtb3RlU3RvcmVcIixcIkZhaWxlZCB0byByYWlzZSBzbmFwc2hvdDpcIixvPXQuc2VudCgpKSxbNCxWbChzLG8pXTtjYXNlIDEyOnJldHVybiB0LnNlbnQoKSxbMywxM107Y2FzZSAxMzpyZXR1cm5bMl19dmFyIHIsaSxlfSl9KX1mdW5jdGlvbiBWbChuLHIsaSl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6aWYoIWx1KHIpKXRocm93IHI7cmV0dXJuIG4uJHIuYWRkKDEpLFs0LEFsKG4pXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLG4uQnIuc2V0KFwiT2ZmbGluZVwiKSxpPWl8fGZ1bmN0aW9uKCl7cmV0dXJuIG5oKG4ubG9jYWxTdG9yZSl9LG4uYXN5bmNRdWV1ZS5lbnF1ZXVlUmV0cnlhYmxlKGZ1bmN0aW9uKCl7cmV0dXJuIHkoZSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiB4cihcIlJlbW90ZVN0b3JlXCIsXCJSZXRyeWluZyBJbmRleGVkREIgYWNjZXNzXCIpLFs0LGkoKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxuLiRyLmRlbGV0ZSgxKSxbNCxEbChuKV07Y2FzZSAyOnJldHVybiB0LnNlbnQoKSxbMl19fSl9KX0pLFsyXX19KX0pfWZ1bmN0aW9uIFVsKGUsbil7cmV0dXJuIG4oKS5jYXRjaChmdW5jdGlvbih0KXtyZXR1cm4gVmwoZSx0LG4pfSl9ZnVuY3Rpb24gcWwodSl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGksbyxzLGE7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOm89UWwoaT11KSxzPTA8aS5rci5sZW5ndGg/aS5rcltpLmtyLmxlbmd0aC0xXS5iYXRjaElkOi0xLHQubGFiZWw9MTtjYXNlIDE6aWYoIShQbChpKSYmaS5rci5sZW5ndGg8MTApKXJldHVyblszLDddO3QubGFiZWw9MjtjYXNlIDI6cmV0dXJuIHQudHJ5cy5wdXNoKFsyLDQsLDZdKSxbNCwoZT1pLmxvY2FsU3RvcmUsbj1zLChyPWUpLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiR2V0IG5leHQgbXV0YXRpb24gYmF0Y2hcIixcInJlYWRvbmx5XCIsZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PW4mJihuPS0xKSxyLl9uLmdldE5leHRNdXRhdGlvbkJhdGNoQWZ0ZXJCYXRjaElkKHQsbil9KSldO2Nhc2UgMzpyZXR1cm4gbnVsbD09PShhPXQuc2VudCgpKT8oMD09PWkua3IubGVuZ3RoJiZvLmlyKCksWzMsN10pOihzPWEuYmF0Y2hJZCxmdW5jdGlvbih0LGUpe3Qua3IucHVzaChlKTt0PVFsKHQpO3QuZXIoKSYmdC5wciYmdC5FcihlLm11dGF0aW9ucyl9KGksYSksWzMsNl0pO2Nhc2UgNDpyZXR1cm4gYT10LnNlbnQoKSxbNCxWbChpLGEpXTtjYXNlIDU6cmV0dXJuIHQuc2VudCgpLFszLDZdO2Nhc2UgNjpyZXR1cm5bMywxXTtjYXNlIDc6cmV0dXJuIEJsKGkpJiZqbChpKSxbMl19dmFyIGUsbixyfSl9KX1mdW5jdGlvbiBCbCh0KXtyZXR1cm4gUGwodCkmJiFRbCh0KS50cigpJiYwPHQua3IubGVuZ3RofWZ1bmN0aW9uIGpsKHQpe1FsKHQpLnN0YXJ0KCl9ZnVuY3Rpb24gS2wobixyKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9bixyPyhlLiRyLmRlbGV0ZSgyKSxbNCxEbChlKV0pOlszLDJdO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksWzMsNV07Y2FzZSAyOnJldHVybiByP1szLDRdOihlLiRyLmFkZCgyKSxbNCxBbChlKV0pO2Nhc2UgMzp0LnNlbnQoKSxlLkJyLnNldChcIlVua25vd25cIiksdC5sYWJlbD00O2Nhc2UgNDp0LmxhYmVsPTU7Y2FzZSA1OnJldHVyblsyXX19KX0pfWZ1bmN0aW9uIEdsKG4pe3ZhciB0LGUscixpPXRoaXM7cmV0dXJuIG4uVXJ8fChuLlVyPSh0PW4uZGF0YXN0b3JlLGU9bi5hc3luY1F1ZXVlLHI9e0lpOmZ1bmN0aW9uKG4pe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIG4uT3IuZm9yRWFjaChmdW5jdGlvbih0LGUpe1JsKG4sdCl9KSxbMl19KX0pfS5iaW5kKG51bGwsbiksUmk6ZnVuY3Rpb24oZSxuKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVybiBNbChlKSxMbChlKT8oZS5Cci5OcihuKSxPbChlKSk6ZS5Cci5zZXQoXCJVbmtub3duXCIpLFsyXX0pfSl9LmJpbmQobnVsbCxuKSxfcjpGbC5iaW5kKG51bGwsbil9LHQuYnIoKSxuZXcgbWwoZSx0LkhpLHQuY3JlZGVudGlhbHMsdC5SLHIpKSxuLk1yLnB1c2goZnVuY3Rpb24oZSl7cmV0dXJuIHkoaSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiBlPyhuLlVyLnNyKCksTGwobik/T2wobik6bi5Cci5zZXQoXCJVbmtub3duXCIpLFszLDNdKTpbMywxXTtjYXNlIDE6cmV0dXJuWzQsbi5Vci5zdG9wKCldO2Nhc2UgMjp0LnNlbnQoKSxNbChuKSx0LmxhYmVsPTM7Y2FzZSAzOnJldHVyblsyXX19KX0pfSkpLG4uVXJ9ZnVuY3Rpb24gUWwobil7dmFyIHQsZSxyLGk9dGhpcztyZXR1cm4gbi5Rcnx8KG4uUXI9KHQ9bi5kYXRhc3RvcmUsZT1uLmFzeW5jUXVldWUscj17SWk6ZnVuY3Rpb24oZSl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtyZXR1cm4gUWwoZSkuQXIoKSxbMl19KX0pfS5iaW5kKG51bGwsbiksUmk6ZnVuY3Rpb24oZSxuKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIG4mJlFsKGUpLnByP1s0LGZ1bmN0aW9uKHIsaSl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbjtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIF9zKG49aS5jb2RlKSYmbiE9PURyLkFCT1JURUQ/KGU9ci5rci5zaGlmdCgpLFFsKHIpLnNyKCksWzQsVWwocixmdW5jdGlvbigpe3JldHVybiByLnJlbW90ZVN5bmNlci5yZWplY3RGYWlsZWRXcml0ZShlLmJhdGNoSWQsaSl9KV0pOlszLDNdO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksWzQscWwocildO2Nhc2UgMjp0LnNlbnQoKSx0LmxhYmVsPTM7Y2FzZSAzOnJldHVyblsyXX19KX0pfShlLG4pXTpbMywyXTtjYXNlIDE6dC5zZW50KCksdC5sYWJlbD0yO2Nhc2UgMjpyZXR1cm4gQmwoZSkmJmpsKGUpLFsyXX19KX0pfS5iaW5kKG51bGwsbiksSXI6ZnVuY3Rpb24obyl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyLGk7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtmb3IoZT1RbChvKSxuPTAscj1vLmtyO248ci5sZW5ndGg7bisrKWk9cltuXSxlLkVyKGkubXV0YXRpb25zKTtyZXR1cm5bMl19KX0pfS5iaW5kKG51bGwsbiksVHI6ZnVuY3Rpb24ocixpLG8pe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG47cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiBlPXIua3Iuc2hpZnQoKSxuPUV1LmZyb20oZSxpLG8pLFs0LFVsKHIsZnVuY3Rpb24oKXtyZXR1cm4gci5yZW1vdGVTeW5jZXIuYXBwbHlTdWNjZXNzZnVsV3JpdGUobil9KV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxbNCxxbChyKV07Y2FzZSAyOnJldHVybiB0LnNlbnQoKSxbMl19fSl9KX0uYmluZChudWxsLG4pfSx0LmJyKCksbmV3IHZsKGUsdC5IaSx0LmNyZWRlbnRpYWxzLHQuUixyKSksbi5Nci5wdXNoKGZ1bmN0aW9uKGUpe3JldHVybiB5KGksdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZT8obi5Rci5zcigpLFs0LHFsKG4pXSk6WzMsMl07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxbMyw0XTtjYXNlIDI6cmV0dXJuWzQsbi5Rci5zdG9wKCldO2Nhc2UgMzp0LnNlbnQoKSwwPG4ua3IubGVuZ3RoJiYoeHIoXCJSZW1vdGVTdG9yZVwiLFwiU3RvcHBpbmcgd3JpdGUgc3RyZWFtIHdpdGggXCIrbi5rci5sZW5ndGgrXCIgcGVuZGluZyB3cml0ZXNcIiksbi5rcj1bXSksdC5sYWJlbD00O2Nhc2UgNDpyZXR1cm5bMl19fSl9KX0pKSxuLlFyfXZhciB6bD0oSGwuY3JlYXRlQW5kU2NoZWR1bGU9ZnVuY3Rpb24odCxlLG4scixpKXtpPW5ldyBIbCh0LGUsRGF0ZS5ub3coKStuLHIsaSk7cmV0dXJuIGkuc3RhcnQobiksaX0sSGwucHJvdG90eXBlLnN0YXJ0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy50aW1lckhhbmRsZT1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7cmV0dXJuIGUuaGFuZGxlRGVsYXlFbGFwc2VkKCl9LHQpfSxIbC5wcm90b3R5cGUuc2tpcERlbGF5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGFuZGxlRGVsYXlFbGFwc2VkKCl9LEhsLnByb3RvdHlwZS5jYW5jZWw9ZnVuY3Rpb24odCl7bnVsbCE9PXRoaXMudGltZXJIYW5kbGUmJih0aGlzLmNsZWFyVGltZW91dCgpLHRoaXMuZGVmZXJyZWQucmVqZWN0KG5ldyBBcihEci5DQU5DRUxMRUQsXCJPcGVyYXRpb24gY2FuY2VsbGVkXCIrKHQ/XCI6IFwiK3Q6XCJcIikpKSl9LEhsLnByb3RvdHlwZS5oYW5kbGVEZWxheUVsYXBzZWQ9ZnVuY3Rpb24oKXt2YXIgZT10aGlzO3RoaXMuYXN5bmNRdWV1ZS5lbnF1ZXVlQW5kRm9yZ2V0KGZ1bmN0aW9uKCl7cmV0dXJuIG51bGwhPT1lLnRpbWVySGFuZGxlPyhlLmNsZWFyVGltZW91dCgpLGUub3AoKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBlLmRlZmVycmVkLnJlc29sdmUodCl9KSk6UHJvbWlzZS5yZXNvbHZlKCl9KX0sSGwucHJvdG90eXBlLmNsZWFyVGltZW91dD1mdW5jdGlvbigpe251bGwhPT10aGlzLnRpbWVySGFuZGxlJiYodGhpcy5yZW1vdmFsQ2FsbGJhY2sodGhpcyksY2xlYXJUaW1lb3V0KHRoaXMudGltZXJIYW5kbGUpLHRoaXMudGltZXJIYW5kbGU9bnVsbCl9LEhsKTtmdW5jdGlvbiBIbCh0LGUsbixyLGkpe3RoaXMuYXN5bmNRdWV1ZT10LHRoaXMudGltZXJJZD1lLHRoaXMudGFyZ2V0VGltZU1zPW4sdGhpcy5vcD1yLHRoaXMucmVtb3ZhbENhbGxiYWNrPWksdGhpcy5kZWZlcnJlZD1uZXcgWmEsdGhpcy50aGVuPXRoaXMuZGVmZXJyZWQucHJvbWlzZS50aGVuLmJpbmQodGhpcy5kZWZlcnJlZC5wcm9taXNlKSx0aGlzLmRlZmVycmVkLnByb21pc2UuY2F0Y2goZnVuY3Rpb24odCl7fSl9ZnVuY3Rpb24gV2wodCxlKXtpZihPcihcIkFzeW5jUXVldWVcIixlK1wiOiBcIit0KSxsdSh0KSlyZXR1cm4gbmV3IEFyKERyLlVOQVZBSUxBQkxFLGUrXCI6IFwiK3QpO3Rocm93IHR9ZnVuY3Rpb24gWWwoKXt0aGlzLnF1ZXJpZXM9bmV3IFNjKGtvLEFvKSx0aGlzLm9ubGluZVN0YXRlPVwiVW5rbm93blwiLHRoaXMuR3I9bmV3IFNldH12YXIgWGw9KG5mLmVtcHR5U2V0PWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgbmYodC5jb21wYXJhdG9yKX0sbmYucHJvdG90eXBlLmhhcz1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dGhpcy5rZXllZE1hcC5nZXQodCl9LG5mLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMua2V5ZWRNYXAuZ2V0KHQpfSxuZi5wcm90b3R5cGUuZmlyc3Q9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zb3J0ZWRTZXQubWluS2V5KCl9LG5mLnByb3RvdHlwZS5sYXN0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc29ydGVkU2V0Lm1heEtleSgpfSxuZi5wcm90b3R5cGUuaXNFbXB0eT1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNvcnRlZFNldC5pc0VtcHR5KCl9LG5mLnByb3RvdHlwZS5pbmRleE9mPWZ1bmN0aW9uKHQpe3Q9dGhpcy5rZXllZE1hcC5nZXQodCk7cmV0dXJuIHQ/dGhpcy5zb3J0ZWRTZXQuaW5kZXhPZih0KTotMX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KG5mLnByb3RvdHlwZSxcInNpemVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc29ydGVkU2V0LnNpemV9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksbmYucHJvdG90eXBlLmZvckVhY2g9ZnVuY3Rpb24obil7dGhpcy5zb3J0ZWRTZXQuaW5vcmRlclRyYXZlcnNhbChmdW5jdGlvbih0LGUpe3JldHVybiBuKHQpLCExfSl9LG5mLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5kZWxldGUodC5rZXkpO3JldHVybiBlLmNvcHkoZS5rZXllZE1hcC5pbnNlcnQodC5rZXksdCksZS5zb3J0ZWRTZXQuaW5zZXJ0KHQsbnVsbCkpfSxuZi5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KHQpO3JldHVybiBlP3RoaXMuY29weSh0aGlzLmtleWVkTWFwLnJlbW92ZSh0KSx0aGlzLnNvcnRlZFNldC5yZW1vdmUoZSkpOnRoaXN9LG5mLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe2lmKCEodCBpbnN0YW5jZW9mIG5mKSlyZXR1cm4hMTtpZih0aGlzLnNpemUhPT10LnNpemUpcmV0dXJuITE7Zm9yKHZhciBlPXRoaXMuc29ydGVkU2V0LmdldEl0ZXJhdG9yKCksbj10LnNvcnRlZFNldC5nZXRJdGVyYXRvcigpO2UuaGFzTmV4dCgpOyl7dmFyIHI9ZS5nZXROZXh0KCkua2V5LGk9bi5nZXROZXh0KCkua2V5O2lmKCFyLmlzRXF1YWwoaSkpcmV0dXJuITF9cmV0dXJuITB9LG5mLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3ZhciBlPVtdO3JldHVybiB0aGlzLmZvckVhY2goZnVuY3Rpb24odCl7ZS5wdXNoKHQudG9TdHJpbmcoKSl9KSwwPT09ZS5sZW5ndGg/XCJEb2N1bWVudFNldCAoKVwiOlwiRG9jdW1lbnRTZXQgKFxcbiAgXCIrZS5qb2luKFwiICBcXG5cIikrXCJcXG4pXCJ9LG5mLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IG5mO3JldHVybiBuLmNvbXBhcmF0b3I9dGhpcy5jb21wYXJhdG9yLG4ua2V5ZWRNYXA9dCxuLnNvcnRlZFNldD1lLG59LG5mKSxKbD0oZWYucHJvdG90eXBlLnRyYWNrPWZ1bmN0aW9uKHQpe3ZhciBlPXQuZG9jLmtleSxuPXRoaXMuS3IuZ2V0KGUpOyFufHwwIT09dC50eXBlJiYzPT09bi50eXBlP3RoaXMuS3I9dGhpcy5Lci5pbnNlcnQoZSx0KTozPT09dC50eXBlJiYxIT09bi50eXBlP3RoaXMuS3I9dGhpcy5Lci5pbnNlcnQoZSx7dHlwZTpuLnR5cGUsZG9jOnQuZG9jfSk6Mj09PXQudHlwZSYmMj09PW4udHlwZT90aGlzLktyPXRoaXMuS3IuaW5zZXJ0KGUse3R5cGU6Mixkb2M6dC5kb2N9KToyPT09dC50eXBlJiYwPT09bi50eXBlP3RoaXMuS3I9dGhpcy5Lci5pbnNlcnQoZSx7dHlwZTowLGRvYzp0LmRvY30pOjE9PT10LnR5cGUmJjA9PT1uLnR5cGU/dGhpcy5Lcj10aGlzLktyLnJlbW92ZShlKToxPT09dC50eXBlJiYyPT09bi50eXBlP3RoaXMuS3I9dGhpcy5Lci5pbnNlcnQoZSx7dHlwZToxLGRvYzpuLmRvY30pOjA9PT10LnR5cGUmJjE9PT1uLnR5cGU/dGhpcy5Lcj10aGlzLktyLmluc2VydChlLHt0eXBlOjIsZG9jOnQuZG9jfSk6TXIoKX0sZWYucHJvdG90eXBlLmpyPWZ1bmN0aW9uKCl7dmFyIG49W107cmV0dXJuIHRoaXMuS3IuaW5vcmRlclRyYXZlcnNhbChmdW5jdGlvbih0LGUpe24ucHVzaChlKX0pLG59LGVmKSwkbD0odGYuZnJvbUluaXRpYWxEb2N1bWVudHM9ZnVuY3Rpb24odCxlLG4scil7dmFyIGk9W107cmV0dXJuIGUuZm9yRWFjaChmdW5jdGlvbih0KXtpLnB1c2goe3R5cGU6MCxkb2M6dH0pfSksbmV3IHRmKHQsZSxYbC5lbXB0eVNldChlKSxpLG4sciwhMCwhMSl9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0Zi5wcm90b3R5cGUsXCJoYXNQZW5kaW5nV3JpdGVzXCIse2dldDpmdW5jdGlvbigpe3JldHVybiF0aGlzLm11dGF0ZWRLZXlzLmlzRW1wdHkoKX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSx0Zi5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbih0KXtpZighKHRoaXMuZnJvbUNhY2hlPT09dC5mcm9tQ2FjaGUmJnRoaXMuc3luY1N0YXRlQ2hhbmdlZD09PXQuc3luY1N0YXRlQ2hhbmdlZCYmdGhpcy5tdXRhdGVkS2V5cy5pc0VxdWFsKHQubXV0YXRlZEtleXMpJiZBbyh0aGlzLnF1ZXJ5LHQucXVlcnkpJiZ0aGlzLmRvY3MuaXNFcXVhbCh0LmRvY3MpJiZ0aGlzLm9sZERvY3MuaXNFcXVhbCh0Lm9sZERvY3MpKSlyZXR1cm4hMTt2YXIgZT10aGlzLmRvY0NoYW5nZXMsbj10LmRvY0NoYW5nZXM7aWYoZS5sZW5ndGghPT1uLmxlbmd0aClyZXR1cm4hMTtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKylpZihlW3JdLnR5cGUhPT1uW3JdLnR5cGV8fCFlW3JdLmRvYy5pc0VxdWFsKG5bcl0uZG9jKSlyZXR1cm4hMTtyZXR1cm4hMH0sdGYpLFpsPWZ1bmN0aW9uKCl7dGhpcy5Xcj12b2lkIDAsdGhpcy5saXN0ZW5lcnM9W119O2Z1bmN0aW9uIHRmKHQsZSxuLHIsaSxvLHMsYSl7dGhpcy5xdWVyeT10LHRoaXMuZG9jcz1lLHRoaXMub2xkRG9jcz1uLHRoaXMuZG9jQ2hhbmdlcz1yLHRoaXMubXV0YXRlZEtleXM9aSx0aGlzLmZyb21DYWNoZT1vLHRoaXMuc3luY1N0YXRlQ2hhbmdlZD1zLHRoaXMuZXhjbHVkZXNNZXRhZGF0YUNoYW5nZXM9YX1mdW5jdGlvbiBlZigpe3RoaXMuS3I9bmV3IE5zKG1pLmNvbXBhcmF0b3IpfWZ1bmN0aW9uIG5mKG4pe3RoaXMuY29tcGFyYXRvcj1uP2Z1bmN0aW9uKHQsZSl7cmV0dXJuIG4odCxlKXx8bWkuY29tcGFyYXRvcih0LmtleSxlLmtleSl9OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIG1pLmNvbXBhcmF0b3IodC5rZXksZS5rZXkpfSx0aGlzLmtleWVkTWFwPVZzLHRoaXMuc29ydGVkU2V0PW5ldyBOcyh0aGlzLmNvbXBhcmF0b3IpfWZ1bmN0aW9uIHJmKHMsYSl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyLGksbztyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6aWYoZT1zLG49YS5xdWVyeSxyPSExLChpPWUucXVlcmllcy5nZXQobikpfHwocj0hMCxpPW5ldyBabCksIXIpcmV0dXJuWzMsNF07dC5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gdC50cnlzLnB1c2goWzEsMywsNF0pLG89aSxbNCxlLm9uTGlzdGVuKG4pXTtjYXNlIDI6cmV0dXJuIG8uV3I9dC5zZW50KCksWzMsNF07Y2FzZSAzOnJldHVybiBvPXQuc2VudCgpLG89V2wobyxcIkluaXRpYWxpemF0aW9uIG9mIHF1ZXJ5ICdcIitDbyhhLnF1ZXJ5KStcIicgZmFpbGVkXCIpLFsyLHZvaWQgYS5vbkVycm9yKG8pXTtjYXNlIDQ6cmV0dXJuIGUucXVlcmllcy5zZXQobixpKSxpLmxpc3RlbmVycy5wdXNoKGEpLGEuenIoZS5vbmxpbmVTdGF0ZSksaS5XciYmYS5IcihpLldyKSYmc2YoZSksWzJdfX0pfSl9ZnVuY3Rpb24gb2YocyxhKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuLHIsaSxvO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIGU9cyxuPWEucXVlcnkscj0hMSwoaT1lLnF1ZXJpZXMuZ2V0KG4pKSYmMDw9KG89aS5saXN0ZW5lcnMuaW5kZXhPZihhKSkmJihpLmxpc3RlbmVycy5zcGxpY2UobywxKSxyPTA9PT1pLmxpc3RlbmVycy5sZW5ndGgpLHI/WzIsKGUucXVlcmllcy5kZWxldGUobiksZS5vblVubGlzdGVuKG4pKV06WzJdfSl9KX1mdW5jdGlvbiBzZih0KXt0LkdyLmZvckVhY2goZnVuY3Rpb24odCl7dC5uZXh0KCl9KX12YXIgYWY9KHBmLnByb3RvdHlwZS5Icj1mdW5jdGlvbih0KXtpZighdGhpcy5vcHRpb25zLmluY2x1ZGVNZXRhZGF0YUNoYW5nZXMpe2Zvcih2YXIgZT1bXSxuPTAscj10LmRvY0NoYW5nZXM7bjxyLmxlbmd0aDtuKyspe3ZhciBpPXJbbl07MyE9PWkudHlwZSYmZS5wdXNoKGkpfXQ9bmV3ICRsKHQucXVlcnksdC5kb2NzLHQub2xkRG9jcyxlLHQubXV0YXRlZEtleXMsdC5mcm9tQ2FjaGUsdC5zeW5jU3RhdGVDaGFuZ2VkLCEwKX12YXIgbz0hMTtyZXR1cm4gdGhpcy5Zcj90aGlzLlpyKHQpJiYodGhpcy5Kci5uZXh0KHQpLG89ITApOnRoaXMuZW8odCx0aGlzLm9ubGluZVN0YXRlKSYmKHRoaXMubm8odCksbz0hMCksdGhpcy5Ycj10LG99LHBmLnByb3RvdHlwZS5vbkVycm9yPWZ1bmN0aW9uKHQpe3RoaXMuSnIuZXJyb3IodCl9LHBmLnByb3RvdHlwZS56cj1mdW5jdGlvbih0KXt0aGlzLm9ubGluZVN0YXRlPXQ7dmFyIGU9ITE7cmV0dXJuIHRoaXMuWHImJiF0aGlzLllyJiZ0aGlzLmVvKHRoaXMuWHIsdCkmJih0aGlzLm5vKHRoaXMuWHIpLGU9ITApLGV9LHBmLnByb3RvdHlwZS5lbz1mdW5jdGlvbih0LGUpe2lmKCF0LmZyb21DYWNoZSlyZXR1cm4hMDt2YXIgbj1cIk9mZmxpbmVcIiE9PWU7cmV0dXJuISh0aGlzLm9wdGlvbnMuc28mJm58fHQuZG9jcy5pc0VtcHR5KCkmJlwiT2ZmbGluZVwiIT09ZSl9LHBmLnByb3RvdHlwZS5acj1mdW5jdGlvbih0KXtpZigwPHQuZG9jQ2hhbmdlcy5sZW5ndGgpcmV0dXJuITA7dmFyIGU9dGhpcy5YciYmdGhpcy5Yci5oYXNQZW5kaW5nV3JpdGVzIT09dC5oYXNQZW5kaW5nV3JpdGVzO3JldHVybiEoIXQuc3luY1N0YXRlQ2hhbmdlZCYmIWUpJiYhMD09PXRoaXMub3B0aW9ucy5pbmNsdWRlTWV0YWRhdGFDaGFuZ2VzfSxwZi5wcm90b3R5cGUubm89ZnVuY3Rpb24odCl7dD0kbC5mcm9tSW5pdGlhbERvY3VtZW50cyh0LnF1ZXJ5LHQuZG9jcyx0Lm11dGF0ZWRLZXlzLHQuZnJvbUNhY2hlKSx0aGlzLllyPSEwLHRoaXMuSnIubmV4dCh0KX0scGYpLHVmPShkZi5wcm90b3R5cGUuaW89ZnVuY3Rpb24oKXtyZXR1cm5cIm1ldGFkYXRhXCJpbiB0aGlzLnBheWxvYWR9LGRmKSxjZj0oZmYucHJvdG90eXBlLnFuPWZ1bmN0aW9uKHQpe3JldHVybiBsYSh0aGlzLlIsdCl9LGZmLnByb3RvdHlwZS5Vbj1mdW5jdGlvbih0KXtyZXR1cm4gdC5tZXRhZGF0YS5leGlzdHM/bWEodGhpcy5SLHQuZG9jdW1lbnQsITEpOk9pLm5ld05vRG9jdW1lbnQodGhpcy5xbih0Lm1ldGFkYXRhLm5hbWUpLHRoaXMuUW4odC5tZXRhZGF0YS5yZWFkVGltZSkpfSxmZi5wcm90b3R5cGUuUW49YWEsZmYpLGhmPShsZi5wcm90b3R5cGUub289ZnVuY3Rpb24odCl7dGhpcy5wcm9ncmVzcy5ieXRlc0xvYWRlZCs9dC5ieXRlTGVuZ3RoO3ZhciBlPXRoaXMucHJvZ3Jlc3MuZG9jdW1lbnRzTG9hZGVkO3JldHVybiB0LnBheWxvYWQubmFtZWRRdWVyeT90aGlzLnF1ZXJpZXMucHVzaCh0LnBheWxvYWQubmFtZWRRdWVyeSk6dC5wYXlsb2FkLmRvY3VtZW50TWV0YWRhdGE/KHRoaXMuZG9jdW1lbnRzLnB1c2goe21ldGFkYXRhOnQucGF5bG9hZC5kb2N1bWVudE1ldGFkYXRhfSksdC5wYXlsb2FkLmRvY3VtZW50TWV0YWRhdGEuZXhpc3RzfHwrK2UpOnQucGF5bG9hZC5kb2N1bWVudCYmKHRoaXMuZG9jdW1lbnRzW3RoaXMuZG9jdW1lbnRzLmxlbmd0aC0xXS5kb2N1bWVudD10LnBheWxvYWQuZG9jdW1lbnQsKytlKSxlIT09dGhpcy5wcm9ncmVzcy5kb2N1bWVudHNMb2FkZWQ/KHRoaXMucHJvZ3Jlc3MuZG9jdW1lbnRzTG9hZGVkPWUsT2JqZWN0LmFzc2lnbih7fSx0aGlzLnByb2dyZXNzKSk6bnVsbH0sbGYucHJvdG90eXBlLmNvPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1uZXcgTWFwLG49bmV3IGNmKHRoaXMuUikscj0wLGk9dDtyPGkubGVuZ3RoO3IrKyl7dmFyIG89aVtyXTtpZihvLm1ldGFkYXRhLnF1ZXJpZXMpZm9yKHZhciBzPW4ucW4oby5tZXRhZGF0YS5uYW1lKSxhPTAsdT1vLm1ldGFkYXRhLnF1ZXJpZXM7YTx1Lmxlbmd0aDthKyspe3ZhciBjPXVbYV0saD0oZS5nZXQoYyl8fEJzKCkpLmFkZChzKTtlLnNldChjLGgpfX1yZXR1cm4gZX0sbGYucHJvdG90eXBlLmNvbXBsZXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyLGk7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LGZ1bmN0aW9uKGwsZixkLHApe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLHIsaSxvLGUscyxhLHUsYyxoO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpmb3Iobj1sLHI9QnMoKSxpPVBzLG89VXMsZT0wLHM9ZDtlPHMubGVuZ3RoO2UrKylhPXNbZV0sdT1mLnFuKGEubWV0YWRhdGEubmFtZSksYS5kb2N1bWVudCYmKHI9ci5hZGQodSkpLGk9aS5pbnNlcnQodSxmLlVuKGEpKSxvPW8uaW5zZXJ0KHUsZi5RbihhLm1ldGFkYXRhLnJlYWRUaW1lKSk7cmV0dXJuIGM9bi4kbi5uZXdDaGFuZ2VCdWZmZXIoe3RyYWNrUmVtb3ZhbHM6ITB9KSxbNCxvaChuLE5vKGJvKCRyLmZyb21TdHJpbmcoXCJfX2J1bmRsZV9fL2RvY3MvXCIrcCkpKSldO2Nhc2UgMTpyZXR1cm4gaD10LnNlbnQoKSxbMixuLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiQXBwbHkgYnVuZGxlIGRvY3VtZW50c1wiLFwicmVhZHdyaXRlXCIsZnVuY3Rpb24oZSl7cmV0dXJuIGloKGUsYyxpLEdyLm1pbigpLG8pLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIGMuYXBwbHkoZSksdH0pLm5leHQoZnVuY3Rpb24odCl7cmV0dXJuIG4ucWUucmVtb3ZlTWF0Y2hpbmdLZXlzRm9yVGFyZ2V0SWQoZSxoLnRhcmdldElkKS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIG4ucWUuYWRkTWF0Y2hpbmdLZXlzKGUscixoLnRhcmdldElkKX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gbi5Nbi5FbihlLHQpfSkubmV4dChmdW5jdGlvbigpe3JldHVybiB0fSl9KX0pXX19KX0pfSh0aGlzLmxvY2FsU3RvcmUsbmV3IGNmKHRoaXMuUiksdGhpcy5kb2N1bWVudHMsdGhpcy5yby5pZCldO2Nhc2UgMTplPXQuc2VudCgpLG49dGhpcy5jbyh0aGlzLmRvY3VtZW50cykscj0wLGk9dGhpcy5xdWVyaWVzLHQubGFiZWw9MjtjYXNlIDI6cmV0dXJuIHI8aS5sZW5ndGg/KGk9aVtyXSxbNCxmdW5jdGlvbihlLGksbyl7cmV0dXJuIHZvaWQgMD09PW8mJihvPUJzKCkpLHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG4scjtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsb2goZSxObyhGdShpLmJ1bmRsZWRRdWVyeSkpKV07Y2FzZSAxOnJldHVybiBuPXQuc2VudCgpLFsyLChyPWUpLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiU2F2ZSBuYW1lZCBxdWVyeVwiLFwicmVhZHdyaXRlXCIsZnVuY3Rpb24odCl7dmFyIGU9YWEoaS5yZWFkVGltZSk7aWYoMDw9bi5zbmFwc2hvdFZlcnNpb24uY29tcGFyZVRvKGUpKXJldHVybiByLlFlLnNhdmVOYW1lZFF1ZXJ5KHQsaSk7ZT1uLndpdGhSZXN1bWVUb2tlbihuaS5FTVBUWV9CWVRFX1NUUklORyxlKTtyZXR1cm4gci5Gbj1yLkZuLmluc2VydChlLnRhcmdldElkLGUpLHIucWUudXBkYXRlVGFyZ2V0RGF0YSh0LGUpLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gci5xZS5yZW1vdmVNYXRjaGluZ0tleXNGb3JUYXJnZXRJZCh0LG4udGFyZ2V0SWQpfSkubmV4dChmdW5jdGlvbigpe3JldHVybiByLnFlLmFkZE1hdGNoaW5nS2V5cyh0LG8sbi50YXJnZXRJZCl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHIuUWUuc2F2ZU5hbWVkUXVlcnkodCxpKX0pfSldfX0pfSl9KHRoaXMubG9jYWxTdG9yZSxpLG4uZ2V0KGkubmFtZSkpXSk6WzMsNV07Y2FzZSAzOnQuc2VudCgpLHQubGFiZWw9NDtjYXNlIDQ6cmV0dXJuIHIrKyxbMywyXTtjYXNlIDU6cmV0dXJuWzIsKHRoaXMucHJvZ3Jlc3MudGFza1N0YXRlPVwiU3VjY2Vzc1wiLG5ldyBHYyhPYmplY3QuYXNzaWduKHt9LHRoaXMucHJvZ3Jlc3MpLGUpKV19fSl9KX0sbGYpO2Z1bmN0aW9uIGxmKHQsZSxuKXt0aGlzLnJvPXQsdGhpcy5sb2NhbFN0b3JlPWUsdGhpcy5SPW4sdGhpcy5xdWVyaWVzPVtdLHRoaXMuZG9jdW1lbnRzPVtdLHRoaXMucHJvZ3Jlc3M9eWYodCl9ZnVuY3Rpb24gZmYodCl7dGhpcy5SPXR9ZnVuY3Rpb24gZGYodCxlKXt0aGlzLnBheWxvYWQ9dCx0aGlzLmJ5dGVMZW5ndGg9ZX1mdW5jdGlvbiBwZih0LGUsbil7dGhpcy5xdWVyeT10LHRoaXMuSnI9ZSx0aGlzLllyPSExLHRoaXMuWHI9bnVsbCx0aGlzLm9ubGluZVN0YXRlPVwiVW5rbm93blwiLHRoaXMub3B0aW9ucz1ufHx7fX1mdW5jdGlvbiB5Zih0KXtyZXR1cm57dGFza1N0YXRlOlwiUnVubmluZ1wiLGRvY3VtZW50c0xvYWRlZDowLGJ5dGVzTG9hZGVkOjAsdG90YWxEb2N1bWVudHM6dC50b3RhbERvY3VtZW50cyx0b3RhbEJ5dGVzOnQudG90YWxCeXRlc319dmFyIGdmPWZ1bmN0aW9uKHQpe3RoaXMua2V5PXR9LG1mPWZ1bmN0aW9uKHQpe3RoaXMua2V5PXR9LHZmPShPYmplY3QuZGVmaW5lUHJvcGVydHkoVGYucHJvdG90eXBlLFwid29cIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudW99LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksVGYucHJvdG90eXBlLl9vPWZ1bmN0aW9uKHQsZSl7dmFyIHM9dGhpcyxhPWU/ZS5tbzpuZXcgSmwsdT0oZXx8dGhpcykuZm8sYz0oZXx8dGhpcykubXV0YXRlZEtleXMsaD11LGw9ITEsZj13byh0aGlzLnF1ZXJ5KSYmdS5zaXplPT09dGhpcy5xdWVyeS5saW1pdD91Lmxhc3QoKTpudWxsLGQ9SW8odGhpcy5xdWVyeSkmJnUuc2l6ZT09PXRoaXMucXVlcnkubGltaXQ/dS5maXJzdCgpOm51bGw7aWYodC5pbm9yZGVyVHJhdmVyc2FsKGZ1bmN0aW9uKHQsZSl7dmFyIG49dS5nZXQodCkscj1SbyhzLnF1ZXJ5LGUpP2U6bnVsbCxpPSEhbiYmcy5tdXRhdGVkS2V5cy5oYXMobi5rZXkpLG89ISFyJiYoci5oYXNMb2NhbE11dGF0aW9uc3x8cy5tdXRhdGVkS2V5cy5oYXMoci5rZXkpJiZyLmhhc0NvbW1pdHRlZE11dGF0aW9ucyksZT0hMTtuJiZyP24uZGF0YS5pc0VxdWFsKHIuZGF0YSk/aSE9PW8mJihhLnRyYWNrKHt0eXBlOjMsZG9jOnJ9KSxlPSEwKTpzLnlvKG4scil8fChhLnRyYWNrKHt0eXBlOjIsZG9jOnJ9KSxlPSEwLChmJiYwPHMubG8ocixmKXx8ZCYmcy5sbyhyLGQpPDApJiYobD0hMCkpOiFuJiZyPyhhLnRyYWNrKHt0eXBlOjAsZG9jOnJ9KSxlPSEwKTpuJiYhciYmKGEudHJhY2soe3R5cGU6MSxkb2M6bn0pLGU9ITAsKGZ8fGQpJiYobD0hMCkpLGUmJihjPXI/KGg9aC5hZGQociksbz9jLmFkZCh0KTpjLmRlbGV0ZSh0KSk6KGg9aC5kZWxldGUodCksYy5kZWxldGUodCkpKX0pLHdvKHRoaXMucXVlcnkpfHxJbyh0aGlzLnF1ZXJ5KSlmb3IoO2guc2l6ZT50aGlzLnF1ZXJ5LmxpbWl0Oyl7dmFyIG49d28odGhpcy5xdWVyeSk/aC5sYXN0KCk6aC5maXJzdCgpLGg9aC5kZWxldGUobi5rZXkpLGM9Yy5kZWxldGUobi5rZXkpO2EudHJhY2soe3R5cGU6MSxkb2M6bn0pfXJldHVybntmbzpoLG1vOmEsTm46bCxtdXRhdGVkS2V5czpjfX0sVGYucHJvdG90eXBlLnlvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuaGFzTG9jYWxNdXRhdGlvbnMmJmUuaGFzQ29tbWl0dGVkTXV0YXRpb25zJiYhZS5oYXNMb2NhbE11dGF0aW9uc30sVGYucHJvdG90eXBlLmFwcGx5Q2hhbmdlcz1mdW5jdGlvbih0LGUsbil7dmFyIG89dGhpcyxyPXRoaXMuZm87dGhpcy5mbz10LmZvLHRoaXMubXV0YXRlZEtleXM9dC5tdXRhdGVkS2V5czt2YXIgaT10Lm1vLmpyKCk7aS5zb3J0KGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHI9dC50eXBlLGk9ZS50eXBlLG4ociktbihpKXx8by5sbyh0LmRvYyxlLmRvYyk7ZnVuY3Rpb24gbih0KXtzd2l0Y2godCl7Y2FzZSAwOnJldHVybiAxO2Nhc2UgMjpjYXNlIDM6cmV0dXJuIDI7Y2FzZSAxOnJldHVybiAwO2RlZmF1bHQ6cmV0dXJuIE1yKCl9fXZhciByLGl9KSx0aGlzLnBvKG4pO3ZhciBzPWU/dGhpcy5FbygpOltdLG49MD09PXRoaXMuaG8uc2l6ZSYmdGhpcy5jdXJyZW50PzE6MCxlPW4hPT10aGlzLmFvO3JldHVybiB0aGlzLmFvPW4sMCE9PWkubGVuZ3RofHxlP3tzbmFwc2hvdDpuZXcgJGwodGhpcy5xdWVyeSx0LmZvLHIsaSx0Lm11dGF0ZWRLZXlzLDA9PW4sZSwhMSksVG86c306e1RvOnN9fSxUZi5wcm90b3R5cGUuenI9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuY3VycmVudCYmXCJPZmZsaW5lXCI9PT10Pyh0aGlzLmN1cnJlbnQ9ITEsdGhpcy5hcHBseUNoYW5nZXMoe2ZvOnRoaXMuZm8sbW86bmV3IEpsLG11dGF0ZWRLZXlzOnRoaXMubXV0YXRlZEtleXMsTm46ITF9LCExKSk6e1RvOltdfX0sVGYucHJvdG90eXBlLklvPWZ1bmN0aW9uKHQpe3JldHVybiF0aGlzLnVvLmhhcyh0KSYmISF0aGlzLmZvLmhhcyh0KSYmIXRoaXMuZm8uZ2V0KHQpLmhhc0xvY2FsTXV0YXRpb25zfSxUZi5wcm90b3R5cGUucG89ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0JiYodC5hZGRlZERvY3VtZW50cy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBlLnVvPWUudW8uYWRkKHQpfSksdC5tb2RpZmllZERvY3VtZW50cy5mb3JFYWNoKGZ1bmN0aW9uKHQpe30pLHQucmVtb3ZlZERvY3VtZW50cy5mb3JFYWNoKGZ1bmN0aW9uKHQpe3JldHVybiBlLnVvPWUudW8uZGVsZXRlKHQpfSksdGhpcy5jdXJyZW50PXQuY3VycmVudCl9LFRmLnByb3RvdHlwZS5Fbz1mdW5jdGlvbigpe3ZhciBlPXRoaXM7aWYoIXRoaXMuY3VycmVudClyZXR1cm5bXTt2YXIgbj10aGlzLmhvO3RoaXMuaG89QnMoKSx0aGlzLmZvLmZvckVhY2goZnVuY3Rpb24odCl7ZS5Jbyh0LmtleSkmJihlLmhvPWUuaG8uYWRkKHQua2V5KSl9KTt2YXIgcj1bXTtyZXR1cm4gbi5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuaG8uaGFzKHQpfHxyLnB1c2gobmV3IG1mKHQpKX0pLHRoaXMuaG8uZm9yRWFjaChmdW5jdGlvbih0KXtuLmhhcyh0KXx8ci5wdXNoKG5ldyBnZih0KSl9KSxyfSxUZi5wcm90b3R5cGUuQW89ZnVuY3Rpb24odCl7dGhpcy51bz10LkJuLHRoaXMuaG89QnMoKTt0PXRoaXMuX28odC5kb2N1bWVudHMpO3JldHVybiB0aGlzLmFwcGx5Q2hhbmdlcyh0LCEwKX0sVGYucHJvdG90eXBlLlJvPWZ1bmN0aW9uKCl7cmV0dXJuICRsLmZyb21Jbml0aWFsRG9jdW1lbnRzKHRoaXMucXVlcnksdGhpcy5mbyx0aGlzLm11dGF0ZWRLZXlzLDA9PT10aGlzLmFvKX0sVGYpLGJmPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLnF1ZXJ5PXQsdGhpcy50YXJnZXRJZD1lLHRoaXMudmlldz1ufSx3Zj1mdW5jdGlvbih0KXt0aGlzLmtleT10LHRoaXMuYm89ITF9LElmPShPYmplY3QuZGVmaW5lUHJvcGVydHkoRWYucHJvdG90eXBlLFwiaXNQcmltYXJ5Q2xpZW50XCIse2dldDpmdW5jdGlvbigpe3JldHVybiEwPT09dGhpcy5Pb30sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxFZik7ZnVuY3Rpb24gRWYodCxlLG4scixpLG8pe3RoaXMubG9jYWxTdG9yZT10LHRoaXMucmVtb3RlU3RvcmU9ZSx0aGlzLmV2ZW50TWFuYWdlcj1uLHRoaXMuc2hhcmVkQ2xpZW50U3RhdGU9cix0aGlzLmN1cnJlbnRVc2VyPWksdGhpcy5tYXhDb25jdXJyZW50TGltYm9SZXNvbHV0aW9ucz1vLHRoaXMudm89e30sdGhpcy5Qbz1uZXcgU2Moa28sQW8pLHRoaXMuVm89bmV3IE1hcCx0aGlzLlNvPW5ldyBTZXQsdGhpcy5Ebz1uZXcgTnMobWkuY29tcGFyYXRvciksdGhpcy5Dbz1uZXcgTWFwLHRoaXMuTm89bmV3IHBoLHRoaXMueG89e30sdGhpcy5Gbz1uZXcgTWFwLHRoaXMua289c2MuWXQoKSx0aGlzLm9ubGluZVN0YXRlPVwiVW5rbm93blwiLHRoaXMuT289dm9pZCAwfWZ1bmN0aW9uIFRmKHQsZSl7dGhpcy5xdWVyeT10LHRoaXMudW89ZSx0aGlzLmFvPW51bGwsdGhpcy5jdXJyZW50PSExLHRoaXMuaG89QnMoKSx0aGlzLm11dGF0ZWRLZXlzPUJzKCksdGhpcy5sbz14byh0KSx0aGlzLmZvPW5ldyBYbCh0aGlzLmxvKX1mdW5jdGlvbiBfZihpLG8scyxhKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuLHI7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiBpLiRvPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZnVuY3Rpb24ocixpLG8scyl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbjtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuKGU9aS52aWV3Ll9vKG8pKS5Obj9bNCxhaChyLmxvY2FsU3RvcmUsaS5xdWVyeSwhMSkudGhlbihmdW5jdGlvbih0KXt0PXQuZG9jdW1lbnRzO3JldHVybiBpLnZpZXcuX28odCxlKX0pXTpbMywyXTtjYXNlIDE6ZT10LnNlbnQoKSx0LmxhYmVsPTI7Y2FzZSAyOnJldHVybiBuPXMmJnMudGFyZ2V0Q2hhbmdlcy5nZXQoaS50YXJnZXRJZCksbj1pLnZpZXcuYXBwbHlDaGFuZ2VzKGUsci5pc1ByaW1hcnlDbGllbnQsbiksWzIsKExmKHIsaS50YXJnZXRJZCxuLlRvKSxuLnNuYXBzaG90KV19fSl9KX0oaSx0LGUsbil9LFs0LGFoKGkubG9jYWxTdG9yZSxvLCEwKV07Y2FzZSAxOnJldHVybiBuPXQuc2VudCgpLHI9bmV3IHZmKG8sbi5CbiksZT1yLl9vKG4uZG9jdW1lbnRzKSxuPUdzLmNyZWF0ZVN5bnRoZXNpemVkVGFyZ2V0Q2hhbmdlRm9yQ3VycmVudENoYW5nZShzLGEmJlwiT2ZmbGluZVwiIT09aS5vbmxpbmVTdGF0ZSksbj1yLmFwcGx5Q2hhbmdlcyhlLGkuaXNQcmltYXJ5Q2xpZW50LG4pLExmKGkscyxuLlRvKSxyPW5ldyBiZihvLHMsciksWzIsKGkuUG8uc2V0KG8sciksaS5Wby5oYXMocyk/aS5Wby5nZXQocykucHVzaChvKTppLlZvLnNldChzLFtvXSksbi5zbmFwc2hvdCldfX0pfSl9ZnVuY3Rpb24gU2YoZixkLHApe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBzLGw7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOmw9S2YoZiksdC5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gdC50cnlzLnB1c2goWzEsNSwsNl0pLFs0LChpPWwubG9jYWxTdG9yZSxhPWQsYz1pLGg9S3Iubm93KCksbz1hLnJlZHVjZShmdW5jdGlvbih0LGUpe3JldHVybiB0LmFkZChlLmtleSl9LEJzKCkpLGMucGVyc2lzdGVuY2UucnVuVHJhbnNhY3Rpb24oXCJMb2NhbGx5IHdyaXRlIG11dGF0aW9uc1wiLFwicmVhZHdyaXRlXCIsZnVuY3Rpb24ocyl7cmV0dXJuIGMuTW4ucG4ocyxvKS5uZXh0KGZ1bmN0aW9uKHQpe3U9dDtmb3IodmFyIGU9W10sbj0wLHI9YTtuPHIubGVuZ3RoO24rKyl7dmFyIGk9cltuXSxvPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPW51bGwscj0wLGk9dC5maWVsZFRyYW5zZm9ybXM7cjxpLmxlbmd0aDtyKyspe3ZhciBvPWlbcl0scz1lLmRhdGEuZmllbGQoby5maWVsZCkscz1NbyhvLnRyYW5zZm9ybSxzfHxudWxsKTtudWxsIT1zJiYobj1udWxsPT1uP1JpLmVtcHR5KCk6bikuc2V0KG8uZmllbGQscyl9cmV0dXJuIG58fG51bGx9KGksdS5nZXQoaS5rZXkpKTtudWxsIT1vJiZlLnB1c2gobmV3IGhzKGkua2V5LG8sZnVuY3Rpb24gcyh0KXt2YXIgYT1bXTtyZXR1cm4gV3IodC5maWVsZHN8fHt9LGZ1bmN0aW9uKHQsZSl7dmFyIG49bmV3IHRpKFt0XSk7aWYoQ2koZSkpaWYoMD09PShlPXMoZS5tYXBWYWx1ZSkuZmllbGRzKS5sZW5ndGgpYS5wdXNoKG4pO2Vsc2UgZm9yKHZhciByPTAsaT1lO3I8aS5sZW5ndGg7cisrKXt2YXIgbz1pW3JdO2EucHVzaChuLmNoaWxkKG8pKX1lbHNlIGEucHVzaChuKX0pLG5ldyBlaShhKX0oby50b1Byb3RvKCkubWFwVmFsdWUpLGVzLmV4aXN0cyghMCkpKX1yZXR1cm4gYy5fbi5hZGRNdXRhdGlvbkJhdGNoKHMsaCxlLGEpfSl9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0LmFwcGx5VG9Mb2NhbERvY3VtZW50U2V0KHUpLHtiYXRjaElkOnQuYmF0Y2hJZCxjaGFuZ2VzOnV9fSkpXTtjYXNlIDI6cmV0dXJuIHM9dC5zZW50KCksbC5zaGFyZWRDbGllbnRTdGF0ZS5hZGRQZW5kaW5nTXV0YXRpb24ocy5iYXRjaElkKSxlPWwsbj1zLmJhdGNoSWQscj1wLGk9KGk9KGk9ZS54b1tlLmN1cnJlbnRVc2VyLnRvS2V5KCldKXx8bmV3IE5zKHFyKSkuaW5zZXJ0KG4sciksZS54b1tlLmN1cnJlbnRVc2VyLnRvS2V5KCldPWksWzQsTWYobCxzLmNoYW5nZXMpXTtjYXNlIDM6cmV0dXJuIHQuc2VudCgpLFs0LHFsKGwucmVtb3RlU3RvcmUpXTtjYXNlIDQ6cmV0dXJuIHQuc2VudCgpLFszLDZdO2Nhc2UgNTpyZXR1cm4gbD10LnNlbnQoKSxsPVdsKGwsXCJGYWlsZWQgdG8gcGVyc2lzdCB3cml0ZVwiKSxwLnJlamVjdChsKSxbMyw2XTtjYXNlIDY6cmV0dXJuWzJdfXZhciBlLG4scixpLGEsdSxjLGgsb30pfSl9ZnVuY3Rpb24gTmYocixpKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbixlO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpuPXIsdC5sYWJlbD0xO2Nhc2UgMTpyZXR1cm4gdC50cnlzLnB1c2goWzEsNCwsNl0pLFs0LHJoKG4ubG9jYWxTdG9yZSxpKV07Y2FzZSAyOnJldHVybiBlPXQuc2VudCgpLGkudGFyZ2V0Q2hhbmdlcy5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7ZT1uLkNvLmdldChlKTtlJiYoRnIodC5hZGRlZERvY3VtZW50cy5zaXplK3QubW9kaWZpZWREb2N1bWVudHMuc2l6ZSt0LnJlbW92ZWREb2N1bWVudHMuc2l6ZTw9MSksMDx0LmFkZGVkRG9jdW1lbnRzLnNpemU/ZS5ibz0hMDowPHQubW9kaWZpZWREb2N1bWVudHMuc2l6ZT9GcihlLmJvKTowPHQucmVtb3ZlZERvY3VtZW50cy5zaXplJiYoRnIoZS5ibyksZS5ibz0hMSkpfSksWzQsTWYobixlLGkpXTtjYXNlIDM6cmV0dXJuIHQuc2VudCgpLFszLDZdO2Nhc2UgNDpyZXR1cm5bNCxkYyh0LnNlbnQoKSldO2Nhc2UgNTpyZXR1cm4gdC5zZW50KCksWzMsNl07Y2FzZSA2OnJldHVyblsyXX19KX0pfWZ1bmN0aW9uIERmKHQsbixlKXt2YXIgcix0PXQ7KHQuaXNQcmltYXJ5Q2xpZW50JiYwPT09ZXx8IXQuaXNQcmltYXJ5Q2xpZW50JiYxPT09ZSkmJihyPVtdLHQuUG8uZm9yRWFjaChmdW5jdGlvbih0LGUpe2U9ZS52aWV3LnpyKG4pO2Uuc25hcHNob3QmJnIucHVzaChlLnNuYXBzaG90KX0pLGZ1bmN0aW9uKHQsaSl7dC5vbmxpbmVTdGF0ZT1pO3ZhciBvPSExO3QucXVlcmllcy5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPTAscj1lLmxpc3RlbmVycztuPHIubGVuZ3RoO24rKylyW25dLnpyKGkpJiYobz0hMCl9KSxvJiZzZih0KX0odC5ldmVudE1hbmFnZXIsbiksci5sZW5ndGgmJnQudm8uX3IociksdC5vbmxpbmVTdGF0ZT1uLHQuaXNQcmltYXJ5Q2xpZW50JiZ0LnNoYXJlZENsaWVudFN0YXRlLnNldE9ubGluZVN0YXRlKG4pKX1mdW5jdGlvbiBBZihzLGEsdSl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIG4sbztyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6bj1zLHQubGFiZWw9MTtjYXNlIDE6cmV0dXJuIHQudHJ5cy5wdXNoKFsxLDQsLDZdKSxbNCwoZT1uLmxvY2FsU3RvcmUscj1hLChpPWUpLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiUmVqZWN0IGJhdGNoXCIsXCJyZWFkd3JpdGUtcHJpbWFyeVwiLGZ1bmN0aW9uKGUpe3ZhciBuO3JldHVybiBpLl9uLmxvb2t1cE11dGF0aW9uQmF0Y2goZSxyKS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiBGcihudWxsIT09dCksbj10LmtleXMoKSxpLl9uLnJlbW92ZU11dGF0aW9uQmF0Y2goZSx0KX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gaS5fbi5wZXJmb3JtQ29uc2lzdGVuY3lDaGVjayhlKX0pLm5leHQoZnVuY3Rpb24oKXtyZXR1cm4gaS5Nbi5wbihlLG4pfSl9KSldO2Nhc2UgMjpyZXR1cm4gbz10LnNlbnQoKSxSZihuLGEsdSksQ2YobixhKSxuLnNoYXJlZENsaWVudFN0YXRlLnVwZGF0ZU11dGF0aW9uU3RhdGUoYSxcInJlamVjdGVkXCIsdSksWzQsTWYobixvKV07Y2FzZSAzOnJldHVybiB0LnNlbnQoKSxbMyw2XTtjYXNlIDQ6cmV0dXJuWzQsZGModC5zZW50KCkpXTtjYXNlIDU6cmV0dXJuIHQuc2VudCgpLFszLDZdO2Nhc2UgNjpyZXR1cm5bMl19dmFyIGUscixpfSl9KX1mdW5jdGlvbiBrZihvLHMpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLHIsaTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6UGwoKG49bykucmVtb3RlU3RvcmUpfHx4cihcIlN5bmNFbmdpbmVcIixcIlRoZSBuZXR3b3JrIGlzIGRpc2FibGVkLiBUaGUgdGFzayByZXR1cm5lZCBieSAnYXdhaXRQZW5kaW5nV3JpdGVzKCknIHdpbGwgbm90IGNvbXBsZXRlIHVudGlsIHRoZSBuZXR3b3JrIGlzIGVuYWJsZWQuXCIpLHQubGFiZWw9MTtjYXNlIDE6cmV0dXJuIHQudHJ5cy5wdXNoKFsxLDMsLDRdKSxbNCwoZT1uLmxvY2FsU3RvcmUpLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiR2V0IGhpZ2hlc3QgdW5hY2tub3dsZWRnZWQgYmF0Y2ggaWRcIixcInJlYWRvbmx5XCIsZnVuY3Rpb24odCl7cmV0dXJuIGUuX24uZ2V0SGlnaGVzdFVuYWNrbm93bGVkZ2VkQmF0Y2hJZCh0KX0pXTtjYXNlIDI6cmV0dXJuLTE9PT0ocj10LnNlbnQoKSk/WzIsdm9pZCBzLnJlc29sdmUoKV06KChpPW4uRm8uZ2V0KHIpfHxbXSkucHVzaChzKSxuLkZvLnNldChyLGkpLFszLDRdKTtjYXNlIDM6cmV0dXJuIGk9dC5zZW50KCksaT1XbChpLFwiSW5pdGlhbGl6YXRpb24gb2Ygd2FpdEZvclBlbmRpbmdXcml0ZXMoKSBvcGVyYXRpb24gZmFpbGVkXCIpLHMucmVqZWN0KGkpLFszLDRdO2Nhc2UgNDpyZXR1cm5bMl19dmFyIGV9KX0pfWZ1bmN0aW9uIENmKHQsZSl7KHQuRm8uZ2V0KGUpfHxbXSkuZm9yRWFjaChmdW5jdGlvbih0KXt0LnJlc29sdmUoKX0pLHQuRm8uZGVsZXRlKGUpfWZ1bmN0aW9uIFJmKHQsZSxuKXt2YXIgcj10LGk9ci54b1tyLmN1cnJlbnRVc2VyLnRvS2V5KCldO2kmJigodD1pLmdldChlKSkmJihuP3QucmVqZWN0KG4pOnQucmVzb2x2ZSgpLGk9aS5yZW1vdmUoZSkpLHIueG9bci5jdXJyZW50VXNlci50b0tleSgpXT1pKX1mdW5jdGlvbiB4ZihlLHQsbil7dm9pZCAwPT09biYmKG49bnVsbCksZS5zaGFyZWRDbGllbnRTdGF0ZS5yZW1vdmVMb2NhbFF1ZXJ5VGFyZ2V0KHQpO2Zvcih2YXIgcj0wLGk9ZS5Wby5nZXQodCk7cjxpLmxlbmd0aDtyKyspe3ZhciBvPWlbcl07ZS5Qby5kZWxldGUobyksbiYmZS52by5NbyhvLG4pfWUuVm8uZGVsZXRlKHQpLGUuaXNQcmltYXJ5Q2xpZW50JiZlLk5vLlpuKHQpLmZvckVhY2goZnVuY3Rpb24odCl7ZS5Oby5jb250YWluc0tleSh0KXx8T2YoZSx0KX0pfWZ1bmN0aW9uIE9mKHQsZSl7dC5Tby5kZWxldGUoZS5wYXRoLmNhbm9uaWNhbFN0cmluZygpKTt2YXIgbj10LkRvLmdldChlKTtudWxsIT09biYmKENsKHQucmVtb3RlU3RvcmUsbiksdC5Ebz10LkRvLnJlbW92ZShlKSx0LkNvLmRlbGV0ZShuKSxQZih0KSl9ZnVuY3Rpb24gTGYodCxlLG4pe2Zvcih2YXIgcixpLG8scz0wLGE9bjtzPGEubGVuZ3RoO3MrKyl7dmFyIHU9YVtzXTt1IGluc3RhbmNlb2YgZ2Y/KHQuTm8uYWRkUmVmZXJlbmNlKHUua2V5LGUpLHI9dCxvPXZvaWQgMCxpPShvPShpPXUpLmtleSkucGF0aC5jYW5vbmljYWxTdHJpbmcoKSxyLkRvLmdldChvKXx8ci5Tby5oYXMoaSl8fCh4cihcIlN5bmNFbmdpbmVcIixcIk5ldyBkb2N1bWVudCBpbiBsaW1ibzogXCIrbyksci5Tby5hZGQoaSksUGYocikpKTp1IGluc3RhbmNlb2YgbWY/KHhyKFwiU3luY0VuZ2luZVwiLFwiRG9jdW1lbnQgbm8gbG9uZ2VyIGluIGxpbWJvOiBcIit1LmtleSksdC5Oby5yZW1vdmVSZWZlcmVuY2UodS5rZXksZSksdC5Oby5jb250YWluc0tleSh1LmtleSl8fE9mKHQsdS5rZXkpKTpNcigpfX1mdW5jdGlvbiBQZih0KXtmb3IoOzA8dC5Tby5zaXplJiZ0LkRvLnNpemU8dC5tYXhDb25jdXJyZW50TGltYm9SZXNvbHV0aW9uczspe3ZhciBlPXQuU28udmFsdWVzKCkubmV4dCgpLnZhbHVlO3QuU28uZGVsZXRlKGUpO3ZhciBuPW5ldyBtaSgkci5mcm9tU3RyaW5nKGUpKSxlPXQua28ubmV4dCgpO3QuQ28uc2V0KGUsbmV3IHdmKG4pKSx0LkRvPXQuRG8uaW5zZXJ0KG4sZSksa2wodC5yZW1vdGVTdG9yZSxuZXcgVHUoTm8oYm8obi5wYXRoKSksZSwyLF9yLm8pKX19ZnVuY3Rpb24gTWYoZSxzLGEpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLHIsaSxvO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gcj1bXSxpPVtdLG89W10sKG49ZSkuUG8uaXNFbXB0eSgpP1szLDNdOihuLlBvLmZvckVhY2goZnVuY3Rpb24odCxlKXtvLnB1c2gobi4kbyhlLHMsYSkudGhlbihmdW5jdGlvbih0KXt0JiYobi5pc1ByaW1hcnlDbGllbnQmJm4uc2hhcmVkQ2xpZW50U3RhdGUudXBkYXRlUXVlcnlTdGF0ZShlLnRhcmdldElkLHQuZnJvbUNhY2hlP1wibm90LWN1cnJlbnRcIjpcImN1cnJlbnRcIiksci5wdXNoKHQpLHQ9emMuUG4oZS50YXJnZXRJZCx0KSxpLnB1c2godCkpfSkpfSksWzQsUHJvbWlzZS5hbGwobyldKTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLG4udm8uX3IociksWzQsZnVuY3Rpb24odSxjKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgcixlLG4saSxvLHMsYTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cj11LHQubGFiZWw9MTtjYXNlIDE6cmV0dXJuIHQudHJ5cy5wdXNoKFsxLDMsLDRdKSxbNCxyLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwibm90aWZ5TG9jYWxWaWV3Q2hhbmdlc1wiLFwicmVhZHdyaXRlXCIsZnVuY3Rpb24obil7cmV0dXJuIHR1LmZvckVhY2goYyxmdW5jdGlvbihlKXtyZXR1cm4gdHUuZm9yRWFjaChlLmJuLGZ1bmN0aW9uKHQpe3JldHVybiByLnBlcnNpc3RlbmNlLnJlZmVyZW5jZURlbGVnYXRlLmFkZFJlZmVyZW5jZShuLGUudGFyZ2V0SWQsdCl9KS5uZXh0KGZ1bmN0aW9uKCl7cmV0dXJuIHR1LmZvckVhY2goZS52bixmdW5jdGlvbih0KXtyZXR1cm4gci5wZXJzaXN0ZW5jZS5yZWZlcmVuY2VEZWxlZ2F0ZS5yZW1vdmVSZWZlcmVuY2UobixlLnRhcmdldElkLHQpfSl9KX0pfSldO2Nhc2UgMjpyZXR1cm4gdC5zZW50KCksWzMsNF07Y2FzZSAzOmlmKCFsdShlPXQuc2VudCgpKSl0aHJvdyBlO3JldHVybiB4cihcIkxvY2FsU3RvcmVcIixcIkZhaWxlZCB0byB1cGRhdGUgc2VxdWVuY2UgbnVtYmVyczogXCIrZSksWzMsNF07Y2FzZSA0OmZvcihuPTAsaT1jO248aS5sZW5ndGg7bisrKWE9aVtuXSxvPWEudGFyZ2V0SWQsYS5mcm9tQ2FjaGV8fChzPXIuRm4uZ2V0KG8pLGE9cy5zbmFwc2hvdFZlcnNpb24sYT1zLndpdGhMYXN0TGltYm9GcmVlU25hcHNob3RWZXJzaW9uKGEpLHIuRm49ci5Gbi5pbnNlcnQobyxhKSk7cmV0dXJuWzJdfX0pfSl9KG4ubG9jYWxTdG9yZSxpKV07Y2FzZSAyOnQuc2VudCgpLHQubGFiZWw9MztjYXNlIDM6cmV0dXJuWzJdfX0pfSl9ZnVuY3Rpb24gRmYoaSxvKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbixyO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4obj1pKS5jdXJyZW50VXNlci5pc0VxdWFsKG8pP1szLDNdOih4cihcIlN5bmNFbmdpbmVcIixcIlVzZXIgY2hhbmdlLiBOZXcgdXNlcjpcIixvLnRvS2V5KCkpLFs0LHRoKG4ubG9jYWxTdG9yZSxvKV0pO2Nhc2UgMTpyZXR1cm4gcj10LnNlbnQoKSxuLmN1cnJlbnRVc2VyPW8sKGU9bikuRm8uZm9yRWFjaChmdW5jdGlvbih0KXt0LmZvckVhY2goZnVuY3Rpb24odCl7dC5yZWplY3QobmV3IEFyKERyLkNBTkNFTExFRCxcIid3YWl0Rm9yUGVuZGluZ1dyaXRlcycgcHJvbWlzZSBpcyByZWplY3RlZCBkdWUgdG8gYSB1c2VyIGNoYW5nZS5cIikpfSl9KSxlLkZvLmNsZWFyKCksbi5zaGFyZWRDbGllbnRTdGF0ZS5oYW5kbGVVc2VyQ2hhbmdlKG8sci5yZW1vdmVkQmF0Y2hJZHMsci5hZGRlZEJhdGNoSWRzKSxbNCxNZihuLHIuTG4pXTtjYXNlIDI6dC5zZW50KCksdC5sYWJlbD0zO2Nhc2UgMzpyZXR1cm5bMl19dmFyIGV9KX0pfWZ1bmN0aW9uIFZmKGEsdSxjLGgpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBvLHM7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LChlPShvPWEpLmxvY2FsU3RvcmUsbj11LGk9KHI9ZSkuX24sci5wZXJzaXN0ZW5jZS5ydW5UcmFuc2FjdGlvbihcIkxvb2t1cCBtdXRhdGlvbiBkb2N1bWVudHNcIixcInJlYWRvbmx5XCIsZnVuY3Rpb24oZSl7cmV0dXJuIGkuanQoZSxuKS5uZXh0KGZ1bmN0aW9uKHQpe3JldHVybiB0P3IuTW4ucG4oZSx0KTp0dS5yZXNvbHZlKG51bGwpfSl9KSldO2Nhc2UgMTpyZXR1cm4gbnVsbD09PShzPXQuc2VudCgpKT9bMyw2XTpcInBlbmRpbmdcIiE9PWM/WzMsM106WzQscWwoby5yZW1vdGVTdG9yZSldO2Nhc2UgMjpyZXR1cm4gdC5zZW50KCksWzMsNF07Y2FzZSAzOlwiYWNrbm93bGVkZ2VkXCI9PT1jfHxcInJlamVjdGVkXCI9PT1jPyhSZihvLHUsaHx8bnVsbCksQ2Yobyx1KSxvLmxvY2FsU3RvcmUuX24uR3QodSkpOk1yKCksdC5sYWJlbD00O2Nhc2UgNDpyZXR1cm5bNCxNZihvLHMpXTtjYXNlIDU6cmV0dXJuIHQuc2VudCgpLFszLDddO2Nhc2UgNjp4cihcIlN5bmNFbmdpbmVcIixcIkNhbm5vdCBhcHBseSBtdXRhdGlvbiBiYXRjaCB3aXRoIGlkOiBcIit1KSx0LmxhYmVsPTc7Y2FzZSA3OnJldHVyblsyXX12YXIgZSxuLHIsaX0pfSl9ZnVuY3Rpb24gVWYoaCxsKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgcixlLGksbyxzLGEsdSxjO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gamYocj1oKSxLZihyKSwhMCE9PWx8fCEwPT09ci5Pbz9bMywzXTooZT1yLnNoYXJlZENsaWVudFN0YXRlLmdldEFsbEFjdGl2ZVF1ZXJ5VGFyZ2V0cygpLFs0LHFmKHIsZS50b0FycmF5KCkpXSk7Y2FzZSAxOnJldHVybiBpPXQuc2VudCgpLHIuT289ITAsWzQsS2woci5yZW1vdGVTdG9yZSwhMCldO2Nhc2UgMjpmb3IodC5zZW50KCksbz0wLHM9aTtvPHMubGVuZ3RoO28rKylhPXNbb10sa2woci5yZW1vdGVTdG9yZSxhKTtyZXR1cm5bMyw3XTtjYXNlIDM6cmV0dXJuITEhPT1sfHwhMT09PXIuT28/WzMsN106KHU9W10sYz1Qcm9taXNlLnJlc29sdmUoKSxyLlZvLmZvckVhY2goZnVuY3Rpb24odCxlKXtyLnNoYXJlZENsaWVudFN0YXRlLmlzTG9jYWxRdWVyeVRhcmdldChlKT91LnB1c2goZSk6Yz1jLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4geGYocixlKSxzaChyLmxvY2FsU3RvcmUsZSwhMCl9KSxDbChyLnJlbW90ZVN0b3JlLGUpfSksWzQsY10pO2Nhc2UgNDpyZXR1cm4gdC5zZW50KCksWzQscWYocix1KV07Y2FzZSA1OnJldHVybiB0LnNlbnQoKSwobj1yKS5Dby5mb3JFYWNoKGZ1bmN0aW9uKHQsZSl7Q2wobi5yZW1vdGVTdG9yZSxlKX0pLG4uTm8udHMoKSxuLkNvPW5ldyBNYXAsbi5Ebz1uZXcgTnMobWkuY29tcGFyYXRvciksci5Pbz0hMSxbNCxLbChyLnJlbW90ZVN0b3JlLCExKV07Y2FzZSA2OnQuc2VudCgpLHQubGFiZWw9NztjYXNlIDc6cmV0dXJuWzJdfXZhciBufSl9KX1mdW5jdGlvbiBxZihkLHApe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scixpLG8scyxhLHUsYyxoLGwsZjtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6ZT1kLG49W10scj1bXSxpPTAsbz1wLHQubGFiZWw9MTtjYXNlIDE6cmV0dXJuIGk8by5sZW5ndGg/KHM9b1tpXSxhPXZvaWQgMCwodT1lLlZvLmdldChzKSkmJjAhPT11Lmxlbmd0aD9bNCxvaChlLmxvY2FsU3RvcmUsTm8odVswXSkpXTpbMyw3XSk6WzMsMTNdO2Nhc2UgMjphPXQuc2VudCgpLGM9MCxoPXUsdC5sYWJlbD0zO2Nhc2UgMzpyZXR1cm4gYzxoLmxlbmd0aD8obD1oW2NdLGw9ZS5Qby5nZXQobCksWzQsZnVuY3Rpb24ocixpKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxhaCgoZT1yKS5sb2NhbFN0b3JlLGkucXVlcnksITApXTtjYXNlIDE6cmV0dXJuIG49dC5zZW50KCksbj1pLnZpZXcuQW8obiksWzIsKGUuaXNQcmltYXJ5Q2xpZW50JiZMZihlLGkudGFyZ2V0SWQsbi5UbyksbildfX0pfSl9KGUsbCldKTpbMyw2XTtjYXNlIDQ6KGw9dC5zZW50KCkpLnNuYXBzaG90JiZyLnB1c2gobC5zbmFwc2hvdCksdC5sYWJlbD01O2Nhc2UgNTpyZXR1cm4gYysrLFszLDNdO2Nhc2UgNjpyZXR1cm5bMywxMV07Y2FzZSA3OnJldHVybls0LHVoKGUubG9jYWxTdG9yZSxzKV07Y2FzZSA4OnJldHVybiBmPXQuc2VudCgpLFs0LG9oKGUubG9jYWxTdG9yZSxmKV07Y2FzZSA5OnJldHVybiBhPXQuc2VudCgpLFs0LF9mKGUsQmYoZikscywhMSldO2Nhc2UgMTA6dC5zZW50KCksdC5sYWJlbD0xMTtjYXNlIDExOm4ucHVzaChhKSx0LmxhYmVsPTEyO2Nhc2UgMTI6cmV0dXJuIGkrKyxbMywxXTtjYXNlIDEzOnJldHVyblsyLChlLnZvLl9yKHIpLG4pXX19KX0pfWZ1bmN0aW9uIEJmKHQpe3JldHVybiB2byh0LnBhdGgsdC5jb2xsZWN0aW9uR3JvdXAsdC5vcmRlckJ5LHQuZmlsdGVycyx0LmxpbWl0LFwiRlwiLHQuc3RhcnRBdCx0LmVuZEF0KX1mdW5jdGlvbiBqZih0KXtyZXR1cm4gdC5yZW1vdGVTdG9yZS5yZW1vdGVTeW5jZXIuYXBwbHlSZW1vdGVFdmVudD1OZi5iaW5kKG51bGwsdCksdC5yZW1vdGVTdG9yZS5yZW1vdGVTeW5jZXIuZ2V0UmVtb3RlS2V5c0ZvclRhcmdldD1mdW5jdGlvbih0LGUpe3ZhciBuPXQ7aWYoKHQ9bi5Dby5nZXQoZSkpJiZ0LmJvKXJldHVybiBCcygpLmFkZCh0LmtleSk7dmFyIHI9QnMoKTtpZighKGU9bi5Wby5nZXQoZSkpKXJldHVybiByO2Zvcih2YXIgaT0wLG89ZTtpPG8ubGVuZ3RoO2krKyl2YXIgcz1vW2ldLHM9bi5Qby5nZXQocykscj1yLnVuaW9uV2l0aChzLnZpZXcud28pO3JldHVybiByfS5iaW5kKG51bGwsdCksdC5yZW1vdGVTdG9yZS5yZW1vdGVTeW5jZXIucmVqZWN0TGlzdGVuPWZ1bmN0aW9uKG8scyxhKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuLHIsaTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuKGU9bykuc2hhcmVkQ2xpZW50U3RhdGUudXBkYXRlUXVlcnlTdGF0ZShzLFwicmVqZWN0ZWRcIixhKSxpPWUuQ28uZ2V0KHMpLChuPWkmJmkua2V5KT8ocj0ocj1uZXcgTnMobWkuY29tcGFyYXRvcikpLmluc2VydChuLE9pLm5ld05vRG9jdW1lbnQobixHci5taW4oKSkpLGk9QnMoKS5hZGQobiksaT1uZXcgS3MoR3IubWluKCksbmV3IE1hcCxuZXcgT3MocXIpLHIsaSksWzQsTmYoZSxpKV0pOlszLDJdO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksZS5Ebz1lLkRvLnJlbW92ZShuKSxlLkNvLmRlbGV0ZShzKSxQZihlKSxbMyw0XTtjYXNlIDI6cmV0dXJuWzQsc2goZS5sb2NhbFN0b3JlLHMsITEpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4geGYoZSxzLGEpfSkuY2F0Y2goZGMpXTtjYXNlIDM6dC5zZW50KCksdC5sYWJlbD00O2Nhc2UgNDpyZXR1cm5bMl19fSl9KX0uYmluZChudWxsLHQpLHQudm8uX3I9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49dCxyPSExLGk9MCxvPWU7aTxvLmxlbmd0aDtpKyspe3ZhciBzPW9baV0sYT1zLnF1ZXJ5LGE9bi5xdWVyaWVzLmdldChhKTtpZihhKXtmb3IodmFyIHU9MCxjPWEubGlzdGVuZXJzO3U8Yy5sZW5ndGg7dSsrKWNbdV0uSHIocykmJihyPSEwKTthLldyPXN9fXImJnNmKG4pfS5iaW5kKG51bGwsdC5ldmVudE1hbmFnZXIpLHQudm8uTW89ZnVuY3Rpb24odCxlLG4pe3ZhciByPXQ7aWYodD1yLnF1ZXJpZXMuZ2V0KGUpKWZvcih2YXIgaT0wLG89dC5saXN0ZW5lcnM7aTxvLmxlbmd0aDtpKyspb1tpXS5vbkVycm9yKG4pO3IucXVlcmllcy5kZWxldGUoZSl9LmJpbmQobnVsbCx0LmV2ZW50TWFuYWdlciksdH1mdW5jdGlvbiBLZih0KXtyZXR1cm4gdC5yZW1vdGVTdG9yZS5yZW1vdGVTeW5jZXIuYXBwbHlTdWNjZXNzZnVsV3JpdGU9ZnVuY3Rpb24oaSxvKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuLHI7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOmU9aSxuPW8uYmF0Y2guYmF0Y2hJZCx0LmxhYmVsPTE7Y2FzZSAxOnJldHVybiB0LnRyeXMucHVzaChbMSw0LCw2XSksWzQsZWgoZS5sb2NhbFN0b3JlLG8pXTtjYXNlIDI6cmV0dXJuIHI9dC5zZW50KCksUmYoZSxuLG51bGwpLENmKGUsbiksZS5zaGFyZWRDbGllbnRTdGF0ZS51cGRhdGVNdXRhdGlvblN0YXRlKG4sXCJhY2tub3dsZWRnZWRcIiksWzQsTWYoZSxyKV07Y2FzZSAzOnJldHVybiB0LnNlbnQoKSxbMyw2XTtjYXNlIDQ6cmV0dXJuWzQsZGModC5zZW50KCkpXTtjYXNlIDU6cmV0dXJuIHQuc2VudCgpLFszLDZdO2Nhc2UgNjpyZXR1cm5bMl19fSl9KX0uYmluZChudWxsLHQpLHQucmVtb3RlU3RvcmUucmVtb3RlU3luY2VyLnJlamVjdEZhaWxlZFdyaXRlPUFmLmJpbmQobnVsbCx0KSx0fWZ1bmN0aW9uIEdmKHQsZSxuKXt2YXIgcj10OyFmdW5jdGlvbihmLGQscCl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGEsdSxjLGgsbDtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIHQudHJ5cy5wdXNoKFswLDE0LCwxNV0pLFs0LGQuZ2V0TWV0YWRhdGEoKV07Y2FzZSAxOnJldHVybiBhPXQuc2VudCgpLFs0LChyPWYubG9jYWxTdG9yZSxvPXIscz1hYSgoaT1hKS5jcmVhdGVUaW1lKSxvLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiaGFzTmV3ZXJCdW5kbGVcIixcInJlYWRvbmx5XCIsZnVuY3Rpb24odCl7cmV0dXJuIG8uUWUuZ2V0QnVuZGxlTWV0YWRhdGEodCxpLmlkKX0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuISF0JiYwPD10LmNyZWF0ZVRpbWUuY29tcGFyZVRvKHMpfSkpXTtjYXNlIDI6cmV0dXJuIHQuc2VudCgpP1s0LGQuY2xvc2UoKV06WzMsNF07Y2FzZSAzOnJldHVyblsyLCh0LnNlbnQoKSx2b2lkIHAuX2NvbXBsZXRlV2l0aCh7dGFza1N0YXRlOlwiU3VjY2Vzc1wiLGRvY3VtZW50c0xvYWRlZDphLnRvdGFsRG9jdW1lbnRzLGJ5dGVzTG9hZGVkOmEudG90YWxCeXRlcyx0b3RhbERvY3VtZW50czphLnRvdGFsRG9jdW1lbnRzLHRvdGFsQnl0ZXM6YS50b3RhbEJ5dGVzfSkpXTtjYXNlIDQ6cmV0dXJuIHAuX3VwZGF0ZVByb2dyZXNzKHlmKGEpKSx1PW5ldyBoZihhLGYubG9jYWxTdG9yZSxkLlIpLFs0LGQuTG8oKV07Y2FzZSA1OmM9dC5zZW50KCksdC5sYWJlbD02O2Nhc2UgNjpyZXR1cm4gYz9bNCx1Lm9vKGMpXTpbMywxMF07Y2FzZSA3OnJldHVybihoPXQuc2VudCgpKSYmcC5fdXBkYXRlUHJvZ3Jlc3MoaCksWzQsZC5MbygpXTtjYXNlIDg6Yz10LnNlbnQoKSx0LmxhYmVsPTk7Y2FzZSA5OnJldHVyblszLDZdO2Nhc2UgMTA6cmV0dXJuWzQsdS5jb21wbGV0ZSgpXTtjYXNlIDExOnJldHVybiBsPXQuc2VudCgpLFs0LE1mKGYsbC53bix2b2lkIDApXTtjYXNlIDEyOnJldHVybiB0LnNlbnQoKSxbNCwocj1mLmxvY2FsU3RvcmUsZT1hLChuPXIpLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiU2F2ZSBidW5kbGVcIixcInJlYWR3cml0ZVwiLGZ1bmN0aW9uKHQpe3JldHVybiBuLlFlLnNhdmVCdW5kbGVNZXRhZGF0YSh0LGUpfSkpXTtjYXNlIDEzOnJldHVybiB0LnNlbnQoKSxwLl9jb21wbGV0ZVdpdGgobC5wcm9ncmVzcyksWzMsMTVdO2Nhc2UgMTQ6cmV0dXJuIExyKFwiU3luY0VuZ2luZVwiLFwiTG9hZGluZyBidW5kbGUgZmFpbGVkIHdpdGggXCIrKGw9dC5zZW50KCkpKSxwLl9mYWlsV2l0aChsKSxbMywxNV07Y2FzZSAxNTpyZXR1cm5bMl19dmFyIGUsbixyLGksbyxzfSl9KX0ocixlLG4pLnRoZW4oZnVuY3Rpb24oKXtyLnNoYXJlZENsaWVudFN0YXRlLm5vdGlmeUJ1bmRsZUxvYWRlZCgpfSl9dmFyIFFmLHpmLEhmPSh0ZC5wcm90b3R5cGUuaW5pdGlhbGl6ZT1mdW5jdGlvbihlKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIHRoaXMuUj1sbChlLmRhdGFiYXNlSW5mby5kYXRhYmFzZUlkKSx0aGlzLnNoYXJlZENsaWVudFN0YXRlPXRoaXMuQm8oZSksdGhpcy5wZXJzaXN0ZW5jZT10aGlzLnFvKGUpLFs0LHRoaXMucGVyc2lzdGVuY2Uuc3RhcnQoKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSx0aGlzLmdjU2NoZWR1bGVyPXRoaXMuVW8oZSksdGhpcy5sb2NhbFN0b3JlPXRoaXMuUW8oZSksWzJdfX0pfSl9LHRkLnByb3RvdHlwZS5Vbz1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbH0sdGQucHJvdG90eXBlLlFvPWZ1bmN0aW9uKHQpe3JldHVybiBaYyh0aGlzLnBlcnNpc3RlbmNlLG5ldyBIYyx0LmluaXRpYWxVc2VyLHRoaXMuUil9LHRkLnByb3RvdHlwZS5xbz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IHdoKEVoLmJzLHRoaXMuUil9LHRkLnByb3RvdHlwZS5Cbz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFFofSx0ZC5wcm90b3R5cGUudGVybWluYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiB0aGlzLmdjU2NoZWR1bGVyJiZ0aGlzLmdjU2NoZWR1bGVyLnN0b3AoKSxbNCx0aGlzLnNoYXJlZENsaWVudFN0YXRlLnNodXRkb3duKCldO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksWzQsdGhpcy5wZXJzaXN0ZW5jZS5zaHV0ZG93bigpXTtjYXNlIDI6cmV0dXJuIHQuc2VudCgpLFsyXX19KX0pfSx0ZCksV2Y9KG4oWmYsemY9SGYpLFpmLnByb3RvdHlwZS5pbml0aWFsaXplPWZ1bmN0aW9uKGUpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx6Zi5wcm90b3R5cGUuaW5pdGlhbGl6ZS5jYWxsKHRoaXMsZSldO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksWzQsaGgodGhpcy5sb2NhbFN0b3JlKV07Y2FzZSAyOnJldHVybiB0LnNlbnQoKSxbNCx0aGlzLktvLmluaXRpYWxpemUodGhpcyxlKV07Y2FzZSAzOnJldHVybiB0LnNlbnQoKSxbNCxLZih0aGlzLktvLnN5bmNFbmdpbmUpXTtjYXNlIDQ6cmV0dXJuIHQuc2VudCgpLFs0LHFsKHRoaXMuS28ucmVtb3RlU3RvcmUpXTtjYXNlIDU6cmV0dXJuIHQuc2VudCgpLFsyXX19KX0pfSxaZi5wcm90b3R5cGUuUW89ZnVuY3Rpb24odCl7cmV0dXJuIFpjKHRoaXMucGVyc2lzdGVuY2UsbmV3IEhjLHQuaW5pdGlhbFVzZXIsdGhpcy5SKX0sWmYucHJvdG90eXBlLlVvPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucGVyc2lzdGVuY2UucmVmZXJlbmNlRGVsZWdhdGUuZ2FyYmFnZUNvbGxlY3RvcjtyZXR1cm4gbmV3IGdjKGUsdC5hc3luY1F1ZXVlKX0sWmYucHJvdG90eXBlLnFvPWZ1bmN0aW9uKHQpe3ZhciBlPUtjKHQuZGF0YWJhc2VJbmZvLmRhdGFiYXNlSWQsdC5kYXRhYmFzZUluZm8ucGVyc2lzdGVuY2VLZXkpLG49dm9pZCAwIT09dGhpcy5jYWNoZVNpemVCeXRlcz9YdS53aXRoQ2FjaGVTaXplKHRoaXMuY2FjaGVTaXplQnl0ZXMpOlh1LkRFRkFVTFQ7cmV0dXJuIG5ldyBVYyh0aGlzLnN5bmNocm9uaXplVGFicyxlLHQuY2xpZW50SWQsbix0LmFzeW5jUXVldWUsY2woKSxobCgpLHRoaXMuUix0aGlzLnNoYXJlZENsaWVudFN0YXRlLCEhdGhpcy5mb3JjZU93bmVyc2hpcCl9LFpmLnByb3RvdHlwZS5Cbz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFFofSxaZiksWWY9KG4oJGYsUWY9V2YpLCRmLnByb3RvdHlwZS5pbml0aWFsaXplPWZ1bmN0aW9uKHIpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG49dGhpcztyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsUWYucHJvdG90eXBlLmluaXRpYWxpemUuY2FsbCh0aGlzLHIpXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLGU9dGhpcy5Lby5zeW5jRW5naW5lLHRoaXMuc2hhcmVkQ2xpZW50U3RhdGUgaW5zdGFuY2VvZiBHaD8odGhpcy5zaGFyZWRDbGllbnRTdGF0ZS5zeW5jRW5naW5lPXt1aTpWZi5iaW5kKG51bGwsZSksYWk6ZnVuY3Rpb24oaSxvLHMsYSl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4oZT1pKS5Pbz8oeHIoXCJTeW5jRW5naW5lXCIsXCJJZ25vcmluZyB1bmV4cGVjdGVkIHF1ZXJ5IHN0YXRlIG5vdGlmaWNhdGlvbi5cIiksWzMsOF0pOlszLDFdO2Nhc2UgMTppZighZS5Wby5oYXMobykpcmV0dXJuWzMsOF07c3dpdGNoKHMpe2Nhc2VcImN1cnJlbnRcIjpjYXNlXCJub3QtY3VycmVudFwiOnJldHVyblszLDJdO2Nhc2VcInJlamVjdGVkXCI6cmV0dXJuWzMsNV19cmV0dXJuWzMsN107Y2FzZSAyOnJldHVybls0LGNoKGUubG9jYWxTdG9yZSldO2Nhc2UgMzpyZXR1cm4gbj10LnNlbnQoKSxyPUtzLmNyZWF0ZVN5bnRoZXNpemVkUmVtb3RlRXZlbnRGb3JDdXJyZW50Q2hhbmdlKG8sXCJjdXJyZW50XCI9PT1zKSxbNCxNZihlLG4scildO2Nhc2UgNDpyZXR1cm4gdC5zZW50KCksWzMsOF07Y2FzZSA1OnJldHVybls0LHNoKGUubG9jYWxTdG9yZSxvLCEwKV07Y2FzZSA2OnJldHVybiB0LnNlbnQoKSx4ZihlLG8sYSksWzMsOF07Y2FzZSA3Ok1yKCksdC5sYWJlbD04O2Nhc2UgODpyZXR1cm5bMl19fSl9KX0uYmluZChudWxsLGUpLGhpOmZ1bmN0aW9uKGMsaCxsKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbixlLHIsaSxvLHMsYSx1O3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDppZighKG49amYoYykpLk9vKXJldHVyblszLDEwXTtlPTAscj1oLHQubGFiZWw9MTtjYXNlIDE6cmV0dXJuIGU8ci5sZW5ndGg/KHI9cltlXSxuLlZvLmhhcyhyKT8oeHIoXCJTeW5jRW5naW5lXCIsXCJBZGRpbmcgYW4gYWxyZWFkeSBhY3RpdmUgdGFyZ2V0IFwiK3IpLFszLDVdKTpbNCx1aChuLmxvY2FsU3RvcmUscildKTpbMyw2XTtjYXNlIDI6cmV0dXJuIGk9dC5zZW50KCksWzQsb2gobi5sb2NhbFN0b3JlLGkpXTtjYXNlIDM6cmV0dXJuIG89dC5zZW50KCksWzQsX2YobixCZihpKSxvLnRhcmdldElkLCExKV07Y2FzZSA0OnQuc2VudCgpLGtsKG4ucmVtb3RlU3RvcmUsbyksdC5sYWJlbD01O2Nhc2UgNTpyZXR1cm4gZSsrLFszLDFdO2Nhc2UgNjpzPWZ1bmN0aW9uKGUpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gbi5Wby5oYXMoZSk/WzQsc2gobi5sb2NhbFN0b3JlLGUsITEpLnRoZW4oZnVuY3Rpb24oKXtDbChuLnJlbW90ZVN0b3JlLGUpLHhmKG4sZSl9KS5jYXRjaChkYyldOlszLDJdO2Nhc2UgMTp0LnNlbnQoKSx0LmxhYmVsPTI7Y2FzZSAyOnJldHVyblsyXX19KX0sYT0wLHU9bCx0LmxhYmVsPTc7Y2FzZSA3OnJldHVybiBhPHUubGVuZ3RoPyh1PXVbYV0sWzUscyh1KV0pOlszLDEwXTtjYXNlIDg6dC5zZW50KCksdC5sYWJlbD05O2Nhc2UgOTpyZXR1cm4gYSsrLFszLDddO2Nhc2UgMTA6cmV0dXJuWzJdfX0pfSl9LmJpbmQobnVsbCxlKSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdC5sb2NhbFN0b3JlLnBlcnNpc3RlbmNlLmZuKCl9LmJpbmQobnVsbCxlKSxjaTpmdW5jdGlvbihuKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3JldHVyblsyLGNoKChlPW4pLmxvY2FsU3RvcmUpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIE1mKGUsdCl9KV19KX0pfS5iaW5kKG51bGwsZSl9LFs0LHRoaXMuc2hhcmVkQ2xpZW50U3RhdGUuc3RhcnQoKV0pOlszLDNdO2Nhc2UgMjp0LnNlbnQoKSx0LmxhYmVsPTM7Y2FzZSAzOnJldHVybls0LHRoaXMucGVyc2lzdGVuY2UuSGUoZnVuY3Rpb24oZSl7cmV0dXJuIHkobix2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LFVmKHRoaXMuS28uc3luY0VuZ2luZSxlKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSx0aGlzLmdjU2NoZWR1bGVyJiYoZSYmIXRoaXMuZ2NTY2hlZHVsZXIuc3RhcnRlZD90aGlzLmdjU2NoZWR1bGVyLnN0YXJ0KHRoaXMubG9jYWxTdG9yZSk6ZXx8dGhpcy5nY1NjaGVkdWxlci5zdG9wKCkpLFsyXX19KX0pfSldO2Nhc2UgNDpyZXR1cm4gdC5zZW50KCksWzJdfX0pfSl9LCRmLnByb3RvdHlwZS5Cbz1mdW5jdGlvbih0KXt2YXIgZT1jbCgpO2lmKCFHaC55dChlKSl0aHJvdyBuZXcgQXIoRHIuVU5JTVBMRU1FTlRFRCxcIkluZGV4ZWREQiBwZXJzaXN0ZW5jZSBpcyBvbmx5IGF2YWlsYWJsZSBvbiBwbGF0Zm9ybXMgdGhhdCBzdXBwb3J0IExvY2FsU3RvcmFnZS5cIik7dmFyIG49S2ModC5kYXRhYmFzZUluZm8uZGF0YWJhc2VJZCx0LmRhdGFiYXNlSW5mby5wZXJzaXN0ZW5jZUtleSk7cmV0dXJuIG5ldyBHaChlLHQuYXN5bmNRdWV1ZSxuLHQuY2xpZW50SWQsdC5pbml0aWFsVXNlcil9LCRmKSxYZj0oSmYucHJvdG90eXBlLmluaXRpYWxpemU9ZnVuY3Rpb24obixyKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZT10aGlzO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdGhpcy5sb2NhbFN0b3JlP1szLDJdOih0aGlzLmxvY2FsU3RvcmU9bi5sb2NhbFN0b3JlLHRoaXMuc2hhcmVkQ2xpZW50U3RhdGU9bi5zaGFyZWRDbGllbnRTdGF0ZSx0aGlzLmRhdGFzdG9yZT10aGlzLmNyZWF0ZURhdGFzdG9yZShyKSx0aGlzLnJlbW90ZVN0b3JlPXRoaXMuY3JlYXRlUmVtb3RlU3RvcmUociksdGhpcy5ldmVudE1hbmFnZXI9dGhpcy5jcmVhdGVFdmVudE1hbmFnZXIociksdGhpcy5zeW5jRW5naW5lPXRoaXMuY3JlYXRlU3luY0VuZ2luZShyLCFuLnN5bmNocm9uaXplVGFicyksdGhpcy5zaGFyZWRDbGllbnRTdGF0ZS5vbmxpbmVTdGF0ZUhhbmRsZXI9ZnVuY3Rpb24odCl7cmV0dXJuIERmKGUuc3luY0VuZ2luZSx0LDEpfSx0aGlzLnJlbW90ZVN0b3JlLnJlbW90ZVN5bmNlci5oYW5kbGVDcmVkZW50aWFsQ2hhbmdlPUZmLmJpbmQobnVsbCx0aGlzLnN5bmNFbmdpbmUpLFs0LEtsKHRoaXMucmVtb3RlU3RvcmUsdGhpcy5zeW5jRW5naW5lLmlzUHJpbWFyeUNsaWVudCldKTtjYXNlIDE6dC5zZW50KCksdC5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bMl19fSl9KX0sSmYucHJvdG90eXBlLmNyZWF0ZUV2ZW50TWFuYWdlcj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFlsfSxKZi5wcm90b3R5cGUuY3JlYXRlRGF0YXN0b3JlPWZ1bmN0aW9uKHQpe3ZhciBlPWxsKHQuZGF0YWJhc2VJbmZvLmRhdGFiYXNlSWQpLG49KG49dC5kYXRhYmFzZUluZm8sbmV3IFhoKG4pKTtyZXR1cm4gdD10LmNyZWRlbnRpYWxzLG5ldyBibCh0LG4sZSl9LEpmLnByb3RvdHlwZS5jcmVhdGVSZW1vdGVTdG9yZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dGhpcy5sb2NhbFN0b3JlLHI9dGhpcy5kYXRhc3RvcmUsaT10LmFzeW5jUXVldWUsbz1mdW5jdGlvbih0KXtyZXR1cm4gRGYoZS5zeW5jRW5naW5lLHQsMCl9LHQ9bmV3KEhoLnl0KCk/SGg6emgpO3JldHVybiBuZXcgZmwobixyLGksbyx0KX0sSmYucHJvdG90eXBlLmNyZWF0ZVN5bmNFbmdpbmU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZnVuY3Rpb24odCxlLG4scixpLG8scyl7bz1uZXcgSWYodCxlLG4scixpLG8pO3JldHVybiBzJiYoby5Pbz0hMCksb30odGhpcy5sb2NhbFN0b3JlLHRoaXMucmVtb3RlU3RvcmUsdGhpcy5ldmVudE1hbmFnZXIsdGhpcy5zaGFyZWRDbGllbnRTdGF0ZSx0LmluaXRpYWxVc2VyLHQubWF4Q29uY3VycmVudExpbWJvUmVzb2x1dGlvbnMsZSl9LEpmLnByb3RvdHlwZS50ZXJtaW5hdGU9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24obil7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiBlPW4seHIoXCJSZW1vdGVTdG9yZVwiLFwiUmVtb3RlU3RvcmUgc2h1dHRpbmcgZG93bi5cIiksZS4kci5hZGQoNSksWzQsQWwoZSldO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksZS5Mci5zaHV0ZG93bigpLGUuQnIuc2V0KFwiVW5rbm93blwiKSxbMl19fSl9KX0odGhpcy5yZW1vdGVTdG9yZSl9LEpmKTtmdW5jdGlvbiBKZigpe31mdW5jdGlvbiAkZih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuKG49UWYuY2FsbCh0aGlzLHQsZSwhMSl8fHRoaXMpLktvPXQsbi5jYWNoZVNpemVCeXRlcz1lLG4uc3luY2hyb25pemVUYWJzPSEwLG59ZnVuY3Rpb24gWmYodCxlLG4pe3ZhciByPXRoaXM7cmV0dXJuKHI9emYuY2FsbCh0aGlzKXx8dGhpcykuS289dCxyLmNhY2hlU2l6ZUJ5dGVzPWUsci5mb3JjZU93bmVyc2hpcD1uLHIuc3luY2hyb25pemVUYWJzPSExLHJ9ZnVuY3Rpb24gdGQoKXt0aGlzLnN5bmNocm9uaXplVGFicz0hMX1mdW5jdGlvbiBlZChuLHIpe3ZvaWQgMD09PXImJihyPTEwMjQwKTt2YXIgaT0wO3JldHVybntyZWFkOmZ1bmN0aW9uKCl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtyZXR1cm4gaTxuLmJ5dGVMZW5ndGg/KGU9e3ZhbHVlOm4uc2xpY2UoaSxpK3IpLGRvbmU6ITF9LFsyLChpKz1yLGUpXSk6WzIse2RvbmU6ITB9XX0pfSl9LGNhbmNlbDpmdW5jdGlvbigpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuWzJdfSl9KX0scmVsZWFzZUxvY2s6ZnVuY3Rpb24oKXt9LGNsb3NlZDpQcm9taXNlLnJlamVjdChcInVuaW1wbGVtZW50ZWRcIil9fXZhciBuZD0obGQucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24odCl7dGhpcy5vYnNlcnZlci5uZXh0JiZ0aGlzLmpvKHRoaXMub2JzZXJ2ZXIubmV4dCx0KX0sbGQucHJvdG90eXBlLmVycm9yPWZ1bmN0aW9uKHQpe3RoaXMub2JzZXJ2ZXIuZXJyb3I/dGhpcy5qbyh0aGlzLm9ic2VydmVyLmVycm9yLHQpOmNvbnNvbGUuZXJyb3IoXCJVbmNhdWdodCBFcnJvciBpbiBzbmFwc2hvdCBsaXN0ZW5lcjpcIix0KX0sbGQucHJvdG90eXBlLldvPWZ1bmN0aW9uKCl7dGhpcy5tdXRlZD0hMH0sbGQucHJvdG90eXBlLmpvPWZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpczt0aGlzLm11dGVkfHxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7bi5tdXRlZHx8dChlKX0sMCl9LGxkKSxyZD0oaGQucHJvdG90eXBlLmNsb3NlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuR28uY2FuY2VsKCl9LGhkLnByb3RvdHlwZS5nZXRNZXRhZGF0YT1mdW5jdGlvbigpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuWzIsdGhpcy5tZXRhZGF0YS5wcm9taXNlXX0pfSl9LGhkLnByb3RvdHlwZS5Mbz1mdW5jdGlvbigpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLmdldE1ldGFkYXRhKCldO2Nhc2UgMTpyZXR1cm5bMiwodC5zZW50KCksdGhpcy5IbygpKV19fSl9KX0saGQucHJvdG90eXBlLkhvPWZ1bmN0aW9uKCl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLkpvKCldO2Nhc2UgMTpyZXR1cm4gbnVsbD09PShlPXQuc2VudCgpKT9bMixudWxsXToocj10aGlzLnpvLmRlY29kZShlKSxuPU51bWJlcihyKSxpc05hTihuKSYmdGhpcy5ZbyhcImxlbmd0aCBzdHJpbmcgKFwiK3IrXCIpIGlzIG5vdCB2YWxpZCBudW1iZXJcIiksWzQsdGhpcy5YbyhuKV0pO2Nhc2UgMjpyZXR1cm4gcj10LnNlbnQoKSxbMixuZXcgdWYoSlNPTi5wYXJzZShyKSxlLmxlbmd0aCtuKV19fSl9KX0saGQucHJvdG90eXBlLlpvPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYnVmZmVyLmZpbmRJbmRleChmdW5jdGlvbih0KXtyZXR1cm4gdD09PVwie1wiLmNoYXJDb2RlQXQoMCl9KX0saGQucHJvdG90eXBlLkpvPWZ1bmN0aW9uKCl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbjtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIHRoaXMuWm8oKTwwP1s0LHRoaXMudGMoKV06WzMsM107Y2FzZSAxOmlmKHQuc2VudCgpKXJldHVyblszLDNdO3QubGFiZWw9MjtjYXNlIDI6cmV0dXJuWzMsMF07Y2FzZSAzOnJldHVybiAwPT09dGhpcy5idWZmZXIubGVuZ3RoP1syLG51bGxdOigoZT10aGlzLlpvKCkpPDAmJnRoaXMuWW8oXCJSZWFjaGVkIHRoZSBlbmQgb2YgYnVuZGxlIHdoZW4gYSBsZW5ndGggc3RyaW5nIGlzIGV4cGVjdGVkLlwiKSxuPXRoaXMuYnVmZmVyLnNsaWNlKDAsZSksWzIsKHRoaXMuYnVmZmVyPXRoaXMuYnVmZmVyLnNsaWNlKGUpLG4pXSl9fSl9KX0saGQucHJvdG90eXBlLlhvPWZ1bmN0aW9uKG4pe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdGhpcy5idWZmZXIubGVuZ3RoPG4/WzQsdGhpcy50YygpXTpbMywzXTtjYXNlIDE6dC5zZW50KCkmJnRoaXMuWW8oXCJSZWFjaGVkIHRoZSBlbmQgb2YgYnVuZGxlIHdoZW4gbW9yZSBpcyBleHBlY3RlZC5cIiksdC5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bMywwXTtjYXNlIDM6cmV0dXJuIGU9dGhpcy56by5kZWNvZGUodGhpcy5idWZmZXIuc2xpY2UoMCxuKSksWzIsKHRoaXMuYnVmZmVyPXRoaXMuYnVmZmVyLnNsaWNlKG4pLGUpXX19KX0pfSxoZC5wcm90b3R5cGUuWW89ZnVuY3Rpb24odCl7dGhyb3cgdGhpcy5Hby5jYW5jZWwoKSxuZXcgRXJyb3IoXCJJbnZhbGlkIGJ1bmRsZSBmb3JtYXQ6IFwiK3QpfSxoZC5wcm90b3R5cGUudGM9ZnVuY3Rpb24oKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aGlzLkdvLnJlYWQoKV07Y2FzZSAxOnJldHVybihlPXQuc2VudCgpKS5kb25lfHwoKG49bmV3IFVpbnQ4QXJyYXkodGhpcy5idWZmZXIubGVuZ3RoK2UudmFsdWUubGVuZ3RoKSkuc2V0KHRoaXMuYnVmZmVyKSxuLnNldChlLnZhbHVlLHRoaXMuYnVmZmVyLmxlbmd0aCksdGhpcy5idWZmZXI9biksWzIsZS5kb25lXX19KX0pfSxoZCksaWQ9KGNkLnByb3RvdHlwZS5sb29rdXA9ZnVuY3Rpb24ocil7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbj10aGlzO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDppZih0aGlzLmVuc3VyZUNvbW1pdE5vdENhbGxlZCgpLDA8dGhpcy5tdXRhdGlvbnMubGVuZ3RoKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiRmlyZXN0b3JlIHRyYW5zYWN0aW9ucyByZXF1aXJlIGFsbCByZWFkcyB0byBiZSBleGVjdXRlZCBiZWZvcmUgYWxsIHdyaXRlcy5cIik7cmV0dXJuWzQsZnVuY3Rpb24ocyxhKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbixlLHIsaSxvO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZT1wYSgobj1zKS5SKStcIi9kb2N1bWVudHNcIixyPXtkb2N1bWVudHM6YS5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIGhhKG4uUix0KX0pfSxbNCxuLk9pKFwiQmF0Y2hHZXREb2N1bWVudHNcIixlLHIpXTtjYXNlIDE6cmV0dXJuIHI9dC5zZW50KCksaT1uZXcgTWFwLHIuZm9yRWFjaChmdW5jdGlvbih0KXt2YXIgZSx0PShlPW4uUixcImZvdW5kXCJpbih0PXQpP2Z1bmN0aW9uKHQsZSl7RnIoISFlLmZvdW5kKSxlLmZvdW5kLm5hbWUsZS5mb3VuZC51cGRhdGVUaW1lO3ZhciBuPWxhKHQsZS5mb3VuZC5uYW1lKSx0PWFhKGUuZm91bmQudXBkYXRlVGltZSksZT1uZXcgUmkoe21hcFZhbHVlOntmaWVsZHM6ZS5mb3VuZC5maWVsZHN9fSk7cmV0dXJuIE9pLm5ld0ZvdW5kRG9jdW1lbnQobix0LGUpfShlLHQpOlwibWlzc2luZ1wiaW4gdD9mdW5jdGlvbih0LGUpe0ZyKCEhZS5taXNzaW5nKSxGcighIWUucmVhZFRpbWUpO3Q9bGEodCxlLm1pc3NpbmcpLGU9YWEoZS5yZWFkVGltZSk7cmV0dXJuIE9pLm5ld05vRG9jdW1lbnQodCxlKX0oZSx0KTpNcigpKTtpLnNldCh0LmtleS50b1N0cmluZygpLHQpfSksbz1bXSxbMiwoYS5mb3JFYWNoKGZ1bmN0aW9uKHQpe3Q9aS5nZXQodC50b1N0cmluZygpKTtGcighIXQpLG8ucHVzaCh0KX0pLG8pXX19KX0pfSh0aGlzLmRhdGFzdG9yZSxyKV07Y2FzZSAxOnJldHVyblsyLCgoZT10LnNlbnQoKSkuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gbi5yZWNvcmRWZXJzaW9uKHQpfSksZSldfX0pfSl9LGNkLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxlKXt0aGlzLndyaXRlKGUudG9NdXRhdGlvbih0LHRoaXMucHJlY29uZGl0aW9uKHQpKSksdGhpcy53cml0dGVuRG9jcy5hZGQodC50b1N0cmluZygpKX0sY2QucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LGUpe3RyeXt0aGlzLndyaXRlKGUudG9NdXRhdGlvbih0LHRoaXMucHJlY29uZGl0aW9uRm9yVXBkYXRlKHQpKSl9Y2F0Y2godCl7dGhpcy5sYXN0V3JpdGVFcnJvcj10fXRoaXMud3JpdHRlbkRvY3MuYWRkKHQudG9TdHJpbmcoKSl9LGNkLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24odCl7dGhpcy53cml0ZShuZXcgd3ModCx0aGlzLnByZWNvbmRpdGlvbih0KSkpLHRoaXMud3JpdHRlbkRvY3MuYWRkKHQudG9TdHJpbmcoKSl9LGNkLnByb3RvdHlwZS5jb21taXQ9ZnVuY3Rpb24oKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuPXRoaXM7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOmlmKHRoaXMuZW5zdXJlQ29tbWl0Tm90Q2FsbGVkKCksdGhpcy5sYXN0V3JpdGVFcnJvcil0aHJvdyB0aGlzLmxhc3RXcml0ZUVycm9yO3JldHVybiBlPXRoaXMucmVhZFZlcnNpb25zLHRoaXMubXV0YXRpb25zLmZvckVhY2goZnVuY3Rpb24odCl7ZS5kZWxldGUodC5rZXkudG9TdHJpbmcoKSl9KSxlLmZvckVhY2goZnVuY3Rpb24odCxlKXtlPW1pLmZyb21QYXRoKGUpO24ubXV0YXRpb25zLnB1c2gobmV3IElzKGUsbi5wcmVjb25kaXRpb24oZSkpKX0pLFs0LGZ1bmN0aW9uKGksbyl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGUsbixyO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gbj1wYSgoZT1pKS5SKStcIi9kb2N1bWVudHNcIixyPXt3cml0ZXM6by5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIHZhKGUuUix0KX0pfSxbNCxlLk5pKFwiQ29tbWl0XCIsbixyKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxbMl19fSl9KX0odGhpcy5kYXRhc3RvcmUsdGhpcy5tdXRhdGlvbnMpXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLHRoaXMuY29tbWl0dGVkPSEwLFsyXX19KX0pfSxjZC5wcm90b3R5cGUucmVjb3JkVmVyc2lvbj1mdW5jdGlvbih0KXt2YXIgZTtpZih0LmlzRm91bmREb2N1bWVudCgpKWU9dC52ZXJzaW9uO2Vsc2V7aWYoIXQuaXNOb0RvY3VtZW50KCkpdGhyb3cgTXIoKTtlPUdyLm1pbigpfXZhciBuPXRoaXMucmVhZFZlcnNpb25zLmdldCh0LmtleS50b1N0cmluZygpKTtpZihuKXtpZighZS5pc0VxdWFsKG4pKXRocm93IG5ldyBBcihEci5BQk9SVEVELFwiRG9jdW1lbnQgdmVyc2lvbiBjaGFuZ2VkIGJldHdlZW4gdHdvIHJlYWRzLlwiKX1lbHNlIHRoaXMucmVhZFZlcnNpb25zLnNldCh0LmtleS50b1N0cmluZygpLGUpfSxjZC5wcm90b3R5cGUucHJlY29uZGl0aW9uPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucmVhZFZlcnNpb25zLmdldCh0LnRvU3RyaW5nKCkpO3JldHVybiF0aGlzLndyaXR0ZW5Eb2NzLmhhcyh0LnRvU3RyaW5nKCkpJiZlP2VzLnVwZGF0ZVRpbWUoZSk6ZXMubm9uZSgpfSxjZC5wcm90b3R5cGUucHJlY29uZGl0aW9uRm9yVXBkYXRlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMucmVhZFZlcnNpb25zLmdldCh0LnRvU3RyaW5nKCkpO2lmKHRoaXMud3JpdHRlbkRvY3MuaGFzKHQudG9TdHJpbmcoKSl8fCFlKXJldHVybiBlcy5leGlzdHMoITApO2lmKGUuaXNFcXVhbChHci5taW4oKSkpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJDYW4ndCB1cGRhdGUgYSBkb2N1bWVudCB0aGF0IGRvZXNuJ3QgZXhpc3QuXCIpO3JldHVybiBlcy51cGRhdGVUaW1lKGUpfSxjZC5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCl7dGhpcy5lbnN1cmVDb21taXROb3RDYWxsZWQoKSx0aGlzLm11dGF0aW9ucy5wdXNoKHQpfSxjZC5wcm90b3R5cGUuZW5zdXJlQ29tbWl0Tm90Q2FsbGVkPWZ1bmN0aW9uKCl7fSxjZCksb2Q9KHVkLnByb3RvdHlwZS5ydW49ZnVuY3Rpb24oKXt0aGlzLm5jKCl9LHVkLnByb3RvdHlwZS5uYz1mdW5jdGlvbigpe3ZhciB0PXRoaXM7dGhpcy5aaS5qaShmdW5jdGlvbigpe3JldHVybiB5KHQsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scj10aGlzO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7cmV0dXJuIGU9bmV3IGlkKHRoaXMuZGF0YXN0b3JlKSwobj10aGlzLnNjKGUpKSYmbi50aGVuKGZ1bmN0aW9uKHQpe3IuYXN5bmNRdWV1ZS5lbnF1ZXVlQW5kRm9yZ2V0KGZ1bmN0aW9uKCl7cmV0dXJuIGUuY29tbWl0KCkudGhlbihmdW5jdGlvbigpe3IuZGVmZXJyZWQucmVzb2x2ZSh0KX0pLmNhdGNoKGZ1bmN0aW9uKHQpe3IuaWModCl9KX0pfSkuY2F0Y2goZnVuY3Rpb24odCl7ci5pYyh0KX0pLFsyXX0pfSl9KX0sdWQucHJvdG90eXBlLnNjPWZ1bmN0aW9uKHQpe3RyeXt2YXIgZT10aGlzLnVwZGF0ZUZ1bmN0aW9uKHQpO3JldHVybiFwaShlKSYmZS5jYXRjaCYmZS50aGVuP2U6KHRoaXMuZGVmZXJyZWQucmVqZWN0KEVycm9yKFwiVHJhbnNhY3Rpb24gY2FsbGJhY2sgbXVzdCByZXR1cm4gYSBQcm9taXNlXCIpKSxudWxsKX1jYXRjaCh0KXtyZXR1cm4gdGhpcy5kZWZlcnJlZC5yZWplY3QodCksbnVsbH19LHVkLnByb3RvdHlwZS5pYz1mdW5jdGlvbih0KXt2YXIgZT10aGlzOzA8dGhpcy5lYyYmdGhpcy5yYyh0KT8oLS10aGlzLmVjLHRoaXMuYXN5bmNRdWV1ZS5lbnF1ZXVlQW5kRm9yZ2V0KGZ1bmN0aW9uKCl7cmV0dXJuIGUubmMoKSxQcm9taXNlLnJlc29sdmUoKX0pKTp0aGlzLmRlZmVycmVkLnJlamVjdCh0KX0sdWQucHJvdG90eXBlLnJjPWZ1bmN0aW9uKHQpe2lmKFwiRmlyZWJhc2VFcnJvclwiIT09dC5uYW1lKXJldHVybiExO3Q9dC5jb2RlO3JldHVyblwiYWJvcnRlZFwiPT09dHx8XCJmYWlsZWQtcHJlY29uZGl0aW9uXCI9PT10fHwhX3ModCl9LHVkKSxzZD0oYWQucHJvdG90eXBlLmdldENvbmZpZ3VyYXRpb249ZnVuY3Rpb24oKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsdGhpcy5yZWNlaXZlZEluaXRpYWxVc2VyLnByb21pc2VdO2Nhc2UgMTpyZXR1cm5bMiwodC5zZW50KCkse2FzeW5jUXVldWU6dGhpcy5hc3luY1F1ZXVlLGRhdGFiYXNlSW5mbzp0aGlzLmRhdGFiYXNlSW5mbyxjbGllbnRJZDp0aGlzLmNsaWVudElkLGNyZWRlbnRpYWxzOnRoaXMuY3JlZGVudGlhbHMsaW5pdGlhbFVzZXI6dGhpcy51c2VyLG1heENvbmN1cnJlbnRMaW1ib1Jlc29sdXRpb25zOjEwMH0pXX19KX0pfSxhZC5wcm90b3R5cGUuc2V0Q3JlZGVudGlhbENoYW5nZUxpc3RlbmVyPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7dGhpcy5jcmVkZW50aWFsTGlzdGVuZXI9dCx0aGlzLnJlY2VpdmVkSW5pdGlhbFVzZXIucHJvbWlzZS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIGUuY3JlZGVudGlhbExpc3RlbmVyKGUudXNlcil9KX0sYWQucHJvdG90eXBlLnZlcmlmeU5vdFRlcm1pbmF0ZWQ9ZnVuY3Rpb24oKXtpZih0aGlzLmFzeW5jUXVldWUuaXNTaHV0dGluZ0Rvd24pdGhyb3cgbmV3IEFyKERyLkZBSUxFRF9QUkVDT05ESVRJT04sXCJUaGUgY2xpZW50IGhhcyBhbHJlYWR5IGJlZW4gdGVybWluYXRlZC5cIil9LGFkLnByb3RvdHlwZS50ZXJtaW5hdGU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3RoaXMuYXN5bmNRdWV1ZS5lbnRlclJlc3RyaWN0ZWRNb2RlKCk7dmFyIG49bmV3IFphO3JldHVybiB0aGlzLmFzeW5jUXVldWUuZW5xdWV1ZUFuZEZvcmdldEV2ZW5XaGlsZVJlc3RyaWN0ZWQoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIHQudHJ5cy5wdXNoKFswLDUsLDZdKSx0aGlzLm9ubGluZUNvbXBvbmVudHM/WzQsdGhpcy5vbmxpbmVDb21wb25lbnRzLnRlcm1pbmF0ZSgpXTpbMywyXTtjYXNlIDE6dC5zZW50KCksdC5sYWJlbD0yO2Nhc2UgMjpyZXR1cm4gdGhpcy5vZmZsaW5lQ29tcG9uZW50cz9bNCx0aGlzLm9mZmxpbmVDb21wb25lbnRzLnRlcm1pbmF0ZSgpXTpbMyw0XTtjYXNlIDM6dC5zZW50KCksdC5sYWJlbD00O2Nhc2UgNDpyZXR1cm4gdGhpcy5jcmVkZW50aWFscy5yZW1vdmVDaGFuZ2VMaXN0ZW5lcigpLG4ucmVzb2x2ZSgpLFszLDZdO2Nhc2UgNTpyZXR1cm4gZT10LnNlbnQoKSxlPVdsKGUsXCJGYWlsZWQgdG8gc2h1dGRvd24gcGVyc2lzdGVuY2VcIiksbi5yZWplY3QoZSksWzMsNl07Y2FzZSA2OnJldHVyblsyXX19KX0pfSksbi5wcm9taXNlfSxhZCk7ZnVuY3Rpb24gYWQodCxlLG4pe3ZhciByPXRoaXM7dGhpcy5jcmVkZW50aWFscz10LHRoaXMuYXN5bmNRdWV1ZT1lLHRoaXMuZGF0YWJhc2VJbmZvPW4sdGhpcy51c2VyPVRoLlVOQVVUSEVOVElDQVRFRCx0aGlzLmNsaWVudElkPVZyLnUoKSx0aGlzLmNyZWRlbnRpYWxMaXN0ZW5lcj1mdW5jdGlvbigpe30sdGhpcy5yZWNlaXZlZEluaXRpYWxVc2VyPW5ldyBaYSx0aGlzLmNyZWRlbnRpYWxzLnNldENoYW5nZUxpc3RlbmVyKGZ1bmN0aW9uKHQpe3hyKFwiRmlyZXN0b3JlQ2xpZW50XCIsXCJSZWNlaXZlZCB1c2VyPVwiLHQudWlkKSxyLnVzZXI9dCxyLmNyZWRlbnRpYWxMaXN0ZW5lcih0KSxyLnJlY2VpdmVkSW5pdGlhbFVzZXIucmVzb2x2ZSgpfSl9ZnVuY3Rpb24gdWQodCxlLG4scil7dGhpcy5hc3luY1F1ZXVlPXQsdGhpcy5kYXRhc3RvcmU9ZSx0aGlzLnVwZGF0ZUZ1bmN0aW9uPW4sdGhpcy5kZWZlcnJlZD1yLHRoaXMuZWM9NSx0aGlzLlppPW5ldyBnbCh0aGlzLmFzeW5jUXVldWUsXCJ0cmFuc2FjdGlvbl9yZXRyeVwiKX1mdW5jdGlvbiBjZCh0KXt0aGlzLmRhdGFzdG9yZT10LHRoaXMucmVhZFZlcnNpb25zPW5ldyBNYXAsdGhpcy5tdXRhdGlvbnM9W10sdGhpcy5jb21taXR0ZWQ9ITEsdGhpcy5sYXN0V3JpdGVFcnJvcj1udWxsLHRoaXMud3JpdHRlbkRvY3M9bmV3IFNldH1mdW5jdGlvbiBoZCh0LGUpe3ZhciBuPXRoaXM7dGhpcy5Hbz10LHRoaXMuUj1lLHRoaXMubWV0YWRhdGE9bmV3IFphLHRoaXMuYnVmZmVyPW5ldyBVaW50OEFycmF5LHRoaXMuem89bmV3IFRleHREZWNvZGVyKFwidXRmLThcIiksdGhpcy5IbygpLnRoZW4oZnVuY3Rpb24odCl7dCYmdC5pbygpP24ubWV0YWRhdGEucmVzb2x2ZSh0LnBheWxvYWQubWV0YWRhdGEpOm4ubWV0YWRhdGEucmVqZWN0KG5ldyBFcnJvcihcIlRoZSBmaXJzdCBlbGVtZW50IG9mIHRoZSBidW5kbGUgaXMgbm90IGEgbWV0YWRhdGEsIGl0IGlzXFxuICAgICAgICAgICAgIFwiK0pTT04uc3RyaW5naWZ5KG51bGw9PXQ/dm9pZCAwOnQucGF5bG9hZCkpKX0sZnVuY3Rpb24odCl7cmV0dXJuIG4ubWV0YWRhdGEucmVqZWN0KHQpfSl9ZnVuY3Rpb24gbGQodCl7dGhpcy5vYnNlcnZlcj10LHRoaXMubXV0ZWQ9ITF9ZnVuY3Rpb24gZmQoaSxvKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuLHI9dGhpcztyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGkuYXN5bmNRdWV1ZS52ZXJpZnlPcGVyYXRpb25JblByb2dyZXNzKCkseHIoXCJGaXJlc3RvcmVDbGllbnRcIixcIkluaXRpYWxpemluZyBPZmZsaW5lQ29tcG9uZW50UHJvdmlkZXJcIiksWzQsaS5nZXRDb25maWd1cmF0aW9uKCldO2Nhc2UgMTpyZXR1cm4gZT10LnNlbnQoKSxbNCxvLmluaXRpYWxpemUoZSldO2Nhc2UgMjpyZXR1cm4gdC5zZW50KCksbj1lLmluaXRpYWxVc2VyLGkuc2V0Q3JlZGVudGlhbENoYW5nZUxpc3RlbmVyKGZ1bmN0aW9uKGUpe24uaXNFcXVhbChlKXx8KG49ZSxpLmFzeW5jUXVldWUuZW5xdWV1ZVJldHJ5YWJsZShmdW5jdGlvbigpe3JldHVybiB5KHIsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCx0aChvLmxvY2FsU3RvcmUsZSldO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksWzJdfX0pfSl9KSl9KSxvLnBlcnNpc3RlbmNlLnNldERhdGFiYXNlRGVsZXRlZExpc3RlbmVyKGZ1bmN0aW9uKCl7cmV0dXJuIGkudGVybWluYXRlKCl9KSxpLm9mZmxpbmVDb21wb25lbnRzPW8sWzJdfX0pfSl9ZnVuY3Rpb24gZGQocixpKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gci5hc3luY1F1ZXVlLnZlcmlmeU9wZXJhdGlvbkluUHJvZ3Jlc3MoKSxbNCxwZChyKV07Y2FzZSAxOnJldHVybiBlPXQuc2VudCgpLHhyKFwiRmlyZXN0b3JlQ2xpZW50XCIsXCJJbml0aWFsaXppbmcgT25saW5lQ29tcG9uZW50UHJvdmlkZXJcIiksWzQsci5nZXRDb25maWd1cmF0aW9uKCldO2Nhc2UgMjpyZXR1cm4gbj10LnNlbnQoKSxbNCxpLmluaXRpYWxpemUoZSxuKV07Y2FzZSAzOnJldHVybiB0LnNlbnQoKSxyLnNldENyZWRlbnRpYWxDaGFuZ2VMaXN0ZW5lcihmdW5jdGlvbih0KXtyZXR1cm4gci5hc3luY1F1ZXVlLmVucXVldWVSZXRyeWFibGUoZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24ocixpKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4oZT1yKS5hc3luY1F1ZXVlLnZlcmlmeU9wZXJhdGlvbkluUHJvZ3Jlc3MoKSx4cihcIlJlbW90ZVN0b3JlXCIsXCJSZW1vdGVTdG9yZSByZWNlaXZlZCBuZXcgY3JlZGVudGlhbHNcIiksbj1QbChlKSxlLiRyLmFkZCgzKSxbNCxBbChlKV07Y2FzZSAxOnJldHVybiB0LnNlbnQoKSxuJiZlLkJyLnNldChcIlVua25vd25cIiksWzQsZS5yZW1vdGVTeW5jZXIuaGFuZGxlQ3JlZGVudGlhbENoYW5nZShpKV07Y2FzZSAyOnJldHVybiB0LnNlbnQoKSxlLiRyLmRlbGV0ZSgzKSxbNCxEbChlKV07Y2FzZSAzOnJldHVybiB0LnNlbnQoKSxbMl19fSl9KX0oaS5yZW1vdGVTdG9yZSx0KX0pfSksci5vbmxpbmVDb21wb25lbnRzPWksWzJdfX0pfSl9ZnVuY3Rpb24gcGQoZSl7cmV0dXJuIHkodGhpcyx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiBlLm9mZmxpbmVDb21wb25lbnRzP1szLDJdOih4cihcIkZpcmVzdG9yZUNsaWVudFwiLFwiVXNpbmcgZGVmYXVsdCBPZmZsaW5lQ29tcG9uZW50UHJvdmlkZXJcIiksWzQsZmQoZSxuZXcgSGYpXSk7Y2FzZSAxOnQuc2VudCgpLHQubGFiZWw9MjtjYXNlIDI6cmV0dXJuWzIsZS5vZmZsaW5lQ29tcG9uZW50c119fSl9KX1mdW5jdGlvbiB5ZChlKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGUub25saW5lQ29tcG9uZW50cz9bMywyXTooeHIoXCJGaXJlc3RvcmVDbGllbnRcIixcIlVzaW5nIGRlZmF1bHQgT25saW5lQ29tcG9uZW50UHJvdmlkZXJcIiksWzQsZGQoZSxuZXcgWGYpXSk7Y2FzZSAxOnQuc2VudCgpLHQubGFiZWw9MjtjYXNlIDI6cmV0dXJuWzIsZS5vbmxpbmVDb21wb25lbnRzXX19KX0pfWZ1bmN0aW9uIGdkKHQpe3JldHVybiBwZCh0KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0LnBlcnNpc3RlbmNlfSl9ZnVuY3Rpb24gbWQodCl7cmV0dXJuIHBkKHQpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHQubG9jYWxTdG9yZX0pfWZ1bmN0aW9uIHZkKHQpe3JldHVybiB5ZCh0KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0LnJlbW90ZVN0b3JlfSl9ZnVuY3Rpb24gYmQodCl7cmV0dXJuIHlkKHQpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHQuc3luY0VuZ2luZX0pfWZ1bmN0aW9uIHdkKHIpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG47cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHlkKHIpXTtjYXNlIDE6cmV0dXJuIGU9dC5zZW50KCksWzIsKChuPWUuZXZlbnRNYW5hZ2VyKS5vbkxpc3Rlbj1mdW5jdGlvbihzLGEpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scixpLG87cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiBlPWpmKHMpLChvPWUuUG8uZ2V0KGEpKT8obj1vLnRhcmdldElkLGUuc2hhcmVkQ2xpZW50U3RhdGUuYWRkTG9jYWxRdWVyeVRhcmdldChuKSxyPW8udmlldy5SbygpLFszLDRdKTpbMywxXTtjYXNlIDE6cmV0dXJuWzQsb2goZS5sb2NhbFN0b3JlLE5vKGEpKV07Y2FzZSAyOnJldHVybiBpPXQuc2VudCgpLG89ZS5zaGFyZWRDbGllbnRTdGF0ZS5hZGRMb2NhbFF1ZXJ5VGFyZ2V0KGkudGFyZ2V0SWQpLG49aS50YXJnZXRJZCxbNCxfZihlLGEsbixcImN1cnJlbnRcIj09PW8pXTtjYXNlIDM6cj10LnNlbnQoKSxlLmlzUHJpbWFyeUNsaWVudCYma2woZS5yZW1vdGVTdG9yZSxpKSx0LmxhYmVsPTQ7Y2FzZSA0OnJldHVyblsyLHJdfX0pfSl9LmJpbmQobnVsbCxlLnN5bmNFbmdpbmUpLG4ub25Vbmxpc3Rlbj1mdW5jdGlvbihpLG8pe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scjtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIG49KGU9aSkuUG8uZ2V0KG8pLDE8KHI9ZS5Wby5nZXQobi50YXJnZXRJZCkpLmxlbmd0aD9bMiwoZS5Wby5zZXQobi50YXJnZXRJZCxyLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4hQW8odCxvKX0pKSx2b2lkIGUuUG8uZGVsZXRlKG8pKV06ZS5pc1ByaW1hcnlDbGllbnQ/KGUuc2hhcmVkQ2xpZW50U3RhdGUucmVtb3ZlTG9jYWxRdWVyeVRhcmdldChuLnRhcmdldElkKSxlLnNoYXJlZENsaWVudFN0YXRlLmlzQWN0aXZlUXVlcnlUYXJnZXQobi50YXJnZXRJZCk/WzMsMl06WzQsc2goZS5sb2NhbFN0b3JlLG4udGFyZ2V0SWQsITEpLnRoZW4oZnVuY3Rpb24oKXtlLnNoYXJlZENsaWVudFN0YXRlLmNsZWFyUXVlcnlTdGF0ZShuLnRhcmdldElkKSxDbChlLnJlbW90ZVN0b3JlLG4udGFyZ2V0SWQpLHhmKGUsbi50YXJnZXRJZCl9KS5jYXRjaChkYyldKTpbMywzXTtjYXNlIDE6dC5zZW50KCksdC5sYWJlbD0yO2Nhc2UgMjpyZXR1cm5bMyw1XTtjYXNlIDM6cmV0dXJuIHhmKGUsbi50YXJnZXRJZCksWzQsc2goZS5sb2NhbFN0b3JlLG4udGFyZ2V0SWQsITApXTtjYXNlIDQ6dC5zZW50KCksdC5sYWJlbD01O2Nhc2UgNTpyZXR1cm5bMl19fSl9KX0uYmluZChudWxsLGUuc3luY0VuZ2luZSksbildfX0pfSl9ZnVuY3Rpb24gSWQobixyLGkpe3ZhciB0PXRoaXM7dm9pZCAwPT09aSYmKGk9e30pO3ZhciBvPW5ldyBaYTtyZXR1cm4gbi5hc3luY1F1ZXVlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9ZnVuY3Rpb24obixyLGksbyxzKXt2YXIgdD1uZXcgbmQoe25leHQ6ZnVuY3Rpb24odCl7ci5lbnF1ZXVlQW5kRm9yZ2V0KGZ1bmN0aW9uKCl7cmV0dXJuIG9mKG4sYSl9KTt2YXIgZT10LmRvY3MuaGFzKGkpOyFlJiZ0LmZyb21DYWNoZT9zLnJlamVjdChuZXcgQXIoRHIuVU5BVkFJTEFCTEUsXCJGYWlsZWQgdG8gZ2V0IGRvY3VtZW50IGJlY2F1c2UgdGhlIGNsaWVudCBpcyBvZmZsaW5lLlwiKSk6ZSYmdC5mcm9tQ2FjaGUmJm8mJlwic2VydmVyXCI9PT1vLnNvdXJjZT9zLnJlamVjdChuZXcgQXIoRHIuVU5BVkFJTEFCTEUsJ0ZhaWxlZCB0byBnZXQgZG9jdW1lbnQgZnJvbSBzZXJ2ZXIuIChIb3dldmVyLCB0aGlzIGRvY3VtZW50IGRvZXMgZXhpc3QgaW4gdGhlIGxvY2FsIGNhY2hlLiBSdW4gYWdhaW4gd2l0aG91dCBzZXR0aW5nIHNvdXJjZSB0byBcInNlcnZlclwiIHRvIHJldHJpZXZlIHRoZSBjYWNoZWQgZG9jdW1lbnQuKScpKTpzLnJlc29sdmUodCl9LGVycm9yOmZ1bmN0aW9uKHQpe3JldHVybiBzLnJlamVjdCh0KX19KSxhPW5ldyBhZihibyhpLnBhdGgpLHQse2luY2x1ZGVNZXRhZGF0YUNoYW5nZXM6ITAsc286ITB9KTtyZXR1cm4gcmYobixhKX0sWzQsd2QobildO2Nhc2UgMTpyZXR1cm5bMixlLmFwcGx5KHZvaWQgMCxbdC5zZW50KCksbi5hc3luY1F1ZXVlLHIsaSxvXSldfX0pfSl9KSxvLnByb21pc2V9ZnVuY3Rpb24gRWQobixyLGkpe3ZhciB0PXRoaXM7dm9pZCAwPT09aSYmKGk9e30pO3ZhciBvPW5ldyBaYTtyZXR1cm4gbi5hc3luY1F1ZXVlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9ZnVuY3Rpb24oZSxuLHQscixpKXt2YXIgbz1uZXcgbmQoe25leHQ6ZnVuY3Rpb24odCl7bi5lbnF1ZXVlQW5kRm9yZ2V0KGZ1bmN0aW9uKCl7cmV0dXJuIG9mKGUscyl9KSx0LmZyb21DYWNoZSYmXCJzZXJ2ZXJcIj09PXIuc291cmNlP2kucmVqZWN0KG5ldyBBcihEci5VTkFWQUlMQUJMRSwnRmFpbGVkIHRvIGdldCBkb2N1bWVudHMgZnJvbSBzZXJ2ZXIuIChIb3dldmVyLCB0aGVzZSBkb2N1bWVudHMgbWF5IGV4aXN0IGluIHRoZSBsb2NhbCBjYWNoZS4gUnVuIGFnYWluIHdpdGhvdXQgc2V0dGluZyBzb3VyY2UgdG8gXCJzZXJ2ZXJcIiB0byByZXRyaWV2ZSB0aGUgY2FjaGVkIGRvY3VtZW50cy4pJykpOmkucmVzb2x2ZSh0KX0sZXJyb3I6ZnVuY3Rpb24odCl7cmV0dXJuIGkucmVqZWN0KHQpfX0pLHM9bmV3IGFmKHQsbyx7aW5jbHVkZU1ldGFkYXRhQ2hhbmdlczohMCxzbzohMH0pO3JldHVybiByZihlLHMpfSxbNCx3ZChuKV07Y2FzZSAxOnJldHVyblsyLGUuYXBwbHkodm9pZCAwLFt0LnNlbnQoKSxuLmFzeW5jUXVldWUscixpLG9dKV19fSl9KX0pLG8ucHJvbWlzZX1mdW5jdGlvbiBUZCh0LGUpe3RoaXMudXNlcj1lLHRoaXMudHlwZT1cIk9BdXRoXCIsdGhpcy5hdXRoSGVhZGVycz17fSx0aGlzLmF1dGhIZWFkZXJzLkF1dGhvcml6YXRpb249XCJCZWFyZXIgXCIrdH12YXIgX2Q9ZnVuY3Rpb24odCxlLG4scixpLG8scyl7dGhpcy5kYXRhYmFzZUlkPXQsdGhpcy5hcHBJZD1lLHRoaXMucGVyc2lzdGVuY2VLZXk9bix0aGlzLmhvc3Q9cix0aGlzLnNzbD1pLHRoaXMuZm9yY2VMb25nUG9sbGluZz1vLHRoaXMuYXV0b0RldGVjdExvbmdQb2xsaW5nPXN9LFNkPShPYmplY3QuZGVmaW5lUHJvcGVydHkoUGQucHJvdG90eXBlLFwiaXNEZWZhdWx0RGF0YWJhc2VcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuXCIoZGVmYXVsdClcIj09PXRoaXMuZGF0YWJhc2V9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksUGQucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBQZCYmdC5wcm9qZWN0SWQ9PT10aGlzLnByb2plY3RJZCYmdC5kYXRhYmFzZT09PXRoaXMuZGF0YWJhc2V9LFBkKSxOZD1uZXcgTWFwLERkPShMZC5wcm90b3R5cGUuZ2V0VG9rZW49ZnVuY3Rpb24oKXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG51bGwpfSxMZC5wcm90b3R5cGUuaW52YWxpZGF0ZVRva2VuPWZ1bmN0aW9uKCl7fSxMZC5wcm90b3R5cGUuc2V0Q2hhbmdlTGlzdGVuZXI9ZnVuY3Rpb24odCl7KHRoaXMuY2hhbmdlTGlzdGVuZXI9dCkoVGguVU5BVVRIRU5USUNBVEVEKX0sTGQucHJvdG90eXBlLnJlbW92ZUNoYW5nZUxpc3RlbmVyPWZ1bmN0aW9uKCl7dGhpcy5jaGFuZ2VMaXN0ZW5lcj1udWxsfSxMZCksQWQ9KE9kLnByb3RvdHlwZS5nZXRUb2tlbj1mdW5jdGlvbigpe3ZhciBlPXRoaXMsbj10aGlzLmNjLHQ9dGhpcy5mb3JjZVJlZnJlc2g7cmV0dXJuIHRoaXMuZm9yY2VSZWZyZXNoPSExLHRoaXMuYXV0aD90aGlzLmF1dGguZ2V0VG9rZW4odCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gZS5jYyE9PW4/KHhyKFwiRmlyZWJhc2VDcmVkZW50aWFsc1Byb3ZpZGVyXCIsXCJnZXRUb2tlbiBhYm9ydGVkIGR1ZSB0byB0b2tlbiBjaGFuZ2UuXCIpLGUuZ2V0VG9rZW4oKSk6dD8oRnIoXCJzdHJpbmdcIj09dHlwZW9mIHQuYWNjZXNzVG9rZW4pLG5ldyBUZCh0LmFjY2Vzc1Rva2VuLGUuY3VycmVudFVzZXIpKTpudWxsfSk6UHJvbWlzZS5yZXNvbHZlKG51bGwpfSxPZC5wcm90b3R5cGUuaW52YWxpZGF0ZVRva2VuPWZ1bmN0aW9uKCl7dGhpcy5mb3JjZVJlZnJlc2g9ITB9LE9kLnByb3RvdHlwZS5zZXRDaGFuZ2VMaXN0ZW5lcj1mdW5jdGlvbih0KXt0aGlzLmNoYW5nZUxpc3RlbmVyPXQsdGhpcy5yZWNlaXZlZEluaXRpYWxVc2VyJiZ0KHRoaXMuY3VycmVudFVzZXIpfSxPZC5wcm90b3R5cGUucmVtb3ZlQ2hhbmdlTGlzdGVuZXI9ZnVuY3Rpb24oKXt0aGlzLmF1dGgmJnRoaXMuYXV0aC5yZW1vdmVBdXRoVG9rZW5MaXN0ZW5lcih0aGlzLm9jKSx0aGlzLm9jPW51bGwsdGhpcy5jaGFuZ2VMaXN0ZW5lcj1udWxsfSxPZC5wcm90b3R5cGUudWM9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmF1dGgmJnRoaXMuYXV0aC5nZXRVaWQoKTtyZXR1cm4gRnIobnVsbD09PXR8fFwic3RyaW5nXCI9PXR5cGVvZiB0KSxuZXcgVGgodCl9LE9kKSxrZD0oT2JqZWN0LmRlZmluZVByb3BlcnR5KHhkLnByb3RvdHlwZSxcImF1dGhIZWFkZXJzXCIse2dldDpmdW5jdGlvbigpe3ZhciB0PXtcIlgtR29vZy1BdXRoVXNlclwiOnRoaXMuaGN9LGU9dGhpcy5hYy5hdXRoLmdldEF1dGhIZWFkZXJWYWx1ZUZvckZpcnN0UGFydHkoW10pO3JldHVybiBlJiYodC5BdXRob3JpemF0aW9uPWUpLHRoaXMubGMmJih0W1wiWC1Hb29nLUlhbS1BdXRob3JpemF0aW9uLVRva2VuXCJdPXRoaXMubGMpLHR9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSkseGQpLENkPShSZC5wcm90b3R5cGUuZ2V0VG9rZW49ZnVuY3Rpb24oKXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5ldyBrZCh0aGlzLmFjLHRoaXMuaGMsdGhpcy5sYykpfSxSZC5wcm90b3R5cGUuc2V0Q2hhbmdlTGlzdGVuZXI9ZnVuY3Rpb24odCl7dChUaC5GSVJTVF9QQVJUWSl9LFJkLnByb3RvdHlwZS5yZW1vdmVDaGFuZ2VMaXN0ZW5lcj1mdW5jdGlvbigpe30sUmQucHJvdG90eXBlLmludmFsaWRhdGVUb2tlbj1mdW5jdGlvbigpe30sUmQpO2Z1bmN0aW9uIFJkKHQsZSxuKXt0aGlzLmFjPXQsdGhpcy5oYz1lLHRoaXMubGM9bn1mdW5jdGlvbiB4ZCh0LGUsbil7dGhpcy5hYz10LHRoaXMuaGM9ZSx0aGlzLmxjPW4sdGhpcy50eXBlPVwiRmlyc3RQYXJ0eVwiLHRoaXMudXNlcj1UaC5GSVJTVF9QQVJUWX1mdW5jdGlvbiBPZCh0KXt2YXIgZT10aGlzO3RoaXMub2M9bnVsbCx0aGlzLmN1cnJlbnRVc2VyPVRoLlVOQVVUSEVOVElDQVRFRCx0aGlzLnJlY2VpdmVkSW5pdGlhbFVzZXI9ITEsdGhpcy5jYz0wLHRoaXMuY2hhbmdlTGlzdGVuZXI9bnVsbCx0aGlzLmZvcmNlUmVmcmVzaD0hMSx0aGlzLm9jPWZ1bmN0aW9uKCl7ZS5jYysrLGUuY3VycmVudFVzZXI9ZS51YygpLGUucmVjZWl2ZWRJbml0aWFsVXNlcj0hMCxlLmNoYW5nZUxpc3RlbmVyJiZlLmNoYW5nZUxpc3RlbmVyKGUuY3VycmVudFVzZXIpfSx0aGlzLmNjPTAsdGhpcy5hdXRoPXQuZ2V0SW1tZWRpYXRlKHtvcHRpb25hbDohMH0pLHRoaXMuYXV0aD90aGlzLmF1dGguYWRkQXV0aFRva2VuTGlzdGVuZXIodGhpcy5vYyk6KHRoaXMub2MobnVsbCksdC5nZXQoKS50aGVuKGZ1bmN0aW9uKHQpe2UuYXV0aD10LGUub2MmJmUuYXV0aC5hZGRBdXRoVG9rZW5MaXN0ZW5lcihlLm9jKX0sZnVuY3Rpb24oKXt9KSl9ZnVuY3Rpb24gTGQoKXt0aGlzLmNoYW5nZUxpc3RlbmVyPW51bGx9ZnVuY3Rpb24gUGQodCxlKXt0aGlzLnByb2plY3RJZD10LHRoaXMuZGF0YWJhc2U9ZXx8XCIoZGVmYXVsdClcIn1mdW5jdGlvbiBNZCh0LGUsbil7aWYoIW4pdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJGdW5jdGlvbiBcIit0K1wiKCkgY2Fubm90IGJlIGNhbGxlZCB3aXRoIGFuIGVtcHR5IFwiK2UrXCIuXCIpfWZ1bmN0aW9uIEZkKHQsZSl7aWYodm9pZCAwPT09ZSlyZXR1cm57bWVyZ2U6ITF9O2lmKHZvaWQgMCE9PWUubWVyZ2VGaWVsZHMmJnZvaWQgMCE9PWUubWVyZ2UpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIG9wdGlvbnMgcGFzc2VkIHRvIGZ1bmN0aW9uIFwiK3QrJygpOiBZb3UgY2Fubm90IHNwZWNpZnkgYm90aCBcIm1lcmdlXCIgYW5kIFwibWVyZ2VGaWVsZHNcIi4nKTtyZXR1cm4gZX1mdW5jdGlvbiBWZCh0LGUsbixyKXtpZighMD09PWUmJiEwPT09cil0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCx0K1wiIGFuZCBcIituK1wiIGNhbm5vdCBiZSB1c2VkIHRvZ2V0aGVyLlwiKX1mdW5jdGlvbiBVZCh0KXtpZighbWkuaXNEb2N1bWVudEtleSh0KSl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIkludmFsaWQgZG9jdW1lbnQgcmVmZXJlbmNlLiBEb2N1bWVudCByZWZlcmVuY2VzIG11c3QgaGF2ZSBhbiBldmVuIG51bWJlciBvZiBzZWdtZW50cywgYnV0IFwiK3QrXCIgaGFzIFwiK3QubGVuZ3RoK1wiLlwiKX1mdW5jdGlvbiBxZCh0KXtpZihtaS5pc0RvY3VtZW50S2V5KHQpKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiSW52YWxpZCBjb2xsZWN0aW9uIHJlZmVyZW5jZS4gQ29sbGVjdGlvbiByZWZlcmVuY2VzIG11c3QgaGF2ZSBhbiBvZGQgbnVtYmVyIG9mIHNlZ21lbnRzLCBidXQgXCIrdCtcIiBoYXMgXCIrdC5sZW5ndGgrXCIuXCIpfWZ1bmN0aW9uIEJkKGUpe2lmKHZvaWQgMD09PWUpcmV0dXJuXCJ1bmRlZmluZWRcIjtpZihudWxsPT09ZSlyZXR1cm5cIm51bGxcIjtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gMjA8ZS5sZW5ndGgmJihlPWUuc3Vic3RyaW5nKDAsMjApK1wiLi4uXCIpLEpTT04uc3RyaW5naWZ5KGUpO2lmKFwibnVtYmVyXCI9PXR5cGVvZiBlfHxcImJvb2xlYW5cIj09dHlwZW9mIGUpcmV0dXJuXCJcIitlO2lmKFwib2JqZWN0XCIhPXR5cGVvZiBlKXJldHVyblwiZnVuY3Rpb25cIj09dHlwZW9mIGU/XCJhIGZ1bmN0aW9uXCI6TXIoKTtpZihlIGluc3RhbmNlb2YgQXJyYXkpcmV0dXJuXCJhbiBhcnJheVwiO3ZhciB0PWZ1bmN0aW9uKCl7aWYoZS5jb25zdHJ1Y3Rvcil7dmFyIHQ9L2Z1bmN0aW9uXFxzKyhbXlxccyhdKylcXHMqXFwoLy5leGVjKGUuY29uc3RydWN0b3IudG9TdHJpbmcoKSk7aWYodCYmMTx0Lmxlbmd0aClyZXR1cm4gdFsxXX1yZXR1cm4gbnVsbH0oKTtyZXR1cm4gdD9cImEgY3VzdG9tIFwiK3QrXCIgb2JqZWN0XCI6XCJhbiBvYmplY3RcIn1mdW5jdGlvbiBqZCh0LGUpe2lmKCh0PVwiX2RlbGVnYXRlXCJpbiB0P3QuX2RlbGVnYXRlOnQpaW5zdGFuY2VvZiBlKXJldHVybiB0O2lmKGUubmFtZT09PXQuY29uc3RydWN0b3IubmFtZSl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIlR5cGUgZG9lcyBub3QgbWF0Y2ggdGhlIGV4cGVjdGVkIGluc3RhbmNlLiBEaWQgeW91IHBhc3MgYSByZWZlcmVuY2UgZnJvbSBhIGRpZmZlcmVudCBGaXJlc3RvcmUgU0RLP1wiKTt0PUJkKHQpO3Rocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiRXhwZWN0ZWQgdHlwZSAnXCIrZS5uYW1lK1wiJywgYnV0IGl0IHdhczogXCIrdCl9ZnVuY3Rpb24gS2QodCxlKXtpZihlPD0wKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiRnVuY3Rpb24gXCIrdCtcIigpIHJlcXVpcmVzIGEgcG9zaXRpdmUgbnVtYmVyLCBidXQgaXQgd2FzOiBcIitlK1wiLlwiKX12YXIgR2QsUWQ9KHRwLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmhvc3Q9PT10Lmhvc3QmJnRoaXMuc3NsPT09dC5zc2wmJnRoaXMuY3JlZGVudGlhbHM9PT10LmNyZWRlbnRpYWxzJiZ0aGlzLmNhY2hlU2l6ZUJ5dGVzPT09dC5jYWNoZVNpemVCeXRlcyYmdGhpcy5leHBlcmltZW50YWxGb3JjZUxvbmdQb2xsaW5nPT09dC5leHBlcmltZW50YWxGb3JjZUxvbmdQb2xsaW5nJiZ0aGlzLmV4cGVyaW1lbnRhbEF1dG9EZXRlY3RMb25nUG9sbGluZz09PXQuZXhwZXJpbWVudGFsQXV0b0RldGVjdExvbmdQb2xsaW5nJiZ0aGlzLmlnbm9yZVVuZGVmaW5lZFByb3BlcnRpZXM9PT10Lmlnbm9yZVVuZGVmaW5lZFByb3BlcnRpZXN9LHRwKSx6ZD0oT2JqZWN0LmRlZmluZVByb3BlcnR5KFpkLnByb3RvdHlwZSxcImFwcFwiLHtnZXQ6ZnVuY3Rpb24oKXtpZighdGhpcy5fYXBwKXRocm93IG5ldyBBcihEci5GQUlMRURfUFJFQ09ORElUSU9OLFwiRmlyZXN0b3JlIHdhcyBub3QgaW5pdGlhbGl6ZWQgdXNpbmcgdGhlIEZpcmViYXNlIFNESy4gJ2FwcCcgaXMgbm90IGF2YWlsYWJsZVwiKTtyZXR1cm4gdGhpcy5fYXBwfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShaZC5wcm90b3R5cGUsXCJfaW5pdGlhbGl6ZWRcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3NldHRpbmdzRnJvemVufSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShaZC5wcm90b3R5cGUsXCJfdGVybWluYXRlZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5fdGVybWluYXRlVGFza30sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxaZC5wcm90b3R5cGUuX3NldFNldHRpbmdzPWZ1bmN0aW9uKHQpe2lmKHRoaXMuX3NldHRpbmdzRnJvemVuKXRocm93IG5ldyBBcihEci5GQUlMRURfUFJFQ09ORElUSU9OLFwiRmlyZXN0b3JlIGhhcyBhbHJlYWR5IGJlZW4gc3RhcnRlZCBhbmQgaXRzIHNldHRpbmdzIGNhbiBubyBsb25nZXIgYmUgY2hhbmdlZC4gWW91IGNhbiBvbmx5IG1vZGlmeSBzZXR0aW5ncyBiZWZvcmUgY2FsbGluZyBhbnkgb3RoZXIgbWV0aG9kcyBvbiBhIEZpcmVzdG9yZSBvYmplY3QuXCIpO3RoaXMuX3NldHRpbmdzPW5ldyBRZCh0KSx2b2lkIDAhPT10LmNyZWRlbnRpYWxzJiYodGhpcy5fY3JlZGVudGlhbHM9ZnVuY3Rpb24odCl7aWYoIXQpcmV0dXJuIG5ldyBEZDtzd2l0Y2godC50eXBlKXtjYXNlXCJnYXBpXCI6dmFyIGU9dC5jbGllbnQ7cmV0dXJuIEZyKCEoXCJvYmplY3RcIiE9dHlwZW9mIGV8fG51bGw9PT1lfHwhZS5hdXRofHwhZS5hdXRoLmdldEF1dGhIZWFkZXJWYWx1ZUZvckZpcnN0UGFydHkpKSxuZXcgQ2QoZSx0LnNlc3Npb25JbmRleHx8XCIwXCIsdC5pYW1Ub2tlbnx8bnVsbCk7Y2FzZVwicHJvdmlkZXJcIjpyZXR1cm4gdC5jbGllbnQ7ZGVmYXVsdDp0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIm1ha2VDcmVkZW50aWFsc1Byb3ZpZGVyIGZhaWxlZCBkdWUgdG8gaW52YWxpZCBjcmVkZW50aWFsIHR5cGVcIil9fSh0LmNyZWRlbnRpYWxzKSl9LFpkLnByb3RvdHlwZS5fZ2V0U2V0dGluZ3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2V0dGluZ3N9LFpkLnByb3RvdHlwZS5fZnJlZXplU2V0dGluZ3M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc2V0dGluZ3NGcm96ZW49ITAsdGhpcy5fc2V0dGluZ3N9LFpkLnByb3RvdHlwZS5fZGVsZXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Rlcm1pbmF0ZVRhc2t8fCh0aGlzLl90ZXJtaW5hdGVUYXNrPXRoaXMuX3Rlcm1pbmF0ZSgpKSx0aGlzLl90ZXJtaW5hdGVUYXNrfSxaZC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue2FwcDp0aGlzLl9hcHAsZGF0YWJhc2VJZDp0aGlzLl9kYXRhYmFzZUlkLHNldHRpbmdzOnRoaXMuX3NldHRpbmdzfX0sWmQucHJvdG90eXBlLl90ZXJtaW5hdGU9ZnVuY3Rpb24oKXtyZXR1cm4odD1OZC5nZXQodGhpcykpJiYoeHIoXCJDb21wb25lbnRQcm92aWRlclwiLFwiUmVtb3ZpbmcgRGF0YXN0b3JlXCIpLE5kLmRlbGV0ZSh0aGlzKSx0LnRlcm1pbmF0ZSgpKSxQcm9taXNlLnJlc29sdmUoKTt2YXIgdH0sWmQpLEhkPShPYmplY3QuZGVmaW5lUHJvcGVydHkoJGQucHJvdG90eXBlLFwiX3BhdGhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2tleS5wYXRofSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSgkZC5wcm90b3R5cGUsXCJpZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fa2V5LnBhdGgubGFzdFNlZ21lbnQoKX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoJGQucHJvdG90eXBlLFwicGF0aFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fa2V5LnBhdGguY2Fub25pY2FsU3RyaW5nKCl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KCRkLnByb3RvdHlwZSxcInBhcmVudFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IFlkKHRoaXMuZmlyZXN0b3JlLHRoaXMuX2NvbnZlcnRlcix0aGlzLl9rZXkucGF0aC5wb3BMYXN0KCkpfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLCRkLnByb3RvdHlwZS53aXRoQ29udmVydGVyPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgJGQodGhpcy5maXJlc3RvcmUsdCx0aGlzLl9rZXkpfSwkZCksV2Q9KEpkLnByb3RvdHlwZS53aXRoQ29udmVydGVyPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgSmQodGhpcy5maXJlc3RvcmUsdCx0aGlzLl9xdWVyeSl9LEpkKSxZZD0obihYZCxHZD1XZCksT2JqZWN0LmRlZmluZVByb3BlcnR5KFhkLnByb3RvdHlwZSxcImlkXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9xdWVyeS5wYXRoLmxhc3RTZWdtZW50KCl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFhkLnByb3RvdHlwZSxcInBhdGhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3F1ZXJ5LnBhdGguY2Fub25pY2FsU3RyaW5nKCl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFhkLnByb3RvdHlwZSxcInBhcmVudFwiLHtnZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9wYXRoLnBvcExhc3QoKTtyZXR1cm4gdC5pc0VtcHR5KCk/bnVsbDpuZXcgSGQodGhpcy5maXJlc3RvcmUsbnVsbCxuZXcgbWkodCkpfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLFhkLnByb3RvdHlwZS53aXRoQ29udmVydGVyPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgWGQodGhpcy5maXJlc3RvcmUsdCx0aGlzLl9wYXRoKX0sWGQpO2Z1bmN0aW9uIFhkKHQsZSxuKXt2YXIgcj10aGlzO3JldHVybihyPUdkLmNhbGwodGhpcyx0LGUsYm8obikpfHx0aGlzKS5fcGF0aD1uLHIudHlwZT1cImNvbGxlY3Rpb25cIixyfWZ1bmN0aW9uIEpkKHQsZSxuKXt0aGlzLl9jb252ZXJ0ZXI9ZSx0aGlzLl9xdWVyeT1uLHRoaXMudHlwZT1cInF1ZXJ5XCIsdGhpcy5maXJlc3RvcmU9dH1mdW5jdGlvbiAkZCh0LGUsbil7dGhpcy5fY29udmVydGVyPWUsdGhpcy5fa2V5PW4sdGhpcy50eXBlPVwiZG9jdW1lbnRcIix0aGlzLmZpcmVzdG9yZT10fWZ1bmN0aW9uIFpkKHQsZSl7dGhpcy5fcGVyc2lzdGVuY2VLZXk9XCIobGl0ZSlcIix0aGlzLl9zZXR0aW5ncz1uZXcgUWQoe30pLHRoaXMuX3NldHRpbmdzRnJvemVuPSExLHQgaW5zdGFuY2VvZiBTZD8odGhpcy5fZGF0YWJhc2VJZD10LHRoaXMuX2NyZWRlbnRpYWxzPW5ldyBEZCk6KHRoaXMuX2FwcD10LHRoaXMuX2RhdGFiYXNlSWQ9ZnVuY3Rpb24odCl7aWYoIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuYXBwbHkodC5vcHRpb25zLFtcInByb2plY3RJZFwiXSkpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsJ1wicHJvamVjdElkXCIgbm90IHByb3ZpZGVkIGluIGZpcmViYXNlLmluaXRpYWxpemVBcHAuJyk7cmV0dXJuIG5ldyBTZCh0Lm9wdGlvbnMucHJvamVjdElkKX0odCksdGhpcy5fY3JlZGVudGlhbHM9bmV3IEFkKGUpKX1mdW5jdGlvbiB0cCh0KXt2YXIgZTtpZih2b2lkIDA9PT10Lmhvc3Qpe2lmKHZvaWQgMCE9PXQuc3NsKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiQ2FuJ3QgcHJvdmlkZSBzc2wgb3B0aW9uIGlmIGhvc3Qgb3B0aW9uIGlzIG5vdCBzZXRcIik7dGhpcy5ob3N0PVwiZmlyZXN0b3JlLmdvb2dsZWFwaXMuY29tXCIsdGhpcy5zc2w9ITB9ZWxzZSB0aGlzLmhvc3Q9dC5ob3N0LHRoaXMuc3NsPW51bGw9PT0oZT10LnNzbCl8fHZvaWQgMD09PWV8fGU7aWYodGhpcy5jcmVkZW50aWFscz10LmNyZWRlbnRpYWxzLHRoaXMuaWdub3JlVW5kZWZpbmVkUHJvcGVydGllcz0hIXQuaWdub3JlVW5kZWZpbmVkUHJvcGVydGllcyx2b2lkIDA9PT10LmNhY2hlU2l6ZUJ5dGVzKXRoaXMuY2FjaGVTaXplQnl0ZXM9NDE5NDMwNDA7ZWxzZXtpZigtMSE9PXQuY2FjaGVTaXplQnl0ZXMmJnQuY2FjaGVTaXplQnl0ZXM8MTA0ODU3Nil0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcImNhY2hlU2l6ZUJ5dGVzIG11c3QgYmUgYXQgbGVhc3QgMTA0ODU3NlwiKTt0aGlzLmNhY2hlU2l6ZUJ5dGVzPXQuY2FjaGVTaXplQnl0ZXN9dGhpcy5leHBlcmltZW50YWxGb3JjZUxvbmdQb2xsaW5nPSEhdC5leHBlcmltZW50YWxGb3JjZUxvbmdQb2xsaW5nLHRoaXMuZXhwZXJpbWVudGFsQXV0b0RldGVjdExvbmdQb2xsaW5nPSEhdC5leHBlcmltZW50YWxBdXRvRGV0ZWN0TG9uZ1BvbGxpbmcsVmQoXCJleHBlcmltZW50YWxGb3JjZUxvbmdQb2xsaW5nXCIsdC5leHBlcmltZW50YWxGb3JjZUxvbmdQb2xsaW5nLFwiZXhwZXJpbWVudGFsQXV0b0RldGVjdExvbmdQb2xsaW5nXCIsdC5leHBlcmltZW50YWxBdXRvRGV0ZWN0TG9uZ1BvbGxpbmcpfWZ1bmN0aW9uIGVwKHQsZSl7Zm9yKHZhciBuLHI9W10saT0yO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspcltpLTJdPWFyZ3VtZW50c1tpXTtpZih0PW0odCksTWQoXCJjb2xsZWN0aW9uXCIsXCJwYXRoXCIsZSksdCBpbnN0YW5jZW9mIHpkKXJldHVybiBxZChuPSRyLmZyb21TdHJpbmcuYXBwbHkoJHIscyhbZV0scikpKSxuZXcgWWQodCxudWxsLG4pO2lmKCEodCBpbnN0YW5jZW9mIEhkfHx0IGluc3RhbmNlb2YgWWQpKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiRXhwZWN0ZWQgZmlyc3QgYXJndW1lbnQgdG8gY29sbGVjdGlvbigpIHRvIGJlIGEgQ29sbGVjdGlvblJlZmVyZW5jZSwgYSBEb2N1bWVudFJlZmVyZW5jZSBvciBGaXJlYmFzZUZpcmVzdG9yZVwiKTtyZXR1cm4gcWQobj0kci5mcm9tU3RyaW5nLmFwcGx5KCRyLHMoW3QucGF0aF0scikpLmNoaWxkKCRyLmZyb21TdHJpbmcoZSkpKSxuZXcgWWQodC5maXJlc3RvcmUsbnVsbCxuKX1mdW5jdGlvbiBucCh0LGUpe2Zvcih2YXIgbixyPVtdLGk9MjtpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXJbaS0yXT1hcmd1bWVudHNbaV07aWYodD1tKHQpLE1kKFwiZG9jXCIsXCJwYXRoXCIsZT0xPT09YXJndW1lbnRzLmxlbmd0aD9Wci51KCk6ZSksdCBpbnN0YW5jZW9mIHpkKXJldHVybiBVZChuPSRyLmZyb21TdHJpbmcuYXBwbHkoJHIscyhbZV0scikpKSxuZXcgSGQodCxudWxsLG5ldyBtaShuKSk7aWYoISh0IGluc3RhbmNlb2YgSGR8fHQgaW5zdGFuY2VvZiBZZCkpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJFeHBlY3RlZCBmaXJzdCBhcmd1bWVudCB0byBjb2xsZWN0aW9uKCkgdG8gYmUgYSBDb2xsZWN0aW9uUmVmZXJlbmNlLCBhIERvY3VtZW50UmVmZXJlbmNlIG9yIEZpcmViYXNlRmlyZXN0b3JlXCIpO3JldHVybiBVZChuPXQuX3BhdGguY2hpbGQoJHIuZnJvbVN0cmluZy5hcHBseSgkcixzKFtlXSxyKSkpKSxuZXcgSGQodC5maXJlc3RvcmUsdCBpbnN0YW5jZW9mIFlkP3QuX2NvbnZlcnRlcjpudWxsLG5ldyBtaShuKSl9ZnVuY3Rpb24gcnAodCxlKXtyZXR1cm4gdD1tKHQpLGU9bShlKSwodCBpbnN0YW5jZW9mIEhkfHx0IGluc3RhbmNlb2YgWWQpJiYoZSBpbnN0YW5jZW9mIEhkfHxlIGluc3RhbmNlb2YgWWQpJiZ0LmZpcmVzdG9yZT09PWUuZmlyZXN0b3JlJiZ0LnBhdGg9PT1lLnBhdGgmJnQuX2NvbnZlcnRlcj09PWUuX2NvbnZlcnRlcn1mdW5jdGlvbiBpcCh0LGUpe3JldHVybiB0PW0odCksZT1tKGUpLHQgaW5zdGFuY2VvZiBXZCYmZSBpbnN0YW5jZW9mIFdkJiZ0LmZpcmVzdG9yZT09PWUuZmlyZXN0b3JlJiZBbyh0Ll9xdWVyeSxlLl9xdWVyeSkmJnQuX2NvbnZlcnRlcj09PWUuX2NvbnZlcnRlcn12YXIgb3A9KE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzcC5wcm90b3R5cGUsXCJpc1NodXR0aW5nRG93blwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy53Y30sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxzcC5wcm90b3R5cGUuZW5xdWV1ZUFuZEZvcmdldD1mdW5jdGlvbih0KXt0aGlzLmVucXVldWUodCl9LHNwLnByb3RvdHlwZS5lbnF1ZXVlQW5kRm9yZ2V0RXZlbldoaWxlUmVzdHJpY3RlZD1mdW5jdGlvbih0KXt0aGlzLlRjKCksdGhpcy5JYyh0KX0sc3AucHJvdG90eXBlLmVudGVyUmVzdHJpY3RlZE1vZGU9ZnVuY3Rpb24oKXt2YXIgdDt0aGlzLndjfHwodGhpcy53Yz0hMCwodD1obCgpKSYmXCJmdW5jdGlvblwiPT10eXBlb2YgdC5yZW1vdmVFdmVudExpc3RlbmVyJiZ0LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ2aXNpYmlsaXR5Y2hhbmdlXCIsdGhpcy5FYykpfSxzcC5wcm90b3R5cGUuZW5xdWV1ZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5UYygpLHRoaXMud2M/bmV3IFByb21pc2UoZnVuY3Rpb24odCl7fSk6dGhpcy5JYyh0KX0sc3AucHJvdG90eXBlLmVucXVldWVSZXRyeWFibGU9ZnVuY3Rpb24odCl7dmFyIGU9dGhpczt0aGlzLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4gZS5kYy5wdXNoKHQpLGUuQWMoKX0pfSxzcC5wcm90b3R5cGUuQWM9ZnVuY3Rpb24oKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuPXRoaXM7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOmlmKDA9PT10aGlzLmRjLmxlbmd0aClyZXR1cm5bMyw1XTt0LmxhYmVsPTE7Y2FzZSAxOnJldHVybiB0LnRyeXMucHVzaChbMSwzLCw0XSksWzQsdGhpcy5kY1swXSgpXTtjYXNlIDI6cmV0dXJuIHQuc2VudCgpLHRoaXMuZGMuc2hpZnQoKSx0aGlzLlppLnJlc2V0KCksWzMsNF07Y2FzZSAzOmlmKCFsdShlPXQuc2VudCgpKSl0aHJvdyBlO3JldHVybiB4cihcIkFzeW5jUXVldWVcIixcIk9wZXJhdGlvbiBmYWlsZWQgd2l0aCByZXRyeWFibGUgZXJyb3I6IFwiK2UpLFszLDRdO2Nhc2UgNDowPHRoaXMuZGMubGVuZ3RoJiZ0aGlzLlppLmppKGZ1bmN0aW9uKCl7cmV0dXJuIG4uQWMoKX0pLHQubGFiZWw9NTtjYXNlIDU6cmV0dXJuWzJdfX0pfSl9LHNwLnByb3RvdHlwZS5JYz1mdW5jdGlvbih0KXt2YXIgcj10aGlzLGU9dGhpcy5mYy50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHIueWM9ITAsdCgpLmNhdGNoKGZ1bmN0aW9uKHQpe3Rocm93IHIubWM9dCxyLnljPSExLE9yKFwiSU5URVJOQUwgVU5IQU5ETEVEIEVSUk9SOiBcIiwobj0oZT10KS5tZXNzYWdlfHxcIlwiLG49ZS5zdGFjaz9lLnN0YWNrLmluY2x1ZGVzKGUubWVzc2FnZSk/ZS5zdGFjazplLm1lc3NhZ2UrXCJcXG5cIitlLnN0YWNrOm4pKSx0O3ZhciBlLG59KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiByLnljPSExLHR9KX0pO3JldHVybiB0aGlzLmZjPWV9LHNwLnByb3RvdHlwZS5lbnF1ZXVlQWZ0ZXJEZWxheT1mdW5jdGlvbih0LGUsbil7dmFyIHI9dGhpczt0aGlzLlRjKCksLTE8dGhpcy5nYy5pbmRleE9mKHQpJiYoZT0wKTtuPXpsLmNyZWF0ZUFuZFNjaGVkdWxlKHRoaXMsdCxlLG4sZnVuY3Rpb24odCl7cmV0dXJuIHIuUmModCl9KTtyZXR1cm4gdGhpcy5fYy5wdXNoKG4pLG59LHNwLnByb3RvdHlwZS5UYz1mdW5jdGlvbigpe3RoaXMubWMmJk1yKCl9LHNwLnByb3RvdHlwZS52ZXJpZnlPcGVyYXRpb25JblByb2dyZXNzPWZ1bmN0aW9uKCl7fSxzcC5wcm90b3R5cGUuYmM9ZnVuY3Rpb24oKXtyZXR1cm4geSh0aGlzLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuWzQsZT10aGlzLmZjXTtjYXNlIDE6dC5zZW50KCksdC5sYWJlbD0yO2Nhc2UgMjppZihlIT09dGhpcy5mYylyZXR1cm5bMywwXTt0LmxhYmVsPTM7Y2FzZSAzOnJldHVyblsyXX19KX0pfSxzcC5wcm90b3R5cGUudmM9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPTAsbj10aGlzLl9jO2U8bi5sZW5ndGg7ZSsrKWlmKG5bZV0udGltZXJJZD09PXQpcmV0dXJuITA7cmV0dXJuITF9LHNwLnByb3RvdHlwZS5QYz1mdW5jdGlvbihyKXt2YXIgaT10aGlzO3JldHVybiB0aGlzLmJjKCkudGhlbihmdW5jdGlvbigpe2kuX2Muc29ydChmdW5jdGlvbih0LGUpe3JldHVybiB0LnRhcmdldFRpbWVNcy1lLnRhcmdldFRpbWVNc30pO2Zvcih2YXIgdD0wLGU9aS5fYzt0PGUubGVuZ3RoO3QrKyl7dmFyIG49ZVt0XTtpZihuLnNraXBEZWxheSgpLFwiYWxsXCIhPT1yJiZuLnRpbWVySWQ9PT1yKWJyZWFrfXJldHVybiBpLmJjKCl9KX0sc3AucHJvdG90eXBlLlZjPWZ1bmN0aW9uKHQpe3RoaXMuZ2MucHVzaCh0KX0sc3AucHJvdG90eXBlLlJjPWZ1bmN0aW9uKHQpe3Q9dGhpcy5fYy5pbmRleE9mKHQpO3RoaXMuX2Muc3BsaWNlKHQsMSl9LHNwKTtmdW5jdGlvbiBzcCgpe3ZhciBlPXRoaXM7dGhpcy5mYz1Qcm9taXNlLnJlc29sdmUoKSx0aGlzLmRjPVtdLHRoaXMud2M9ITEsdGhpcy5fYz1bXSx0aGlzLm1jPW51bGwsdGhpcy55Yz0hMSx0aGlzLmdjPVtdLHRoaXMuWmk9bmV3IGdsKHRoaXMsXCJhc3luY19xdWV1ZV9yZXRyeVwiKSx0aGlzLkVjPWZ1bmN0aW9uKCl7dmFyIHQ9aGwoKTt0JiZ4cihcIkFzeW5jUXVldWVcIixcIlZpc2liaWxpdHkgc3RhdGUgY2hhbmdlZCB0byBcIit0LnZpc2liaWxpdHlTdGF0ZSksZS5aaS5HaSgpfTt2YXIgdD1obCgpO3QmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuYWRkRXZlbnRMaXN0ZW5lciYmdC5hZGRFdmVudExpc3RlbmVyKFwidmlzaWJpbGl0eWNoYW5nZVwiLHRoaXMuRWMpfWZ1bmN0aW9uIGFwKGkpe3JldHVybiBmdW5jdGlvbigpe2lmKFwib2JqZWN0XCI9PXR5cGVvZiBpJiZudWxsIT09aSlmb3IodmFyIHQ9aSxlPTAsbj1bXCJuZXh0XCIsXCJlcnJvclwiLFwiY29tcGxldGVcIl07ZTxuLmxlbmd0aDtlKyspe3ZhciByPW5bZV07aWYociBpbiB0JiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0W3JdKXJldHVybiAxfX0oKX12YXIgdXAsY3A9KGZwLnByb3RvdHlwZS5vblByb2dyZXNzPWZ1bmN0aW9uKHQsZSxuKXt0aGlzLl9wcm9ncmVzc09ic2VydmVyPXtuZXh0OnQsZXJyb3I6ZSxjb21wbGV0ZTpufX0sZnAucHJvdG90eXBlLmNhdGNoPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl90YXNrQ29tcGxldGlvblJlc29sdmVyLnByb21pc2UuY2F0Y2godCl9LGZwLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3Rhc2tDb21wbGV0aW9uUmVzb2x2ZXIucHJvbWlzZS50aGVuKHQsZSl9LGZwLnByb3RvdHlwZS5fY29tcGxldGVXaXRoPWZ1bmN0aW9uKHQpe3RoaXMuX3VwZGF0ZVByb2dyZXNzKHQpLHRoaXMuX3Byb2dyZXNzT2JzZXJ2ZXIuY29tcGxldGUmJnRoaXMuX3Byb2dyZXNzT2JzZXJ2ZXIuY29tcGxldGUoKSx0aGlzLl90YXNrQ29tcGxldGlvblJlc29sdmVyLnJlc29sdmUodCl9LGZwLnByb3RvdHlwZS5fZmFpbFdpdGg9ZnVuY3Rpb24odCl7dGhpcy5fbGFzdFByb2dyZXNzLnRhc2tTdGF0ZT1cIkVycm9yXCIsdGhpcy5fcHJvZ3Jlc3NPYnNlcnZlci5uZXh0JiZ0aGlzLl9wcm9ncmVzc09ic2VydmVyLm5leHQodGhpcy5fbGFzdFByb2dyZXNzKSx0aGlzLl9wcm9ncmVzc09ic2VydmVyLmVycm9yJiZ0aGlzLl9wcm9ncmVzc09ic2VydmVyLmVycm9yKHQpLHRoaXMuX3Rhc2tDb21wbGV0aW9uUmVzb2x2ZXIucmVqZWN0KHQpfSxmcC5wcm90b3R5cGUuX3VwZGF0ZVByb2dyZXNzPWZ1bmN0aW9uKHQpe3RoaXMuX2xhc3RQcm9ncmVzcz10LHRoaXMuX3Byb2dyZXNzT2JzZXJ2ZXIubmV4dCYmdGhpcy5fcHJvZ3Jlc3NPYnNlcnZlci5uZXh0KHQpfSxmcCksaHA9KG4obHAsdXA9emQpLGxwLnByb3RvdHlwZS5fdGVybWluYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ZpcmVzdG9yZUNsaWVudHx8cHAodGhpcyksdGhpcy5fZmlyZXN0b3JlQ2xpZW50LnRlcm1pbmF0ZSgpfSxscCk7ZnVuY3Rpb24gbHAodCxlKXt2YXIgbj10aGlzO3JldHVybihuPXVwLmNhbGwodGhpcyx0LGUpfHx0aGlzKS5fcXVldWU9bmV3IG9wLG4uX3BlcnNpc3RlbmNlS2V5PVwibmFtZVwiaW4gdD90Lm5hbWU6XCJbREVGQVVMVF1cIixufWZ1bmN0aW9uIGZwKCl7dGhpcy5fcHJvZ3Jlc3NPYnNlcnZlcj17fSx0aGlzLl90YXNrQ29tcGxldGlvblJlc29sdmVyPW5ldyBaYSx0aGlzLl9sYXN0UHJvZ3Jlc3M9e3Rhc2tTdGF0ZTpcIlJ1bm5pbmdcIix0b3RhbEJ5dGVzOjAsdG90YWxEb2N1bWVudHM6MCxieXRlc0xvYWRlZDowLGRvY3VtZW50c0xvYWRlZDowfX1mdW5jdGlvbiBkcCh0KXtyZXR1cm4gdC5fZmlyZXN0b3JlQ2xpZW50fHxwcCh0KSx0Ll9maXJlc3RvcmVDbGllbnQudmVyaWZ5Tm90VGVybWluYXRlZCgpLHQuX2ZpcmVzdG9yZUNsaWVudH1mdW5jdGlvbiBwcCh0KXt2YXIgZSxuLHIsaT10Ll9mcmVlemVTZXR0aW5ncygpLGk9KGU9dC5fZGF0YWJhc2VJZCxuPShudWxsPT09KHI9dC5fYXBwKXx8dm9pZCAwPT09cj92b2lkIDA6ci5vcHRpb25zLmFwcElkKXx8XCJcIixyPXQuX3BlcnNpc3RlbmNlS2V5LG5ldyBfZChlLG4scixpLmhvc3QsaS5zc2wsaS5leHBlcmltZW50YWxGb3JjZUxvbmdQb2xsaW5nLGkuZXhwZXJpbWVudGFsQXV0b0RldGVjdExvbmdQb2xsaW5nKSk7dC5fZmlyZXN0b3JlQ2xpZW50PW5ldyBzZCh0Ll9jcmVkZW50aWFscyx0Ll9xdWV1ZSxpKX1mdW5jdGlvbiB5cChyLGksbyl7dmFyIHQ9dGhpcyxzPW5ldyBaYTtyZXR1cm4gci5hc3luY1F1ZXVlLmVucXVldWUoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgbjtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIHQudHJ5cy5wdXNoKFswLDMsLDRdKSxbNCxmZChyLG8pXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLFs0LGRkKHIsaSldO2Nhc2UgMjpyZXR1cm4gdC5zZW50KCkscy5yZXNvbHZlKCksWzMsNF07Y2FzZSAzOmlmKCEoXCJGaXJlYmFzZUVycm9yXCI9PT0oZT1uPXQuc2VudCgpKS5uYW1lP2UuY29kZT09PURyLkZBSUxFRF9QUkVDT05ESVRJT058fGUuY29kZT09PURyLlVOSU1QTEVNRU5URUQ6IShcInVuZGVmaW5lZFwiIT10eXBlb2YgRE9NRXhjZXB0aW9uJiZlIGluc3RhbmNlb2YgRE9NRXhjZXB0aW9uKXx8MjI9PT1lLmNvZGV8fDIwPT09ZS5jb2RlfHwxMT09PWUuY29kZSkpdGhyb3cgbjtyZXR1cm4gY29uc29sZS53YXJuKFwiRXJyb3IgZW5hYmxpbmcgb2ZmbGluZSBwZXJzaXN0ZW5jZS4gRmFsbGluZyBiYWNrIHRvIHBlcnNpc3RlbmNlIGRpc2FibGVkOiBcIituKSxzLnJlamVjdChuKSxbMyw0XTtjYXNlIDQ6cmV0dXJuWzJdfXZhciBlfSl9KX0pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gcy5wcm9taXNlfSl9ZnVuY3Rpb24gZ3AodCl7aWYodC5faW5pdGlhbGl6ZWR8fHQuX3Rlcm1pbmF0ZWQpdGhyb3cgbmV3IEFyKERyLkZBSUxFRF9QUkVDT05ESVRJT04sXCJGaXJlc3RvcmUgaGFzIGFscmVhZHkgYmVlbiBzdGFydGVkIGFuZCBwZXJzaXN0ZW5jZSBjYW4gbm8gbG9uZ2VyIGJlIGVuYWJsZWQuIFlvdSBjYW4gb25seSBlbmFibGUgcGVyc2lzdGVuY2UgYmVmb3JlIGNhbGxpbmcgYW55IG90aGVyIG1ldGhvZHMgb24gYSBGaXJlc3RvcmUgb2JqZWN0LlwiKX12YXIgbXA9KEFwLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9pbnRlcm5hbFBhdGguaXNFcXVhbCh0Ll9pbnRlcm5hbFBhdGgpfSxBcCksdnA9KERwLmZyb21CYXNlNjRTdHJpbmc9ZnVuY3Rpb24odCl7dHJ5e3JldHVybiBuZXcgRHAobmkuZnJvbUJhc2U2NFN0cmluZyh0KSl9Y2F0Y2godCl7dGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJGYWlsZWQgdG8gY29uc3RydWN0IGRhdGEgZnJvbSBCYXNlNjQgc3RyaW5nOiBcIit0KX19LERwLmZyb21VaW50OEFycmF5PWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgRHAobmkuZnJvbVVpbnQ4QXJyYXkodCkpfSxEcC5wcm90b3R5cGUudG9CYXNlNjQ9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYnl0ZVN0cmluZy50b0Jhc2U2NCgpfSxEcC5wcm90b3R5cGUudG9VaW50OEFycmF5PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2J5dGVTdHJpbmcudG9VaW50OEFycmF5KCl9LERwLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbigpe3JldHVyblwiQnl0ZXMoYmFzZTY0OiBcIit0aGlzLnRvQmFzZTY0KCkrXCIpXCJ9LERwLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9ieXRlU3RyaW5nLmlzRXF1YWwodC5fYnl0ZVN0cmluZyl9LERwKSxicD1mdW5jdGlvbih0KXt0aGlzLl9tZXRob2ROYW1lPXR9LHdwPShPYmplY3QuZGVmaW5lUHJvcGVydHkoTnAucHJvdG90eXBlLFwibGF0aXR1ZGVcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2xhdH0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoTnAucHJvdG90eXBlLFwibG9uZ2l0dWRlXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9sb25nfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE5wLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9sYXQ9PT10Ll9sYXQmJnRoaXMuX2xvbmc9PT10Ll9sb25nfSxOcC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue2xhdGl0dWRlOnRoaXMuX2xhdCxsb25naXR1ZGU6dGhpcy5fbG9uZ319LE5wLnByb3RvdHlwZS5fY29tcGFyZVRvPWZ1bmN0aW9uKHQpe3JldHVybiBxcih0aGlzLl9sYXQsdC5fbGF0KXx8cXIodGhpcy5fbG9uZyx0Ll9sb25nKX0sTnApLElwPS9eX18uKl9fJC8sRXA9KFNwLnByb3RvdHlwZS50b011dGF0aW9uPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGwhPT10aGlzLmZpZWxkTWFzaz9uZXcgaHModCx0aGlzLmRhdGEsdGhpcy5maWVsZE1hc2ssZSx0aGlzLmZpZWxkVHJhbnNmb3Jtcyk6bmV3IGNzKHQsdGhpcy5kYXRhLGUsdGhpcy5maWVsZFRyYW5zZm9ybXMpfSxTcCksVHA9KF9wLnByb3RvdHlwZS50b011dGF0aW9uPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIG5ldyBocyh0LHRoaXMuZGF0YSx0aGlzLmZpZWxkTWFzayxlLHRoaXMuZmllbGRUcmFuc2Zvcm1zKX0sX3ApO2Z1bmN0aW9uIF9wKHQsZSxuKXt0aGlzLmRhdGE9dCx0aGlzLmZpZWxkTWFzaz1lLHRoaXMuZmllbGRUcmFuc2Zvcm1zPW59ZnVuY3Rpb24gU3AodCxlLG4pe3RoaXMuZGF0YT10LHRoaXMuZmllbGRNYXNrPWUsdGhpcy5maWVsZFRyYW5zZm9ybXM9bn1mdW5jdGlvbiBOcCh0LGUpe2lmKCFpc0Zpbml0ZSh0KXx8dDwtOTB8fDkwPHQpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJMYXRpdHVkZSBtdXN0IGJlIGEgbnVtYmVyIGJldHdlZW4gLTkwIGFuZCA5MCwgYnV0IHdhczogXCIrdCk7aWYoIWlzRmluaXRlKGUpfHxlPC0xODB8fDE4MDxlKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiTG9uZ2l0dWRlIG11c3QgYmUgYSBudW1iZXIgYmV0d2VlbiAtMTgwIGFuZCAxODAsIGJ1dCB3YXM6IFwiK2UpO3RoaXMuX2xhdD10LHRoaXMuX2xvbmc9ZX1mdW5jdGlvbiBEcCh0KXt0aGlzLl9ieXRlU3RyaW5nPXR9ZnVuY3Rpb24gQXAoKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07Zm9yKHZhciBuPTA7bjx0Lmxlbmd0aDsrK24paWYoMD09PXRbbl0ubGVuZ3RoKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiSW52YWxpZCBmaWVsZCBuYW1lIGF0IGFyZ3VtZW50ICQoaSArIDEpLiBGaWVsZCBuYW1lcyBtdXN0IG5vdCBiZSBlbXB0eS5cIik7dGhpcy5faW50ZXJuYWxQYXRoPW5ldyB0aSh0KX1mdW5jdGlvbiBrcCh0KXtzd2l0Y2godCl7Y2FzZSAwOmNhc2UgMjpjYXNlIDE6cmV0dXJuIDE7Y2FzZSAzOmNhc2UgNDpyZXR1cm47ZGVmYXVsdDp0aHJvdyBNcigpfX12YXIgQ3A9KE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPcC5wcm90b3R5cGUsXCJwYXRoXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNldHRpbmdzLnBhdGh9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KE9wLnByb3RvdHlwZSxcIkRjXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNldHRpbmdzLkRjfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9wLnByb3RvdHlwZS5DYz1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IE9wKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSx0aGlzLnNldHRpbmdzKSx0KSx0aGlzLmRhdGFiYXNlSWQsdGhpcy5SLHRoaXMuaWdub3JlVW5kZWZpbmVkUHJvcGVydGllcyx0aGlzLmZpZWxkVHJhbnNmb3Jtcyx0aGlzLmZpZWxkTWFzayl9LE9wLnByb3RvdHlwZS5OYz1mdW5jdGlvbih0KXt2YXIgZT1udWxsPT09KGU9dGhpcy5wYXRoKXx8dm9pZCAwPT09ZT92b2lkIDA6ZS5jaGlsZCh0KSxlPXRoaXMuQ2Moe3BhdGg6ZSx4YzohMX0pO3JldHVybiBlLkZjKHQpLGV9LE9wLnByb3RvdHlwZS5rYz1mdW5jdGlvbih0KXt2YXIgZSx0PW51bGw9PT0oZT10aGlzLnBhdGgpfHx2b2lkIDA9PT1lP3ZvaWQgMDplLmNoaWxkKHQpLHQ9dGhpcy5DYyh7cGF0aDp0LHhjOiExfSk7cmV0dXJuIHQuU2MoKSx0fSxPcC5wcm90b3R5cGUuT2M9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuQ2Moe3BhdGg6dm9pZCAwLHhjOiEwfSl9LE9wLnByb3RvdHlwZS4kYz1mdW5jdGlvbih0KXtyZXR1cm4gdXkodCx0aGlzLnNldHRpbmdzLm1ldGhvZE5hbWUsdGhpcy5zZXR0aW5ncy5NY3x8ITEsdGhpcy5wYXRoLHRoaXMuc2V0dGluZ3MuTGMpfSxPcC5wcm90b3R5cGUuY29udGFpbnM9ZnVuY3Rpb24oZSl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuZmllbGRNYXNrLmZpbmQoZnVuY3Rpb24odCl7cmV0dXJuIGUuaXNQcmVmaXhPZih0KX0pfHx2b2lkIDAhPT10aGlzLmZpZWxkVHJhbnNmb3Jtcy5maW5kKGZ1bmN0aW9uKHQpe3JldHVybiBlLmlzUHJlZml4T2YodC5maWVsZCl9KX0sT3AucHJvdG90eXBlLlNjPWZ1bmN0aW9uKCl7aWYodGhpcy5wYXRoKWZvcih2YXIgdD0wO3Q8dGhpcy5wYXRoLmxlbmd0aDt0KyspdGhpcy5GYyh0aGlzLnBhdGguZ2V0KHQpKX0sT3AucHJvdG90eXBlLkZjPWZ1bmN0aW9uKHQpe2lmKDA9PT10Lmxlbmd0aCl0aHJvdyB0aGlzLiRjKFwiRG9jdW1lbnQgZmllbGRzIG11c3Qgbm90IGJlIGVtcHR5XCIpO2lmKGtwKHRoaXMuRGMpJiZJcC50ZXN0KHQpKXRocm93IHRoaXMuJGMoJ0RvY3VtZW50IGZpZWxkcyBjYW5ub3QgYmVnaW4gYW5kIGVuZCB3aXRoIFwiX19cIicpfSxPcCksUnA9KHhwLnByb3RvdHlwZS5CYz1mdW5jdGlvbih0LGUsbixyKXtyZXR1cm4gdm9pZCAwPT09ciYmKHI9ITEpLG5ldyBDcCh7RGM6dCxtZXRob2ROYW1lOmUsTGM6bixwYXRoOnRpLmVtcHR5UGF0aCgpLHhjOiExLE1jOnJ9LHRoaXMuZGF0YWJhc2VJZCx0aGlzLlIsdGhpcy5pZ25vcmVVbmRlZmluZWRQcm9wZXJ0aWVzKX0seHApO2Z1bmN0aW9uIHhwKHQsZSxuKXt0aGlzLmRhdGFiYXNlSWQ9dCx0aGlzLmlnbm9yZVVuZGVmaW5lZFByb3BlcnRpZXM9ZSx0aGlzLlI9bnx8bGwodCl9ZnVuY3Rpb24gT3AodCxlLG4scixpLG8pe3RoaXMuc2V0dGluZ3M9dCx0aGlzLmRhdGFiYXNlSWQ9ZSx0aGlzLlI9bix0aGlzLmlnbm9yZVVuZGVmaW5lZFByb3BlcnRpZXM9cix2b2lkIDA9PT1pJiZ0aGlzLlNjKCksdGhpcy5maWVsZFRyYW5zZm9ybXM9aXx8W10sdGhpcy5maWVsZE1hc2s9b3x8W119ZnVuY3Rpb24gTHAodCl7dmFyIGU9dC5fZnJlZXplU2V0dGluZ3MoKSxuPWxsKHQuX2RhdGFiYXNlSWQpO3JldHVybiBuZXcgUnAodC5fZGF0YWJhc2VJZCwhIWUuaWdub3JlVW5kZWZpbmVkUHJvcGVydGllcyxuKX1mdW5jdGlvbiBQcCh0LGUsbixyLGksbyl7dm9pZCAwPT09byYmKG89e30pO3ZhciBzPXQuQmMoby5tZXJnZXx8by5tZXJnZUZpZWxkcz8yOjAsZSxuLGkpO2l5KFwiRGF0YSBtdXN0IGJlIGFuIG9iamVjdCwgYnV0IGl0IHdhczpcIixzLHIpO3ZhciBhLHUscj1ueShyLHMpO2lmKG8ubWVyZ2UpYT1uZXcgZWkocy5maWVsZE1hc2spLHU9cy5maWVsZFRyYW5zZm9ybXM7ZWxzZSBpZihvLm1lcmdlRmllbGRzKXtmb3IodmFyIGM9W10saD0wLGw9by5tZXJnZUZpZWxkcztoPGwubGVuZ3RoO2grKyl7dmFyIGY9b3koZSxsW2hdLG4pO2lmKCFzLmNvbnRhaW5zKGYpKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiRmllbGQgJ1wiK2YrXCInIGlzIHNwZWNpZmllZCBpbiB5b3VyIGZpZWxkIG1hc2sgYnV0IG1pc3NpbmcgZnJvbSB5b3VyIGlucHV0IGRhdGEuXCIpO2N5KGMsZil8fGMucHVzaChmKX1hPW5ldyBlaShjKSx1PXMuZmllbGRUcmFuc2Zvcm1zLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gYS5jb3ZlcnModC5maWVsZCl9KX1lbHNlIGE9bnVsbCx1PXMuZmllbGRUcmFuc2Zvcm1zO3JldHVybiBuZXcgRXAobmV3IFJpKHIpLGEsdSl9dmFyIE1wLEZwPShuKFZwLE1wPWJwKSxWcC5wcm90b3R5cGUuX3RvRmllbGRUcmFuc2Zvcm09ZnVuY3Rpb24odCl7aWYoMiE9PXQuRGMpdGhyb3cgMT09PXQuRGM/dC4kYyh0aGlzLl9tZXRob2ROYW1lK1wiKCkgY2FuIG9ubHkgYXBwZWFyIGF0IHRoZSB0b3AgbGV2ZWwgb2YgeW91ciB1cGRhdGUgZGF0YVwiKTp0LiRjKHRoaXMuX21ldGhvZE5hbWUrXCIoKSBjYW5ub3QgYmUgdXNlZCB3aXRoIHNldCgpIHVubGVzcyB5b3UgcGFzcyB7bWVyZ2U6dHJ1ZX1cIik7cmV0dXJuIHQuZmllbGRNYXNrLnB1c2godC5wYXRoKSxudWxsfSxWcC5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIFZwfSxWcCk7ZnVuY3Rpb24gVnAoKXtyZXR1cm4gbnVsbCE9PU1wJiZNcC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9ZnVuY3Rpb24gVXAodCxlLG4pe3JldHVybiBuZXcgQ3Aoe0RjOjMsTGM6ZS5zZXR0aW5ncy5MYyxtZXRob2ROYW1lOnQuX21ldGhvZE5hbWUseGM6bn0sZS5kYXRhYmFzZUlkLGUuUixlLmlnbm9yZVVuZGVmaW5lZFByb3BlcnRpZXMpfXZhciBxcCxCcCxqcCxLcCxHcD0obihKcCxLcD1icCksSnAucHJvdG90eXBlLl90b0ZpZWxkVHJhbnNmb3JtPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgdHModC5wYXRoLG5ldyBVbyl9LEpwLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgSnB9LEpwKSxRcD0obihYcCxqcD1icCksWHAucHJvdG90eXBlLl90b0ZpZWxkVHJhbnNmb3JtPWZ1bmN0aW9uKHQpe3ZhciBlPVVwKHRoaXMsdCwhMCksbj10aGlzLnFjLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZXkodCxlKX0pLG49bmV3IHFvKG4pO3JldHVybiBuZXcgdHModC5wYXRoLG4pfSxYcC5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcz09PXR9LFhwKSx6cD0obihZcCxCcD1icCksWXAucHJvdG90eXBlLl90b0ZpZWxkVHJhbnNmb3JtPWZ1bmN0aW9uKHQpe3ZhciBlPVVwKHRoaXMsdCwhMCksbj10aGlzLnFjLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gZXkodCxlKX0pLG49bmV3IFFvKG4pO3JldHVybiBuZXcgdHModC5wYXRoLG4pfSxZcC5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcz09PXR9LFlwKSxIcD0obihXcCxxcD1icCksV3AucHJvdG90eXBlLl90b0ZpZWxkVHJhbnNmb3JtPWZ1bmN0aW9uKHQpe3ZhciBlPW5ldyBZbyh0LlIsUG8odC5SLHRoaXMuVWMpKTtyZXR1cm4gbmV3IHRzKHQucGF0aCxlKX0sV3AucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXM9PT10fSxXcCk7ZnVuY3Rpb24gV3AodCxlKXt2YXIgbj10aGlzO3JldHVybihuPXFwLmNhbGwodGhpcyx0KXx8dGhpcykuVWM9ZSxufWZ1bmN0aW9uIFlwKHQsZSl7dmFyIG49dGhpcztyZXR1cm4obj1CcC5jYWxsKHRoaXMsdCl8fHRoaXMpLnFjPWUsbn1mdW5jdGlvbiBYcCh0LGUpe3ZhciBuPXRoaXM7cmV0dXJuKG49anAuY2FsbCh0aGlzLHQpfHx0aGlzKS5xYz1lLG59ZnVuY3Rpb24gSnAoKXtyZXR1cm4gbnVsbCE9PUtwJiZLcC5hcHBseSh0aGlzLGFyZ3VtZW50cyl8fHRoaXN9ZnVuY3Rpb24gJHAodCxyLGksZSl7dmFyIG89dC5CYygxLHIsaSk7aXkoXCJEYXRhIG11c3QgYmUgYW4gb2JqZWN0LCBidXQgaXQgd2FzOlwiLG8sZSk7dmFyIHM9W10sYT1SaS5lbXB0eSgpO1dyKGUsZnVuY3Rpb24odCxlKXt2YXIgbj1heShyLHQsaSk7ZT1tKGUpO3Q9by5rYyhuKTtlIGluc3RhbmNlb2YgRnA/cy5wdXNoKG4pOm51bGwhPSh0PWV5KGUsdCkpJiYocy5wdXNoKG4pLGEuc2V0KG4sdCkpfSk7ZT1uZXcgZWkocyk7cmV0dXJuIG5ldyBUcChhLGUsby5maWVsZFRyYW5zZm9ybXMpfWZ1bmN0aW9uIFpwKHQsZSxuLHIsaSxvKXt2YXIgcz10LkJjKDEsZSxuKSxhPVtveShlLHIsbildLHU9W2ldO2lmKG8ubGVuZ3RoJTIhPTApdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJGdW5jdGlvbiBcIitlK1wiKCkgbmVlZHMgdG8gYmUgY2FsbGVkIHdpdGggYW4gZXZlbiBudW1iZXIgb2YgYXJndW1lbnRzIHRoYXQgYWx0ZXJuYXRlIGJldHdlZW4gZmllbGQgbmFtZXMgYW5kIHZhbHVlcy5cIik7Zm9yKHZhciBjPTA7YzxvLmxlbmd0aDtjKz0yKWEucHVzaChveShlLG9bY10pKSx1LnB1c2gob1tjKzFdKTtmb3IodmFyIGgsbCxmLGQ9W10scD1SaS5lbXB0eSgpLHk9YS5sZW5ndGgtMTswPD15Oy0teSljeShkLGFbeV0pfHwoaD1hW3ldLGw9bShsPXVbeV0pLGY9cy5rYyhoKSxsIGluc3RhbmNlb2YgRnA/ZC5wdXNoKGgpOm51bGwhPShmPWV5KGwsZikpJiYoZC5wdXNoKGgpLHAuc2V0KGgsZikpKTtpPW5ldyBlaShkKTtyZXR1cm4gbmV3IFRwKHAsaSxzLmZpZWxkVHJhbnNmb3Jtcyl9ZnVuY3Rpb24gdHkodCxlLG4scil7cmV0dXJuIHZvaWQgMD09PXImJihyPSExKSxleShuLHQuQmMocj80OjMsZSkpfWZ1bmN0aW9uIGV5KHMsdCl7aWYocnkocz1tKHMpKSlyZXR1cm4gaXkoXCJVbnN1cHBvcnRlZCBmaWVsZCB2YWx1ZTpcIix0LHMpLG55KHMsdCk7aWYocyBpbnN0YW5jZW9mIGJwKXJldHVybiBmdW5jdGlvbih0LGUpe2lmKCFrcChlLkRjKSl0aHJvdyBlLiRjKHQuX21ldGhvZE5hbWUrXCIoKSBjYW4gb25seSBiZSB1c2VkIHdpdGggdXBkYXRlKCkgYW5kIHNldCgpXCIpO2lmKCFlLnBhdGgpdGhyb3cgZS4kYyh0Ll9tZXRob2ROYW1lK1wiKCkgaXMgbm90IGN1cnJlbnRseSBzdXBwb3J0ZWQgaW5zaWRlIGFycmF5c1wiKTt0PXQuX3RvRmllbGRUcmFuc2Zvcm0oZSk7dCYmZS5maWVsZFRyYW5zZm9ybXMucHVzaCh0KX0ocyx0KSxudWxsO2lmKHZvaWQgMD09PXMmJnQuaWdub3JlVW5kZWZpbmVkUHJvcGVydGllcylyZXR1cm4gbnVsbDtpZih0LnBhdGgmJnQuZmllbGRNYXNrLnB1c2godC5wYXRoKSxzIGluc3RhbmNlb2YgQXJyYXkpe2lmKHQuc2V0dGluZ3MueGMmJjQhPT10LkRjKXRocm93IHQuJGMoXCJOZXN0ZWQgYXJyYXlzIGFyZSBub3Qgc3VwcG9ydGVkXCIpO3JldHVybiBmdW5jdGlvbih0KXtmb3IodmFyIGU9W10sbj0wLHI9MCxpPXM7cjxpLmxlbmd0aDtyKyspe3ZhciBvPWV5KGlbcl0sdC5PYyhuKSk7bnVsbD09byYmKG89e251bGxWYWx1ZTpcIk5VTExfVkFMVUVcIn0pLGUucHVzaChvKSxuKyt9cmV0dXJue2FycmF5VmFsdWU6e3ZhbHVlczplfX19KHQpfXJldHVybiBmdW5jdGlvbih0LGUpe2lmKG51bGw9PT0odD1tKHQpKSlyZXR1cm57bnVsbFZhbHVlOlwiTlVMTF9WQUxVRVwifTtpZihcIm51bWJlclwiPT10eXBlb2YgdClyZXR1cm4gUG8oZS5SLHQpO2lmKFwiYm9vbGVhblwiPT10eXBlb2YgdClyZXR1cm57Ym9vbGVhblZhbHVlOnR9O2lmKFwic3RyaW5nXCI9PXR5cGVvZiB0KXJldHVybntzdHJpbmdWYWx1ZTp0fTtpZih0IGluc3RhbmNlb2YgRGF0ZSl7dmFyIG49S3IuZnJvbURhdGUodCk7cmV0dXJue3RpbWVzdGFtcFZhbHVlOm9hKGUuUixuKX19aWYodCBpbnN0YW5jZW9mIEtyKXJldHVybiBuPW5ldyBLcih0LnNlY29uZHMsMWUzKk1hdGguZmxvb3IodC5uYW5vc2Vjb25kcy8xZTMpKSx7dGltZXN0YW1wVmFsdWU6b2EoZS5SLG4pfTtpZih0IGluc3RhbmNlb2Ygd3ApcmV0dXJue2dlb1BvaW50VmFsdWU6e2xhdGl0dWRlOnQubGF0aXR1ZGUsbG9uZ2l0dWRlOnQubG9uZ2l0dWRlfX07aWYodCBpbnN0YW5jZW9mIHZwKXJldHVybntieXRlc1ZhbHVlOnNhKGUuUix0Ll9ieXRlU3RyaW5nKX07aWYodCBpbnN0YW5jZW9mIEhkKXt2YXIgbj1lLmRhdGFiYXNlSWQscj10LmZpcmVzdG9yZS5fZGF0YWJhc2VJZDtpZighci5pc0VxdWFsKG4pKXRocm93IGUuJGMoXCJEb2N1bWVudCByZWZlcmVuY2UgaXMgZm9yIGRhdGFiYXNlIFwiK3IucHJvamVjdElkK1wiL1wiK3IuZGF0YWJhc2UrXCIgYnV0IHNob3VsZCBiZSBmb3IgZGF0YWJhc2UgXCIrbi5wcm9qZWN0SWQrXCIvXCIrbi5kYXRhYmFzZSk7cmV0dXJue3JlZmVyZW5jZVZhbHVlOnVhKHQuZmlyZXN0b3JlLl9kYXRhYmFzZUlkfHxlLmRhdGFiYXNlSWQsdC5fa2V5LnBhdGgpfX10aHJvdyBlLiRjKFwiVW5zdXBwb3J0ZWQgZmllbGQgdmFsdWU6IFwiK0JkKHQpKX0ocyx0KX1mdW5jdGlvbiBueSh0LG4pe3ZhciByPXt9O3JldHVybiBZcih0KT9uLnBhdGgmJjA8bi5wYXRoLmxlbmd0aCYmbi5maWVsZE1hc2sucHVzaChuLnBhdGgpOldyKHQsZnVuY3Rpb24odCxlKXtlPWV5KGUsbi5OYyh0KSk7bnVsbCE9ZSYmKHJbdF09ZSl9KSx7bWFwVmFsdWU6e2ZpZWxkczpyfX19ZnVuY3Rpb24gcnkodCl7cmV0dXJuIShcIm9iamVjdFwiIT10eXBlb2YgdHx8bnVsbD09PXR8fHQgaW5zdGFuY2VvZiBBcnJheXx8dCBpbnN0YW5jZW9mIERhdGV8fHQgaW5zdGFuY2VvZiBLcnx8dCBpbnN0YW5jZW9mIHdwfHx0IGluc3RhbmNlb2YgdnB8fHQgaW5zdGFuY2VvZiBIZHx8dCBpbnN0YW5jZW9mIGJwKX1mdW5jdGlvbiBpeSh0LGUsbil7aWYoIXJ5KG4pfHwoXCJvYmplY3RcIiE9dHlwZW9mKHI9bil8fG51bGw9PT1yfHxPYmplY3QuZ2V0UHJvdG90eXBlT2YocikhPT1PYmplY3QucHJvdG90eXBlJiZudWxsIT09T2JqZWN0LmdldFByb3RvdHlwZU9mKHIpKSl7bj1CZChuKTt0aHJvd1wiYW4gb2JqZWN0XCI9PT1uP2UuJGModCtcIiBhIGN1c3RvbSBvYmplY3RcIik6ZS4kYyh0K1wiIFwiK24pfXZhciByfWZ1bmN0aW9uIG95KHQsZSxuKXtpZigoZT1tKGUpKWluc3RhbmNlb2YgbXApcmV0dXJuIGUuX2ludGVybmFsUGF0aDtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlyZXR1cm4gYXkodCxlKTt0aHJvdyB1eShcIkZpZWxkIHBhdGggYXJndW1lbnRzIG11c3QgYmUgb2YgdHlwZSBzdHJpbmcgb3IgRmllbGRQYXRoLlwiLHQsITEsdm9pZCAwLG4pfXZhciBzeT1uZXcgUmVnRXhwKFwiW35cXFxcKi9cXFxcW1xcXFxdXVwiKTtmdW5jdGlvbiBheShlLG4scil7aWYoMDw9bi5zZWFyY2goc3kpKXRocm93IHV5KFwiSW52YWxpZCBmaWVsZCBwYXRoIChcIituK1wiKS4gUGF0aHMgbXVzdCBub3QgY29udGFpbiAnficsICcqJywgJy8nLCAnWycsIG9yICddJ1wiLGUsITEsdm9pZCAwLHIpO3RyeXtyZXR1cm4obmV3KG1wLmJpbmQuYXBwbHkobXAscyhbdm9pZCAwXSxuLnNwbGl0KFwiLlwiKSkpKSkuX2ludGVybmFsUGF0aH1jYXRjaCh0KXt0aHJvdyB1eShcIkludmFsaWQgZmllbGQgcGF0aCAoXCIrbitcIikuIFBhdGhzIG11c3Qgbm90IGJlIGVtcHR5LCBiZWdpbiB3aXRoICcuJywgZW5kIHdpdGggJy4nLCBvciBjb250YWluICcuLidcIixlLCExLHZvaWQgMCxyKX19ZnVuY3Rpb24gdXkodCxlLG4scixpKXt2YXIgbz1yJiYhci5pc0VtcHR5KCkscz12b2lkIDAhPT1pLGU9XCJGdW5jdGlvbiBcIitlK1wiKCkgY2FsbGVkIHdpdGggaW52YWxpZCBkYXRhXCI7biYmKGUrPVwiICh2aWEgYHRvRmlyZXN0b3JlKClgKVwiKTtuPVwiXCI7cmV0dXJuKG98fHMpJiYobis9XCIgKGZvdW5kXCIsbyYmKG4rPVwiIGluIGZpZWxkIFwiK3IpLHMmJihuKz1cIiBpbiBkb2N1bWVudCBcIitpKSxuKz1cIilcIiksbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsKGUrPVwiLiBcIikrdCtuKX1mdW5jdGlvbiBjeSh0LGUpe3JldHVybiB0LnNvbWUoZnVuY3Rpb24odCl7cmV0dXJuIHQuaXNFcXVhbChlKX0pfXZhciBoeSxseT0oT2JqZWN0LmRlZmluZVByb3BlcnR5KHB5LnByb3RvdHlwZSxcImlkXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9rZXkucGF0aC5sYXN0U2VnbWVudCgpfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShweS5wcm90b3R5cGUsXCJyZWZcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBIZCh0aGlzLl9maXJlc3RvcmUsdGhpcy5fY29udmVydGVyLHRoaXMuX2tleSl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSkscHkucHJvdG90eXBlLmV4aXN0cz1mdW5jdGlvbigpe3JldHVybiBudWxsIT09dGhpcy5fZG9jdW1lbnR9LHB5LnByb3RvdHlwZS5kYXRhPWZ1bmN0aW9uKCl7aWYodGhpcy5fZG9jdW1lbnQpe2lmKHRoaXMuX2NvbnZlcnRlcil7dmFyIHQ9bmV3IGZ5KHRoaXMuX2ZpcmVzdG9yZSx0aGlzLl91c2VyRGF0YVdyaXRlcix0aGlzLl9rZXksdGhpcy5fZG9jdW1lbnQsbnVsbCk7cmV0dXJuIHRoaXMuX2NvbnZlcnRlci5mcm9tRmlyZXN0b3JlKHQpfXJldHVybiB0aGlzLl91c2VyRGF0YVdyaXRlci5jb252ZXJ0VmFsdWUodGhpcy5fZG9jdW1lbnQuZGF0YS50b1Byb3RvKCkpfX0scHkucHJvdG90eXBlLmdldD1mdW5jdGlvbih0KXtpZih0aGlzLl9kb2N1bWVudCl7dD10aGlzLl9kb2N1bWVudC5kYXRhLmZpZWxkKHl5KFwiRG9jdW1lbnRTbmFwc2hvdC5nZXRcIix0KSk7aWYobnVsbCE9PXQpcmV0dXJuIHRoaXMuX3VzZXJEYXRhV3JpdGVyLmNvbnZlcnRWYWx1ZSh0KX19LHB5KSxmeT0obihkeSxoeT1seSksZHkucHJvdG90eXBlLmRhdGE9ZnVuY3Rpb24oKXtyZXR1cm4gaHkucHJvdG90eXBlLmRhdGEuY2FsbCh0aGlzKX0sZHkpO2Z1bmN0aW9uIGR5KCl7cmV0dXJuIG51bGwhPT1oeSYmaHkuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfWZ1bmN0aW9uIHB5KHQsZSxuLHIsaSl7dGhpcy5fZmlyZXN0b3JlPXQsdGhpcy5fdXNlckRhdGFXcml0ZXI9ZSx0aGlzLl9rZXk9bix0aGlzLl9kb2N1bWVudD1yLHRoaXMuX2NvbnZlcnRlcj1pfWZ1bmN0aW9uIHl5KHQsZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGU/YXkodCxlKTooZSBpbnN0YW5jZW9mIG1wP2U6ZS5fZGVsZWdhdGUpLl9pbnRlcm5hbFBhdGh9dmFyIGd5LG15LHZ5PShTeS5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5oYXNQZW5kaW5nV3JpdGVzPT09dC5oYXNQZW5kaW5nV3JpdGVzJiZ0aGlzLmZyb21DYWNoZT09PXQuZnJvbUNhY2hlfSxTeSksYnk9KG4oX3ksbXk9bHkpLF95LnByb3RvdHlwZS5leGlzdHM9ZnVuY3Rpb24oKXtyZXR1cm4gbXkucHJvdG90eXBlLmV4aXN0cy5jYWxsKHRoaXMpfSxfeS5wcm90b3R5cGUuZGF0YT1mdW5jdGlvbih0KXtpZih2b2lkIDA9PT10JiYodD17fSksdGhpcy5fZG9jdW1lbnQpe2lmKHRoaXMuX2NvbnZlcnRlcil7dmFyIGU9bmV3IHd5KHRoaXMuX2ZpcmVzdG9yZSx0aGlzLl91c2VyRGF0YVdyaXRlcix0aGlzLl9rZXksdGhpcy5fZG9jdW1lbnQsdGhpcy5tZXRhZGF0YSxudWxsKTtyZXR1cm4gdGhpcy5fY29udmVydGVyLmZyb21GaXJlc3RvcmUoZSx0KX1yZXR1cm4gdGhpcy5fdXNlckRhdGFXcml0ZXIuY29udmVydFZhbHVlKHRoaXMuX2RvY3VtZW50LmRhdGEudG9Qcm90bygpLHQuc2VydmVyVGltZXN0YW1wcyl9fSxfeS5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQsZSl7aWYodm9pZCAwPT09ZSYmKGU9e30pLHRoaXMuX2RvY3VtZW50KXt0PXRoaXMuX2RvY3VtZW50LmRhdGEuZmllbGQoeXkoXCJEb2N1bWVudFNuYXBzaG90LmdldFwiLHQpKTtpZihudWxsIT09dClyZXR1cm4gdGhpcy5fdXNlckRhdGFXcml0ZXIuY29udmVydFZhbHVlKHQsZS5zZXJ2ZXJUaW1lc3RhbXBzKX19LF95KSx3eT0obihUeSxneT1ieSksVHkucHJvdG90eXBlLmRhdGE9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQmJih0PXt9KSxneS5wcm90b3R5cGUuZGF0YS5jYWxsKHRoaXMsdCl9LFR5KSxJeT0oT2JqZWN0LmRlZmluZVByb3BlcnR5KEV5LnByb3RvdHlwZSxcImRvY3NcIix7Z2V0OmZ1bmN0aW9uKCl7dmFyIGU9W107cmV0dXJuIHRoaXMuZm9yRWFjaChmdW5jdGlvbih0KXtyZXR1cm4gZS5wdXNoKHQpfSksZX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoRXkucHJvdG90eXBlLFwic2l6ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fc25hcHNob3QuZG9jcy5zaXplfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShFeS5wcm90b3R5cGUsXCJlbXB0eVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gMD09PXRoaXMuc2l6ZX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxFeS5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbihlLG4pe3ZhciByPXRoaXM7dGhpcy5fc25hcHNob3QuZG9jcy5mb3JFYWNoKGZ1bmN0aW9uKHQpe2UuY2FsbChuLG5ldyB3eShyLl9maXJlc3RvcmUsci5fdXNlckRhdGFXcml0ZXIsdC5rZXksdCxuZXcgdnkoci5fc25hcHNob3QubXV0YXRlZEtleXMuaGFzKHQua2V5KSxyLl9zbmFwc2hvdC5mcm9tQ2FjaGUpLHIucXVlcnkuX2NvbnZlcnRlcikpfSl9LEV5LnByb3RvdHlwZS5kb2NDaGFuZ2VzPWZ1bmN0aW9uKHQpe3Q9ISEodD12b2lkIDA9PT10P3t9OnQpLmluY2x1ZGVNZXRhZGF0YUNoYW5nZXM7aWYodCYmdGhpcy5fc25hcHNob3QuZXhjbHVkZXNNZXRhZGF0YUNoYW5nZXMpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJUbyBpbmNsdWRlIG1ldGFkYXRhIGNoYW5nZXMgd2l0aCB5b3VyIGRvY3VtZW50IGNoYW5nZXMsIHlvdSBtdXN0IGFsc28gcGFzcyB7IGluY2x1ZGVNZXRhZGF0YUNoYW5nZXM6dHJ1ZSB9IHRvIG9uU25hcHNob3QoKS5cIik7cmV0dXJuIHRoaXMuX2NhY2hlZENoYW5nZXMmJnRoaXMuX2NhY2hlZENoYW5nZXNJbmNsdWRlTWV0YWRhdGFDaGFuZ2VzPT09dHx8KHRoaXMuX2NhY2hlZENoYW5nZXM9ZnVuY3Rpb24oaSxlKXtpZihpLl9zbmFwc2hvdC5vbGREb2NzLmlzRW1wdHkoKSl7dmFyIG49MDtyZXR1cm4gaS5fc25hcHNob3QuZG9jQ2hhbmdlcy5tYXAoZnVuY3Rpb24odCl7dmFyIGU9bmV3IHd5KGkuX2ZpcmVzdG9yZSxpLl91c2VyRGF0YVdyaXRlcix0LmRvYy5rZXksdC5kb2MsbmV3IHZ5KGkuX3NuYXBzaG90Lm11dGF0ZWRLZXlzLmhhcyh0LmRvYy5rZXkpLGkuX3NuYXBzaG90LmZyb21DYWNoZSksaS5xdWVyeS5fY29udmVydGVyKTtyZXR1cm4gdC5kb2Mse3R5cGU6XCJhZGRlZFwiLGRvYzplLG9sZEluZGV4Oi0xLG5ld0luZGV4Om4rK319KX12YXIgbz1pLl9zbmFwc2hvdC5vbGREb2NzO3JldHVybiBpLl9zbmFwc2hvdC5kb2NDaGFuZ2VzLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gZXx8MyE9PXQudHlwZX0pLm1hcChmdW5jdGlvbih0KXt2YXIgZT1uZXcgd3koaS5fZmlyZXN0b3JlLGkuX3VzZXJEYXRhV3JpdGVyLHQuZG9jLmtleSx0LmRvYyxuZXcgdnkoaS5fc25hcHNob3QubXV0YXRlZEtleXMuaGFzKHQuZG9jLmtleSksaS5fc25hcHNob3QuZnJvbUNhY2hlKSxpLnF1ZXJ5Ll9jb252ZXJ0ZXIpLG49LTEscj0tMTtyZXR1cm4gMCE9PXQudHlwZSYmKG49by5pbmRleE9mKHQuZG9jLmtleSksbz1vLmRlbGV0ZSh0LmRvYy5rZXkpKSwxIT09dC50eXBlJiYocj0obz1vLmFkZCh0LmRvYykpLmluZGV4T2YodC5kb2Mua2V5KSkse3R5cGU6ZnVuY3Rpb24odCl7c3dpdGNoKHQpe2Nhc2UgMDpyZXR1cm5cImFkZGVkXCI7Y2FzZSAyOmNhc2UgMzpyZXR1cm5cIm1vZGlmaWVkXCI7Y2FzZSAxOnJldHVyblwicmVtb3ZlZFwiO2RlZmF1bHQ6cmV0dXJuIE1yKCl9fSh0LnR5cGUpLGRvYzplLG9sZEluZGV4Om4sbmV3SW5kZXg6cn19KX0odGhpcyx0KSx0aGlzLl9jYWNoZWRDaGFuZ2VzSW5jbHVkZU1ldGFkYXRhQ2hhbmdlcz10KSx0aGlzLl9jYWNoZWRDaGFuZ2VzfSxFeSk7ZnVuY3Rpb24gRXkodCxlLG4scil7dGhpcy5fZmlyZXN0b3JlPXQsdGhpcy5fdXNlckRhdGFXcml0ZXI9ZSx0aGlzLl9zbmFwc2hvdD1yLHRoaXMubWV0YWRhdGE9bmV3IHZ5KHIuaGFzUGVuZGluZ1dyaXRlcyxyLmZyb21DYWNoZSksdGhpcy5xdWVyeT1ufWZ1bmN0aW9uIFR5KCl7cmV0dXJuIG51bGwhPT1neSYmZ3kuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfWZ1bmN0aW9uIF95KHQsZSxuLHIsaSxvKXt2YXIgcz10aGlzO3JldHVybihzPW15LmNhbGwodGhpcyx0LGUsbixyLG8pfHx0aGlzKS5fZmlyZXN0b3JlPXQscy5fZmlyZXN0b3JlSW1wbD10LHMubWV0YWRhdGE9aSxzfWZ1bmN0aW9uIFN5KHQsZSl7dGhpcy5oYXNQZW5kaW5nV3JpdGVzPXQsdGhpcy5mcm9tQ2FjaGU9ZX1mdW5jdGlvbiBOeSh0LGUpe3JldHVybiB0IGluc3RhbmNlb2YgYnkmJmUgaW5zdGFuY2VvZiBieT90Ll9maXJlc3RvcmU9PT1lLl9maXJlc3RvcmUmJnQuX2tleS5pc0VxdWFsKGUuX2tleSkmJihudWxsPT09dC5fZG9jdW1lbnQ/bnVsbD09PWUuX2RvY3VtZW50OnQuX2RvY3VtZW50LmlzRXF1YWwoZS5fZG9jdW1lbnQpKSYmdC5fY29udmVydGVyPT09ZS5fY29udmVydGVyOnQgaW5zdGFuY2VvZiBJeSYmZSBpbnN0YW5jZW9mIEl5JiZ0Ll9maXJlc3RvcmU9PT1lLl9maXJlc3RvcmUmJmlwKHQucXVlcnksZS5xdWVyeSkmJnQubWV0YWRhdGEuaXNFcXVhbChlLm1ldGFkYXRhKSYmdC5fc25hcHNob3QuaXNFcXVhbChlLl9zbmFwc2hvdCl9ZnVuY3Rpb24gRHkodCl7aWYoSW8odCkmJjA9PT10LmV4cGxpY2l0T3JkZXJCeS5sZW5ndGgpdGhyb3cgbmV3IEFyKERyLlVOSU1QTEVNRU5URUQsXCJsaW1pdFRvTGFzdCgpIHF1ZXJpZXMgcmVxdWlyZSBzcGVjaWZ5aW5nIGF0IGxlYXN0IG9uZSBvcmRlckJ5KCkgY2xhdXNlXCIpfVRlPWZ1bmN0aW9uKCl7fTtmdW5jdGlvbiBBeSh0KXtmb3IodmFyIGU9W10sbj0xO248YXJndW1lbnRzLmxlbmd0aDtuKyspZVtuLTFdPWFyZ3VtZW50c1tuXTtmb3IodmFyIHI9MCxpPWU7cjxpLmxlbmd0aDtyKyspdD1pW3JdLl9hcHBseSh0KTtyZXR1cm4gdH12YXIga3ksQ3ksUnkseHksT3ksTHk9KG4oS3ksT3k9VGUpLEt5LnByb3RvdHlwZS5fYXBwbHk9ZnVuY3Rpb24odCl7dmFyIGU9THAodC5maXJlc3RvcmUpLGU9ZnVuY3Rpb24odCxlLG4scixpLG8pe2lmKHIuaXNLZXlGaWVsZCgpKXtpZihcImFycmF5LWNvbnRhaW5zXCI9PT1pfHxcImFycmF5LWNvbnRhaW5zLWFueVwiPT09aSl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIkludmFsaWQgUXVlcnkuIFlvdSBjYW4ndCBwZXJmb3JtICdcIitpK1wiJyBxdWVyaWVzIG9uIEZpZWxkUGF0aC5kb2N1bWVudElkKCkuXCIpO2lmKFwiaW5cIj09PWl8fFwibm90LWluXCI9PT1pKXt6eShvLGkpO2Zvcih2YXIgcz1bXSxhPTAsdT1vO2E8dS5sZW5ndGg7YSsrKXt2YXIgYz11W2FdO3MucHVzaChReShuLHQsYykpfWg9e2FycmF5VmFsdWU6e3ZhbHVlczpzfX19ZWxzZSBoPVF5KG4sdCxvKX1lbHNlXCJpblwiIT09aSYmXCJub3QtaW5cIiE9PWkmJlwiYXJyYXktY29udGFpbnMtYW55XCIhPT1pfHx6eShvLGkpLGg9dHkoZSxcIndoZXJlXCIsbyxcImluXCI9PT1pfHxcIm5vdC1pblwiPT09aSk7dmFyIGg9QmkuY3JlYXRlKHIsaSxoKTtyZXR1cm4gZnVuY3Rpb24odCxlKXtpZihlLmcoKSl7dmFyIG49VG8odCk7aWYobnVsbCE9PW4mJiFuLmlzRXF1YWwoZS5maWVsZCkpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIHF1ZXJ5LiBBbGwgd2hlcmUgZmlsdGVycyB3aXRoIGFuIGluZXF1YWxpdHkgKDwsIDw9LCAhPSwgbm90LWluLCA+LCBvciA+PSkgbXVzdCBiZSBvbiB0aGUgc2FtZSBmaWVsZC4gQnV0IHlvdSBoYXZlIGluZXF1YWxpdHkgZmlsdGVycyBvbiAnXCIrbi50b1N0cmluZygpK1wiJyBhbmQgJ1wiK2UuZmllbGQudG9TdHJpbmcoKStcIidcIik7bj1Fbyh0KTtudWxsIT09biYmSHkoMCxlLmZpZWxkLG4pfXQ9ZnVuY3Rpb24odCxlKXtmb3IodmFyIG49MCxyPXQuZmlsdGVycztuPHIubGVuZ3RoO24rKyl7dmFyIGk9cltuXTtpZigwPD1lLmluZGV4T2YoaS5vcCkpcmV0dXJuIGkub3B9cmV0dXJuIG51bGx9KHQsZnVuY3Rpb24oKXtzd2l0Y2goZS5vcCl7Y2FzZVwiIT1cIjpyZXR1cm5bXCIhPVwiLFwibm90LWluXCJdO2Nhc2VcImFycmF5LWNvbnRhaW5zXCI6cmV0dXJuW1wiYXJyYXktY29udGFpbnNcIixcImFycmF5LWNvbnRhaW5zLWFueVwiLFwibm90LWluXCJdO2Nhc2VcImluXCI6cmV0dXJuW1wiYXJyYXktY29udGFpbnMtYW55XCIsXCJpblwiLFwibm90LWluXCJdO2Nhc2VcImFycmF5LWNvbnRhaW5zLWFueVwiOnJldHVybltcImFycmF5LWNvbnRhaW5zXCIsXCJhcnJheS1jb250YWlucy1hbnlcIixcImluXCIsXCJub3QtaW5cIl07Y2FzZVwibm90LWluXCI6cmV0dXJuW1wiYXJyYXktY29udGFpbnNcIixcImFycmF5LWNvbnRhaW5zLWFueVwiLFwiaW5cIixcIm5vdC1pblwiLFwiIT1cIl07ZGVmYXVsdDpyZXR1cm5bXX19KCkpO2lmKG51bGwhPT10KXRocm93IHQ9PT1lLm9wP25ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiSW52YWxpZCBxdWVyeS4gWW91IGNhbm5vdCB1c2UgbW9yZSB0aGFuIG9uZSAnXCIrZS5vcC50b1N0cmluZygpK1wiJyBmaWx0ZXIuXCIpOm5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiSW52YWxpZCBxdWVyeS4gWW91IGNhbm5vdCB1c2UgJ1wiK2Uub3AudG9TdHJpbmcoKStcIicgZmlsdGVycyB3aXRoICdcIit0LnRvU3RyaW5nKCkrXCInIGZpbHRlcnMuXCIpfSh0LGgpLGh9KHQuX3F1ZXJ5LGUsdC5maXJlc3RvcmUuX2RhdGFiYXNlSWQsdGhpcy5RYyx0aGlzLktjLHRoaXMuamMpO3JldHVybiBuZXcgV2QodC5maXJlc3RvcmUsdC5fY29udmVydGVyLCh0PXQuX3F1ZXJ5LGU9dC5maWx0ZXJzLmNvbmNhdChbZV0pLG5ldyBtbyh0LnBhdGgsdC5jb2xsZWN0aW9uR3JvdXAsdC5leHBsaWNpdE9yZGVyQnkuc2xpY2UoKSxlLHQubGltaXQsdC5saW1pdFR5cGUsdC5zdGFydEF0LHQuZW5kQXQpKSl9LEt5KSxQeT0obihqeSx4eT1UZSksankucHJvdG90eXBlLl9hcHBseT1mdW5jdGlvbih0KXt2YXIgZT1mdW5jdGlvbih0LGUsbil7aWYobnVsbCE9PXQuc3RhcnRBdCl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIkludmFsaWQgcXVlcnkuIFlvdSBtdXN0IG5vdCBjYWxsIHN0YXJ0QXQoKSBvciBzdGFydEFmdGVyKCkgYmVmb3JlIGNhbGxpbmcgb3JkZXJCeSgpLlwiKTtpZihudWxsIT09dC5lbmRBdCl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIkludmFsaWQgcXVlcnkuIFlvdSBtdXN0IG5vdCBjYWxsIGVuZEF0KCkgb3IgZW5kQmVmb3JlKCkgYmVmb3JlIGNhbGxpbmcgb3JkZXJCeSgpLlwiKTt2YXIgcj1uZXcgcG8oZSxuKTtyZXR1cm4gZT1yLG51bGwhPT1FbyhuPXQpfHxudWxsIT09KHQ9VG8obikpJiZIeSgwLHQsZS5maWVsZCkscn0odC5fcXVlcnksdGhpcy5RYyx0aGlzLldjKTtyZXR1cm4gbmV3IFdkKHQuZmlyZXN0b3JlLHQuX2NvbnZlcnRlciwodD10Ll9xdWVyeSxlPXQuZXhwbGljaXRPcmRlckJ5LmNvbmNhdChbZV0pLG5ldyBtbyh0LnBhdGgsdC5jb2xsZWN0aW9uR3JvdXAsZSx0LmZpbHRlcnMuc2xpY2UoKSx0LmxpbWl0LHQubGltaXRUeXBlLHQuc3RhcnRBdCx0LmVuZEF0KSkpfSxqeSksTXk9KG4oQnksUnk9VGUpLEJ5LnByb3RvdHlwZS5fYXBwbHk9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBXZCh0LmZpcmVzdG9yZSx0Ll9jb252ZXJ0ZXIsRG8odC5fcXVlcnksdGhpcy5HYyx0aGlzLnpjKSl9LEJ5KSxGeT0obihxeSxDeT1UZSkscXkucHJvdG90eXBlLl9hcHBseT1mdW5jdGlvbih0KXt2YXIgZT1HeSh0LHRoaXMudHlwZSx0aGlzLkhjLHRoaXMuSmMpO3JldHVybiBuZXcgV2QodC5maXJlc3RvcmUsdC5fY29udmVydGVyLCh0PXQuX3F1ZXJ5LGU9ZSxuZXcgbW8odC5wYXRoLHQuY29sbGVjdGlvbkdyb3VwLHQuZXhwbGljaXRPcmRlckJ5LnNsaWNlKCksdC5maWx0ZXJzLnNsaWNlKCksdC5saW1pdCx0LmxpbWl0VHlwZSxlLHQuZW5kQXQpKSl9LHF5KSxWeT0obihVeSxreT1UZSksVXkucHJvdG90eXBlLl9hcHBseT1mdW5jdGlvbih0KXt2YXIgZT1HeSh0LHRoaXMudHlwZSx0aGlzLkhjLHRoaXMuSmMpO3JldHVybiBuZXcgV2QodC5maXJlc3RvcmUsdC5fY29udmVydGVyLCh0PXQuX3F1ZXJ5LGU9ZSxuZXcgbW8odC5wYXRoLHQuY29sbGVjdGlvbkdyb3VwLHQuZXhwbGljaXRPcmRlckJ5LnNsaWNlKCksdC5maWx0ZXJzLnNsaWNlKCksdC5saW1pdCx0LmxpbWl0VHlwZSx0LnN0YXJ0QXQsZSkpKX0sVXkpO2Z1bmN0aW9uIFV5KHQsZSxuKXt2YXIgcj10aGlzO3JldHVybihyPWt5LmNhbGwodGhpcyl8fHRoaXMpLnR5cGU9dCxyLkhjPWUsci5KYz1uLHJ9ZnVuY3Rpb24gcXkodCxlLG4pe3ZhciByPXRoaXM7cmV0dXJuKHI9Q3kuY2FsbCh0aGlzKXx8dGhpcykudHlwZT10LHIuSGM9ZSxyLkpjPW4scn1mdW5jdGlvbiBCeSh0LGUsbil7dmFyIHI9dGhpcztyZXR1cm4ocj1SeS5jYWxsKHRoaXMpfHx0aGlzKS50eXBlPXQsci5HYz1lLHIuemM9bixyfWZ1bmN0aW9uIGp5KHQsZSl7dmFyIG49dGhpcztyZXR1cm4obj14eS5jYWxsKHRoaXMpfHx0aGlzKS5RYz10LG4uV2M9ZSxuLnR5cGU9XCJvcmRlckJ5XCIsbn1mdW5jdGlvbiBLeSh0LGUsbil7dmFyIHI9dGhpcztyZXR1cm4ocj1PeS5jYWxsKHRoaXMpfHx0aGlzKS5RYz10LHIuS2M9ZSxyLmpjPW4sci50eXBlPVwid2hlcmVcIixyfWZ1bmN0aW9uIEd5KHQsYyxlLG4pe2lmKGVbMF09bShlWzBdKSxlWzBdaW5zdGFuY2VvZiBseSlyZXR1cm4gZnVuY3Rpb24odCxlLG4scil7aWYoIW4pdGhyb3cgbmV3IEFyKERyLk5PVF9GT1VORCxcIkNhbid0IHVzZSBhIERvY3VtZW50U25hcHNob3QgdGhhdCBkb2Vzbid0IGV4aXN0IGZvciBcIitjK1wiKCkuXCIpO2Zvcih2YXIgaT1bXSxvPTAscz1Tbyh0KTtvPHMubGVuZ3RoO28rKyl7dmFyIGE9c1tvXTtpZihhLmZpZWxkLmlzS2V5RmllbGQoKSlpLnB1c2goU2koZSxuLmtleSkpO2Vsc2V7dmFyIHU9bi5kYXRhLmZpZWxkKGEuZmllbGQpO2lmKGZpKHUpKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULCdJbnZhbGlkIHF1ZXJ5LiBZb3UgYXJlIHRyeWluZyB0byBzdGFydCBvciBlbmQgYSBxdWVyeSB1c2luZyBhIGRvY3VtZW50IGZvciB3aGljaCB0aGUgZmllbGQgXCInK2EuZmllbGQrJ1wiIGlzIGFuIHVuY29tbWl0dGVkIHNlcnZlciB0aW1lc3RhbXAuIChTaW5jZSB0aGUgdmFsdWUgb2YgdGhpcyBmaWVsZCBpcyB1bmtub3duLCB5b3UgY2Fubm90IHN0YXJ0L2VuZCBhIHF1ZXJ5IHdpdGggaXQuKScpO2lmKG51bGw9PT11KXthPWEuZmllbGQuY2Fub25pY2FsU3RyaW5nKCk7dGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIHF1ZXJ5LiBZb3UgYXJlIHRyeWluZyB0byBzdGFydCBvciBlbmQgYSBxdWVyeSB1c2luZyBhIGRvY3VtZW50IGZvciB3aGljaCB0aGUgZmllbGQgJ1wiK2ErXCInICh1c2VkIGFzIHRoZSBvcmRlckJ5KSBkb2VzIG5vdCBleGlzdC5cIil9aS5wdXNoKHUpfX1yZXR1cm4gbmV3IGFvKGkscil9KHQuX3F1ZXJ5LHQuZmlyZXN0b3JlLl9kYXRhYmFzZUlkLGVbMF0uX2RvY3VtZW50LG4pO3ZhciByPUxwKHQuZmlyZXN0b3JlKTtyZXR1cm4gZnVuY3Rpb24odCxlLG4scixpLG8pe3ZhciBzPXQuZXhwbGljaXRPcmRlckJ5O2lmKGkubGVuZ3RoPnMubGVuZ3RoKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiVG9vIG1hbnkgYXJndW1lbnRzIHByb3ZpZGVkIHRvIFwiK3IrXCIoKS4gVGhlIG51bWJlciBvZiBhcmd1bWVudHMgbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdGhlIG51bWJlciBvZiBvcmRlckJ5KCkgY2xhdXNlc1wiKTtmb3IodmFyIGE9W10sdT0wO3U8aS5sZW5ndGg7dSsrKXt2YXIgYz1pW3VdO2lmKHNbdV0uZmllbGQuaXNLZXlGaWVsZCgpKXtpZihcInN0cmluZ1wiIT10eXBlb2YgYyl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIkludmFsaWQgcXVlcnkuIEV4cGVjdGVkIGEgc3RyaW5nIGZvciBkb2N1bWVudCBJRCBpbiBcIityK1wiKCksIGJ1dCBnb3QgYSBcIit0eXBlb2YgYyk7aWYoIV9vKHQpJiYtMSE9PWMuaW5kZXhPZihcIi9cIikpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIHF1ZXJ5LiBXaGVuIHF1ZXJ5aW5nIGEgY29sbGVjdGlvbiBhbmQgb3JkZXJpbmcgYnkgRmllbGRQYXRoLmRvY3VtZW50SWQoKSwgdGhlIHZhbHVlIHBhc3NlZCB0byBcIityK1wiKCkgbXVzdCBiZSBhIHBsYWluIGRvY3VtZW50IElELCBidXQgJ1wiK2MrXCInIGNvbnRhaW5zIGEgc2xhc2guXCIpO3ZhciBoPXQucGF0aC5jaGlsZCgkci5mcm9tU3RyaW5nKGMpKTtpZighbWkuaXNEb2N1bWVudEtleShoKSl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIkludmFsaWQgcXVlcnkuIFdoZW4gcXVlcnlpbmcgYSBjb2xsZWN0aW9uIGdyb3VwIGFuZCBvcmRlcmluZyBieSBGaWVsZFBhdGguZG9jdW1lbnRJZCgpLCB0aGUgdmFsdWUgcGFzc2VkIHRvIFwiK3IrXCIoKSBtdXN0IHJlc3VsdCBpbiBhIHZhbGlkIGRvY3VtZW50IHBhdGgsIGJ1dCAnXCIraCtcIicgaXMgbm90IGJlY2F1c2UgaXQgY29udGFpbnMgYW4gb2RkIG51bWJlciBvZiBzZWdtZW50cy5cIik7aD1uZXcgbWkoaCk7YS5wdXNoKFNpKGUsaCkpfWVsc2V7Yz10eShuLHIsYyk7YS5wdXNoKGMpfX1yZXR1cm4gbmV3IGFvKGEsbyl9KHQuX3F1ZXJ5LHQuZmlyZXN0b3JlLl9kYXRhYmFzZUlkLHIsYyxlLG4pfWZ1bmN0aW9uIFF5KHQsZSxuKXtpZihcInN0cmluZ1wiPT10eXBlb2Yobj1tKG4pKSl7aWYoXCJcIj09PW4pdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIHF1ZXJ5LiBXaGVuIHF1ZXJ5aW5nIHdpdGggRmllbGRQYXRoLmRvY3VtZW50SWQoKSwgeW91IG11c3QgcHJvdmlkZSBhIHZhbGlkIGRvY3VtZW50IElELCBidXQgaXQgd2FzIGFuIGVtcHR5IHN0cmluZy5cIik7aWYoIV9vKGUpJiYtMSE9PW4uaW5kZXhPZihcIi9cIikpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIHF1ZXJ5LiBXaGVuIHF1ZXJ5aW5nIGEgY29sbGVjdGlvbiBieSBGaWVsZFBhdGguZG9jdW1lbnRJZCgpLCB5b3UgbXVzdCBwcm92aWRlIGEgcGxhaW4gZG9jdW1lbnQgSUQsIGJ1dCAnXCIrbitcIicgY29udGFpbnMgYSAnLycgY2hhcmFjdGVyLlwiKTtlPWUucGF0aC5jaGlsZCgkci5mcm9tU3RyaW5nKG4pKTtpZighbWkuaXNEb2N1bWVudEtleShlKSl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIkludmFsaWQgcXVlcnkuIFdoZW4gcXVlcnlpbmcgYSBjb2xsZWN0aW9uIGdyb3VwIGJ5IEZpZWxkUGF0aC5kb2N1bWVudElkKCksIHRoZSB2YWx1ZSBwcm92aWRlZCBtdXN0IHJlc3VsdCBpbiBhIHZhbGlkIGRvY3VtZW50IHBhdGgsIGJ1dCAnXCIrZStcIicgaXMgbm90IGJlY2F1c2UgaXQgaGFzIGFuIG9kZCBudW1iZXIgb2Ygc2VnbWVudHMgKFwiK2UubGVuZ3RoK1wiKS5cIik7cmV0dXJuIFNpKHQsbmV3IG1pKGUpKX1pZihuIGluc3RhbmNlb2YgSGQpcmV0dXJuIFNpKHQsbi5fa2V5KTt0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIkludmFsaWQgcXVlcnkuIFdoZW4gcXVlcnlpbmcgd2l0aCBGaWVsZFBhdGguZG9jdW1lbnRJZCgpLCB5b3UgbXVzdCBwcm92aWRlIGEgdmFsaWQgc3RyaW5nIG9yIGEgRG9jdW1lbnRSZWZlcmVuY2UsIGJ1dCBpdCB3YXM6IFwiK0JkKG4pK1wiLlwiKX1mdW5jdGlvbiB6eSh0LGUpe2lmKCFBcnJheS5pc0FycmF5KHQpfHwwPT09dC5sZW5ndGgpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIFF1ZXJ5LiBBIG5vbi1lbXB0eSBhcnJheSBpcyByZXF1aXJlZCBmb3IgJ1wiK2UudG9TdHJpbmcoKStcIicgZmlsdGVycy5cIik7aWYoMTA8dC5sZW5ndGgpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIFF1ZXJ5LiAnXCIrZS50b1N0cmluZygpK1wiJyBmaWx0ZXJzIHN1cHBvcnQgYSBtYXhpbXVtIG9mIDEwIGVsZW1lbnRzIGluIHRoZSB2YWx1ZSBhcnJheS5cIil9ZnVuY3Rpb24gSHkodCxlLG4pe2lmKCFuLmlzRXF1YWwoZSkpdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIHF1ZXJ5LiBZb3UgaGF2ZSBhIHdoZXJlIGZpbHRlciB3aXRoIGFuIGluZXF1YWxpdHkgKDwsIDw9LCAhPSwgbm90LWluLCA+LCBvciA+PSkgb24gZmllbGQgJ1wiK2UudG9TdHJpbmcoKStcIicgYW5kIHNvIHlvdSBtdXN0IGFsc28gdXNlICdcIitlLnRvU3RyaW5nKCkrXCInIGFzIHlvdXIgZmlyc3QgYXJndW1lbnQgdG8gb3JkZXJCeSgpLCBidXQgeW91ciBmaXJzdCBvcmRlckJ5KCkgaXMgb24gZmllbGQgJ1wiK24udG9TdHJpbmcoKStcIicgaW5zdGVhZC5cIil9V3kucHJvdG90eXBlLmNvbnZlcnRWYWx1ZT1mdW5jdGlvbih0LGUpe3N3aXRjaCh2b2lkIDA9PT1lJiYoZT1cIm5vbmVcIiksYmkodCkpe2Nhc2UgMDpyZXR1cm4gbnVsbDtjYXNlIDE6cmV0dXJuIHQuYm9vbGVhblZhbHVlO2Nhc2UgMjpyZXR1cm4gaGkodC5pbnRlZ2VyVmFsdWV8fHQuZG91YmxlVmFsdWUpO2Nhc2UgMzpyZXR1cm4gdGhpcy5jb252ZXJ0VGltZXN0YW1wKHQudGltZXN0YW1wVmFsdWUpO2Nhc2UgNDpyZXR1cm4gdGhpcy5jb252ZXJ0U2VydmVyVGltZXN0YW1wKHQsZSk7Y2FzZSA1OnJldHVybiB0LnN0cmluZ1ZhbHVlO2Nhc2UgNjpyZXR1cm4gdGhpcy5jb252ZXJ0Qnl0ZXMobGkodC5ieXRlc1ZhbHVlKSk7Y2FzZSA3OnJldHVybiB0aGlzLmNvbnZlcnRSZWZlcmVuY2UodC5yZWZlcmVuY2VWYWx1ZSk7Y2FzZSA4OnJldHVybiB0aGlzLmNvbnZlcnRHZW9Qb2ludCh0Lmdlb1BvaW50VmFsdWUpO2Nhc2UgOTpyZXR1cm4gdGhpcy5jb252ZXJ0QXJyYXkodC5hcnJheVZhbHVlLGUpO2Nhc2UgMTA6cmV0dXJuIHRoaXMuY29udmVydE9iamVjdCh0Lm1hcFZhbHVlLGUpO2RlZmF1bHQ6dGhyb3cgTXIoKX19LFd5LnByb3RvdHlwZS5jb252ZXJ0T2JqZWN0PWZ1bmN0aW9uKHQsbil7dmFyIHI9dGhpcyxpPXt9O3JldHVybiBXcih0LmZpZWxkc3x8e30sZnVuY3Rpb24odCxlKXtpW3RdPXIuY29udmVydFZhbHVlKGUsbil9KSxpfSxXeS5wcm90b3R5cGUuY29udmVydEdlb1BvaW50PWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgd3AoaGkodC5sYXRpdHVkZSksaGkodC5sb25naXR1ZGUpKX0sV3kucHJvdG90eXBlLmNvbnZlcnRBcnJheT1mdW5jdGlvbih0LGUpe3ZhciBuPXRoaXM7cmV0dXJuKHQudmFsdWVzfHxbXSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybiBuLmNvbnZlcnRWYWx1ZSh0LGUpfSl9LFd5LnByb3RvdHlwZS5jb252ZXJ0U2VydmVyVGltZXN0YW1wPWZ1bmN0aW9uKHQsZSl7c3dpdGNoKGUpe2Nhc2VcInByZXZpb3VzXCI6dmFyIG49ZnVuY3Rpb24gdChlKXtlPWUubWFwVmFsdWUuZmllbGRzLl9fcHJldmlvdXNfdmFsdWVfXztyZXR1cm4gZmkoZSk/dChlKTplfSh0KTtyZXR1cm4gbnVsbD09bj9udWxsOnRoaXMuY29udmVydFZhbHVlKG4sZSk7Y2FzZVwiZXN0aW1hdGVcIjpyZXR1cm4gdGhpcy5jb252ZXJ0VGltZXN0YW1wKGRpKHQpKTtkZWZhdWx0OnJldHVybiBudWxsfX0sV3kucHJvdG90eXBlLmNvbnZlcnRUaW1lc3RhbXA9ZnVuY3Rpb24odCl7dD1jaSh0KTtyZXR1cm4gbmV3IEtyKHQuc2Vjb25kcyx0Lm5hbm9zKX0sV3kucHJvdG90eXBlLmNvbnZlcnREb2N1bWVudEtleT1mdW5jdGlvbih0LGUpe3ZhciBuPSRyLmZyb21TdHJpbmcodCk7RnIoa2EobikpO3Q9bmV3IFNkKG4uZ2V0KDEpLG4uZ2V0KDMpKSxuPW5ldyBtaShuLnBvcEZpcnN0KDUpKTtyZXR1cm4gdC5pc0VxdWFsKGUpfHxPcihcIkRvY3VtZW50IFwiK24rXCIgY29udGFpbnMgYSBkb2N1bWVudCByZWZlcmVuY2Ugd2l0aGluIGEgZGlmZmVyZW50IGRhdGFiYXNlIChcIit0LnByb2plY3RJZCtcIi9cIit0LmRhdGFiYXNlK1wiKSB3aGljaCBpcyBub3Qgc3VwcG9ydGVkLiBJdCB3aWxsIGJlIHRyZWF0ZWQgYXMgYSByZWZlcmVuY2UgaW4gdGhlIGN1cnJlbnQgZGF0YWJhc2UgKFwiK2UucHJvamVjdElkK1wiL1wiK2UuZGF0YWJhc2UrXCIpIGluc3RlYWQuXCIpLG59LEk9V3k7ZnVuY3Rpb24gV3koKXt9ZnVuY3Rpb24gWXkodCxlLG4pe3JldHVybiB0P24mJihuLm1lcmdlfHxuLm1lcmdlRmllbGRzKT90LnRvRmlyZXN0b3JlKGUsbik6dC50b0ZpcmVzdG9yZShlKTplfXZhciBYeSxKeT0obih0ZyxYeT1JKSx0Zy5wcm90b3R5cGUuY29udmVydEJ5dGVzPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgdnAodCl9LHRnLnByb3RvdHlwZS5jb252ZXJ0UmVmZXJlbmNlPWZ1bmN0aW9uKHQpe3Q9dGhpcy5jb252ZXJ0RG9jdW1lbnRLZXkodCx0aGlzLmZpcmVzdG9yZS5fZGF0YWJhc2VJZCk7cmV0dXJuIG5ldyBIZCh0aGlzLmZpcmVzdG9yZSxudWxsLHQpfSx0ZyksJHk9KFp5LnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxlLG4pe3RoaXMuX3ZlcmlmeU5vdENvbW1pdHRlZCgpO3Q9ZWcodCx0aGlzLl9maXJlc3RvcmUpLGU9WXkodC5fY29udmVydGVyLGUsbiksbj1QcCh0aGlzLl9kYXRhUmVhZGVyLFwiV3JpdGVCYXRjaC5zZXRcIix0Ll9rZXksZSxudWxsIT09dC5fY29udmVydGVyLG4pO3JldHVybiB0aGlzLl9tdXRhdGlvbnMucHVzaChuLnRvTXV0YXRpb24odC5fa2V5LGVzLm5vbmUoKSkpLHRoaXN9LFp5LnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1bXSxpPTM7aTxhcmd1bWVudHMubGVuZ3RoO2krKylyW2ktM109YXJndW1lbnRzW2ldO3RoaXMuX3ZlcmlmeU5vdENvbW1pdHRlZCgpO3Q9ZWcodCx0aGlzLl9maXJlc3RvcmUpLGU9XCJzdHJpbmdcIj09dHlwZW9mKGU9bShlKSl8fGUgaW5zdGFuY2VvZiBtcD9acCh0aGlzLl9kYXRhUmVhZGVyLFwiV3JpdGVCYXRjaC51cGRhdGVcIix0Ll9rZXksZSxuLHIpOiRwKHRoaXMuX2RhdGFSZWFkZXIsXCJXcml0ZUJhdGNoLnVwZGF0ZVwiLHQuX2tleSxlKTtyZXR1cm4gdGhpcy5fbXV0YXRpb25zLnB1c2goZS50b011dGF0aW9uKHQuX2tleSxlcy5leGlzdHMoITApKSksdGhpc30sWnkucHJvdG90eXBlLmRlbGV0ZT1mdW5jdGlvbih0KXt0aGlzLl92ZXJpZnlOb3RDb21taXR0ZWQoKTt0PWVnKHQsdGhpcy5fZmlyZXN0b3JlKTtyZXR1cm4gdGhpcy5fbXV0YXRpb25zPXRoaXMuX211dGF0aW9ucy5jb25jYXQobmV3IHdzKHQuX2tleSxlcy5ub25lKCkpKSx0aGlzfSxaeS5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3ZlcmlmeU5vdENvbW1pdHRlZCgpLHRoaXMuX2NvbW1pdHRlZD0hMCwwPHRoaXMuX211dGF0aW9ucy5sZW5ndGg/dGhpcy5fY29tbWl0SGFuZGxlcih0aGlzLl9tdXRhdGlvbnMpOlByb21pc2UucmVzb2x2ZSgpfSxaeS5wcm90b3R5cGUuX3ZlcmlmeU5vdENvbW1pdHRlZD1mdW5jdGlvbigpe2lmKHRoaXMuX2NvbW1pdHRlZCl0aHJvdyBuZXcgQXIoRHIuRkFJTEVEX1BSRUNPTkRJVElPTixcIkEgd3JpdGUgYmF0Y2ggY2FuIG5vIGxvbmdlciBiZSB1c2VkIGFmdGVyIGNvbW1pdCgpIGhhcyBiZWVuIGNhbGxlZC5cIil9LFp5KTtmdW5jdGlvbiBaeSh0LGUpe3RoaXMuX2ZpcmVzdG9yZT10LHRoaXMuX2NvbW1pdEhhbmRsZXI9ZSx0aGlzLl9tdXRhdGlvbnM9W10sdGhpcy5fY29tbWl0dGVkPSExLHRoaXMuX2RhdGFSZWFkZXI9THAodCl9ZnVuY3Rpb24gdGcodCl7dmFyIGU9dGhpcztyZXR1cm4oZT1YeS5jYWxsKHRoaXMpfHx0aGlzKS5maXJlc3RvcmU9dCxlfWZ1bmN0aW9uIGVnKHQsZSl7aWYoKHQ9bSh0KSkuZmlyZXN0b3JlIT09ZSl0aHJvdyBuZXcgQXIoRHIuSU5WQUxJRF9BUkdVTUVOVCxcIlByb3ZpZGVkIGRvY3VtZW50IHJlZmVyZW5jZSBpcyBmcm9tIGEgZGlmZmVyZW50IEZpcmVzdG9yZSBpbnN0YW5jZS5cIik7cmV0dXJuIHR9dmFyIG5nLHJnPShuKGlnLG5nPUkpLGlnLnByb3RvdHlwZS5jb252ZXJ0Qnl0ZXM9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyB2cCh0KX0saWcucHJvdG90eXBlLmNvbnZlcnRSZWZlcmVuY2U9ZnVuY3Rpb24odCl7dD10aGlzLmNvbnZlcnREb2N1bWVudEtleSh0LHRoaXMuZmlyZXN0b3JlLl9kYXRhYmFzZUlkKTtyZXR1cm4gbmV3IEhkKHRoaXMuZmlyZXN0b3JlLG51bGwsdCl9LGlnKTtmdW5jdGlvbiBpZyh0KXt2YXIgZT10aGlzO3JldHVybihlPW5nLmNhbGwodGhpcyl8fHRoaXMpLmZpcmVzdG9yZT10LGV9ZnVuY3Rpb24gb2codCxlLG4pe2Zvcih2YXIgcj1bXSxpPTM7aTxhcmd1bWVudHMubGVuZ3RoO2krKylyW2ktM109YXJndW1lbnRzW2ldO3Q9amQodCxIZCk7dmFyIG89amQodC5maXJlc3RvcmUsaHApLHM9THAobyk7cmV0dXJuIGFnKG8sWyhcInN0cmluZ1wiPT10eXBlb2YoZT1tKGUpKXx8ZSBpbnN0YW5jZW9mIG1wP1pwKHMsXCJ1cGRhdGVEb2NcIix0Ll9rZXksZSxuLHIpOiRwKHMsXCJ1cGRhdGVEb2NcIix0Ll9rZXksZSkpLnRvTXV0YXRpb24odC5fa2V5LGVzLmV4aXN0cyghMCkpXSl9ZnVuY3Rpb24gc2coZSl7Zm9yKHZhciBuPVtdLHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKW5bdC0xXT1hcmd1bWVudHNbdF07ZT1tKGUpO3ZhciByPXtpbmNsdWRlTWV0YWRhdGFDaGFuZ2VzOiExfSxpPTA7XCJvYmplY3RcIiE9dHlwZW9mIG5baV18fGFwKG5baV0pfHwocj1uW2ldLGkrKyk7dmFyIG8scyxhLHUsYyxoLGw9e2luY2x1ZGVNZXRhZGF0YUNoYW5nZXM6ci5pbmNsdWRlTWV0YWRhdGFDaGFuZ2VzfTtyZXR1cm4gYXAobltpXSkmJihvPW5baV0sbltpXT1udWxsPT09KHI9by5uZXh0KXx8dm9pZCAwPT09cj92b2lkIDA6ci5iaW5kKG8pLG5baSsxXT1udWxsPT09KHI9by5lcnJvcil8fHZvaWQgMD09PXI/dm9pZCAwOnIuYmluZChvKSxuW2krMl09bnVsbD09PShyPW8uY29tcGxldGUpfHx2b2lkIDA9PT1yP3ZvaWQgMDpyLmJpbmQobykpLGUgaW5zdGFuY2VvZiBIZD8oYT1qZChlLmZpcmVzdG9yZSxocCksdT1ibyhlLl9rZXkucGF0aCksaD17bmV4dDpmdW5jdGlvbih0KXtuW2ldJiZuW2ldKHVnKGEsZSx0KSl9LGVycm9yOm5baSsxXSxjb21wbGV0ZTpuW2krMl19KToocz1qZChlLFdkKSxhPWpkKHMuZmlyZXN0b3JlLGhwKSx1PXMuX3F1ZXJ5LGM9bmV3IHJnKGEpLGg9e25leHQ6ZnVuY3Rpb24odCl7bltpXSYmbltpXShuZXcgSXkoYSxjLHMsdCkpfSxlcnJvcjpuW2krMV0sY29tcGxldGU6bltpKzJdfSxEeShlLl9xdWVyeSkpLGZ1bmN0aW9uKG4sdCxlKXt2YXIgcj10aGlzLGk9bmV3IG5kKGgpLG89bmV3IGFmKHQsaSxlKTtyZXR1cm4gbi5hc3luY1F1ZXVlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4geShyLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9cmYsWzQsd2QobildO2Nhc2UgMTpyZXR1cm5bMixlLmFwcGx5KHZvaWQgMCxbdC5zZW50KCksb10pXX19KX0pfSksZnVuY3Rpb24oKXtpLldvKCksbi5hc3luY1F1ZXVlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4geShyLHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9b2YsWzQsd2QobildO2Nhc2UgMTpyZXR1cm5bMixlLmFwcGx5KHZvaWQgMCxbdC5zZW50KCksb10pXX19KX0pfSl9fShkcChhKSx1LGwpfWZ1bmN0aW9uIGFnKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKG4scil7dmFyIHQ9dGhpcyxpPW5ldyBaYTtyZXR1cm4gbi5hc3luY1F1ZXVlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9U2YsWzQsYmQobildO2Nhc2UgMTpyZXR1cm5bMixlLmFwcGx5KHZvaWQgMCxbdC5zZW50KCkscixpXSldfX0pfSl9KSxpLnByb21pc2V9KGRwKHQpLGUpfWZ1bmN0aW9uIHVnKHQsZSxuKXt2YXIgcj1uLmRvY3MuZ2V0KGUuX2tleSksaT1uZXcgcmcodCk7cmV0dXJuIG5ldyBieSh0LGksZS5fa2V5LHIsbmV3IHZ5KG4uaGFzUGVuZGluZ1dyaXRlcyxuLmZyb21DYWNoZSksZS5fY29udmVydGVyKX12YXIgY2csaGc9KGZnLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWVnKHQsdGhpcy5fZmlyZXN0b3JlKSxyPW5ldyBKeSh0aGlzLl9maXJlc3RvcmUpO3JldHVybiB0aGlzLl90cmFuc2FjdGlvbi5sb29rdXAoW24uX2tleV0pLnRoZW4oZnVuY3Rpb24odCl7aWYoIXR8fDEhPT10Lmxlbmd0aClyZXR1cm4gTXIoKTt0PXRbMF07aWYodC5pc0ZvdW5kRG9jdW1lbnQoKSlyZXR1cm4gbmV3IGx5KGUuX2ZpcmVzdG9yZSxyLHQua2V5LHQsbi5fY29udmVydGVyKTtpZih0LmlzTm9Eb2N1bWVudCgpKXJldHVybiBuZXcgbHkoZS5fZmlyZXN0b3JlLHIsbi5fa2V5LG51bGwsbi5fY29udmVydGVyKTt0aHJvdyBNcigpfSl9LGZnLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxlLG4pe3Q9ZWcodCx0aGlzLl9maXJlc3RvcmUpLGU9WXkodC5fY29udmVydGVyLGUsbiksbj1QcCh0aGlzLl9kYXRhUmVhZGVyLFwiVHJhbnNhY3Rpb24uc2V0XCIsdC5fa2V5LGUsbnVsbCE9PXQuX2NvbnZlcnRlcixuKTtyZXR1cm4gdGhpcy5fdHJhbnNhY3Rpb24uc2V0KHQuX2tleSxuKSx0aGlzfSxmZy5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQsZSxuKXtmb3IodmFyIHI9W10saT0zO2k8YXJndW1lbnRzLmxlbmd0aDtpKyspcltpLTNdPWFyZ3VtZW50c1tpXTt0PWVnKHQsdGhpcy5fZmlyZXN0b3JlKSxlPVwic3RyaW5nXCI9PXR5cGVvZihlPW0oZSkpfHxlIGluc3RhbmNlb2YgbXA/WnAodGhpcy5fZGF0YVJlYWRlcixcIlRyYW5zYWN0aW9uLnVwZGF0ZVwiLHQuX2tleSxlLG4scik6JHAodGhpcy5fZGF0YVJlYWRlcixcIlRyYW5zYWN0aW9uLnVwZGF0ZVwiLHQuX2tleSxlKTtyZXR1cm4gdGhpcy5fdHJhbnNhY3Rpb24udXBkYXRlKHQuX2tleSxlKSx0aGlzfSxmZy5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKHQpe3Q9ZWcodCx0aGlzLl9maXJlc3RvcmUpO3JldHVybiB0aGlzLl90cmFuc2FjdGlvbi5kZWxldGUodC5fa2V5KSx0aGlzfSxuKGxnLGNnPWZnKSxsZy5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lZyh0LHRoaXMuX2ZpcmVzdG9yZSkscj1uZXcgcmcodGhpcy5fZmlyZXN0b3JlKTtyZXR1cm4gY2cucHJvdG90eXBlLmdldC5jYWxsKHRoaXMsdCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbmV3IGJ5KGUuX2ZpcmVzdG9yZSxyLG4uX2tleSx0Ll9kb2N1bWVudCxuZXcgdnkoITEsITEpLG4uX2NvbnZlcnRlcil9KX0sbGcpO2Z1bmN0aW9uIGxnKHQsZSl7dmFyIG49dGhpcztyZXR1cm4obj1jZy5jYWxsKHRoaXMsdCxlKXx8dGhpcykuX2ZpcmVzdG9yZT10LG59ZnVuY3Rpb24gZmcodCxlKXt0aGlzLl9maXJlc3RvcmU9dCx0aGlzLl90cmFuc2FjdGlvbj1lLHRoaXMuX2RhdGFSZWFkZXI9THAodCl9ZnVuY3Rpb24gZGcoKXtpZihcInVuZGVmaW5lZFwiPT10eXBlb2YgVWludDhBcnJheSl0aHJvdyBuZXcgQXIoRHIuVU5JTVBMRU1FTlRFRCxcIlVpbnQ4QXJyYXlzIGFyZSBub3QgYXZhaWxhYmxlIGluIHRoaXMgZW52aXJvbm1lbnQuXCIpfWZ1bmN0aW9uIHBnKCl7aWYoXCJ1bmRlZmluZWRcIj09dHlwZW9mIGF0b2IpdGhyb3cgbmV3IEFyKERyLlVOSU1QTEVNRU5URUQsXCJCbG9icyBhcmUgdW5hdmFpbGFibGUgaW4gRmlyZXN0b3JlIGluIHRoaXMgZW52aXJvbm1lbnQuXCIpfXZhciB5ZyxnZz0oVGcuZnJvbUJhc2U2NFN0cmluZz1mdW5jdGlvbih0KXtyZXR1cm4gcGcoKSxuZXcgVGcodnAuZnJvbUJhc2U2NFN0cmluZyh0KSl9LFRnLmZyb21VaW50OEFycmF5PWZ1bmN0aW9uKHQpe3JldHVybiBkZygpLG5ldyBUZyh2cC5mcm9tVWludDhBcnJheSh0KSl9LFRnLnByb3RvdHlwZS50b0Jhc2U2ND1mdW5jdGlvbigpe3JldHVybiBwZygpLHRoaXMuX2RlbGVnYXRlLnRvQmFzZTY0KCl9LFRnLnByb3RvdHlwZS50b1VpbnQ4QXJyYXk9ZnVuY3Rpb24oKXtyZXR1cm4gZGcoKSx0aGlzLl9kZWxlZ2F0ZS50b1VpbnQ4QXJyYXkoKX0sVGcucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLmlzRXF1YWwodC5fZGVsZWdhdGUpfSxUZy5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm5cIkJsb2IoYmFzZTY0OiBcIit0aGlzLnRvQmFzZTY0KCkrXCIpXCJ9LFRnKSxtZz0oRWcucHJvdG90eXBlLmVuYWJsZUluZGV4ZWREYlBlcnNpc3RlbmNlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZ1bmN0aW9uKHQsZSl7Z3AodD1qZCh0LGhwKSk7dmFyIG49ZHAodCkscj10Ll9mcmVlemVTZXR0aW5ncygpLHQ9bmV3IFhmO3JldHVybiB5cChuLHQsbmV3IFdmKHQsci5jYWNoZVNpemVCeXRlcyxudWxsPT1lP3ZvaWQgMDplLmZvcmNlT3duZXJzaGlwKSl9KHQuX2RlbGVnYXRlLHtmb3JjZU93bmVyc2hpcDplfSl9LEVnLnByb3RvdHlwZS5lbmFibGVNdWx0aVRhYkluZGV4ZWREYlBlcnNpc3RlbmNlPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbih0KXtncCh0PWpkKHQsaHApKTt2YXIgZT1kcCh0KSxuPXQuX2ZyZWV6ZVNldHRpbmdzKCksdD1uZXcgWGY7cmV0dXJuIHlwKGUsdCxuZXcgWWYodCxuLmNhY2hlU2l6ZUJ5dGVzKSl9KHQuX2RlbGVnYXRlKX0sRWcucHJvdG90eXBlLmNsZWFySW5kZXhlZERiUGVyc2lzdGVuY2U9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKG4pe3ZhciB0PXRoaXM7aWYobi5faW5pdGlhbGl6ZWQmJiFuLl90ZXJtaW5hdGVkKXRocm93IG5ldyBBcihEci5GQUlMRURfUFJFQ09ORElUSU9OLFwiUGVyc2lzdGVuY2UgY2FuIG9ubHkgYmUgY2xlYXJlZCBiZWZvcmUgYSBGaXJlc3RvcmUgaW5zdGFuY2UgaXMgaW5pdGlhbGl6ZWQgb3IgYWZ0ZXIgaXQgaXMgdGVybWluYXRlZC5cIik7dmFyIHI9bmV3IFphO3JldHVybiBuLl9xdWV1ZS5lbnF1ZXVlQW5kRm9yZ2V0RXZlbldoaWxlUmVzdHJpY3RlZChmdW5jdGlvbigpe3JldHVybiB5KHQsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gdC50cnlzLnB1c2goWzAsMiwsM10pLFs0LGZ1bmN0aW9uKG4pe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gbnUueXQoKT8oZT1uK1wibWFpblwiLFs0LG51LmRlbGV0ZShlKV0pOlsyLFByb21pc2UucmVzb2x2ZSgpXTtjYXNlIDE6cmV0dXJuIHQuc2VudCgpLFsyXX19KX0pfShLYyhuLl9kYXRhYmFzZUlkLG4uX3BlcnNpc3RlbmNlS2V5KSldO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksci5yZXNvbHZlKCksWzMsM107Y2FzZSAyOnJldHVybiBlPXQuc2VudCgpLHIucmVqZWN0KGUpLFszLDNdO2Nhc2UgMzpyZXR1cm5bMl19fSl9KX0pLHIucHJvbWlzZX0odC5fZGVsZWdhdGUpfSxFZyksdmc9KE9iamVjdC5kZWZpbmVQcm9wZXJ0eShJZy5wcm90b3R5cGUsXCJfZGF0YWJhc2VJZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVsZWdhdGUuX2RhdGFiYXNlSWR9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksSWcucHJvdG90eXBlLnNldHRpbmdzPWZ1bmN0aW9uKHQpe3QubWVyZ2UmJmRlbGV0ZSh0PU9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSx0aGlzLl9kZWxlZ2F0ZS5fZ2V0U2V0dGluZ3MoKSksdCkpLm1lcmdlLHRoaXMuX2RlbGVnYXRlLl9zZXRTZXR0aW5ncyh0KX0sSWcucHJvdG90eXBlLnVzZUVtdWxhdG9yPWZ1bmN0aW9uKHQsZSl7dmFyIG4scjtuPXRoaXMuX2RlbGVnYXRlLHI9dCx0PWUsXCJmaXJlc3RvcmUuZ29vZ2xlYXBpcy5jb21cIiE9PShlPShuPWpkKG4semQpKS5fZ2V0U2V0dGluZ3MoKSkuaG9zdCYmZS5ob3N0IT09ciYmTHIoXCJIb3N0IGhhcyBiZWVuIHNldCBpbiBib3RoIHNldHRpbmdzKCkgYW5kIHVzZUVtdWxhdG9yKCksIGVtdWxhdG9yIGhvc3Qgd2lsbCBiZSB1c2VkXCIpLG4uX3NldFNldHRpbmdzKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSxlKSx7aG9zdDpyK1wiOlwiK3Qsc3NsOiExfSkpfSxJZy5wcm90b3R5cGUuZW5hYmxlTmV0d29yaz1mdW5jdGlvbigpe3JldHVybiBmdW5jdGlvbihpKXt2YXIgdD10aGlzO3JldHVybiBpLmFzeW5jUXVldWUuZW5xdWV1ZShmdW5jdGlvbigpe3JldHVybiB5KHQsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBuLHI7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LGdkKGkpXTtjYXNlIDE6cmV0dXJuIG49dC5zZW50KCksWzQsdmQoaSldO2Nhc2UgMjpyZXR1cm4gcj10LnNlbnQoKSxbMiwobi5zZXROZXR3b3JrRW5hYmxlZCghMCksKGU9cikuJHIuZGVsZXRlKDApLERsKGUpKV19dmFyIGV9KX0pfSl9KGRwKGpkKHRoaXMuX2RlbGVnYXRlLGhwKSkpfSxJZy5wcm90b3R5cGUuZGlzYWJsZU5ldHdvcms9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24ocil7dmFyIHQ9dGhpcztyZXR1cm4gci5hc3luY1F1ZXVlLmVucXVldWUoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm5bNCxnZChyKV07Y2FzZSAxOnJldHVybiBlPXQuc2VudCgpLFs0LHZkKHIpXTtjYXNlIDI6cmV0dXJuIG49dC5zZW50KCksWzIsKGUuc2V0TmV0d29ya0VuYWJsZWQoITEpLGZ1bmN0aW9uKG4pe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4oZT1uKS4kci5hZGQoMCksWzQsQWwoZSldO2Nhc2UgMTpyZXR1cm4gdC5zZW50KCksZS5Cci5zZXQoXCJPZmZsaW5lXCIpLFsyXX19KX0pfShuKSldfX0pfSl9KX0oZHAoamQodGhpcy5fZGVsZWdhdGUsaHApKSl9LElnLnByb3RvdHlwZS5lbmFibGVQZXJzaXN0ZW5jZT1mdW5jdGlvbih0KXt2YXIgZT0hMSxuPSExO3JldHVybiB0JiZWZChcInN5bmNocm9uaXplVGFic1wiLGU9ISF0LnN5bmNocm9uaXplVGFicyxcImV4cGVyaW1lbnRhbEZvcmNlT3duaW5nVGFiXCIsbj0hIXQuZXhwZXJpbWVudGFsRm9yY2VPd25pbmdUYWIpLGU/dGhpcy5ZYy5lbmFibGVNdWx0aVRhYkluZGV4ZWREYlBlcnNpc3RlbmNlKHRoaXMpOnRoaXMuWWMuZW5hYmxlSW5kZXhlZERiUGVyc2lzdGVuY2UodGhpcyxuKX0sSWcucHJvdG90eXBlLmNsZWFyUGVyc2lzdGVuY2U9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ZYy5jbGVhckluZGV4ZWREYlBlcnNpc3RlbmNlKHRoaXMpfSxJZy5wcm90b3R5cGUudGVybWluYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuWGMmJih0aGlzLlhjLl9yZW1vdmVTZXJ2aWNlSW5zdGFuY2UoXCJmaXJlc3RvcmVcIiksdGhpcy5YYy5fcmVtb3ZlU2VydmljZUluc3RhbmNlKFwiZmlyZXN0b3JlLWV4cFwiKSksdGhpcy5fZGVsZWdhdGUuX2RlbGV0ZSgpfSxJZy5wcm90b3R5cGUud2FpdEZvclBlbmRpbmdXcml0ZXM9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24obil7dmFyIHQ9dGhpcyxyPW5ldyBaYTtyZXR1cm4gbi5hc3luY1F1ZXVlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9a2YsWzQsYmQobildO2Nhc2UgMTpyZXR1cm5bMixlLmFwcGx5KHZvaWQgMCxbdC5zZW50KCkscl0pXX19KX0pfSksci5wcm9taXNlfShkcChqZCh0aGlzLl9kZWxlZ2F0ZSxocCkpKX0sSWcucHJvdG90eXBlLm9uU25hcHNob3RzSW5TeW5jPWZ1bmN0aW9uKHQpe3JldHVybiBlPXRoaXMuX2RlbGVnYXRlLHQ9dCxmdW5jdGlvbihuLHQpe3ZhciBlPXRoaXMscj1uZXcgbmQodCk7cmV0dXJuIG4uYXN5bmNRdWV1ZS5lbnF1ZXVlQW5kRm9yZ2V0KGZ1bmN0aW9uKCl7cmV0dXJuIHkoZSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiBlPWZ1bmN0aW9uKHQsZSl7dC5Hci5hZGQoZSksZS5uZXh0KCl9LFs0LHdkKG4pXTtjYXNlIDE6cmV0dXJuWzIsZS5hcHBseSh2b2lkIDAsW3Quc2VudCgpLHJdKV19fSl9KX0pLGZ1bmN0aW9uKCl7ci5XbygpLG4uYXN5bmNRdWV1ZS5lbnF1ZXVlQW5kRm9yZ2V0KGZ1bmN0aW9uKCl7cmV0dXJuIHkoZSx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiBlPWZ1bmN0aW9uKHQsZSl7dC5Hci5kZWxldGUoZSl9LFs0LHdkKG4pXTtjYXNlIDE6cmV0dXJuWzIsZS5hcHBseSh2b2lkIDAsW3Quc2VudCgpLHJdKV19fSl9KX0pfX0oZHAoamQoZSxocCkpLGFwKHQpP3Q6e25leHQ6dH0pO3ZhciBlfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoSWcucHJvdG90eXBlLFwiYXBwXCIse2dldDpmdW5jdGlvbigpe2lmKCF0aGlzLlhjKXRocm93IG5ldyBBcihEci5GQUlMRURfUFJFQ09ORElUSU9OLFwiRmlyZXN0b3JlIHdhcyBub3QgaW5pdGlhbGl6ZWQgdXNpbmcgdGhlIEZpcmViYXNlIFNESy4gJ2FwcCcgaXMgbm90IGF2YWlsYWJsZVwiKTtyZXR1cm4gdGhpcy5YY30sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxJZy5wcm90b3R5cGUuY29sbGVjdGlvbj1mdW5jdGlvbih0KXt0cnl7cmV0dXJuIG5ldyBqZyh0aGlzLGVwKHRoaXMuX2RlbGVnYXRlLHQpKX1jYXRjaCh0KXt0aHJvdyB4Zyh0LFwiY29sbGVjdGlvbigpXCIsXCJGaXJlc3RvcmUuY29sbGVjdGlvbigpXCIpfX0sSWcucHJvdG90eXBlLmRvYz1mdW5jdGlvbih0KXt0cnl7cmV0dXJuIG5ldyBDZyh0aGlzLG5wKHRoaXMuX2RlbGVnYXRlLHQpKX1jYXRjaCh0KXt0aHJvdyB4Zyh0LFwiZG9jKClcIixcIkZpcmVzdG9yZS5kb2MoKVwiKX19LElnLnByb3RvdHlwZS5jb2xsZWN0aW9uR3JvdXA9ZnVuY3Rpb24odCl7dHJ5e3JldHVybiBuZXcgVWcodGhpcyxmdW5jdGlvbih0LGUpe2lmKHQ9amQodCx6ZCksTWQoXCJjb2xsZWN0aW9uR3JvdXBcIixcImNvbGxlY3Rpb24gaWRcIixlKSwwPD1lLmluZGV4T2YoXCIvXCIpKXRocm93IG5ldyBBcihEci5JTlZBTElEX0FSR1VNRU5ULFwiSW52YWxpZCBjb2xsZWN0aW9uIElEICdcIitlK1wiJyBwYXNzZWQgdG8gZnVuY3Rpb24gY29sbGVjdGlvbkdyb3VwKCkuIENvbGxlY3Rpb24gSURzIG11c3Qgbm90IGNvbnRhaW4gJy8nLlwiKTtyZXR1cm4gbmV3IFdkKHQsbnVsbCwoZT1lLG5ldyBtbygkci5lbXB0eVBhdGgoKSxlKSkpfSh0aGlzLl9kZWxlZ2F0ZSx0KSl9Y2F0Y2godCl7dGhyb3cgeGcodCxcImNvbGxlY3Rpb25Hcm91cCgpXCIsXCJGaXJlc3RvcmUuY29sbGVjdGlvbkdyb3VwKClcIil9fSxJZy5wcm90b3R5cGUucnVuVHJhbnNhY3Rpb249ZnVuY3Rpb24oZSl7dmFyIG4scj10aGlzO3JldHVybiBmdW5jdGlvbihuLHIpe3ZhciB0PXRoaXMsaT1uZXcgWmE7cmV0dXJuIG4uYXN5bmNRdWV1ZS5lbnF1ZXVlQW5kRm9yZ2V0KGZ1bmN0aW9uKCl7cmV0dXJuIHkodCx2b2lkIDAsdm9pZCAwLGZ1bmN0aW9uKCl7dmFyIGU7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybls0LHlkKG4pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHQuZGF0YXN0b3JlfSldO2Nhc2UgMTpyZXR1cm4gZT10LnNlbnQoKSxuZXcgb2Qobi5hc3luY1F1ZXVlLGUscixpKS5ydW4oKSxbMl19fSl9KX0pLGkucHJvbWlzZX0oZHAobj10aGlzLl9kZWxlZ2F0ZSksZnVuY3Rpb24odCl7cmV0dXJuIHQ9bmV3IGhnKG4sdCksZShuZXcgX2cocix0KSl9KX0sSWcucHJvdG90eXBlLmJhdGNoPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gZHAodGhpcy5fZGVsZWdhdGUpLG5ldyBTZyhuZXcgJHkodGhpcy5fZGVsZWdhdGUsZnVuY3Rpb24odCl7cmV0dXJuIGFnKGUuX2RlbGVnYXRlLHQpfSkpfSxJZy5wcm90b3R5cGUubG9hZEJ1bmRsZT1mdW5jdGlvbih0KXt0aHJvdyBuZXcgQXIoRHIuRkFJTEVEX1BSRUNPTkRJVElPTiwnXCJsb2FkQnVuZGxlKClcIiBkb2VzIG5vdCBleGlzdCwgaGF2ZSB5b3UgaW1wb3J0ZWQgXCJmaXJlYmFzZS9maXJlc3RvcmUvYnVuZGxlXCI/Jyl9LElnLnByb3RvdHlwZS5uYW1lZFF1ZXJ5PWZ1bmN0aW9uKHQpe3Rocm93IG5ldyBBcihEci5GQUlMRURfUFJFQ09ORElUSU9OLCdcIm5hbWVkUXVlcnkoKVwiIGRvZXMgbm90IGV4aXN0LCBoYXZlIHlvdSBpbXBvcnRlZCBcImZpcmViYXNlL2ZpcmVzdG9yZS9idW5kbGVcIj8nKX0sSWcpLGJnPShuKHdnLHlnPUkpLHdnLnByb3RvdHlwZS5jb252ZXJ0Qnl0ZXM9ZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBnZyhuZXcgdnAodCkpfSx3Zy5wcm90b3R5cGUuY29udmVydFJlZmVyZW5jZT1mdW5jdGlvbih0KXt0PXRoaXMuY29udmVydERvY3VtZW50S2V5KHQsdGhpcy5maXJlc3RvcmUuX2RhdGFiYXNlSWQpO3JldHVybiBDZy5aYyh0LHRoaXMuZmlyZXN0b3JlLG51bGwpfSx3Zyk7ZnVuY3Rpb24gd2codCl7dmFyIGU9dGhpcztyZXR1cm4oZT15Zy5jYWxsKHRoaXMpfHx0aGlzKS5maXJlc3RvcmU9dCxlfWZ1bmN0aW9uIElnKHQsZSxuKXt2YXIgcj10aGlzO3RoaXMuX2RlbGVnYXRlPWUsdGhpcy5ZYz1uLHRoaXMuSU5URVJOQUw9e2RlbGV0ZTpmdW5jdGlvbigpe3JldHVybiByLnRlcm1pbmF0ZSgpfX0sdCBpbnN0YW5jZW9mIFNkfHwodGhpcy5YYz10KX1mdW5jdGlvbiBFZygpe31mdW5jdGlvbiBUZyh0KXt0aGlzLl9kZWxlZ2F0ZT10fXZhciBfZz0oa2cucHJvdG90eXBlLmdldD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLG49WWcodCk7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLmdldChuKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgRmcoZS5fZmlyZXN0b3JlLG5ldyBieShlLl9maXJlc3RvcmUuX2RlbGVnYXRlLGUuX3VzZXJEYXRhV3JpdGVyLHQuX2tleSx0Ll9kb2N1bWVudCx0Lm1ldGFkYXRhLG4uX2NvbnZlcnRlcikpfSl9LGtnLnByb3RvdHlwZS5zZXQ9ZnVuY3Rpb24odCxlLG4pe3Q9WWcodCk7cmV0dXJuIG4/KEZkKFwiVHJhbnNhY3Rpb24uc2V0XCIsbiksdGhpcy5fZGVsZWdhdGUuc2V0KHQsZSxuKSk6dGhpcy5fZGVsZWdhdGUuc2V0KHQsZSksdGhpc30sa2cucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbih0LGUsbil7Zm9yKHZhciByPVtdLGk9MztpPGFyZ3VtZW50cy5sZW5ndGg7aSsrKXJbaS0zXT1hcmd1bWVudHNbaV07dmFyIG89WWcodCk7cmV0dXJuIDI9PT1hcmd1bWVudHMubGVuZ3RoP3RoaXMuX2RlbGVnYXRlLnVwZGF0ZShvLGUpOih0PXRoaXMuX2RlbGVnYXRlKS51cGRhdGUuYXBwbHkodCxzKFtvLGUsbl0scikpLHRoaXN9LGtnLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24odCl7dD1ZZyh0KTtyZXR1cm4gdGhpcy5fZGVsZWdhdGUuZGVsZXRlKHQpLHRoaXN9LGtnKSxTZz0oQWcucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LGUsbil7dD1ZZyh0KTtyZXR1cm4gbj8oRmQoXCJXcml0ZUJhdGNoLnNldFwiLG4pLHRoaXMuX2RlbGVnYXRlLnNldCh0LGUsbikpOnRoaXMuX2RlbGVnYXRlLnNldCh0LGUpLHRoaXN9LEFnLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgcj1bXSxpPTM7aTxhcmd1bWVudHMubGVuZ3RoO2krKylyW2ktM109YXJndW1lbnRzW2ldO3ZhciBvPVlnKHQpO3JldHVybiAyPT09YXJndW1lbnRzLmxlbmd0aD90aGlzLl9kZWxlZ2F0ZS51cGRhdGUobyxlKToodD10aGlzLl9kZWxlZ2F0ZSkudXBkYXRlLmFwcGx5KHQscyhbbyxlLG5dLHIpKSx0aGlzfSxBZy5wcm90b3R5cGUuZGVsZXRlPWZ1bmN0aW9uKHQpe3Q9WWcodCk7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLmRlbGV0ZSh0KSx0aGlzfSxBZy5wcm90b3R5cGUuY29tbWl0PWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLmNvbW1pdCgpfSxBZyksTmc9KERnLnByb3RvdHlwZS5mcm9tRmlyZXN0b3JlPWZ1bmN0aW9uKHQsZSl7dD1uZXcgd3kodGhpcy5fZmlyZXN0b3JlLl9kZWxlZ2F0ZSx0aGlzLl91c2VyRGF0YVdyaXRlcix0Ll9rZXksdC5fZG9jdW1lbnQsdC5tZXRhZGF0YSxudWxsKTtyZXR1cm4gdGhpcy5fZGVsZWdhdGUuZnJvbUZpcmVzdG9yZShuZXcgVmcodGhpcy5fZmlyZXN0b3JlLHQpLG51bGwhPWU/ZTp7fSl9LERnLnByb3RvdHlwZS50b0ZpcmVzdG9yZT1mdW5jdGlvbih0LGUpe3JldHVybiBlP3RoaXMuX2RlbGVnYXRlLnRvRmlyZXN0b3JlKHQsZSk6dGhpcy5fZGVsZWdhdGUudG9GaXJlc3RvcmUodCl9LERnLnR1PWZ1bmN0aW9uKHQsZSl7dmFyIG49RGcuZXUscj1uLmdldCh0KTtyfHwocj1uZXcgV2Vha01hcCxuLnNldCh0LHIpKTtuPXIuZ2V0KGUpO3JldHVybiBufHwobj1uZXcgRGcodCxuZXcgYmcodCksZSksci5zZXQoZSxuKSksbn0sRGcpO2Z1bmN0aW9uIERnKHQsZSxuKXt0aGlzLl9maXJlc3RvcmU9dCx0aGlzLl91c2VyRGF0YVdyaXRlcj1lLHRoaXMuX2RlbGVnYXRlPW59ZnVuY3Rpb24gQWcodCl7dGhpcy5fZGVsZWdhdGU9dH1mdW5jdGlvbiBrZyh0LGUpe3RoaXMuX2ZpcmVzdG9yZT10LHRoaXMuX2RlbGVnYXRlPWUsdGhpcy5fdXNlckRhdGFXcml0ZXI9bmV3IGJnKHQpfU5nLmV1PW5ldyBXZWFrTWFwO3ZhciBDZz0oUmcubnU9ZnVuY3Rpb24odCxlLG4pe2lmKHQubGVuZ3RoJTIhPTApdGhyb3cgbmV3IEFyKERyLklOVkFMSURfQVJHVU1FTlQsXCJJbnZhbGlkIGRvY3VtZW50IHJlZmVyZW5jZS4gRG9jdW1lbnQgcmVmZXJlbmNlcyBtdXN0IGhhdmUgYW4gZXZlbiBudW1iZXIgb2Ygc2VnbWVudHMsIGJ1dCBcIit0LmNhbm9uaWNhbFN0cmluZygpK1wiIGhhcyBcIit0Lmxlbmd0aCk7cmV0dXJuIG5ldyBSZyhlLG5ldyBIZChlLl9kZWxlZ2F0ZSxuLG5ldyBtaSh0KSkpfSxSZy5aYz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIG5ldyBSZyhlLG5ldyBIZChlLl9kZWxlZ2F0ZSxuLHQpKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KFJnLnByb3RvdHlwZSxcImlkXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWxlZ2F0ZS5pZH0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoUmcucHJvdG90eXBlLFwicGFyZW50XCIse2dldDpmdW5jdGlvbigpe3JldHVybiBuZXcgamcodGhpcy5maXJlc3RvcmUsdGhpcy5fZGVsZWdhdGUucGFyZW50KX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoUmcucHJvdG90eXBlLFwicGF0aFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVsZWdhdGUucGF0aH0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxSZy5wcm90b3R5cGUuY29sbGVjdGlvbj1mdW5jdGlvbih0KXt0cnl7cmV0dXJuIG5ldyBqZyh0aGlzLmZpcmVzdG9yZSxlcCh0aGlzLl9kZWxlZ2F0ZSx0KSl9Y2F0Y2godCl7dGhyb3cgeGcodCxcImNvbGxlY3Rpb24oKVwiLFwiRG9jdW1lbnRSZWZlcmVuY2UuY29sbGVjdGlvbigpXCIpfX0sUmcucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuKHQ9bSh0KSlpbnN0YW5jZW9mIEhkJiZycCh0aGlzLl9kZWxlZ2F0ZSx0KX0sUmcucHJvdG90eXBlLnNldD1mdW5jdGlvbih0LGUpe2U9RmQoXCJEb2N1bWVudFJlZmVyZW5jZS5zZXRcIixlKTt0cnl7cmV0dXJuIGZ1bmN0aW9uKHQsZSxuKXt0PWpkKHQsSGQpO3ZhciByPWpkKHQuZmlyZXN0b3JlLGhwKSxlPVl5KHQuX2NvbnZlcnRlcixlLG4pO3JldHVybiBhZyhyLFtQcChMcChyKSxcInNldERvY1wiLHQuX2tleSxlLG51bGwhPT10Ll9jb252ZXJ0ZXIsbikudG9NdXRhdGlvbih0Ll9rZXksZXMubm9uZSgpKV0pfSh0aGlzLl9kZWxlZ2F0ZSx0LGUpfWNhdGNoKHQpe3Rocm93IHhnKHQsXCJzZXREb2MoKVwiLFwiRG9jdW1lbnRSZWZlcmVuY2Uuc2V0KClcIil9fSxSZy5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciBuPVtdLHI9MjtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKW5bci0yXT1hcmd1bWVudHNbcl07dHJ5e3JldHVybiAxPT09YXJndW1lbnRzLmxlbmd0aD9vZyh0aGlzLl9kZWxlZ2F0ZSx0KTpvZy5hcHBseSh2b2lkIDAscyhbdGhpcy5fZGVsZWdhdGUsdCxlXSxuKSl9Y2F0Y2godCl7dGhyb3cgeGcodCxcInVwZGF0ZURvYygpXCIsXCJEb2N1bWVudFJlZmVyZW5jZS51cGRhdGUoKVwiKX19LFJnLnByb3RvdHlwZS5kZWxldGU9ZnVuY3Rpb24oKXtyZXR1cm4gYWcoamQoKHQ9dGhpcy5fZGVsZWdhdGUpLmZpcmVzdG9yZSxocCksW25ldyB3cyh0Ll9rZXksZXMubm9uZSgpKV0pO3ZhciB0fSxSZy5wcm90b3R5cGUub25TbmFwc2hvdD1mdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLHQ9W10sbj0wO248YXJndW1lbnRzLmxlbmd0aDtuKyspdFtuXT1hcmd1bWVudHNbbl07dmFyIHI9T2codCksaT1MZyh0LGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgRmcoZS5maXJlc3RvcmUsbmV3IGJ5KGUuZmlyZXN0b3JlLl9kZWxlZ2F0ZSxlLl91c2VyRGF0YVdyaXRlcix0Ll9rZXksdC5fZG9jdW1lbnQsdC5tZXRhZGF0YSxlLl9kZWxlZ2F0ZS5fY29udmVydGVyKSl9KTtyZXR1cm4gc2codGhpcy5fZGVsZWdhdGUscixpKX0sUmcucHJvdG90eXBlLmdldD1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybihcImNhY2hlXCI9PT0obnVsbD09dD92b2lkIDA6dC5zb3VyY2UpP2Z1bmN0aW9uKGUpe2U9amQoZSxIZCk7dmFyIG49amQoZS5maXJlc3RvcmUsaHApLHQ9ZHAobikscj1uZXcgcmcobik7cmV0dXJuIGZ1bmN0aW9uKG4scil7dmFyIHQ9dGhpcyxpPW5ldyBaYTtyZXR1cm4gbi5hc3luY1F1ZXVlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9ZnVuY3Rpb24obyxzLGEpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciByLGk7cmV0dXJuIGcodGhpcyxmdW5jdGlvbih0KXtzd2l0Y2godC5sYWJlbCl7Y2FzZSAwOnJldHVybiB0LnRyeXMucHVzaChbMCwyLCwzXSksWzQsKGU9cywobj1vKS5wZXJzaXN0ZW5jZS5ydW5UcmFuc2FjdGlvbihcInJlYWQgZG9jdW1lbnRcIixcInJlYWRvbmx5XCIsZnVuY3Rpb24odCl7cmV0dXJuIG4uTW4ubW4odCxlKX0pKV07Y2FzZSAxOnJldHVybihpPXQuc2VudCgpKS5pc0ZvdW5kRG9jdW1lbnQoKT9hLnJlc29sdmUoaSk6aS5pc05vRG9jdW1lbnQoKT9hLnJlc29sdmUobnVsbCk6YS5yZWplY3QobmV3IEFyKERyLlVOQVZBSUxBQkxFLFwiRmFpbGVkIHRvIGdldCBkb2N1bWVudCBmcm9tIGNhY2hlLiAoSG93ZXZlciwgdGhpcyBkb2N1bWVudCBtYXkgZXhpc3Qgb24gdGhlIHNlcnZlci4gUnVuIGFnYWluIHdpdGhvdXQgc2V0dGluZyAnc291cmNlJyBpbiB0aGUgR2V0T3B0aW9ucyB0byBhdHRlbXB0IHRvIHJldHJpZXZlIHRoZSBkb2N1bWVudCBmcm9tIHRoZSBzZXJ2ZXIuKVwiKSksWzMsM107Y2FzZSAyOnJldHVybiByPXQuc2VudCgpLGk9V2wocixcIkZhaWxlZCB0byBnZXQgZG9jdW1lbnQgJ1wiK3MrXCIgZnJvbSBjYWNoZVwiKSxhLnJlamVjdChpKSxbMywzXTtjYXNlIDM6cmV0dXJuWzJdfXZhciBlLG59KX0pfSxbNCxtZChuKV07Y2FzZSAxOnJldHVyblsyLGUuYXBwbHkodm9pZCAwLFt0LnNlbnQoKSxyLGldKV19fSl9KX0pLGkucHJvbWlzZX0odCxlLl9rZXkpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBieShuLHIsZS5fa2V5LHQsbmV3IHZ5KG51bGwhPT10JiZ0Lmhhc0xvY2FsTXV0YXRpb25zLCEwKSxlLl9jb252ZXJ0ZXIpfSl9Olwic2VydmVyXCI9PT0obnVsbD09dD92b2lkIDA6dC5zb3VyY2UpP2Z1bmN0aW9uKGUpe2U9amQoZSxIZCk7dmFyIG49amQoZS5maXJlc3RvcmUsaHApO3JldHVybiBJZChkcChuKSxlLl9rZXkse3NvdXJjZTpcInNlcnZlclwifSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdWcobixlLHQpfSl9OmZ1bmN0aW9uKGUpe2U9amQoZSxIZCk7dmFyIG49amQoZS5maXJlc3RvcmUsaHApO3JldHVybiBJZChkcChuKSxlLl9rZXkpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIHVnKG4sZSx0KX0pfSkodGhpcy5fZGVsZWdhdGUpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBGZyhlLmZpcmVzdG9yZSxuZXcgYnkoZS5maXJlc3RvcmUuX2RlbGVnYXRlLGUuX3VzZXJEYXRhV3JpdGVyLHQuX2tleSx0Ll9kb2N1bWVudCx0Lm1ldGFkYXRhLGUuX2RlbGVnYXRlLl9jb252ZXJ0ZXIpKX0pfSxSZy5wcm90b3R5cGUud2l0aENvbnZlcnRlcj1mdW5jdGlvbih0KXtyZXR1cm4gbmV3IFJnKHRoaXMuZmlyZXN0b3JlLHQ/dGhpcy5fZGVsZWdhdGUud2l0aENvbnZlcnRlcihOZy50dSh0aGlzLmZpcmVzdG9yZSx0KSk6dGhpcy5fZGVsZWdhdGUud2l0aENvbnZlcnRlcihudWxsKSl9LFJnKTtmdW5jdGlvbiBSZyh0LGUpe3RoaXMuZmlyZXN0b3JlPXQsdGhpcy5fZGVsZWdhdGU9ZSx0aGlzLl91c2VyRGF0YVdyaXRlcj1uZXcgYmcodCl9ZnVuY3Rpb24geGcodCxlLG4pe3JldHVybiB0Lm1lc3NhZ2U9dC5tZXNzYWdlLnJlcGxhY2UoZSxuKSx0fWZ1bmN0aW9uIE9nKHQpe2Zvcih2YXIgZT0wLG49dDtlPG4ubGVuZ3RoO2UrKyl7dmFyIHI9bltlXTtpZihcIm9iamVjdFwiPT10eXBlb2YgciYmIWFwKHIpKXJldHVybiByfXJldHVybnt9fWZ1bmN0aW9uIExnKHQsZSl7dmFyIG47cmV0dXJue25leHQ6ZnVuY3Rpb24odCl7bi5uZXh0JiZuLm5leHQoZSh0KSl9LGVycm9yOm51bGw9PT0odD0obj1hcCh0WzBdKT90WzBdOmFwKHRbMV0pP3RbMV06XCJmdW5jdGlvblwiPT10eXBlb2YgdFswXT97bmV4dDp0WzBdLGVycm9yOnRbMV0sY29tcGxldGU6dFsyXX06e25leHQ6dFsxXSxlcnJvcjp0WzJdLGNvbXBsZXRlOnRbM119KS5lcnJvcil8fHZvaWQgMD09PXQ/dm9pZCAwOnQuYmluZChuKSxjb21wbGV0ZTpudWxsPT09KHQ9bi5jb21wbGV0ZSl8fHZvaWQgMD09PXQ/dm9pZCAwOnQuYmluZChuKX19dmFyIFBnLE1nLEZnPShPYmplY3QuZGVmaW5lUHJvcGVydHkoV2cucHJvdG90eXBlLFwicmVmXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBuZXcgQ2codGhpcy5fZmlyZXN0b3JlLHRoaXMuX2RlbGVnYXRlLnJlZil9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFdnLnByb3RvdHlwZSxcImlkXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWxlZ2F0ZS5pZH0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoV2cucHJvdG90eXBlLFwibWV0YWRhdGFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLm1ldGFkYXRhfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShXZy5wcm90b3R5cGUsXCJleGlzdHNcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLmV4aXN0cygpfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLFdnLnByb3RvdHlwZS5kYXRhPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9kZWxlZ2F0ZS5kYXRhKHQpfSxXZy5wcm90b3R5cGUuZ2V0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLmdldCh0LGUpfSxXZy5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gTnkodGhpcy5fZGVsZWdhdGUsdC5fZGVsZWdhdGUpfSxXZyksVmc9KG4oSGcsTWc9RmcpLEhnLnByb3RvdHlwZS5kYXRhPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9kZWxlZ2F0ZS5kYXRhKHQpfSxIZyksVWc9KHpnLnByb3RvdHlwZS53aGVyZT1mdW5jdGlvbih0LGUsbil7dHJ5e3JldHVybiBuZXcgemcodGhpcy5maXJlc3RvcmUsQXkodGhpcy5fZGVsZWdhdGUsKHI9bixpPWUsbz15eShcIndoZXJlXCIsdCksbmV3IEx5KG8saSxyKSkpKX1jYXRjaCh0KXt0aHJvdyB4Zyh0LC8ob3JkZXJCeXx3aGVyZSlcXChcXCkvLFwiUXVlcnkuJDEoKVwiKX12YXIgcixpLG99LHpnLnByb3RvdHlwZS5vcmRlckJ5PWZ1bmN0aW9uKHQsZSl7dHJ5e3JldHVybiBuZXcgemcodGhpcy5maXJlc3RvcmUsQXkodGhpcy5fZGVsZWdhdGUsKG49dm9pZCAwPT09ZT9cImFzY1wiOmUscj15eShcIm9yZGVyQnlcIix0KSxuZXcgUHkocixuKSkpKX1jYXRjaCh0KXt0aHJvdyB4Zyh0LC8ob3JkZXJCeXx3aGVyZSlcXChcXCkvLFwiUXVlcnkuJDEoKVwiKX12YXIgbixyfSx6Zy5wcm90b3R5cGUubGltaXQ9ZnVuY3Rpb24odCl7dHJ5e3JldHVybiBuZXcgemcodGhpcy5maXJlc3RvcmUsQXkodGhpcy5fZGVsZWdhdGUsKEtkKFwibGltaXRcIixlPXQpLG5ldyBNeShcImxpbWl0XCIsZSxcIkZcIikpKSl9Y2F0Y2godCl7dGhyb3cgeGcodCxcImxpbWl0KClcIixcIlF1ZXJ5LmxpbWl0KClcIil9dmFyIGV9LHpnLnByb3RvdHlwZS5saW1pdFRvTGFzdD1mdW5jdGlvbih0KXt0cnl7cmV0dXJuIG5ldyB6Zyh0aGlzLmZpcmVzdG9yZSxBeSh0aGlzLl9kZWxlZ2F0ZSwoS2QoXCJsaW1pdFRvTGFzdFwiLGU9dCksbmV3IE15KFwibGltaXRUb0xhc3RcIixlLFwiTFwiKSkpKX1jYXRjaCh0KXt0aHJvdyB4Zyh0LFwibGltaXRUb0xhc3QoKVwiLFwiUXVlcnkubGltaXRUb0xhc3QoKVwiKX12YXIgZX0semcucHJvdG90eXBlLnN0YXJ0QXQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07dHJ5e3JldHVybiBuZXcgemcodGhpcy5maXJlc3RvcmUsQXkodGhpcy5fZGVsZWdhdGUsZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07cmV0dXJuIG5ldyBGeShcInN0YXJ0QXRcIix0LCEwKX0uYXBwbHkodm9pZCAwLHQpKSl9Y2F0Y2godCl7dGhyb3cgeGcodCxcInN0YXJ0QXQoKVwiLFwiUXVlcnkuc3RhcnRBdCgpXCIpfX0semcucHJvdG90eXBlLnN0YXJ0QWZ0ZXI9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07dHJ5e3JldHVybiBuZXcgemcodGhpcy5maXJlc3RvcmUsQXkodGhpcy5fZGVsZWdhdGUsZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07cmV0dXJuIG5ldyBGeShcInN0YXJ0QWZ0ZXJcIix0LCExKX0uYXBwbHkodm9pZCAwLHQpKSl9Y2F0Y2godCl7dGhyb3cgeGcodCxcInN0YXJ0QWZ0ZXIoKVwiLFwiUXVlcnkuc3RhcnRBZnRlcigpXCIpfX0semcucHJvdG90eXBlLmVuZEJlZm9yZT1mdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTt0cnl7cmV0dXJuIG5ldyB6Zyh0aGlzLmZpcmVzdG9yZSxBeSh0aGlzLl9kZWxlZ2F0ZSxmdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTxhcmd1bWVudHMubGVuZ3RoO2UrKyl0W2VdPWFyZ3VtZW50c1tlXTtyZXR1cm4gbmV3IFZ5KFwiZW5kQmVmb3JlXCIsdCwhMCl9LmFwcGx5KHZvaWQgMCx0KSkpfWNhdGNoKHQpe3Rocm93IHhnKHQsXCJlbmRCZWZvcmUoKVwiLFwiUXVlcnkuZW5kQmVmb3JlKClcIil9fSx6Zy5wcm90b3R5cGUuZW5kQXQ9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07dHJ5e3JldHVybiBuZXcgemcodGhpcy5maXJlc3RvcmUsQXkodGhpcy5fZGVsZWdhdGUsZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07cmV0dXJuIG5ldyBWeShcImVuZEF0XCIsdCwhMSl9LmFwcGx5KHZvaWQgMCx0KSkpfWNhdGNoKHQpe3Rocm93IHhnKHQsXCJlbmRBdCgpXCIsXCJRdWVyeS5lbmRBdCgpXCIpfX0semcucHJvdG90eXBlLmlzRXF1YWw9ZnVuY3Rpb24odCl7cmV0dXJuIGlwKHRoaXMuX2RlbGVnYXRlLHQuX2RlbGVnYXRlKX0semcucHJvdG90eXBlLmdldD1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybihcImNhY2hlXCI9PT0obnVsbD09dD92b2lkIDA6dC5zb3VyY2UpP2Z1bmN0aW9uKGUpe2U9amQoZSxXZCk7dmFyIG49amQoZS5maXJlc3RvcmUsaHApLHQ9ZHAobikscj1uZXcgcmcobik7cmV0dXJuIGZ1bmN0aW9uKG4scil7dmFyIHQ9dGhpcyxpPW5ldyBaYTtyZXR1cm4gbi5hc3luY1F1ZXVlLmVucXVldWVBbmRGb3JnZXQoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9ZnVuY3Rpb24oaSxvLHMpe3JldHVybiB5KHRoaXMsdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlLG4scjtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIHQudHJ5cy5wdXNoKFswLDIsLDNdKSxbNCxhaChpLG8sITApXTtjYXNlIDE6cmV0dXJuIHI9dC5zZW50KCksZT1uZXcgdmYobyxyLkJuKSxuPWUuX28oci5kb2N1bWVudHMpLG49ZS5hcHBseUNoYW5nZXMobiwhMSkscy5yZXNvbHZlKG4uc25hcHNob3QpLFszLDNdO2Nhc2UgMjpyZXR1cm4gbj10LnNlbnQoKSxyPVdsKG4sXCJGYWlsZWQgdG8gZXhlY3V0ZSBxdWVyeSAnXCIrbytcIiBhZ2FpbnN0IGNhY2hlXCIpLHMucmVqZWN0KHIpLFszLDNdO2Nhc2UgMzpyZXR1cm5bMl19fSl9KX0sWzQsbWQobildO2Nhc2UgMTpyZXR1cm5bMixlLmFwcGx5KHZvaWQgMCxbdC5zZW50KCkscixpXSldfX0pfSl9KSxpLnByb21pc2V9KHQsZS5fcXVlcnkpLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBJeShuLHIsZSx0KX0pfTpcInNlcnZlclwiPT09KG51bGw9PXQ/dm9pZCAwOnQuc291cmNlKT9mdW5jdGlvbihlKXtlPWpkKGUsV2QpO3ZhciBuPWpkKGUuZmlyZXN0b3JlLGhwKSx0PWRwKG4pLHI9bmV3IHJnKG4pO3JldHVybiBFZCh0LGUuX3F1ZXJ5LHtzb3VyY2U6XCJzZXJ2ZXJcIn0pLnRoZW4oZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBJeShuLHIsZSx0KX0pfTpmdW5jdGlvbihlKXtlPWpkKGUsV2QpO3ZhciBuPWpkKGUuZmlyZXN0b3JlLGhwKSx0PWRwKG4pLHI9bmV3IHJnKG4pO3JldHVybiBEeShlLl9xdWVyeSksRWQodCxlLl9xdWVyeSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEl5KG4scixlLHQpfSl9KSh0aGlzLl9kZWxlZ2F0ZSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbmV3IEJnKGUuZmlyZXN0b3JlLG5ldyBJeShlLmZpcmVzdG9yZS5fZGVsZWdhdGUsZS5fdXNlckRhdGFXcml0ZXIsZS5fZGVsZWdhdGUsdC5fc25hcHNob3QpKX0pfSx6Zy5wcm90b3R5cGUub25TbmFwc2hvdD1mdW5jdGlvbigpe2Zvcih2YXIgZT10aGlzLHQ9W10sbj0wO248YXJndW1lbnRzLmxlbmd0aDtuKyspdFtuXT1hcmd1bWVudHNbbl07dmFyIHI9T2codCksaT1MZyh0LGZ1bmN0aW9uKHQpe3JldHVybiBuZXcgQmcoZS5maXJlc3RvcmUsbmV3IEl5KGUuZmlyZXN0b3JlLl9kZWxlZ2F0ZSxlLl91c2VyRGF0YVdyaXRlcixlLl9kZWxlZ2F0ZSx0Ll9zbmFwc2hvdCkpfSk7cmV0dXJuIHNnKHRoaXMuX2RlbGVnYXRlLHIsaSl9LHpnLnByb3RvdHlwZS53aXRoQ29udmVydGVyPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgemcodGhpcy5maXJlc3RvcmUsdD90aGlzLl9kZWxlZ2F0ZS53aXRoQ29udmVydGVyKE5nLnR1KHRoaXMuZmlyZXN0b3JlLHQpKTp0aGlzLl9kZWxlZ2F0ZS53aXRoQ29udmVydGVyKG51bGwpKX0semcpLHFnPShPYmplY3QuZGVmaW5lUHJvcGVydHkoUWcucHJvdG90eXBlLFwidHlwZVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVsZWdhdGUudHlwZX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoUWcucHJvdG90eXBlLFwiZG9jXCIse2dldDpmdW5jdGlvbigpe3JldHVybiBuZXcgVmcodGhpcy5fZmlyZXN0b3JlLHRoaXMuX2RlbGVnYXRlLmRvYyl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KFFnLnByb3RvdHlwZSxcIm9sZEluZGV4XCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWxlZ2F0ZS5vbGRJbmRleH0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoUWcucHJvdG90eXBlLFwibmV3SW5kZXhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLm5ld0luZGV4fSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLFFnKSxCZz0oT2JqZWN0LmRlZmluZVByb3BlcnR5KEdnLnByb3RvdHlwZSxcInF1ZXJ5XCIse2dldDpmdW5jdGlvbigpe3JldHVybiBuZXcgVWcodGhpcy5fZmlyZXN0b3JlLHRoaXMuX2RlbGVnYXRlLnF1ZXJ5KX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkoR2cucHJvdG90eXBlLFwibWV0YWRhdGFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLm1ldGFkYXRhfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShHZy5wcm90b3R5cGUsXCJzaXplXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9kZWxlZ2F0ZS5zaXplfSxlbnVtZXJhYmxlOiExLGNvbmZpZ3VyYWJsZTohMH0pLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShHZy5wcm90b3R5cGUsXCJlbXB0eVwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVsZWdhdGUuZW1wdHl9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEdnLnByb3RvdHlwZSxcImRvY3NcIix7Z2V0OmZ1bmN0aW9uKCl7dmFyIGU9dGhpcztyZXR1cm4gdGhpcy5fZGVsZWdhdGUuZG9jcy5tYXAoZnVuY3Rpb24odCl7cmV0dXJuIG5ldyBWZyhlLl9maXJlc3RvcmUsdCl9KX0sZW51bWVyYWJsZTohMSxjb25maWd1cmFibGU6ITB9KSxHZy5wcm90b3R5cGUuZG9jQ2hhbmdlcz1mdW5jdGlvbih0KXt2YXIgZT10aGlzO3JldHVybiB0aGlzLl9kZWxlZ2F0ZS5kb2NDaGFuZ2VzKHQpLm1hcChmdW5jdGlvbih0KXtyZXR1cm4gbmV3IHFnKGUuX2ZpcmVzdG9yZSx0KX0pfSxHZy5wcm90b3R5cGUuZm9yRWFjaD1mdW5jdGlvbihlLG4pe3ZhciByPXRoaXM7dGhpcy5fZGVsZWdhdGUuZm9yRWFjaChmdW5jdGlvbih0KXtlLmNhbGwobixuZXcgVmcoci5fZmlyZXN0b3JlLHQpKX0pfSxHZy5wcm90b3R5cGUuaXNFcXVhbD1mdW5jdGlvbih0KXtyZXR1cm4gTnkodGhpcy5fZGVsZWdhdGUsdC5fZGVsZWdhdGUpfSxHZyksamc9KG4oS2csUGc9VWcpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShLZy5wcm90b3R5cGUsXCJpZFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZGVsZWdhdGUuaWR9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEtnLnByb3RvdHlwZSxcInBhdGhcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2RlbGVnYXRlLnBhdGh9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksT2JqZWN0LmRlZmluZVByb3BlcnR5KEtnLnByb3RvdHlwZSxcInBhcmVudFwiLHtnZXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9kZWxlZ2F0ZS5wYXJlbnQ7cmV0dXJuIHQ/bmV3IENnKHRoaXMuZmlyZXN0b3JlLHQpOm51bGx9LGVudW1lcmFibGU6ITEsY29uZmlndXJhYmxlOiEwfSksS2cucHJvdG90eXBlLmRvYz1mdW5jdGlvbih0KXt0cnl7cmV0dXJuIG5ldyBDZyh0aGlzLmZpcmVzdG9yZSx2b2lkIDA9PT10P25wKHRoaXMuX2RlbGVnYXRlKTpucCh0aGlzLl9kZWxlZ2F0ZSx0KSl9Y2F0Y2godCl7dGhyb3cgeGcodCxcImRvYygpXCIsXCJDb2xsZWN0aW9uUmVmZXJlbmNlLmRvYygpXCIpfX0sS2cucHJvdG90eXBlLmFkZD1mdW5jdGlvbih0KXt2YXIgZSxuLHIsaT10aGlzO3JldHVybiBlPXRoaXMuX2RlbGVnYXRlLG49dCx0PWpkKGUuZmlyZXN0b3JlLGhwKSxyPW5wKGUpLG49WXkoZS5fY29udmVydGVyLG4pLGFnKHQsW1BwKExwKGUuZmlyZXN0b3JlKSxcImFkZERvY1wiLHIuX2tleSxuLG51bGwhPT1lLl9jb252ZXJ0ZXIse30pLnRvTXV0YXRpb24oci5fa2V5LGVzLmV4aXN0cyghMSkpXSkudGhlbihmdW5jdGlvbigpe3JldHVybiByfSkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gbmV3IENnKGkuZmlyZXN0b3JlLHQpfSl9LEtnLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe3JldHVybiBycCh0aGlzLl9kZWxlZ2F0ZSx0Ll9kZWxlZ2F0ZSl9LEtnLnByb3RvdHlwZS53aXRoQ29udmVydGVyPWZ1bmN0aW9uKHQpe3JldHVybiBuZXcgS2codGhpcy5maXJlc3RvcmUsdD90aGlzLl9kZWxlZ2F0ZS53aXRoQ29udmVydGVyKE5nLnR1KHRoaXMuZmlyZXN0b3JlLHQpKTp0aGlzLl9kZWxlZ2F0ZS53aXRoQ29udmVydGVyKG51bGwpKX0sS2cpO2Z1bmN0aW9uIEtnKHQsZSl7dmFyIG49dGhpcztyZXR1cm4obj1QZy5jYWxsKHRoaXMsdCxlKXx8dGhpcykuZmlyZXN0b3JlPXQsbi5fZGVsZWdhdGU9ZSxufWZ1bmN0aW9uIEdnKHQsZSl7dGhpcy5fZmlyZXN0b3JlPXQsdGhpcy5fZGVsZWdhdGU9ZX1mdW5jdGlvbiBRZyh0LGUpe3RoaXMuX2ZpcmVzdG9yZT10LHRoaXMuX2RlbGVnYXRlPWV9ZnVuY3Rpb24gemcodCxlKXt0aGlzLmZpcmVzdG9yZT10LHRoaXMuX2RlbGVnYXRlPWUsdGhpcy5fdXNlckRhdGFXcml0ZXI9bmV3IGJnKHQpfWZ1bmN0aW9uIEhnKCl7cmV0dXJuIG51bGwhPT1NZyYmTWcuYXBwbHkodGhpcyxhcmd1bWVudHMpfHx0aGlzfWZ1bmN0aW9uIFdnKHQsZSl7dGhpcy5fZmlyZXN0b3JlPXQsdGhpcy5fZGVsZWdhdGU9ZX1mdW5jdGlvbiBZZyh0KXtyZXR1cm4gamQodCxIZCl9SmcuZG9jdW1lbnRJZD1mdW5jdGlvbigpe3JldHVybiBuZXcgSmcodGkua2V5RmllbGQoKS5jYW5vbmljYWxTdHJpbmcoKSl9LEpnLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe3JldHVybih0PW0odCkpaW5zdGFuY2VvZiBtcCYmdGhpcy5fZGVsZWdhdGUuX2ludGVybmFsUGF0aC5pc0VxdWFsKHQuX2ludGVybmFsUGF0aCl9LFRlPUpnLFhnLnNlcnZlclRpbWVzdGFtcD1mdW5jdGlvbigpe3ZhciB0PW5ldyBHcChcInNlcnZlclRpbWVzdGFtcFwiKTtyZXR1cm4gdC5fbWV0aG9kTmFtZT1cIkZpZWxkVmFsdWUuc2VydmVyVGltZXN0YW1wXCIsbmV3IFhnKHQpfSxYZy5kZWxldGU9ZnVuY3Rpb24oKXt2YXIgdD1uZXcgRnAoXCJkZWxldGVGaWVsZFwiKTtyZXR1cm4gdC5fbWV0aG9kTmFtZT1cIkZpZWxkVmFsdWUuZGVsZXRlXCIsbmV3IFhnKHQpfSxYZy5hcnJheVVuaW9uPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRbZV09YXJndW1lbnRzW2VdO3ZhciBuPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRbZV09YXJndW1lbnRzW2VdO3JldHVybiBuZXcgUXAoXCJhcnJheVVuaW9uXCIsdCl9LmFwcGx5KHZvaWQgMCx0KTtyZXR1cm4gbi5fbWV0aG9kTmFtZT1cIkZpZWxkVmFsdWUuYXJyYXlVbmlvblwiLG5ldyBYZyhuKX0sWGcuYXJyYXlSZW1vdmU9ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07dmFyIG49ZnVuY3Rpb24oKXtmb3IodmFyIHQ9W10sZT0wO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspdFtlXT1hcmd1bWVudHNbZV07cmV0dXJuIG5ldyB6cChcImFycmF5UmVtb3ZlXCIsdCl9LmFwcGx5KHZvaWQgMCx0KTtyZXR1cm4gbi5fbWV0aG9kTmFtZT1cIkZpZWxkVmFsdWUuYXJyYXlSZW1vdmVcIixuZXcgWGcobil9LFhnLmluY3JlbWVudD1mdW5jdGlvbih0KXt0PW5ldyBIcChcImluY3JlbWVudFwiLHQpO3JldHVybiB0Ll9tZXRob2ROYW1lPVwiRmllbGRWYWx1ZS5pbmNyZW1lbnRcIixuZXcgWGcodCl9LFhnLnByb3RvdHlwZS5pc0VxdWFsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9kZWxlZ2F0ZS5pc0VxdWFsKHQuX2RlbGVnYXRlKX0sST1YZztmdW5jdGlvbiBYZyh0KXt0aGlzLl9kZWxlZ2F0ZT10fWZ1bmN0aW9uIEpnKCl7Zm9yKHZhciB0PVtdLGU9MDtlPGFyZ3VtZW50cy5sZW5ndGg7ZSsrKXRbZV09YXJndW1lbnRzW2VdO3RoaXMuX2RlbGVnYXRlPW5ldyhtcC5iaW5kLmFwcGx5KG1wLHMoW3ZvaWQgMF0sdCkpKX1mdW5jdGlvbiAkZyh0KXtyZXR1cm4gZT10aGlzLl9kZWxlZ2F0ZSxzPXQsbj1kcChlPWpkKGUsaHApKSx0PW5ldyBjcCxmdW5jdGlvbihuLHQscil7dmFyIGUsaT10aGlzLG89KGU9cyx0PWxsKHQpLGU9ZnVuY3Rpb24odCl7aWYodCBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpcmV0dXJuIGVkKHQsdm9pZCAwKTtpZih0IGluc3RhbmNlb2YgQXJyYXlCdWZmZXIpcmV0dXJuIGVkKG5ldyBVaW50OEFycmF5KHQpLHZvaWQgMCk7aWYodCBpbnN0YW5jZW9mIFJlYWRhYmxlU3RyZWFtKXJldHVybiB0LmdldFJlYWRlcigpO3Rocm93IG5ldyBFcnJvcihcIlNvdXJjZSBvZiBgdG9CeXRlU3RyZWFtUmVhZGVyYCBoYXMgdG8gYmUgYSBBcnJheUJ1ZmZlciBvciBSZWFkYWJsZVN0cmVhbVwiKX0oXCJzdHJpbmdcIj09dHlwZW9mIGU/KG5ldyBUZXh0RW5jb2RlcikuZW5jb2RlKGUpOmUpLG5ldyByZChlLHQpKTtuLmFzeW5jUXVldWUuZW5xdWV1ZUFuZEZvcmdldChmdW5jdGlvbigpe3JldHVybiB5KGksdm9pZCAwLHZvaWQgMCxmdW5jdGlvbigpe3ZhciBlO3JldHVybiBnKHRoaXMsZnVuY3Rpb24odCl7c3dpdGNoKHQubGFiZWwpe2Nhc2UgMDpyZXR1cm4gZT1HZixbNCxiZChuKV07Y2FzZSAxOnJldHVybiBlLmFwcGx5KHZvaWQgMCxbdC5zZW50KCksbyxyXSksWzJdfX0pfSl9KX0obixlLl9kYXRhYmFzZUlkLHQpLHQ7dmFyIGUscyxufWZ1bmN0aW9uIFpnKHQpe3ZhciBlPXRoaXMsbj10aGlzLl9kZWxlZ2F0ZSx0PXQ7cmV0dXJuIGZ1bmN0aW9uKG4scil7dmFyIHQ9dGhpcztyZXR1cm4gbi5hc3luY1F1ZXVlLmVucXVldWUoZnVuY3Rpb24oKXtyZXR1cm4geSh0LHZvaWQgMCx2b2lkIDAsZnVuY3Rpb24oKXt2YXIgZTtyZXR1cm4gZyh0aGlzLGZ1bmN0aW9uKHQpe3N3aXRjaCh0LmxhYmVsKXtjYXNlIDA6cmV0dXJuIGU9ZnVuY3Rpb24odCxlKXt2YXIgbj10O3JldHVybiBuLnBlcnNpc3RlbmNlLnJ1blRyYW5zYWN0aW9uKFwiR2V0IG5hbWVkIHF1ZXJ5XCIsXCJyZWFkb25seVwiLGZ1bmN0aW9uKHQpe3JldHVybiBuLlFlLmdldE5hbWVkUXVlcnkodCxlKX0pfSxbNCxtZChuKV07Y2FzZSAxOnJldHVyblsyLGUuYXBwbHkodm9pZCAwLFt0LnNlbnQoKSxyXSldfX0pfSl9KX0oZHAobj1qZChuLGhwKSksdCkudGhlbihmdW5jdGlvbih0KXtyZXR1cm4gdD9uZXcgV2QobixudWxsLHQucXVlcnkpOm51bGx9KS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0P25ldyBVZyhlLHQpOm51bGx9KX12YXIgdG09KGVtLnByb3RvdHlwZS5zZXRJbnN0YW50aWF0aW9uTW9kZT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5pbnN0YW50aWF0aW9uTW9kZT10LHRoaXN9LGVtLnByb3RvdHlwZS5zZXRNdWx0aXBsZUluc3RhbmNlcz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5tdWx0aXBsZUluc3RhbmNlcz10LHRoaXN9LGVtLnByb3RvdHlwZS5zZXRTZXJ2aWNlUHJvcHM9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc2VydmljZVByb3BzPXQsdGhpc30sZW0ucHJvdG90eXBlLnNldEluc3RhbmNlQ3JlYXRlZENhbGxiYWNrPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLm9uSW5zdGFuY2VDcmVhdGVkPXQsdGhpc30sZW0pO2Z1bmN0aW9uIGVtKHQsZSxuKXt0aGlzLm5hbWU9dCx0aGlzLmluc3RhbmNlRmFjdG9yeT1lLHRoaXMudHlwZT1uLHRoaXMubXVsdGlwbGVJbnN0YW5jZXM9ITEsdGhpcy5zZXJ2aWNlUHJvcHM9e30sdGhpcy5pbnN0YW50aWF0aW9uTW9kZT1cIkxBWllcIix0aGlzLm9uSW5zdGFuY2VDcmVhdGVkPW51bGx9dmFyIG5tLHJtLGltPXtGaXJlc3RvcmU6dmcsR2VvUG9pbnQ6d3AsVGltZXN0YW1wOktyLEJsb2I6Z2csVHJhbnNhY3Rpb246X2csV3JpdGVCYXRjaDpTZyxEb2N1bWVudFJlZmVyZW5jZTpDZyxEb2N1bWVudFNuYXBzaG90OkZnLFF1ZXJ5OlVnLFF1ZXJ5RG9jdW1lbnRTbmFwc2hvdDpWZyxRdWVyeVNuYXBzaG90OkJnLENvbGxlY3Rpb25SZWZlcmVuY2U6amcsRmllbGRQYXRoOlRlLEZpZWxkVmFsdWU6SSxzZXRMb2dMZXZlbDpmdW5jdGlvbih0KXtrci5zZXRMb2dMZXZlbCh0KX0sQ0FDSEVfU0laRV9VTkxJTUlURUQ6LTF9OyhubT1lLmRlZmF1bHQpLklOVEVSTkFMLnJlZ2lzdGVyQ29tcG9uZW50KG5ldyB0bShcImZpcmVzdG9yZVwiLGZ1bmN0aW9uKHQpe3ZhciBlPXQuZ2V0UHJvdmlkZXIoXCJhcHBcIikuZ2V0SW1tZWRpYXRlKCk7cmV0dXJuIGU9ZSx0PXQuZ2V0UHJvdmlkZXIoXCJhdXRoLWludGVybmFsXCIpLG5ldyB2ZyhlLG5ldyBocChlLHQpLG5ldyBtZyl9LFwiUFVCTElDXCIpLnNldFNlcnZpY2VQcm9wcyhPYmplY3QuYXNzaWduKHt9LGltKSkpLG5tLnJlZ2lzdGVyVmVyc2lvbihcIkBmaXJlYmFzZS9maXJlc3RvcmVcIixcIjIuMi41XCIpLChybT12ZykucHJvdG90eXBlLmxvYWRCdW5kbGU9JGcscm0ucHJvdG90eXBlLm5hbWVkUXVlcnk9Wmd9LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaCh0KXt0aHJvdyBjb25zb2xlLmVycm9yKHQpLG5ldyBFcnJvcihcIkNhbm5vdCBpbnN0YW50aWF0ZSBmaXJlYmFzZS1maXJlc3RvcmUuanMgLSBiZSBzdXJlIHRvIGxvYWQgZmlyZWJhc2UtYXBwLmpzIGZpcnN0LlwiKX19KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZpcmViYXNlLWZpcmVzdG9yZS5qcy5tYXBcbiIsImltcG9ydCBhcGkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vcmVzZXQuY3NzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiaW1wb3J0IGFwaSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgICAgICAgaW1wb3J0IGNvbnRlbnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgZGVmYXVsdCBjb250ZW50LmxvY2FscyB8fCB7fTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIGlzT2xkSUUgPSBmdW5jdGlvbiBpc09sZElFKCkge1xuICB2YXIgbWVtbztcbiAgcmV0dXJuIGZ1bmN0aW9uIG1lbW9yaXplKCkge1xuICAgIGlmICh0eXBlb2YgbWVtbyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG4gICAgICAvLyBAc2VlIGh0dHA6Ly9icm93c2VyaGFja3MuY29tLyNoYWNrLWU3MWQ4NjkyZjY1MzM0MTczZmVlNzE1YzIyMmNiODA1XG4gICAgICAvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG4gICAgICAvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcbiAgICAgIC8vIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIvaXNzdWVzLzE3N1xuICAgICAgbWVtbyA9IEJvb2xlYW4od2luZG93ICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmFsbCAmJiAhd2luZG93LmF0b2IpO1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vO1xuICB9O1xufSgpO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gZ2V0VGFyZ2V0KCkge1xuICB2YXIgbWVtbyA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUodGFyZ2V0KSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcbiAgICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgICAgc3R5bGVUYXJnZXQgPSBudWxsO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICAgIH1cblxuICAgIHJldHVybiBtZW1vW3RhcmdldF07XG4gIH07XG59KCk7XG5cbnZhciBzdHlsZXNJbkRvbSA9IFtdO1xuXG5mdW5jdGlvbiBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKSB7XG4gIHZhciByZXN1bHQgPSAtMTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRG9tLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRG9tW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucykge1xuICB2YXIgaWRDb3VudE1hcCA9IHt9O1xuICB2YXIgaWRlbnRpZmllcnMgPSBbXTtcblxuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM11cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4ICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlc0luRG9tLnB1c2goe1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiBhZGRTdHlsZShvYmosIG9wdGlvbnMpLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICB2YXIgYXR0cmlidXRlcyA9IG9wdGlvbnMuYXR0cmlidXRlcyB8fCB7fTtcblxuICBpZiAodHlwZW9mIGF0dHJpYnV0ZXMubm9uY2UgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSAndW5kZWZpbmVkJyA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICAgIGlmIChub25jZSkge1xuICAgICAgYXR0cmlidXRlcy5ub25jZSA9IG5vbmNlO1xuICAgIH1cbiAgfVxuXG4gIE9iamVjdC5rZXlzKGF0dHJpYnV0ZXMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShrZXksIGF0dHJpYnV0ZXNba2V5XSk7XG4gIH0pO1xuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnQgPT09ICdmdW5jdGlvbicpIHtcbiAgICBvcHRpb25zLmluc2VydChzdHlsZSk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIHRhcmdldCA9IGdldFRhcmdldChvcHRpb25zLmluc2VydCB8fCAnaGVhZCcpO1xuXG4gICAgaWYgKCF0YXJnZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gICAgfVxuXG4gICAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuXG4gIHJldHVybiBzdHlsZTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxudmFyIHJlcGxhY2VUZXh0ID0gZnVuY3Rpb24gcmVwbGFjZVRleHQoKSB7XG4gIHZhciB0ZXh0U3RvcmUgPSBbXTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHJlcGxhY2UoaW5kZXgsIHJlcGxhY2VtZW50KSB7XG4gICAgdGV4dFN0b3JlW2luZGV4XSA9IHJlcGxhY2VtZW50O1xuICAgIHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuICB9O1xufSgpO1xuXG5mdW5jdGlvbiBhcHBseVRvU2luZ2xldG9uVGFnKHN0eWxlLCBpbmRleCwgcmVtb3ZlLCBvYmopIHtcbiAgdmFyIGNzcyA9IHJlbW92ZSA/ICcnIDogb2JqLm1lZGlhID8gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKS5jb25jYXQob2JqLmNzcywgXCJ9XCIpIDogb2JqLmNzczsgLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IHJlcGxhY2VUZXh0KGluZGV4LCBjc3MpO1xuICB9IGVsc2Uge1xuICAgIHZhciBjc3NOb2RlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKTtcbiAgICB2YXIgY2hpbGROb2RlcyA9IHN0eWxlLmNoaWxkTm9kZXM7XG5cbiAgICBpZiAoY2hpbGROb2Rlc1tpbmRleF0pIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9XG5cbiAgICBpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcbiAgICAgIHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuICAgIH1cbiAgfVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnKHN0eWxlLCBvcHRpb25zLCBvYmopIHtcbiAgdmFyIGNzcyA9IG9iai5jc3M7XG4gIHZhciBtZWRpYSA9IG9iai5tZWRpYTtcbiAgdmFyIHNvdXJjZU1hcCA9IG9iai5zb3VyY2VNYXA7XG5cbiAgaWYgKG1lZGlhKSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoJ21lZGlhJyk7XG4gIH1cblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSAndW5kZWZpbmVkJykge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9IC8vIEZvciBvbGQgSUVcblxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG5cblxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGUuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXIgc2luZ2xldG9uQ291bnRlciA9IDA7XG5cbmZ1bmN0aW9uIGFkZFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgc3R5bGU7XG4gIHZhciB1cGRhdGU7XG4gIHZhciByZW1vdmU7XG5cbiAgaWYgKG9wdGlvbnMuc2luZ2xldG9uKSB7XG4gICAgdmFyIHN0eWxlSW5kZXggPSBzaW5nbGV0b25Db3VudGVyKys7XG4gICAgc3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSk7XG4gICAgdXBkYXRlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCBmYWxzZSk7XG4gICAgcmVtb3ZlID0gYXBwbHlUb1NpbmdsZXRvblRhZy5iaW5kKG51bGwsIHN0eWxlLCBzdHlsZUluZGV4LCB0cnVlKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZSA9IGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXG4gICAgcmVtb3ZlID0gZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9O1xuICB9XG5cbiAgdXBkYXRlKG9iaik7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZShuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTsgLy8gRm9yY2Ugc2luZ2xlLXRhZyBzb2x1dGlvbiBvbiBJRTYtOSwgd2hpY2ggaGFzIGEgaGFyZCBsaW1pdCBvbiB0aGUgIyBvZiA8c3R5bGU+XG4gIC8vIHRhZ3MgaXQgd2lsbCBhbGxvdyBvbiBhIHBhZ2VcblxuICBpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG4gIH1cblxuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG5ld0xpc3QpICE9PSAnW29iamVjdCBBcnJheV0nKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIi8qISAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxyXG5Db3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi5cclxuXHJcblBlcm1pc3Npb24gdG8gdXNlLCBjb3B5LCBtb2RpZnksIGFuZC9vciBkaXN0cmlidXRlIHRoaXMgc29mdHdhcmUgZm9yIGFueVxyXG5wdXJwb3NlIHdpdGggb3Igd2l0aG91dCBmZWUgaXMgaGVyZWJ5IGdyYW50ZWQuXHJcblxyXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiIEFORCBUSEUgQVVUSE9SIERJU0NMQUlNUyBBTEwgV0FSUkFOVElFUyBXSVRIXHJcblJFR0FSRCBUTyBUSElTIFNPRlRXQVJFIElOQ0xVRElORyBBTEwgSU1QTElFRCBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWVxyXG5BTkQgRklUTkVTUy4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUiBCRSBMSUFCTEUgRk9SIEFOWSBTUEVDSUFMLCBESVJFQ1QsXHJcbklORElSRUNULCBPUiBDT05TRVFVRU5USUFMIERBTUFHRVMgT1IgQU5ZIERBTUFHRVMgV0hBVFNPRVZFUiBSRVNVTFRJTkcgRlJPTVxyXG5MT1NTIE9GIFVTRSwgREFUQSBPUiBQUk9GSVRTLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgTkVHTElHRU5DRSBPUlxyXG5PVEhFUiBUT1JUSU9VUyBBQ1RJT04sIEFSSVNJTkcgT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgVVNFIE9SXHJcblBFUkZPUk1BTkNFIE9GIFRISVMgU09GVFdBUkUuXHJcbioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqICovXHJcbi8qIGdsb2JhbCBSZWZsZWN0LCBQcm9taXNlICovXHJcblxyXG52YXIgZXh0ZW5kU3RhdGljcyA9IGZ1bmN0aW9uKGQsIGIpIHtcclxuICAgIGV4dGVuZFN0YXRpY3MgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHxcclxuICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XHJcbiAgICAgICAgZnVuY3Rpb24gKGQsIGIpIHsgZm9yICh2YXIgcCBpbiBiKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGIsIHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgIHJldHVybiBleHRlbmRTdGF0aWNzKGQsIGIpO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fZXh0ZW5kcyhkLCBiKSB7XHJcbiAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxyXG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDbGFzcyBleHRlbmRzIHZhbHVlIFwiICsgU3RyaW5nKGIpICsgXCIgaXMgbm90IGEgY29uc3RydWN0b3Igb3IgbnVsbFwiKTtcclxuICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcbiAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cclxuICAgIGQucHJvdG90eXBlID0gYiA9PT0gbnVsbCA/IE9iamVjdC5jcmVhdGUoYikgOiAoX18ucHJvdG90eXBlID0gYi5wcm90b3R5cGUsIG5ldyBfXygpKTtcclxufVxyXG5cclxuZXhwb3J0IHZhciBfX2Fzc2lnbiA9IGZ1bmN0aW9uKCkge1xyXG4gICAgX19hc3NpZ24gPSBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uIF9fYXNzaWduKHQpIHtcclxuICAgICAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcclxuICAgICAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcclxuICAgICAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKSB0W3BdID0gc1twXTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gX19hc3NpZ24uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fcmVzdChzLCBlKSB7XHJcbiAgICB2YXIgdCA9IHt9O1xyXG4gICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApICYmIGUuaW5kZXhPZihwKSA8IDApXHJcbiAgICAgICAgdFtwXSA9IHNbcF07XHJcbiAgICBpZiAocyAhPSBudWxsICYmIHR5cGVvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzID09PSBcImZ1bmN0aW9uXCIpXHJcbiAgICAgICAgZm9yICh2YXIgaSA9IDAsIHAgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKHMpOyBpIDwgcC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAoZS5pbmRleE9mKHBbaV0pIDwgMCAmJiBPYmplY3QucHJvdG90eXBlLnByb3BlcnR5SXNFbnVtZXJhYmxlLmNhbGwocywgcFtpXSkpXHJcbiAgICAgICAgICAgICAgICB0W3BbaV1dID0gc1twW2ldXTtcclxuICAgICAgICB9XHJcbiAgICByZXR1cm4gdDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcclxuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XHJcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xyXG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcclxuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3BhcmFtKHBhcmFtSW5kZXgsIGRlY29yYXRvcikge1xyXG4gICAgcmV0dXJuIGZ1bmN0aW9uICh0YXJnZXQsIGtleSkgeyBkZWNvcmF0b3IodGFyZ2V0LCBrZXksIHBhcmFtSW5kZXgpOyB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX21ldGFkYXRhKG1ldGFkYXRhS2V5LCBtZXRhZGF0YVZhbHVlKSB7XHJcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QubWV0YWRhdGEgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIFJlZmxlY3QubWV0YWRhdGEobWV0YWRhdGFLZXksIG1ldGFkYXRhVmFsdWUpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19hd2FpdGVyKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xyXG4gICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9XHJcbiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcclxuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XHJcbiAgICAgICAgZnVuY3Rpb24gc3RlcChyZXN1bHQpIHsgcmVzdWx0LmRvbmUgPyByZXNvbHZlKHJlc3VsdC52YWx1ZSkgOiBhZG9wdChyZXN1bHQudmFsdWUpLnRoZW4oZnVsZmlsbGVkLCByZWplY3RlZCk7IH1cclxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cyB8fCBbXSkpLm5leHQoKSk7XHJcbiAgICB9KTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fZ2VuZXJhdG9yKHRoaXNBcmcsIGJvZHkpIHtcclxuICAgIHZhciBfID0geyBsYWJlbDogMCwgc2VudDogZnVuY3Rpb24oKSB7IGlmICh0WzBdICYgMSkgdGhyb3cgdFsxXTsgcmV0dXJuIHRbMV07IH0sIHRyeXM6IFtdLCBvcHM6IFtdIH0sIGYsIHksIHQsIGc7XHJcbiAgICByZXR1cm4gZyA9IHsgbmV4dDogdmVyYigwKSwgXCJ0aHJvd1wiOiB2ZXJiKDEpLCBcInJldHVyblwiOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiAoZ1tTeW1ib2wuaXRlcmF0b3JdID0gZnVuY3Rpb24oKSB7IHJldHVybiB0aGlzOyB9KSwgZztcclxuICAgIGZ1bmN0aW9uIHZlcmIobikgeyByZXR1cm4gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIHN0ZXAoW24sIHZdKTsgfTsgfVxyXG4gICAgZnVuY3Rpb24gc3RlcChvcCkge1xyXG4gICAgICAgIGlmIChmKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLlwiKTtcclxuICAgICAgICB3aGlsZSAoXykgdHJ5IHtcclxuICAgICAgICAgICAgaWYgKGYgPSAxLCB5ICYmICh0ID0gb3BbMF0gJiAyID8geVtcInJldHVyblwiXSA6IG9wWzBdID8geVtcInRocm93XCJdIHx8ICgodCA9IHlbXCJyZXR1cm5cIl0pICYmIHQuY2FsbCh5KSwgMCkgOiB5Lm5leHQpICYmICEodCA9IHQuY2FsbCh5LCBvcFsxXSkpLmRvbmUpIHJldHVybiB0O1xyXG4gICAgICAgICAgICBpZiAoeSA9IDAsIHQpIG9wID0gW29wWzBdICYgMiwgdC52YWx1ZV07XHJcbiAgICAgICAgICAgIHN3aXRjaCAob3BbMF0pIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgMDogY2FzZSAxOiB0ID0gb3A7IGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSA0OiBfLmxhYmVsKys7IHJldHVybiB7IHZhbHVlOiBvcFsxXSwgZG9uZTogZmFsc2UgfTtcclxuICAgICAgICAgICAgICAgIGNhc2UgNTogXy5sYWJlbCsrOyB5ID0gb3BbMV07IG9wID0gWzBdOyBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIGNhc2UgNzogb3AgPSBfLm9wcy5wb3AoKTsgXy50cnlzLnBvcCgpOyBjb250aW51ZTtcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEodCA9IF8udHJ5cywgdCA9IHQubGVuZ3RoID4gMCAmJiB0W3QubGVuZ3RoIC0gMV0pICYmIChvcFswXSA9PT0gNiB8fCBvcFswXSA9PT0gMikpIHsgXyA9IDA7IGNvbnRpbnVlOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wWzBdID09PSAzICYmICghdCB8fCAob3BbMV0gPiB0WzBdICYmIG9wWzFdIDwgdFszXSkpKSB7IF8ubGFiZWwgPSBvcFsxXTsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDYgJiYgXy5sYWJlbCA8IHRbMV0pIHsgXy5sYWJlbCA9IHRbMV07IHQgPSBvcDsgYnJlYWs7IH1cclxuICAgICAgICAgICAgICAgICAgICBpZiAodCAmJiBfLmxhYmVsIDwgdFsyXSkgeyBfLmxhYmVsID0gdFsyXTsgXy5vcHMucHVzaChvcCk7IGJyZWFrOyB9XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRbMl0pIF8ub3BzLnBvcCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIF8udHJ5cy5wb3AoKTsgY29udGludWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgb3AgPSBib2R5LmNhbGwodGhpc0FyZywgXyk7XHJcbiAgICAgICAgfSBjYXRjaCAoZSkgeyBvcCA9IFs2LCBlXTsgeSA9IDA7IH0gZmluYWxseSB7IGYgPSB0ID0gMDsgfVxyXG4gICAgICAgIGlmIChvcFswXSAmIDUpIHRocm93IG9wWzFdOyByZXR1cm4geyB2YWx1ZTogb3BbMF0gPyBvcFsxXSA6IHZvaWQgMCwgZG9uZTogdHJ1ZSB9O1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgdmFyIF9fY3JlYXRlQmluZGluZyA9IE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcclxuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XHJcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfSk7XHJcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XHJcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xyXG4gICAgb1trMl0gPSBtW2tdO1xyXG59KTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2V4cG9ydFN0YXIobSwgbykge1xyXG4gICAgZm9yICh2YXIgcCBpbiBtKSBpZiAocCAhPT0gXCJkZWZhdWx0XCIgJiYgIU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvLCBwKSkgX19jcmVhdGVCaW5kaW5nKG8sIG0sIHApO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX192YWx1ZXMobykge1xyXG4gICAgdmFyIHMgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgU3ltYm9sLml0ZXJhdG9yLCBtID0gcyAmJiBvW3NdLCBpID0gMDtcclxuICAgIGlmIChtKSByZXR1cm4gbS5jYWxsKG8pO1xyXG4gICAgaWYgKG8gJiYgdHlwZW9mIG8ubGVuZ3RoID09PSBcIm51bWJlclwiKSByZXR1cm4ge1xyXG4gICAgICAgIG5leHQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgaWYgKG8gJiYgaSA+PSBvLmxlbmd0aCkgbyA9IHZvaWQgMDtcclxuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IG8gJiYgb1tpKytdLCBkb25lOiAhbyB9O1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHMgPyBcIk9iamVjdCBpcyBub3QgaXRlcmFibGUuXCIgOiBcIlN5bWJvbC5pdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3JlYWQobywgbikge1xyXG4gICAgdmFyIG0gPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb1tTeW1ib2wuaXRlcmF0b3JdO1xyXG4gICAgaWYgKCFtKSByZXR1cm4gbztcclxuICAgIHZhciBpID0gbS5jYWxsKG8pLCByLCBhciA9IFtdLCBlO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICB3aGlsZSAoKG4gPT09IHZvaWQgMCB8fCBuLS0gPiAwKSAmJiAhKHIgPSBpLm5leHQoKSkuZG9uZSkgYXIucHVzaChyLnZhbHVlKTtcclxuICAgIH1cclxuICAgIGNhdGNoIChlcnJvcikgeyBlID0geyBlcnJvcjogZXJyb3IgfTsgfVxyXG4gICAgZmluYWxseSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgaWYgKHIgJiYgIXIuZG9uZSAmJiAobSA9IGlbXCJyZXR1cm5cIl0pKSBtLmNhbGwoaSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZpbmFsbHkgeyBpZiAoZSkgdGhyb3cgZS5lcnJvcjsgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGFyO1xyXG59XHJcblxyXG4vKiogQGRlcHJlY2F0ZWQgKi9cclxuZXhwb3J0IGZ1bmN0aW9uIF9fc3ByZWFkKCkge1xyXG4gICAgZm9yICh2YXIgYXIgPSBbXSwgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspXHJcbiAgICAgICAgYXIgPSBhci5jb25jYXQoX19yZWFkKGFyZ3VtZW50c1tpXSkpO1xyXG4gICAgcmV0dXJuIGFyO1xyXG59XHJcblxyXG4vKiogQGRlcHJlY2F0ZWQgKi9cclxuZXhwb3J0IGZ1bmN0aW9uIF9fc3ByZWFkQXJyYXlzKCkge1xyXG4gICAgZm9yICh2YXIgcyA9IDAsIGkgPSAwLCBpbCA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBpbDsgaSsrKSBzICs9IGFyZ3VtZW50c1tpXS5sZW5ndGg7XHJcbiAgICBmb3IgKHZhciByID0gQXJyYXkocyksIGsgPSAwLCBpID0gMDsgaSA8IGlsOyBpKyspXHJcbiAgICAgICAgZm9yICh2YXIgYSA9IGFyZ3VtZW50c1tpXSwgaiA9IDAsIGpsID0gYS5sZW5ndGg7IGogPCBqbDsgaisrLCBrKyspXHJcbiAgICAgICAgICAgIHJba10gPSBhW2pdO1xyXG4gICAgcmV0dXJuIHI7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX3NwcmVhZEFycmF5KHRvLCBmcm9tKSB7XHJcbiAgICBmb3IgKHZhciBpID0gMCwgaWwgPSBmcm9tLmxlbmd0aCwgaiA9IHRvLmxlbmd0aDsgaSA8IGlsOyBpKyssIGorKylcclxuICAgICAgICB0b1tqXSA9IGZyb21baV07XHJcbiAgICByZXR1cm4gdG87XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2F3YWl0KHYpIHtcclxuICAgIHJldHVybiB0aGlzIGluc3RhbmNlb2YgX19hd2FpdCA/ICh0aGlzLnYgPSB2LCB0aGlzKSA6IG5ldyBfX2F3YWl0KHYpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19hc3luY0dlbmVyYXRvcih0aGlzQXJnLCBfYXJndW1lbnRzLCBnZW5lcmF0b3IpIHtcclxuICAgIGlmICghU3ltYm9sLmFzeW5jSXRlcmF0b3IpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJTeW1ib2wuYXN5bmNJdGVyYXRvciBpcyBub3QgZGVmaW5lZC5cIik7XHJcbiAgICB2YXIgZyA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzIHx8IFtdKSwgaSwgcSA9IFtdO1xyXG4gICAgcmV0dXJuIGkgPSB7fSwgdmVyYihcIm5leHRcIiksIHZlcmIoXCJ0aHJvd1wiKSwgdmVyYihcInJldHVyblwiKSwgaVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9LCBpO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuKSB7IGlmIChnW25dKSBpW25dID0gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChhLCBiKSB7IHEucHVzaChbbiwgdiwgYSwgYl0pID4gMSB8fCByZXN1bWUobiwgdik7IH0pOyB9OyB9XHJcbiAgICBmdW5jdGlvbiByZXN1bWUobiwgdikgeyB0cnkgeyBzdGVwKGdbbl0odikpOyB9IGNhdGNoIChlKSB7IHNldHRsZShxWzBdWzNdLCBlKTsgfSB9XHJcbiAgICBmdW5jdGlvbiBzdGVwKHIpIHsgci52YWx1ZSBpbnN0YW5jZW9mIF9fYXdhaXQgPyBQcm9taXNlLnJlc29sdmUoci52YWx1ZS52KS50aGVuKGZ1bGZpbGwsIHJlamVjdCkgOiBzZXR0bGUocVswXVsyXSwgcik7IH1cclxuICAgIGZ1bmN0aW9uIGZ1bGZpbGwodmFsdWUpIHsgcmVzdW1lKFwibmV4dFwiLCB2YWx1ZSk7IH1cclxuICAgIGZ1bmN0aW9uIHJlamVjdCh2YWx1ZSkgeyByZXN1bWUoXCJ0aHJvd1wiLCB2YWx1ZSk7IH1cclxuICAgIGZ1bmN0aW9uIHNldHRsZShmLCB2KSB7IGlmIChmKHYpLCBxLnNoaWZ0KCksIHEubGVuZ3RoKSByZXN1bWUocVswXVswXSwgcVswXVsxXSk7IH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fYXN5bmNEZWxlZ2F0b3Iobykge1xyXG4gICAgdmFyIGksIHA7XHJcbiAgICByZXR1cm4gaSA9IHt9LCB2ZXJiKFwibmV4dFwiKSwgdmVyYihcInRocm93XCIsIGZ1bmN0aW9uIChlKSB7IHRocm93IGU7IH0pLCB2ZXJiKFwicmV0dXJuXCIpLCBpW1N5bWJvbC5pdGVyYXRvcl0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9LCBpO1xyXG4gICAgZnVuY3Rpb24gdmVyYihuLCBmKSB7IGlbbl0gPSBvW25dID8gZnVuY3Rpb24gKHYpIHsgcmV0dXJuIChwID0gIXApID8geyB2YWx1ZTogX19hd2FpdChvW25dKHYpKSwgZG9uZTogbiA9PT0gXCJyZXR1cm5cIiB9IDogZiA/IGYodikgOiB2OyB9IDogZjsgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19hc3luY1ZhbHVlcyhvKSB7XHJcbiAgICBpZiAoIVN5bWJvbC5hc3luY0l0ZXJhdG9yKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3ltYm9sLmFzeW5jSXRlcmF0b3IgaXMgbm90IGRlZmluZWQuXCIpO1xyXG4gICAgdmFyIG0gPSBvW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSwgaTtcclxuICAgIHJldHVybiBtID8gbS5jYWxsKG8pIDogKG8gPSB0eXBlb2YgX192YWx1ZXMgPT09IFwiZnVuY3Rpb25cIiA/IF9fdmFsdWVzKG8pIDogb1tTeW1ib2wuaXRlcmF0b3JdKCksIGkgPSB7fSwgdmVyYihcIm5leHRcIiksIHZlcmIoXCJ0aHJvd1wiKSwgdmVyYihcInJldHVyblwiKSwgaVtTeW1ib2wuYXN5bmNJdGVyYXRvcl0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9LCBpKTtcclxuICAgIGZ1bmN0aW9uIHZlcmIobikgeyBpW25dID0gb1tuXSAmJiBmdW5jdGlvbiAodikgeyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2ID0gb1tuXSh2KSwgc2V0dGxlKHJlc29sdmUsIHJlamVjdCwgdi5kb25lLCB2LnZhbHVlKTsgfSk7IH07IH1cclxuICAgIGZ1bmN0aW9uIHNldHRsZShyZXNvbHZlLCByZWplY3QsIGQsIHYpIHsgUHJvbWlzZS5yZXNvbHZlKHYpLnRoZW4oZnVuY3Rpb24odikgeyByZXNvbHZlKHsgdmFsdWU6IHYsIGRvbmU6IGQgfSk7IH0sIHJlamVjdCk7IH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fbWFrZVRlbXBsYXRlT2JqZWN0KGNvb2tlZCwgcmF3KSB7XHJcbiAgICBpZiAoT2JqZWN0LmRlZmluZVByb3BlcnR5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShjb29rZWQsIFwicmF3XCIsIHsgdmFsdWU6IHJhdyB9KTsgfSBlbHNlIHsgY29va2VkLnJhdyA9IHJhdzsgfVxyXG4gICAgcmV0dXJuIGNvb2tlZDtcclxufTtcclxuXHJcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSBPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcclxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcclxufSkgOiBmdW5jdGlvbihvLCB2KSB7XHJcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XHJcbn07XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19pbXBvcnRTdGFyKG1vZCkge1xyXG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcclxuICAgIHZhciByZXN1bHQgPSB7fTtcclxuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcclxuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gX19pbXBvcnREZWZhdWx0KG1vZCkge1xyXG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBkZWZhdWx0OiBtb2QgfTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIF9fY2xhc3NQcml2YXRlRmllbGRHZXQocmVjZWl2ZXIsIHN0YXRlLCBraW5kLCBmKSB7XHJcbiAgICBpZiAoa2luZCA9PT0gXCJhXCIgJiYgIWYpIHRocm93IG5ldyBUeXBlRXJyb3IoXCJQcml2YXRlIGFjY2Vzc29yIHdhcyBkZWZpbmVkIHdpdGhvdXQgYSBnZXR0ZXJcIik7XHJcbiAgICBpZiAodHlwZW9mIHN0YXRlID09PSBcImZ1bmN0aW9uXCIgPyByZWNlaXZlciAhPT0gc3RhdGUgfHwgIWYgOiAhc3RhdGUuaGFzKHJlY2VpdmVyKSkgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCByZWFkIHByaXZhdGUgbWVtYmVyIGZyb20gYW4gb2JqZWN0IHdob3NlIGNsYXNzIGRpZCBub3QgZGVjbGFyZSBpdFwiKTtcclxuICAgIHJldHVybiBraW5kID09PSBcIm1cIiA/IGYgOiBraW5kID09PSBcImFcIiA/IGYuY2FsbChyZWNlaXZlcikgOiBmID8gZi52YWx1ZSA6IHN0YXRlLmdldChyZWNlaXZlcik7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBfX2NsYXNzUHJpdmF0ZUZpZWxkU2V0KHJlY2VpdmVyLCBzdGF0ZSwgdmFsdWUsIGtpbmQsIGYpIHtcclxuICAgIGlmIChraW5kID09PSBcIm1cIikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgbWV0aG9kIGlzIG5vdCB3cml0YWJsZVwiKTtcclxuICAgIGlmIChraW5kID09PSBcImFcIiAmJiAhZikgdGhyb3cgbmV3IFR5cGVFcnJvcihcIlByaXZhdGUgYWNjZXNzb3Igd2FzIGRlZmluZWQgd2l0aG91dCBhIHNldHRlclwiKTtcclxuICAgIGlmICh0eXBlb2Ygc3RhdGUgPT09IFwiZnVuY3Rpb25cIiA/IHJlY2VpdmVyICE9PSBzdGF0ZSB8fCAhZiA6ICFzdGF0ZS5oYXMocmVjZWl2ZXIpKSB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IHdyaXRlIHByaXZhdGUgbWVtYmVyIHRvIGFuIG9iamVjdCB3aG9zZSBjbGFzcyBkaWQgbm90IGRlY2xhcmUgaXRcIik7XHJcbiAgICByZXR1cm4gKGtpbmQgPT09IFwiYVwiID8gZi5jYWxsKHJlY2VpdmVyLCB2YWx1ZSkgOiBmID8gZi52YWx1ZSA9IHZhbHVlIDogc3RhdGUuc2V0KHJlY2VpdmVyLCB2YWx1ZSkpLCB2YWx1ZTtcclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBCb29rKHRpdGxlLCBhdXRob3IsIHBhZ2VDb3VudCwgaXNSZWFkKSB7XG4gIHRoaXMudGl0bGUgPSB0aXRsZTtcbiAgdGhpcy5hdXRob3IgPSBhdXRob3I7XG4gIHRoaXMucGFnZUNvdW50ID0gcGFnZUNvdW50O1xuICB0aGlzLmlzUmVhZCA9IGlzUmVhZDtcbn1cbkJvb2sucHJvdG90eXBlLnNldElzUmVhZCA9IGZ1bmN0aW9uIHNldElzUmVhZChiKSB7XG4gIHRoaXMuaXNSZWFkID0gYjtcbn07XG4iLCJpbXBvcnQgZW52IGZyb20gXCIuLi8uLi9lbnZcIjtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBhcGlLZXk6IGVudi5BUElfS0VZLFxuICBhdXRoRG9tYWluOiBlbnYuQVVUSF9ET01BSU4sXG4gIHByb2plY3RJZDogZW52LlBST0pFQ1RfSUQsXG4gIHN0b3JhZ2VCdWNrZXQ6IGVudi5TVE9SQUdFX0JVQ0tFVCxcbiAgbWVzc2FnaW5nU2VuZGVySWQ6IGVudi5NRVNTQUdJTkdfU0VOREVSX0lELFxuICBhcHBJZDogZW52LkFQUF9JRCxcbn07XG4iLCIvLyBUT0RPOiByZWZhY3RvciBzdHlsZXMgaW50byBhIFwicHJlbG9hZFwiIGpzIGJ1bmRsZVxuaW1wb3J0IFwiLi4vc3R5bGVzL3Jlc2V0LmNzc1wiO1xuaW1wb3J0IFwiLi4vc3R5bGVzL3N0eWxlLmNzc1wiO1xuXG5pbXBvcnQgQm9vayBmcm9tIFwiLi9ib29rXCI7XG5cbi8vIFRPRE86IHJlZmFjdG9yIHNvIHRoYXQgdGhlcmUncyBhIHRydWUgXCJSRU5ERVJcIiBmdW5jdGlvblxuLy8gd2hpY2ggY2xlYXJzIGFsbCB0aGUgZHluYW1pYyBjb250ZW50ICYgcmVyZW5kZXJzIGl0XG4vLyBUT0RPOiBjcmVhdGUgYSBsaWJyYXJ5IG9iamVjdCwgd2hpY2ggaGFzIGFuIGFkZEJvb2tzKFtdKSBtZXRob2Rcbi8vIFRPRE86IGNyZWF0ZSBhIGxpYnJhcnlSZW5kZXJlciBmdW5jdGlvbiwgd2hpY2ggY2FuIHRha2UgYSBMaWJyYXJ5ICZcbi8vIGdlbmVyYXRlIERPTWVsZW1lbnRzIGZvciBpdFxuY29uc3QgbGlicmFyeSA9IFtdO1xuXG5jb25zdCBib29rQ250ciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubGlicmFyeVwiKTtcbmNvbnN0IG1vZGFsQWRkQm9va0NudHIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vZGFsLWNvbnRhaW5lci1hZGRib29rXCIpO1xuY29uc3QgYm9va1N0YXRzID0ge1xuICB0b3RhbEJvb2tzOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RvdGFsLWJvb2tzXCIpLFxuICBib29rc1JlYWQ6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYm9va3MtcmVhZFwiKSxcbiAgcGFnZXNSZWFkOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BhZ2VzLXJlYWRcIiksXG59O1xuXG4vLyAqIEVsZW1lbnQgZ2VuZXJhdG9yc1xuXG5mdW5jdGlvbiBpbml0TW9kYWxBZGRCb29rKCkge1xuICAvLyBBREQgRk9STSBFTEVNRU5UU1xuICBtb2RhbEFkZEJvb2tDbnRyLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxcIikuYXBwZW5kQ2hpbGQoXG4gICAgZ2V0Q2xvc2VCdXR0b24oKCkgPT4ge1xuICAgICAgbW9kYWxBZGRCb29rQ250ci5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICAgICAgQXJyYXkuZnJvbShtb2RhbEFkZEJvb2tDbnRyLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFwiKSkuZm9yRWFjaChcbiAgICAgICAgKGlucHV0KSA9PiB7XG4gICAgICAgICAgaW5wdXQudmFsdWUgPSBcIlwiO1xuICAgICAgICAgIGlucHV0LmNoZWNrZWQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB9KVxuICApO1xuXG4gIGNvbnN0IG1vZGFsRm9ybUJ0biA9IG1vZGFsQWRkQm9va0NudHJcbiAgICAucXVlcnlTZWxlY3RvcihcImZvcm1cIilcbiAgICAucXVlcnlTZWxlY3RvcihcImJ1dHRvblwiKTtcblxuICBtb2RhbEZvcm1CdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBpZiAoIXZhbGlkYXRlRm9ybShtb2RhbEFkZEJvb2tDbnRyKSkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGJvb2tBcmdzID0gW107XG4gICAgQXJyYXkuZnJvbShtb2RhbEFkZEJvb2tDbnRyLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFwiKSkuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgIGJvb2tBcmdzLnB1c2goaW5wdXQudHlwZSA9PT0gXCJjaGVja2JveFwiID8gaW5wdXQuY2hlY2tlZCA6IGlucHV0LnZhbHVlKTtcbiAgICAgIGlucHV0LnZhbHVlID0gXCJcIjtcbiAgICAgIGlucHV0LmNoZWNrZWQgPSBmYWxzZTtcbiAgICB9KTtcblxuICAgIGNvbnN0IGJvb2sgPSBuZXcgQm9vayguLi5ib29rQXJncyk7XG4gICAgbGlicmFyeS5wdXNoKGJvb2spO1xuICAgIGJvb2tDbnRyLmFwcGVuZENoaWxkKGdldEJvb2tFbG0oYm9vaykpO1xuICAgIG1vZGFsQWRkQm9va0NudHIuY2xhc3NMaXN0LnRvZ2dsZShcImhpZGRlblwiKTtcbiAgICB1cGRhdGVMaWJyYXJ5KCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBnZXRCb29rRWxtKGJvb2spIHtcbiAgY29uc3QgYm9va0VsbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG5cbiAgY29uc3QgYm9va1RpdGxlID0gZ2V0Qm9va1Byb3BlcnR5RWxtKGJvb2ssIFwidGl0bGVcIik7XG4gIGNvbnN0IGJvb2tBdXRob3IgPSBnZXRCb29rUHJvcGVydHlFbG0oYm9vaywgXCJhdXRob3JcIik7XG4gIGNvbnN0IGJvb2tQYWdlQ291bnQgPSBnZXRCb29rUHJvcGVydHlFbG0oYm9vaywgXCJwYWdlQ291bnRcIik7XG5cbiAgY29uc3QgYm9va0lzUmVhZCA9IGdldFN3aXRjaChcImlzIHJlYWQ6XCIsIFwiaXNSZWFkXCIsIGJvb2suaXNSZWFkKTtcbiAgYm9va0lzUmVhZC5hZGRFdmVudExpc3RlbmVyKFwiY2hhbmdlXCIsICgpID0+IHtcbiAgICBjb25zdCBzdGF0dXMgPSBib29rSXNSZWFkLnF1ZXJ5U2VsZWN0b3IoXCJpbnB1dFwiKS5jaGVja2VkO1xuICAgIGNvbnNvbGUubG9nKGBjaGVja2VkIHN0YXR1czogJHtzdGF0dXN9YCk7XG4gICAgbGlicmFyeVtsaWJyYXJ5LmluZGV4T2YoYm9vayldLnNldElzUmVhZChzdGF0dXMpO1xuICAgIGlmIChzdGF0dXMpIHtcbiAgICAgIGJvb2tFbG0uY2xhc3NMaXN0LmFkZChcInNlbWktdHJhbnNwYXJlbnRcIik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJvb2tFbG0uY2xhc3NMaXN0LnJlbW92ZShcInNlbWktdHJhbnNwYXJlbnRcIik7XG4gICAgfVxuICAgIHVwZGF0ZUxpYnJhcnkoKTtcbiAgfSk7XG5cbiAgY29uc3QgYm9va1Byb3BFbG1zID0gW2Jvb2tUaXRsZSwgYm9va0F1dGhvciwgYm9va1BhZ2VDb3VudCwgYm9va0lzUmVhZF07XG4gIGJvb2tQcm9wRWxtcy5mb3JFYWNoKChib29rUHJvcEVsbSkgPT4ge1xuICAgIGJvb2tFbG0uYXBwZW5kQ2hpbGQoYm9va1Byb3BFbG0pO1xuICB9KTtcblxuICBjb25zdCBkZWxldGVCb29rQnRuID0gZ2V0Q2xvc2VCdXR0b24oKCkgPT4ge1xuICAgIGxpYnJhcnkuc3BsaWNlKFxuICAgICAgbGlicmFyeS5maW5kSW5kZXgoKGIpID0+IGIudGl0bGUgPT09IGJvb2sudGl0bGUpLFxuICAgICAgMVxuICAgICk7XG4gICAgYm9va0NudHIucmVtb3ZlQ2hpbGQoYm9va0VsbSk7XG4gICAgdXBkYXRlTGlicmFyeSgpO1xuICB9KTtcbiAgZGVsZXRlQm9va0J0bi5jbGFzc0xpc3QuYWRkKFwiaGlkZGVuXCIpO1xuICBib29rRWxtLmFwcGVuZENoaWxkKGRlbGV0ZUJvb2tCdG4pO1xuXG4gIFtcIm1vdXNlZW50ZXJcIiwgXCJtb3VzZWxlYXZlXCJdLmZvckVhY2goKGNhcmRFdmVudCkgPT4ge1xuICAgIGJvb2tFbG0uYWRkRXZlbnRMaXN0ZW5lcihjYXJkRXZlbnQsICgpID0+IHtcbiAgICAgIGRlbGV0ZUJvb2tCdG4uY2xhc3NMaXN0LnRvZ2dsZShcImhpZGRlblwiKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgYm9va0VsbS5jbGFzc0xpc3QuYWRkKFwiYm9va1wiKTtcbiAgYm9va0VsbS5jbGFzc0xpc3QuYWRkKFwiY2FyZFwiKTtcbiAgaWYgKGJvb2suaXNSZWFkKSB7XG4gICAgYm9va0VsbS5jbGFzc0xpc3QuYWRkKFwic2VtaS10cmFuc3BhcmVudFwiKTtcbiAgfVxuXG4gIHJldHVybiBib29rRWxtO1xufVxuXG5mdW5jdGlvbiBnZXRCb29rUHJvcGVydHlFbG0oYm9vaywgcHJvcGVydHkpIHtcbiAgY29uc3QgYm9va1Byb3BlcnR5RWxtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgYm9va1Byb3BlcnR5RWxtLnRleHRDb250ZW50ID0gYm9va1twcm9wZXJ0eV07XG4gIGJvb2tQcm9wZXJ0eUVsbS5jbGFzc0xpc3QuYWRkKFwiYm9vay1wcm9wXCIpO1xuICBib29rUHJvcGVydHlFbG0uY2xhc3NMaXN0LmFkZChgYm9vay0ke3Byb3BlcnR5fWApO1xuXG4gIHJldHVybiBib29rUHJvcGVydHlFbG07XG59XG5cbmZ1bmN0aW9uIGdldFN3aXRjaChsYWJlbCwgbmFtZSwgaXNDaGVja2VkKSB7XG4gIGNvbnN0IGlucHV0RWxtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICBpbnB1dEVsbS5jbGFzc0xpc3QuYWRkKFwic3dpdGNoXCIpO1xuXG4gIGNvbnN0IHRleHRFbG0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgdGV4dEVsbS50ZXh0Q29udGVudCA9IGxhYmVsO1xuICB0ZXh0RWxtLmNsYXNzTGlzdC5hZGQoXCJzd2l0Y2gtbGFiZWxcIik7XG4gIGlucHV0RWxtLmFwcGVuZENoaWxkKHRleHRFbG0pO1xuXG4gIGNvbnN0IGlucHV0Q2hlY2tib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gIGlucHV0Q2hlY2tib3gudHlwZSA9IFwiY2hlY2tib3hcIjtcbiAgaW5wdXRDaGVja2JveC5uYW1lID0gbmFtZTtcbiAgaW5wdXRDaGVja2JveC5jaGVja2VkID0gaXNDaGVja2VkO1xuICBpbnB1dEVsbS5hcHBlbmRDaGlsZChpbnB1dENoZWNrYm94KTtcblxuICBjb25zdCBpbnB1dFNwYW5FbG0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3BhblwiKTtcbiAgaW5wdXRTcGFuRWxtLmNsYXNzTGlzdC5hZGQoXCJzd2l0Y2gtc3BhblwiKTtcbiAgaW5wdXRFbG0uYXBwZW5kQ2hpbGQoaW5wdXRTcGFuRWxtKTtcblxuICByZXR1cm4gaW5wdXRFbG07XG59XG5cbi8vIFRPRE86IGRvbid0IHVzZSBkaXYgYXMgYnV0dG9uXG4vLyBUT0RPOiBwYXNzIGNsYXNzIGluIGFzIHBhcmFtXG4vLyBUT0RPOiBvbmNlIGFib3ZlIGFyZSBmaXhlZCwgZ2l2ZSBnZW5lcmljIG5hbWVcbmZ1bmN0aW9uIGdldENsb3NlQnV0dG9uKG9uQ2xpY2spIHtcbiAgY29uc3QgY2xvc2VCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICBjbG9zZUJ0bi5jbGFzc0xpc3QuYWRkKFwiY2xvc2UtYnRuXCIpO1xuICBjbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbGljayk7XG4gIHJldHVybiBjbG9zZUJ0bjtcbn1cblxuLy8gKiBGT1JNIFZBTElEQVRJT05cbmZ1bmN0aW9uIHZhbGlkYXRlRm9ybShmb3JtQ29udGFpbmVyKSB7XG4gIGNvbnN0IGlucHV0cyA9IGZvcm1Db250YWluZXIucXVlcnlTZWxlY3RvckFsbChcImlucHV0W3JlcXVpcmVkXVwiKTtcblxuICBmb3IgKGxldCBpID0gMDsgaSA8IGlucHV0cy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChpbnB1dHNbaV0udmFsdWUgPT09IFwiXCIpIHtcbiAgICAgIGNvbnNvbGUubG9nKGB2YWxpZGF0aW9uIGZhaWxlZCBvbiBpbnB1dCAke2lucHV0c1tpXS5uYW1lfWApO1xuICAgICAgdmFsaWRhdGlvbkZhaWxEaXNwbGF5KGlucHV0c1tpXSwgXCJQbGVhc2UgZmlsbCBvdXQgdGhpcyBmaWVsZCFcIiwgMSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgaW5wdXRzW2ldLm5hbWUgPT09IFwidGl0bGVcIiAmJlxuICAgICAgbGlicmFyeS5zb21lKChib29rKSA9PiBib29rLnRpdGxlID09PSBpbnB1dHNbaV0udmFsdWUpXG4gICAgKSB7XG4gICAgICBjb25zb2xlLmxvZyhcbiAgICAgICAgYHZhbGlkYXRpb24gZmFpbGVkIG9uIGlucHV0ICR7aW5wdXRzW2ldLm5hbWV9IChDYW4ndCBoYXZlIG11bHRpcGxlIGJvb2tzIHdpdGggdGhlIHNhbWUgdGl0bGUhKWBcbiAgICAgICk7XG4gICAgICB2YWxpZGF0aW9uRmFpbERpc3BsYXkoaW5wdXRzW2ldLCBcIlRpdGxlIG11c3QgYmUgdW5pcXVlIVwiLCAxKTtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKGlucHV0c1tpXS50eXBlID09PSBcIm51bWJlclwiICYmIGlucHV0c1tpXS52YWx1ZSA8IDEpIHtcbiAgICAgIGNvbnNvbGUubG9nKFxuICAgICAgICBgdmFsaWRhdGlvbiBmYWlsZWQgb24gaW5wdXQgJHtpbnB1dHNbaV0ubmFtZX0gKHlvdSBjYW4ndCBoYXZlIG5lZ2F0aXZlIHBhZ2VzLCBzaWxseSEpYFxuICAgICAgKTtcbiAgICAgIHZhbGlkYXRpb25GYWlsRGlzcGxheShpbnB1dHNbaV0sIFwiUGFnZSBjb3VudCBjYW4ndCBiZSBuZWdhdGl2ZSFcIiwgMSk7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRpb25GYWlsRGlzcGxheShlbGVtZW50LCBtc2csIGRlY2F5KSB7XG4gIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZShcInZhbGlkYXRpb24tZmFpbGVkXCIpO1xuICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRpbWVvdXQpO1xuICBlbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJ2YWxpZGF0aW9uLWZhaWxlZFwiKTtcbiAgZWxlbWVudC5zdHlsZS5hbmltYXRpb25EdXJhdGlvbiA9IGAke2RlY2F5fXNgO1xuXG4gIGNvbnN0IHBvcHVwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgcG9wdXAuY2xhc3NMaXN0LmFkZChcImNhcmRcIik7XG4gIHBvcHVwLmNsYXNzTGlzdC5hZGQoXCJmb3JtLXZhbGlkYXRpb24tZXJyb3JcIik7XG4gIHBvcHVwLnRleHRDb250ZW50ID0gbXNnO1xuICBlbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQocG9wdXApO1xuICB3aW5kb3cuc2V0VGltZW91dCh0aW1lb3V0LCBkZWNheSAqIDEwMDApO1xuXG4gIGZ1bmN0aW9uIHRpbWVvdXQoKSB7XG4gICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwidmFsaWRhdGlvbi1mYWlsZWRcIik7XG4gICAgcG9wdXAucmVtb3ZlKCk7XG4gIH1cbn1cblxuLy8gKiBMSUJSQVJZIFNUQVRTXG5mdW5jdGlvbiB1cGRhdGVGb290ZXJEYXRhKCkge1xuICBib29rU3RhdHMudG90YWxCb29rcy50ZXh0Q29udGVudCA9IGxpYnJhcnkubGVuZ3RoO1xuICBib29rU3RhdHMuYm9va3NSZWFkLnRleHRDb250ZW50ID0gZ2V0Qm9va3NSZWFkKGxpYnJhcnkpO1xuICBib29rU3RhdHMucGFnZXNSZWFkLnRleHRDb250ZW50ID0gZ2V0UGFnZXNSZWFkKGxpYnJhcnkpO1xufVxuXG5mdW5jdGlvbiBnZXRCb29rc1JlYWQobGliQXJyYXkpIHtcbiAgcmV0dXJuIGxpYkFycmF5LnJlZHVjZSgoc3VtLCBib29rKSA9PiAoYm9vay5pc1JlYWQgPyBzdW0gKyAxIDogc3VtKSwgMCk7XG59XG5mdW5jdGlvbiBnZXRQYWdlc1JlYWQobGliQXJyYXkpIHtcbiAgcmV0dXJuIGxpYkFycmF5LnJlZHVjZShcbiAgICAoc3VtLCBib29rKSA9PiAoYm9vay5pc1JlYWQgPyBzdW0gKyArYm9vay5wYWdlQ291bnQgOiBzdW0pLFxuICAgIDBcbiAgKTtcbn1cblxuLy8gKiBMb2NhbFN0b3JhZ2UgSGFuZGxpbmdcbmZ1bmN0aW9uIHNhdmVMaWJyYXJ5KCkge1xuICBjb25zdCBsaWJKU09OID0gSlNPTi5zdHJpbmdpZnkobGlicmFyeSk7XG4gIHdpbmRvdy5sb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImxpYnJhcnlSZWNvcmRcIiwgbGliSlNPTik7XG59XG5cbmZ1bmN0aW9uIGxvYWRMaWJyYXJ5KCkge1xuICBjb25zdCBsaWJyYXJ5UmVjb3JkID0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKFwibGlicmFyeVJlY29yZFwiKTtcblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXG4gIGlmICghbGlicmFyeVJlY29yZCB8fCBsaWJyYXJ5UmVjb3JkID09IHt9KSB7XG4gICAgbG9hZERlbW9Cb29rcygpO1xuICB9IGVsc2Uge1xuICAgIEpTT04ucGFyc2UobGlicmFyeVJlY29yZCkuZm9yRWFjaCgoYm9vaykgPT4ge1xuICAgICAgY29uc3QgZnVsbEJvb2sgPSBuZXcgQm9vayhcbiAgICAgICAgYm9vay50aXRsZSxcbiAgICAgICAgYm9vay5hdXRob3IsXG4gICAgICAgIGJvb2sucGFnZUNvdW50LFxuICAgICAgICBib29rLmlzUmVhZFxuICAgICAgKTtcbiAgICAgIGxpYnJhcnkucHVzaChmdWxsQm9vayk7XG4gICAgfSk7XG4gICAgbGlicmFyeS5mb3JFYWNoKChib29rKSA9PiBib29rQ250ci5hcHBlbmRDaGlsZChnZXRCb29rRWxtKGJvb2spKSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gbG9hZERlbW9Cb29rcygpIHtcbiAgY29uc3QgZGVtb0Jvb2tzID0gW1xuICAgIG5ldyBCb29rKFwiTGVhcm5pbmcgSmF2YVNjcmlwdCBEZXNpZ24gUGF0dGVybnNcIiwgXCJBZGR5IE9zbWFuaVwiLCAyNDYsIGZhbHNlKSxcbiAgICBuZXcgQm9vayhcbiAgICAgIFwiSW50cm9kdWN0aW9uIHRvIEFsZ29yaXRobXNcIixcbiAgICAgIFwiVGhvbWFzIEguIENvcm1lbiwgZXQgYWwuXCIsXG4gICAgICAxMzEyLFxuICAgICAgdHJ1ZVxuICAgICksXG4gICAgbmV3IEJvb2soXG4gICAgICBcIlRoZSBQcmFnbWF0aWMgUHJvZ3JhbW1lclwiLFxuICAgICAgXCJBbmRyZXcgSHVudCwgRGF2ZSBUaG9tYXNcIixcbiAgICAgIDMyMCxcbiAgICAgIGZhbHNlXG4gICAgKSxcbiAgICBuZXcgQm9vayhcIkNsZWFuIENvZGVcIiwgXCJSb2JlcnQgTWFydGluXCIsIDQwMCwgZmFsc2UpLFxuICAgIG5ldyBCb29rKFwiVGhlIERldk9wcyBIYW5kYm9va1wiLCBcIkdlbmUgS2ltLCBldCBhbC5cIiwgNDgwLCBmYWxzZSksXG4gICAgbmV3IEJvb2soXCJHcm9ra2luZyBBbGdvcml0aG1zXCIsIFwiQWRpdHlhIEJoYXJnYXZhXCIsIDI1NiwgdHJ1ZSksXG4gIF07XG4gIGRlbW9Cb29rcy5mb3JFYWNoKChib29rKSA9PiBsaWJyYXJ5LnB1c2goYm9vaykpO1xuICBsaWJyYXJ5LmZvckVhY2goKGJvb2spID0+IGJvb2tDbnRyLmFwcGVuZENoaWxkKGdldEJvb2tFbG0oYm9vaykpKTtcbn1cblxuZnVuY3Rpb24gdXBkYXRlTGlicmFyeSgpIHtcbiAgdXBkYXRlRm9vdGVyRGF0YSgpO1xuICBzYXZlTGlicmFyeSgpO1xuICBjb25zb2xlLmxvZyhcImxpYnJhcnkgdXBkYXRlZFwiKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdGlhbGl6ZUxpYnJhcnkoKSB7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWRkLWJvb2stYnRuXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgbW9kYWxBZGRCb29rQ250ci5jbGFzc0xpc3QudG9nZ2xlKFwiaGlkZGVuXCIpO1xuICB9KTtcblxuICBpbml0TW9kYWxBZGRCb29rKCk7XG4gIGxvYWRMaWJyYXJ5KCk7XG4gIHVwZGF0ZUZvb3RlckRhdGEoKTtcbn1cblxuaW5pdGlhbGl6ZUxpYnJhcnkoKTtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyY1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiaW1wb3J0IGZpcmViYXNlIGZyb20gXCJmaXJlYmFzZS9hcHBcIjtcbmltcG9ydCBmaXJlYmFzZUNvbmZpZyBmcm9tIFwiLi9maXJlYmFzZS1jb25maWdcIjtcbmltcG9ydCBcImZpcmViYXNlL2ZpcmViYXNlLWZpcmVzdG9yZVwiO1xuaW1wb3J0IFwiZmlyZWJhc2UvZmlyZWJhc2UtYXV0aFwiO1xuXG5pbXBvcnQgYWRkSGFuZGxlclRvQWRkQm9va0J1dHRvbiBmcm9tIFwiLi9saWJyYXJ5XCI7XG5cbmZpcmViYXNlLmluaXRpYWxpemVBcHAoZmlyZWJhc2VDb25maWcpO1xuXG4vLyAqIEFVVEggLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5jb25zdCBhdXRoID0gZmlyZWJhc2UuYXV0aCgpO1xuY29uc3QgcHJvdmlkZXIgPSBuZXcgZmlyZWJhc2UuYXV0aC5Hb29nbGVBdXRoUHJvdmlkZXIoKTtcblxuY29uc3Qgc2lnbmVkSW5TZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN3aGVuLXNpZ25lZC1vdXRcIik7XG5jb25zdCBzaWduZWRPdXRTZWN0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN3aGVuLXNpZ25lZC1pblwiKTtcbmNvbnN0IHNpZ25JbkJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2lnbi1pbi1idG5cIik7XG5jb25zdCBzaWduT3V0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzaWduLW91dC1idG5cIik7XG5cbnNpZ25JbkJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBhdXRoLnNpZ25JbldpdGhQb3B1cChwcm92aWRlcik7XG59KTtcblxuc2lnbk91dEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBhdXRoLnNpZ25PdXQoKTtcbn0pO1xuXG5jb25zdCB1c2VyTmFtZUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3VzZXItbmFtZVwiKTtcbmNvbnN0IHVzZXJJZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3VzZXItaWRcIik7XG5cbmF1dGgub25BdXRoU3RhdGVDaGFuZ2VkKCh1c2VyKSA9PiB7XG4gIGlmICh1c2VyKSB7XG4gICAgc2lnbmVkSW5TZWN0aW9uLmNsYXNzTGlzdC5hZGQoXCJoaWRkZW5cIik7XG4gICAgc2lnbmVkT3V0U2VjdGlvbi5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZGVuXCIpO1xuICAgIHVzZXJOYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IHVzZXIuZGlzcGxheU5hbWU7XG4gICAgdXNlcklkRWxlbWVudC50ZXh0Q29udGVudCA9IHVzZXIudWlkO1xuICB9IGVsc2Uge1xuICAgIHNpZ25lZE91dFNlY3Rpb24uY2xhc3NMaXN0LmFkZChcImhpZGRlblwiKTtcbiAgICBzaWduZWRJblNlY3Rpb24uY2xhc3NMaXN0LnJlbW92ZShcImhpZGRlblwiKTtcbiAgICB1c2VyTmFtZUVsZW1lbnQudGV4dENvbnRlbnQgPSBcIm5vIHNpZ25lZCBpbiB1c2VyXCI7XG4gICAgdXNlcklkRWxlbWVudC50ZXh0Q29udGVudCA9IFwiTi9BXCI7XG4gIH1cbn0pO1xuXG4vLyAqIEZJUkVTVE9SRSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuY29uc3QgZGIgPSBmaXJlYmFzZS5maXJlc3RvcmUoKTtcblxuLy8gbmVlZCBhIHdheSB0byBsaXN0ZW4gZm9yIHdoZW4gdGhlIFwiYWRkIGJvb2tcIiBidXR0b24gaXMgY3JlYXRlZCxcbi8vIGFuZCB0aGVuIGhhbmRsZSB0aGF0IGhlcmVcblxuLy8gVE9ETzogZmV0Y2ggYm9va3MgZnJvbSBkYXRhYmFzZVxuLy8gZnVuY3Rpb24gZ2V0VXNlcnNCb29rcygodXNlciwgbGlicmFyeVJlZikgPT4ge1xuXG4vLyB9KTtcblxuYXV0aC5vbkF1dGhTdGF0ZUNoYW5nZWQoKHVzZXIpID0+IHtcbiAgaWYgKCF1c2VyKSB7XG4gICAgY29uc29sZS5sb2coXCJubyB1c2VyIVwiKTtcbiAgICByZXR1cm47XG4gIH1cblxuICBjb25zdCBsaWJyYXJ5UmVmID0gZGIuY29sbGVjdGlvbihcImxpYnJhcnlcIik7XG4gIC8vIFRPRE86IHdyaXRlIHRoaXMgZnVuY3Rpb24uLi5cbiAgYWRkSGFuZGxlclRvQWRkQm9va0J1dHRvbigoYm9va0RhdGEpID0+IHtcbiAgICBjb25zdCB7IHNlcnZlclRpbWVzdGFtcCB9ID0gZmlyZWJhc2UuZmlyZXN0b3JlLkZpZWxkVmFsdWU7XG5cbiAgICBsaWJyYXJ5UmVmLmFkZCh7XG4gICAgICB1aWQ6IHVzZXIudWlkLFxuICAgICAgYWRkZWRUaW1lc3RhbXA6IHNlcnZlclRpbWVzdGFtcCgpLFxuICAgICAgLi4uYm9va0RhdGEsXG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9