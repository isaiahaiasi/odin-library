:root {
  --col-accent: #990303;
  --col-mid1: #ffffff;
  --col-mid2: #659ab3;
  --col-bg: #427597;
  --col-darkest: #000;
  --col-light: #ffffff;

  --card-scale: .3em;
}

html,body {
  width:100%;
  height:100%;
  box-sizing:border-box;
  background-color: var(--col-bg);
  color:var(--col-light);
}

h1 {
  padding:10px;
  font-weight: 700;
  font-size: 2em;
}

main {
  width:auto;
  height:auto;
  box-sizing:border-box;

  display:flex;
  flex-direction:column;
  align-items:space-between;

  background-color: var(--col-mid2);
  color: var(--col-darkest);
}

form {
  margin:1em;
}

footer {
  position:absolute;
  bottom:0;
}

a:visited {
  color:var(--col-light);
}

.center-children {
  display:flex;
  justify-content: center;
}

.library {
  /* TODO: instead of a grid, this should probably be a flex container
     TODO: & the width of the books should be set
  */
  display:grid;
  grid-template-columns: 1fr 1fr 1fr;
}

.card {
  position:relative;
  color: var(--col-darkest);
  margin: var(--card-scale);
  padding: var(--card-scale);
  background: var(--col-mid1);
  border-radius: var(--card-scale);
  box-shadow: 1.5px 1.5px calc(var(--card-scale) * .7) var(--col-bg);
}

/* * MODAL */
.modal-bg {
  position:fixed;
  z-index:10;
  left:0;
  top:0;
  width:100%;
  height:100%;
  overflow:auto;
  background-color:rgba(0,0,0,.2);
}

/* Attaching a "hidden" class to a modal allows me to simply toggle the class,
   instead of messing with the modal's style attributes */
.hidden {
  display:none;
}

.modal {
  /* 'classic' CSS-Tricks method for centering */
  z-index: 11;
  position:fixed;
  top:50%;
  left:50%;
  transform:translate(-50%,-50%);
  box-sizing:border-box;/* default behavior makes width & padding conflict */
  width:fit-content;
  padding: 15px;
  margin: 0;

  font-size: 150%;
}

.modal > p {
  padding-right:2em;
}

.close-btn {
  position: absolute;
  right: 0;
  top: 0;
  width: 1.5em;
  height: 1.5em;
  margin:.3em;
  background: red;
  border-radius:50%;
}

.close-btn:hover {
  background:rgb(255, 93, 142);
  transform:rotate(90deg);
  transition:.3s;
}

.close-btn::after {
  content: url(../imgs/x-icon.svg);
}

/*  TODO: create a separate JS file that adds this class to everything
    - Then, include that script as a separate link in html,
    and I can just comment it out when I don't want it!
    - I could even include some sort of html flags to specify the scope
    of what I want to add it to. */
.debug-viz {
  /* Colors could be randomized (or coded) to distinguish elements */
  background-color:rgba(124, 124, 124, 0.493);
  border: 1px solid red;
}